#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   switch(_GLF_SWITCH((0 | 0)))
    {
     case 73:
     mat2x4 _GLF_SWITCH_6_0v[71], _GLF_SWITCH_6_1v[6];
     case 21:
     ;
     case 0:
     case 51:
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     case 10:
     case 22:
     case 90:
     case 91:
     case 17:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     case 2:
     barrier();
     break;
     case 97:
     mat3(3824.4158, -161.327, 1.1, 9.7, -5.7, -0.6, -1760.9940, -9.3, 3271.6116);
     case 41:
     mat4x3 _GLF_SWITCH_6_2v, _GLF_SWITCH_6_3v;
     default:
     1;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     switch(_GLF_SWITCH(0))
      {
       case 79:
       ((mat4x2(-1.7, -8605.5138, -8.6, -918.455, 8676.9428, 6.3, -4901.4829, -3.9) == mat4x2(-1.4, 802.273, -6.3, 271.012, -39.58, -81.38, -1.6, 8104.4517)) ? bvec3(false, true, true) : bvec3(false, true, false));
       case 0:
       case 37:
       case 33:
       case 63:
       if(_GLF_DEAD(false))
        barrier();
       case 67:
       case 61:
       case 91:
       if(_GLF_DEAD(false))
        return;
       case 49:
       case 56:
       barrier();
       break;
       default:
       1;
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
    {
     case 0:
     case 53:
     case 62:
     case 23:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     case 71:
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     break;
     case 55:
     while((ivec2(-91947, -32684) != ivec2(45369, -79891)))
      {
       for(ivec2 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v[29]; false; bitfieldReverse(uvec4(147218u, 69214u, 97604u, 195105u)))
        {
         ;
         mat4x3 _GLF_SWITCH_6_2v, _GLF_SWITCH_6_3v;
         mat3x4 _GLF_SWITCH_6_4v[49], _GLF_SWITCH_6_5v[42];
        }
       while(true)
        {
         for(         subgroup_local_id;
 false; (mat2x3(4.1, 9.6, 38.05, 5.7, -3.5, 150.869) + -93.74))
          {
           int _GLF_SWITCH_6_6v;
           bvec2 _GLF_SWITCH_6_7v, _GLF_SWITCH_6_8v, _GLF_SWITCH_6_9v;
           (uvec2(18594u, 40165u).rrrr / subgroup_local_id);
          }
         bvec2 _GLF_SWITCH_6_10v, _GLF_SWITCH_6_11v, _GLF_SWITCH_6_12v;
         vec2 _GLF_SWITCH_6_13v, _GLF_SWITCH_6_14v, _GLF_SWITCH_6_15v;
         uvec3 _GLF_SWITCH_6_16v, _GLF_SWITCH_6_17v, _GLF_SWITCH_6_18v;
         {
          mat2x3((-8235.0680 * -5.4), -7.0, 5.5, 976.009, 7.6, -4030.3029);
          bvec4(false, false, false, false);
          (mat3x2(-6.5, 6.0, -4191.3528, 3.1, 31.88, -64.25) / -2.7);
          vec2(-4.6, -8378.9308);
          bvec3 _GLF_SWITCH_6_19v, _GLF_SWITCH_6_20v;
          mat4(-9.5, -1.2, -1.0, -1.9, -3.9, 955.053, 4836.0506, -5.5, -16.59, 2.4, -7.6, -7.9, -915.384, 959.459, 3.9, -9541.3531);
          mat4 _GLF_SWITCH_6_21v, _GLF_SWITCH_6_22v, _GLF_SWITCH_6_23v[52];
          _GLF_SWITCH_6_12v;
         }
         bvec2(true, false);
        }
       if(false)
        {
         while((false == false))
          {
           uvec3 _GLF_SWITCH_6_24v[44];
          }
         bvec2 _GLF_SWITCH_6_25v, _GLF_SWITCH_6_26v, _GLF_SWITCH_6_27v;
         int _GLF_SWITCH_6_28v[63];
         while((0.3 < -0.6))
          {
           vec3 _GLF_SWITCH_6_29v, _GLF_SWITCH_6_30v, _GLF_SWITCH_6_31v;
           vec2 _GLF_SWITCH_6_32v, _GLF_SWITCH_6_33v;
           float _GLF_SWITCH_6_34v, _GLF_SWITCH_6_35v, _GLF_SWITCH_6_36v;
           mat2x4 _GLF_SWITCH_6_37v, _GLF_SWITCH_6_38v[25], _GLF_SWITCH_6_39v;
          }
        }
      }
     default:
     1;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     switch(_GLF_IDENTITY(_GLF_SWITCH((1 ^ 1)), max(_GLF_SWITCH((1 ^ 1)), _GLF_SWITCH((1 ^ 1)))))
      {
       case 15:
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(true)
        {
         switch(_GLF_SWITCH(0))
          {
           case 0:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           if((-8.6 < cos(-94.58)))
            {
             bool _GLF_SWITCH_2_0v[92];
             for(             subgroup_local_id;
 false; 4.4)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               ivec4 _GLF_SWITCH_2_1v;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               ;
               ivec3(-61819, 15309, 24835);
               uvec3 _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v;
               (~ (ivec3(68419, -82259, -97707) - ivec3(-72807, 34556, -29895)));
               uvec3 _GLF_SWITCH_2_4v[19], _GLF_SWITCH_2_5v[24], _GLF_SWITCH_2_6v[51];
               ;
               if(_GLF_DEAD(false))
                continue;
               mat2(mat3x2(1.0, -6.1, -4.7, -7401.8710, 381.078, 6.7));
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               mat4x2(0.6, -9.3, 0.8, 129.404, -3.8, -4.7, 4.0, 768.750);
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           case 76:
           {
            switch(_GLF_SWITCH(0))
             {
              case 70:
              mat3x4(986.829, -6.4, -0.8, -6871.0256, -1578.7528, -280.468, -5.1, 879.938, 3995.8615, -72.79, 75.76, -214.145);
              case 19:
              if(_GLF_DEAD(false))
               barrier();
              (mat3x2(-1.4, -0.5, 236.065, 9.5, 0.4, 6.4));
              if(_GLF_DEAD(false))
               barrier();
              case 0:
              if(_GLF_DEAD(false))
               barrier();
              case 49:
              bvec4 _GLF_SWITCH_2_7v, _GLF_SWITCH_2_8v[77], _GLF_SWITCH_2_9v;
              for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) >> 0)) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (false ? _GLF_FUZZED(26757) : 0))); _injected_loop_counter --)
               {
                smoothstep((7.6 + vec4(-1547.8118, -2.3, -615.948, 34.58)), vec4(6160.2687, -1.2, 4.2, 4.5), vec4(-238.093, -7684.4002, 12.89, 1831.1952));
               }
              case 17:
              mat2 _GLF_SWITCH_2_10v[63], _GLF_SWITCH_2_11v;
              case 92:
              case 91:
              if(_GLF_DEAD(false))
               barrier();
              case 90:
              subgroup_local_id;
              case 10:
              case 47:
              case 63:
              if(all(bvec2(false, true)))
               {
                bvec4 _GLF_SWITCH_2_12v;
                workgroup_size;
                if(_GLF_DEAD(false))
                 barrier();
                uint _GLF_SWITCH_2_13v, _GLF_SWITCH_2_14v;
                if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                 barrier();
                _GLF_IDENTITY(bvec3(true, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(true, false, true))), true)))))));
                mat3x2 _GLF_SWITCH_2_15v[18], _GLF_SWITCH_2_16v;
                (_GLF_IDENTITY(round(clamp(vec4(9.9, -745.601, -0.4, 2.6), -3.2, -448.550)) * float(false), (_GLF_IDENTITY(round(clamp(vec4(9.9, -745.601, -0.4, 2.6), -3.2, -448.550)) * float(false), max(round(clamp(vec4(9.9, -745.601, -0.4, 2.6), -3.2, -448.550)) * float(false), round(clamp(vec4(9.9, -745.601, -0.4, 2.6), -3.2, -448.550)) * float(false)))) / vec4(1.0, 1.0, 1.0, 1.0)));
                if(_GLF_DEAD(false))
                 barrier();
                uvec3(141492u, 32756u, 129346u);
                if(_GLF_DEAD(false))
                 barrier();
                all(_GLF_IDENTITY(bvec3(true, false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)))), false)))));
                mat4x3 _GLF_SWITCH_2_17v, _GLF_SWITCH_2_18v[9], _GLF_SWITCH_2_19v;
               }
              case 80:
              for(mat4x2 _GLF_SWITCH_2_20v[6]; _GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))); lessThan(vec2(5.3, 6471.4970), injectionSwitch))
               {
                if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   break;
                  uvec3(79035u, 101553u, 155530u).rb;
                 }
                else
                 {
                 }
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  if(_GLF_DEAD(false))
                   barrier();
                  break;
                 }
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  if(_GLF_DEAD(false))
                   break;
                  switch(_GLF_SWITCH(0))
                   {
                    case 0:
                    case 89:
                    case 39:
                    (252.712);
                    break;
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     return;
                    case 35:
                    bool _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
                    case 7:
                    bool _GLF_SWITCH_3_3v;
                    default:
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      1;
                     }
                    else
                     {
                     }
                   }
                 }
                else
                 {
                 }
                for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  (ivec2(-20623, -23216) | (mat4x2(2.5, -66.07, -5.8, -761.997, -6501.6113, 0.9, 3237.8057, 3.8) , -27962));
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                true;
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  break;
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                (mat3x4(_GLF_IDENTITY(-1.2, (_GLF_IDENTITY(-1.2, max(-1.2, -1.2))) / 1.0), -3.9, 1.1, _GLF_IDENTITY(3558.5163, (false ? _GLF_FUZZED(6.9) : 3558.5163)), -44.93, 0.5, 7.9, -2724.2119, -60.09, -67.46, -1743.0165, 8596.0028) * mat2x3(515.922, -8122.0146, 903.879, _GLF_IDENTITY(-837.862, (-837.862) - determinant(mat2(0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), -82.79, -6464.3868));
                clamp(vec4(-876.707, -34.08, 93.71, 8.5), tanh(7285.1172), 86.44);
                equal(bvec2(true, true), bvec2(true, true));
                if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                 barrier();
               }
              if(_GLF_DEAD(false))
               barrier();
              break;
              case 99:
              vec4 _GLF_SWITCH_3_0v;
              default:
              1;
             }
           }
           bvec2(false, false);
           case 85:
           mat3 _GLF_SWITCH_2_21v[22], _GLF_SWITCH_2_22v, _GLF_SWITCH_2_23v;
           case 17:
           case 46:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           for(vec4 _GLF_SWITCH_2_24v[32], _GLF_SWITCH_2_25v, _GLF_SWITCH_2_26v[82]; any(bvec4(false, false, false, false)); greaterThan(_GLF_SWITCH_2_25v, _GLF_SWITCH_2_25v))
            {
             switch(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 + (int(8)))))))
              {
               case 0:
               case 63:
               case 81:
               case 13:
               if(_GLF_DEAD(false))
                barrier();
               case 38:
               case 75:
               mat4x2 _GLF_SWITCH_2_27v, _GLF_SWITCH_2_28v;
               case 53:
               case 7:
               mat4x2 _GLF_SWITCH_2_29v[88], _GLF_SWITCH_2_30v[59];
               break;
               case 96:
               mat4x2(-1.6, -0.0, -2.3, -3.2, 3451.3877, -2.8, 17.87, -37.98);
               case 40:
               notEqual(bvec3(true, false, true), bvec3(true, true, true));
               default:
               1;
              }
            }
           case 57:
           if(_GLF_DEAD(false))
            return;
           if((-465.243 < 4810.1716))
            {
             do
              {
               ;
               vec4(905.263, 8.5, 3030.9188, 54.01);
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 mat2(-5.5, 7.5, 9841.7268, -2963.1023);
                 if(_GLF_DEAD(false))
                  continue;
                }
               bvec4(false, true, bvec2(false, false));
               mat3x4(4.9, 0.5, -21.04, -4.1, 920.797, -997.213, 315.565, -5356.7010, -8329.7187, 7.4, 4411.5884, 2.1);
               if(_GLF_DEAD(false))
                barrier();
               vec3 _GLF_SWITCH_2_31v, _GLF_SWITCH_2_32v, _GLF_SWITCH_2_33v[36];
               bvec2 _GLF_SWITCH_2_34v, _GLF_SWITCH_2_35v, _GLF_SWITCH_2_36v;
              }
             while(false);
             {
              mat2 _GLF_SWITCH_2_37v, _GLF_SWITCH_2_38v[63], _GLF_SWITCH_2_39v[56];
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                if(_GLF_DEAD(false))
                 barrier();
                isinf(vec4(-54.59, 84.51, -8.5, 2.0));
               }
              else
               {
               }
              vec2 _GLF_SWITCH_2_40v[2], _GLF_SWITCH_2_41v, _GLF_SWITCH_2_42v;
              if(_GLF_DEAD(false))
               {
                switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                 {
                  case 92:
                  mat4(mat3(0.9, -57.40, _GLF_IDENTITY(90.47, (90.47) - 0.0), 7.6, 99.34, -5.8, 303.808, -8.4, 6.5));
                  case 90:
                  vec3(6960.2791, -479.485, -76.06);
                  case 0:
                  case 64:
                  case 39:
                  case 1:
                  if(_GLF_DEAD(false))
                   barrier();
                  case 24:
                  case 52:
                  if(_GLF_DEAD(false))
                   return;
                  barrier();
                  break;
                  case 14:
                  greaterThanEqual(ivec4(-77537, -82640, -64565, 35599), ivec4(-54949, 87454, -16099, 94841)).xxz;
                  case 78:
                  uvec3(85983u, 10934u, 130290u);
                  default:
                  1;
                 }
               }
              uvec4(144019u, 137526u, 178986u, 160161u);
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              mat4x2(-1094.2714, 5.0, 27.31, 3.0, 3.2, -6.8, 3.4, 5.1);
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             mat2(0.7, 6718.6538, 3.6, -5.1);
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               for(uint _GLF_SWITCH_2_43v, _GLF_SWITCH_2_44v; true; _GLF_IDENTITY(vec4(-13.47, -53.16, 9.1, 9183.3196), mat4(1.0) * (_GLF_IDENTITY(vec4(-13.47, -53.16, 9.1, 9183.3196), mix(vec4(_GLF_FUZZED(9.6), (vec4(-13.47, -53.16, 9.1, 9183.3196))[1], _GLF_FUZZED(8.1), (vec4(-13.47, -53.16, 9.1, 9183.3196))[3]), vec4((vec4(-13.47, -53.16, 9.1, 9183.3196))[0], _GLF_FUZZED(906.255), (vec4(-13.47, -53.16, 9.1, 9183.3196))[2], _GLF_FUZZED(-67.24)), bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, false))))))
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 91:
                   ivec2 _GLF_SWITCH_3_0v;
                   case 0:
                   case 79:
                   for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 | (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     ivec2(-77048, 18556);
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   ;
                   case 99:
                   mat3x4(-45.28, 8649.7131, -23.61, 665.505, 4252.4599, -779.654, -7408.4091, 2.0, 61.55, 2.7, 4420.8990, 876.460);
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      break;
                     barrier();
                    }
                   matrixCompMult(mat3x4(-5465.9207, -81.95, -997.164, -3073.7794, 8496.4732, -3325.3924, _GLF_IDENTITY(6.7, (6.7) - 0.0), 5703.2495, 649.247, _GLF_IDENTITY(-70.09, float(float(_GLF_IDENTITY(-70.09, clamp(-70.09, _GLF_IDENTITY(-70.09, max(-70.09, -70.09)), -70.09))))), -3161.0346, 924.086), mat3x4(mat4x2(8071.2211, 971.038, -5333.6515, -168.585, -4.2, -8407.0221, 580.468, -3.3)));
                   mat2x4 _GLF_SWITCH_2_45v, _GLF_SWITCH_2_46v, _GLF_SWITCH_2_47v;
                   if(_GLF_DEAD(false))
                    barrier();
                   bool _GLF_SWITCH_2_48v, _GLF_SWITCH_2_49v[10], _GLF_SWITCH_2_50v;
                   if(_GLF_DEAD(false))
                    barrier();
                   break;
                   case 37:
                   if(_GLF_DEAD(false))
                    return;
                   mat3x2(_GLF_IDENTITY(4.7, (4.7) - 0.0), 8043.3368, 6.4, 426.273, -9.9, -5.0);
                   if(_GLF_DEAD(false))
                    barrier();
                   default:
                   1;
                  }
                }
              }
             ivec2(14950, -94517);
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
           case 23:
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           mat2x4(83.14, -9.0, 4681.8820, 41.97, -0.2, 823.380, 51.06, -59.07);
           break;
           default:
           1;
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       case 3:
       mat4x3(66.03, _GLF_IDENTITY(-886.956, (-886.956) - sqrt(0.0)), 7870.1521, 7.9, 5951.2613, 506.317, 384.793, 7.2, -3.7, 2677.7991, -3.0, -48.04);
       case 0:
       case 63:
       if(_GLF_DEAD(false))
        barrier();
       case 85:
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       case 29:
       case 40:
       case 55:
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       break;
       case 84:
       ;
       if(_GLF_DEAD(false))
        return;
       default:
       1;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     switch(_GLF_SWITCH((0 & -88951)))
      {
       case 60:
       mat2x3 _GLF_SWITCH_3_0v[43], _GLF_SWITCH_3_1v[53];
       case 35:
       uvec3(149114u, 36442u, 53400u);
       case 0:
       case 58:
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(2), int(2)))))
          {
           case 52:
           {
            vec2 _GLF_SWITCH_6_0v;
            ivec3(_injected_loop_counter, ivec2(70931, -49023));
            mat2x4(6.6, -82.80, 7.4, 5.8, -518.147, 5.7, -11.39, -67.69);
            ;
            bvec4(true, false, true, false);
            ;
            bool _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v;
           }
           case 0:
           switch(_GLF_SWITCH((77354 & (0 >> _GLF_IDENTITY(int(7), int(7))))))
            {
             case 27:
             for(bvec3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[67], _GLF_SWITCH_3_2v; (mat2(52.46, 2658.9437, 0.3, -779.209) == mat2(8.9, 58.10, -60.26, -8040.7650)); vec3(3880.3901, 7322.4416, -3337.7138))
              {
               bvec2(false, false);
              }
             case 0:
             case 18:
             case 63:
             case 52:
             case 64:
             case 16:
             case 19:
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             break;
             case 47:
             ;
             default:
             1;
            }
           if(_GLF_DEAD(false))
            barrier();
           break;
           case 76:
           while((_injected_loop_counter < _injected_loop_counter))
            {
             ;
            }
           case 7:
           {
            tan(8.9);
            vec2 _GLF_SWITCH_6_3v;
            uvec2 _GLF_SWITCH_6_4v;
            ivec3 _GLF_SWITCH_6_5v, _GLF_SWITCH_6_6v;
            mat2(-7.7, 9669.8229, -5.2, 8121.2102);
            uvec2(atomicAdd(num_workgroup, (~ subgroup_local_id)));
           }
           default:
           1;
          }
        }
       case 7:
       if(_GLF_DEAD(false))
        barrier();
       case 34:
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true)))
        return;
       case 75:
       case 46:
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7.7) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       case 5:
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
       break;
       case 25:
       if(false)
        {
         for(mat4x3 _GLF_SWITCH_3_2v, _GLF_SWITCH_3_3v; (uvec2(122756u, 12522u) == uvec2(uvec4(4363u, 133787u, 152320u, 39847u))); mat2((-204.763 - mat4(-2.5, -7.7, -4.9, -6.2, -6.4, 8.3, 73.22, -362.036, -8171.3927, 57.47, -3.0, 74.51, -8.0, 7.7, -5.6, -418.022))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             if((uvec3(13784u, 39724u, 91288u) != uvec3(105037u, 151857u, 96879u)))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               lessThanEqual(uvec3(197635u, 62822u, 40736u), uvec3(_GLF_IDENTITY(135022u, (135022u) >> 0u), 103712u, 150441u));
               mat3 _GLF_SWITCH_3_4v;
               mat2x3 _GLF_SWITCH_3_5v[63];
               (ivec3(-53138, -93844, -28272) * ivec3(-72031, -67732, 754));
               mat4x2(-6995.3850, 8.5, -3215.6014, 7336.4761, 76.62, 4.0, -78.49, -5.0);
               mat3x2 _GLF_SWITCH_3_6v[36], _GLF_SWITCH_3_7v;
               -17180;
               (true ? ivec4(11742, 52965, 80163, -62690) : ivec4(89150, 12184, -56346, 32160));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 barrier();
                }
               workgroup_size;
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             mat2x3(-5.2, -1.2, 6.8, -7.1, 33.46, 84.09);
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if((bvec3(false, false, false) == bvec3(false, false, true)))
          {
           (mat2x4(95.46, 8.9, 6.1, 9.0, -461.489, -179.243, -2.5, -6.7) * mat3x2(653.766, 3.5, -7.4, -4736.4432, 6.3, 4859.2017));
           if(_GLF_DEAD(false))
            return;
           if((-2.8 > 9573.0347))
            {
             bvec4 _GLF_SWITCH_3_8v[73];
             ;
             (-66602 % 96783);
             mat2x4 _GLF_SWITCH_3_9v[13], _GLF_SWITCH_3_10v;
             vec3 _GLF_SWITCH_3_11v;
             max(ivec4(-23748, -48944, -94489, -45392), ivec4(23647, 34299, -30819, 28024));
             vec3(-514.428, -29.92, 6285.2883);
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             mat3x2(mat3(mat4(5881.3666, -0.6, 4.3, -3434.9567, -230.542, 5.9, 29.01, 5817.7823, -3.8, -2.8, 92.22, -4.0, -161.623, 4348.5482, -1943.0770, 7.5)));
             ivec3(-97378, -51899, -54982);
             ivec2 _GLF_SWITCH_3_12v, _GLF_SWITCH_3_13v[96];
             uvec2(94731u, 6799u);
             if(_GLF_DEAD(false))
              barrier();
            }
           bool _GLF_SWITCH_3_14v, _GLF_SWITCH_3_15v;
           {
            bool _GLF_SWITCH_3_16v, _GLF_SWITCH_3_17v, _GLF_SWITCH_3_18v;
            mat2x4(-392.370, 0.2, 5872.7614, -395.622, 8.4, 3476.2109, -5.1, 3.4);
            bvec2 _GLF_SWITCH_3_19v;
            uvec4(workgroup_id);
            uvec3 _GLF_SWITCH_3_20v, _GLF_SWITCH_3_21v;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            mat4x3 _GLF_SWITCH_3_22v;
            if(_GLF_DEAD(false))
             barrier();
            mat3(mat2(5104.8165, -26.00, -728.798, 3.6));
            bvec3(false, false, false);
            uvec3(78199u, 177983u, 180841u);
           }
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           for(bool _GLF_SWITCH_3_23v[72], _GLF_SWITCH_3_24v, _GLF_SWITCH_3_25v[5]; ((uvec3(133588u, 177577u, 17570u)) != uvec3(154262u, 81500u, 37486u)); sinh(vec2(-9.1, -4.4)))
            {
             switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
              {
               case 59:
               bvec2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v[94];
               case 89:
               ivec4(-84893, 18246, -71420, -98596);
               case 0:
               if(_GLF_DEAD(false))
                barrier();
               mat3(mat2x3(mat3(235.180, 49.56, -1.6, 4.7, 81.20, 865.698, -9.9, 549.173, 5.6)));
               case 52:
               vec4(1.0, -25.05, 6.5, -1.0).y;
               case 85:
               case 96:
               uvec3(70512u, 161075u, 8247u);
               uvec2(38166u, 186445u);
               findLSB(uvec2(101228u, 147177u));
               -6.5;
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                break;
               case 28:
               uvec4 _GLF_SWITCH_3_26v, _GLF_SWITCH_3_27v[82], _GLF_SWITCH_3_28v;
               break;
               case 39:
               mat3x4(-1.6, 6840.1583, -8496.8560, -706.008, 11.61, -86.27, 40.53, 495.786, -51.26, -9806.6254, 110.445, -4325.7304);
               default:
               1;
              }
            }
           bvec2(true, false);
           bool _GLF_SWITCH_3_29v[63];
           vec2(315.810, 5.1);
           ;
           for(           (66840 / ivec4(-63670, 10318, -48395, -97965));
 false; mat4x3(227.057, ceil(_GLF_IDENTITY(58.80, (true ? _GLF_IDENTITY(58.80, (58.80) - 0.0) : _GLF_FUZZED(193.196)))), 6173.2230, vec4(-6.6, 80.85, 7762.3556, -92.77).t, -21.88, 8477.8563, vec4(-3.7, -618.168, -6.8, -2.1).y, 5.9, -5.2, 106.933, -6408.6453, -6.5))
            {
             ((mat3(-5160.1034, -310.096, 8.3, -3.9, -8.1, 5.9, -5.9, _GLF_IDENTITY(0.8, clamp(0.8, 0.8, 0.8)), 881.084) - mat3(-9.8, -1.7, 3.2, 679.720, -74.72, -8.2, 7.6, 538.078, -5.9)) * mat3(-62.53, -59.81, -9584.4662, -663.018, -77.75, -5.1, 3972.0109, -962.845, -82.05));
            }
           if((subgroup_id != workgroup_id))
            {
             if(_GLF_DEAD(false))
              barrier();
             mat4x2(-444.037, 7997.1912, -3.9, -4747.7754, -5784.9355, -7.3, 5194.0748, 4036.6069);
             if(_GLF_DEAD(false))
              barrier();
             ;
             if(_GLF_DEAD(false))
              barrier();
             bvec2(true, false);
             mat4x3 _GLF_SWITCH_3_30v;
             if(_GLF_DEAD(false))
              return;
             int _GLF_SWITCH_3_31v[51], _GLF_SWITCH_3_32v, _GLF_SWITCH_3_33v;
             bvec4 _GLF_SWITCH_3_34v, _GLF_SWITCH_3_35v[42];
             uint _GLF_SWITCH_3_36v, _GLF_SWITCH_3_37v, _GLF_SWITCH_3_38v[67];
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           mat2 _GLF_SWITCH_3_39v, _GLF_SWITCH_3_40v;
          }
         if(_GLF_DEAD(false))
          barrier();
         mat3x4 _GLF_SWITCH_3_41v;
         while((atomicExchange(workgroup_base, uvec4(148721u, 3300u, 182305u, 127177u).z) < subgroup_size))
          {
           switch(_GLF_SWITCH(0))
            {
             case 0:
             uvec2(59440u, 174186u);
             case 13:
             for(bvec2 _GLF_SWITCH_3_42v, _GLF_SWITCH_3_43v; (false != (-97250 > -76679)); floatBitsToUint(vec4(-9.0, 4315.3679, 7.8, -2765.0689)))
              {
               vec2 _GLF_SWITCH_3_44v, _GLF_SWITCH_3_45v, _GLF_SWITCH_3_46v;
               (18.05 / (mat4x2(injectionSwitch, _GLF_SWITCH_3_45v, injectionSwitch, vec2(-1828.3443, -851.729)) + -119.256));
               ivec3(99393, -43180, -9782);
               (mat2x3(-33.62, 173.099, 4.3, -5.4, -23.74, 3.4));
              }
             case 7:
             case 42:
             case 84:
             if(_GLF_DEAD(false))
              barrier();
             case 57:
             case 16:
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                continue;
               subgroup_local_id;
               sign(mix(ivec2(96907, 73453), ivec2(48736, -98185), _GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), true), bvec3(bvec4(bvec3(bvec2(true, true), true), false)))))));
               uvec4 _GLF_SWITCH_3_47v, _GLF_SWITCH_3_48v;
              }
             while(true);
             case 4:
             {
              mat2x4 _GLF_SWITCH_3_49v;
              ivec4 _GLF_SWITCH_3_50v[83], _GLF_SWITCH_3_51v;
              mat4x2(mat3(-0.1, 0.3, -2.2, 9.4, 66.44, 58.30, -4867.6396, -4.3, 630.055));
              if(_GLF_DEAD(false))
               barrier();
              mat4x3 _GLF_SWITCH_3_52v[60], _GLF_SWITCH_3_53v, _GLF_SWITCH_3_54v;
              (mat3x4(-58.57, -8.3, -3600.8071, 9.5, 1.1, 865.902, 2.2, 4.5, 8.2, 6140.6231, 18.65, -4726.2549) * mat2x3(-87.86, -529.453, -2.0, 5.5, -216.022, 6.9));
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
             if(_GLF_DEAD(false))
              return;
             mat3x4(5.0, -4.4, 7404.9009, -8.5, -2.1, -5809.0882, -92.60, 1081.9087, 77.67, 2491.4971, -83.02, 687.457);
             case 98:
             if(_GLF_DEAD(false))
              barrier();
             case 74:
             while(((workgroup_size < num_workgroup) ? bvec3(true, true, true) : bvec3(false, false, false)).x)
              {
              }
             break;
             case 48:
             mat3x2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v;
             case 82:
             ivec3 _GLF_SWITCH_5_2v, _GLF_SWITCH_5_3v, _GLF_SWITCH_5_4v;
             default:
             1;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         for(         uvec3(3400u, 171676u, 38060u);
 true; mat3(-92.38, 4.3, -66.00, 4648.2537, 4395.6620, 8203.4863, -854.793, -3.4, _GLF_IDENTITY(-3.9, min(-3.9, -3.9))))
          {
           {
            vec3((+ vec4(70.86, -3.5, 9602.9385, 2977.2463)));
            max(max(uvec4(115272u, 183164u, 151162u, 131081u), uvec4(100919u, 196756u, 23154u, 175862u)), num_workgroup);
            ivec4(77408, -87864, 35383, 21913);
           }
          }
         if((num_workgroup == subgroup_local_id))
          {
          }
        }
       else
        {
         if(false)
          {
           uint _GLF_SWITCH_3_55v[73], _GLF_SWITCH_3_56v;
           while(false)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             mat3x2 _GLF_SWITCH_3_57v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             uvec3 _GLF_SWITCH_3_58v, _GLF_SWITCH_3_59v[59], _GLF_SWITCH_3_60v;
             mat2x3(-3.8, 9.1, -6164.9407, 5.7, 1.5, -663.264);
             mat4(-2.2, 58.22, 4861.9710, 76.49, -1810.0286, -9662.1456, 8.5, 2978.3582, -2.9, 2.3, -6.3, 57.24, -933.356, 22.80, 3.6, 1.1);
             mat3 _GLF_SWITCH_3_61v[98], _GLF_SWITCH_3_62v, _GLF_SWITCH_3_63v;
             uvec2 _GLF_SWITCH_3_64v, _GLF_SWITCH_3_65v;
             true;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           mat4x2(-958.988, -586.989, 2820.3035, 8.4, 657.343, 2.7, -642.605, 8089.9500);
           ;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             while(false)
              {
               switch(_GLF_SWITCH(0))
                {
                 case 0:
                 ivec2(56225, 2779);
                 if(_GLF_DEAD(false))
                  return;
                 bvec3 _GLF_SWITCH_3_66v, _GLF_SWITCH_3_67v;
                 case 46:
                 uvec3 _GLF_SWITCH_3_68v;
                 case 28:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 4:
                 ;
                 if(_GLF_DEAD(false))
                  barrier();
                 vec4 _GLF_SWITCH_3_69v, _GLF_SWITCH_3_70v[26];
                 break;
                 case 74:
                 uvec4 _GLF_SWITCH_6_0v;
                 case 73:
                 _GLF_SWITCH_3_68v.gbr;
                 default:
                 1;
                }
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           mat4x3(-22.53, -4.2, -8633.6158, _GLF_IDENTITY(668.445, (668.445) - 0.0), -9.5, -2986.8086, -7.2, -26.89, 0.0, -65.82, 5.8, -139.754);
           ivec3 _GLF_SWITCH_3_71v;
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           {
            mat4x2 _GLF_SWITCH_3_72v;
            mat2x3 _GLF_SWITCH_3_73v, _GLF_SWITCH_3_74v[89];
            ((mat4(8696.4162, -68.33, -6707.1975, -8048.8283, -9.0, 277.822, 9.1, -8.8, 238.566, -7.2, -4.6, 2000.6774, 4445.6648, 205.250, -5289.7527, 64.65) * mat3x4(-443.263, 3.1, -3.7, 6.0, 3.5, -4094.8551, 979.238, -6006.2926, -7.1, -6.4, 39.02, -9.5)) * (-16.89 - mat4x3(96.25, -718.385, -813.308, 46.82, 9.5, -1.3, 183.356, 75.99, _GLF_IDENTITY(-13.36, (true ? -13.36 : _GLF_FUZZED(51.14))), -7.0, 9755.9518, 386.407)));
            mat4x2(318.046, -5648.0252, 2720.9668, -6.3, -8778.1232, 4.7, 5.7, -0.5);
            mat2x4(2.5, 7.3, 5.4, 9461.7709, 3.6, -38.23, -9.4, 2.4);
            mat2x3(-667.747, -934.735, 0.2, -8.3, 50.16, 559.123);
           }
           for(mat4x3 _GLF_SWITCH_3_75v, _GLF_SWITCH_3_76v[95]; true; mat4(5.9, 825.586, -7.2, -547.017, -8.2, -6.2, 5.0, 8735.2352, -34.88, -26.26, 9.3, 6.4, -1325.5957, -3.0, -418.093, 2.8))
            {
             do
              {
               vec4(-71.30, -5.9, 2781.6662, 7.2);
              }
             while(_GLF_WRAPPED_LOOP(false));
             uvec3(subgroup_size, workgroup_size, 155236u);
             findMSB(uvec4(92868u, 185746u, 18514u, 161292u));
             -38872;
             _GLF_SWITCH_3_75v;
             notEqual(uvec2(168555u, 120694u), min(uvec2(14555u, 53625u), uvec2(66611u, 58684u)));
            }
           mat3x4(597.958, 1.6, -2.8, -30.50, -6.1, -19.01, -449.424, 19.25, -91.79, -1.4, -656.428, 608.177);
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
            {
             -695.165;
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            return;
           true;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           vec2 _GLF_SWITCH_3_77v[21], _GLF_SWITCH_3_78v, _GLF_SWITCH_3_79v;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             round(-2.0);
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           {
            switch(_GLF_SWITCH(0))
             {
              case 0:
              inversesqrt(_GLF_SWITCH_3_79v);
              mat2x3(-88.04, -735.589, 723.908, 78.42, 1563.1648, 36.16);
              mat4x3 _GLF_SWITCH_3_80v[8];
              if(_GLF_DEAD(false))
               barrier();
              case 68:
              mat3x2 _GLF_SWITCH_3_81v[22];
              if(_GLF_DEAD(false))
               barrier();
              transpose(mat3(6498.6031, 2.3, -3593.7550, 812.690, -1.1, 460.822, -0.8, -7517.8312, -9.7));
              if(_GLF_DEAD(false))
               barrier();
              case 62:
              if(_GLF_DEAD(false))
               return;
              vec4 _GLF_SWITCH_3_82v, _GLF_SWITCH_3_83v, _GLF_SWITCH_3_84v[18];
              break;
              case 55:
              mat4x2 _GLF_SWITCH_5_0v;
              default:
              1;
             }
           }
          }
         if(_GLF_DEAD(false))
          barrier();
         while(true)
          {
           mat3x2 _GLF_SWITCH_3_85v, _GLF_SWITCH_3_86v;
           while(true)
            {
             if(_GLF_DEAD(false))
              barrier();
             vec4 _GLF_SWITCH_3_87v, _GLF_SWITCH_3_88v[51];
             if(_GLF_DEAD(false))
              barrier();
             ;
            }
           ivec4 _GLF_SWITCH_3_89v, _GLF_SWITCH_3_90v[93];
           ((_GLF_SWITCH_3_89v[1]) ++);
           if(_GLF_DEAD(false))
            barrier();
           vec3 _GLF_SWITCH_3_91v, _GLF_SWITCH_3_92v, _GLF_SWITCH_3_93v;
          }
         (58234 * 27879);
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          {
           vec3 _GLF_SWITCH_3_94v;
           ;
           if(_GLF_DEAD(false))
            return;
           uvec2 _GLF_SWITCH_3_95v, _GLF_SWITCH_3_96v[12];
           mat2 _GLF_SWITCH_3_97v, _GLF_SWITCH_3_98v, _GLF_SWITCH_3_99v[31];
           if(_GLF_DEAD(false))
            barrier();
          }
         }
         if(true)
          {
           ivec2(-60516);
           if(_GLF_DEAD(false))
            barrier();
           if(false)
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
              {
               vec4(-9423.0972, -2.3, -2323.3506, 744.438);
              }
             bool _GLF_SWITCH_3_100v, _GLF_SWITCH_3_101v[48], _GLF_SWITCH_3_102v[87];
             if(_GLF_DEAD(false))
              barrier();
             mat2x4(-6.9, 4.0, -161.742, -9403.8510, 228.637, -8.2, 5.1, -63.71);
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           uvec2 _GLF_SWITCH_3_103v[89], _GLF_SWITCH_3_104v[43], _GLF_SWITCH_3_105v;
           (- (7.2 - mat4x3(-88.29, 6.6, -72.57, -874.581, -67.25, 8447.9639, -6033.3607, 6207.4744, -85.02, -7801.4244, -77.00, -5.1)));
           if(true)
            {
             if(_GLF_DEAD(false))
              barrier();
             bvec4 _GLF_SWITCH_3_106v, _GLF_SWITCH_3_107v;
             ivec3 _GLF_SWITCH_3_108v[35], _GLF_SWITCH_3_109v, _GLF_SWITCH_3_110v;
             mat2(-24.60, 7638.0516, -5.2, 4.0);
             asinh(vec3(7459.1830, -0.9, -5188.5248));
             ivec2(-49202, -80150);
             int _GLF_SWITCH_3_111v, _GLF_SWITCH_3_112v[25], _GLF_SWITCH_3_113v;
             ;
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             (mat2x3(8.3, -0.5, 286.772, -940.247, 5348.8456, 1.7) / -130.655);
             vec2 _GLF_SWITCH_3_114v, _GLF_SWITCH_3_115v[62], _GLF_SWITCH_3_116v[53];
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               mat2x3(3.1, -13.34, -405.206, 7.1, -0.1, -5341.4218);
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           mat4 _GLF_SWITCH_3_117v;
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             ivec2 _GLF_SWITCH_3_118v[80];
            }
           while((ivec3(13143, 78246, 49967) == ivec3(69115, 52845, -78889)));
           bvec2 _GLF_SWITCH_3_119v;
           bvec3 _GLF_SWITCH_3_120v, _GLF_SWITCH_3_121v, _GLF_SWITCH_3_122v;
          }
         if((mat4(72.48, -296.477, 0.1, -4.5, 114.599, 431.612, 2.2, 896.657, 41.29, 9405.9952, -26.46, -8.8, -6.4, -7901.1192, -4078.1628, 40.30) == mat4(1.7, 8.4, 6477.6635, -887.742, 3.2, -7.5, -712.139, -9.5, 9.3, -48.70, 3.4, -2.4, -41.33, -7.1, -185.655, -9.0)))
          {
           do
            {
             for(             ((ivec2(-51183, -35214) / 41471) | ivec2(-8834, 31385));
 true; ivec2(12772, 8016))
              {
               switch(_GLF_SWITCH(0))
                {
                 case 0:
                 case 98:
                 uvec2 _GLF_SWITCH_3_123v[43], _GLF_SWITCH_3_124v, _GLF_SWITCH_3_125v;
                 26549;
                 mat3x2 _GLF_SWITCH_3_126v[29], _GLF_SWITCH_3_127v;
                 case 31:
                 case 15:
                 ;
                 uvec4 _GLF_SWITCH_3_128v[5], _GLF_SWITCH_3_129v, _GLF_SWITCH_3_130v;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 break;
                 case 68:
                 ;
                 default:
                 1;
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           ivec3 _GLF_SWITCH_3_131v[48], _GLF_SWITCH_3_132v;
           uvec2 _GLF_SWITCH_3_133v[98];
           mat3x4 _GLF_SWITCH_3_134v[60], _GLF_SWITCH_3_135v;
           for(bool _GLF_SWITCH_3_136v[84], _GLF_SWITCH_3_137v; _GLF_SWITCH_3_137v; -67874)
            {
             bvec3(false, true, true);
             mix(ivec2(5737, _GLF_IDENTITY(81517, _GLF_IDENTITY(int(ivec3(81517, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(ivec3(81517, 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1))), ivec2(-50709, 4145), bvec2(true, false));
             if(_GLF_DEAD(false))
              break;
             vec4 _GLF_SWITCH_3_138v, _GLF_SWITCH_3_139v, _GLF_SWITCH_3_140v;
             (subgroup_size | uvec2(147320u, 26589u));
             bvec2 _GLF_SWITCH_3_141v[40], _GLF_SWITCH_3_142v;
            }
           vec2(-21.05, -193.712);
           {
            _GLF_SWITCH_3_132v;
            mat2x4(-30.66, -4029.3941, -7.3, -6.1, 1901.0712, -2770.3142, 2.7, -0.5);
            vec2 _GLF_SWITCH_3_143v, _GLF_SWITCH_3_144v[48];
            if(_GLF_DEAD(false))
             return;
            (mat2x3(-6.7, 2.5, 3.7, 79.87, 37.67, 87.66) * mat3x2(5792.3208, -4.1, 78.90, -28.31, 4560.3255, 8.9));
            int _GLF_SWITCH_3_145v, _GLF_SWITCH_3_146v[49], _GLF_SWITCH_3_147v;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            min(uvec4(subgroup_size, (uvec2(26925u, 36753u) & uvec2(37663u, 60532u)), subgroup_id), 91589u);
            workgroup_id;
            ;
            if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
             barrier();
           }
           ;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             ivec2 _GLF_SWITCH_3_148v, _GLF_SWITCH_3_149v, _GLF_SWITCH_3_150v;
            }
           else
            {
            }
           normalize(7.0);
           vec4 _GLF_SWITCH_3_151v;
           bvec2 _GLF_SWITCH_3_152v, _GLF_SWITCH_3_153v;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              {
               switch(_GLF_SWITCH((-79022 & 0)))
                {
                 case 13:
                 mat4x3 _GLF_SWITCH_6_0v[14], _GLF_SWITCH_6_1v[8];
                 case 0:
                 case 18:
                 case 33:
                 case 11:
                 case 27:
                 case 12:
                 case 88:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 case 69:
                 case 17:
                 case 66:
                 barrier();
                 break;
                 case 1:
                 bvec3 _GLF_SWITCH_6_2v;
                 default:
                 1;
                }
              }
             mat4x2(42.86);
             bvec4(true, true, true, false);
             (mat4x3(-3.4, -21.45, 3547.2874, -4.7, -0.4, 59.03, 95.97, -9613.0694, -0.3, 7.8, -6443.1209, -0.9) * vec4(_GLF_IDENTITY(2018.1957, clamp(_GLF_IDENTITY(2018.1957, min(2018.1957, 2018.1957)), 2018.1957, _GLF_IDENTITY(2018.1957, 1.0 * (2018.1957)))), -7.5, _GLF_IDENTITY(-9.4, 1.0 * (-9.4)), 2402.6914));
             ivec3(84661, 50540, -76514);
             trunc(injectionSwitch);
             mat3(mat2(1307.7458, 801.450, 754.458, 4.7));
            }
           else
            {
            }
          }
        }
       default:
       1;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
      {
       case 30:
       mat3x4(-1.7, 2973.6892, -181.834, -31.41, 9.7, -75.73, 5.8, -5531.7131, 5913.4433, 4892.8206, -7.7, 30.24);
       case 0:
       case 56:
       case 98:
       case 93:
       case 26:
       case 55:
       case 48:
       case 33:
       case 88:
       case 31:
       barrier();
       break;
       default:
       1;
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 do
  {
   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
    {
     case 8:
     if(_GLF_DEAD(false))
      barrier();
     mat3 _GLF_SWITCH_1_0v;
     case 0:
     case 11:
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
        barrier();
      }
     case 53:
     switch(_GLF_SWITCH(0))
      {
       case 89:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if((step(_GLF_IDENTITY(normalize(_GLF_IDENTITY(-287.688, _GLF_IDENTITY((true ? -287.688 : _GLF_FUZZED(ldexp(5.9, -15494))), mix(float((_GLF_IDENTITY(true ? -287.688 : _GLF_FUZZED(ldexp(5.9, -15494)), mix(float(true ? -287.688 : _GLF_FUZZED(ldexp(5.9, -15494))), float(_GLF_FUZZED(0.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), float(_GLF_FUZZED(426.870)), bool(false))))), 1.0 * (normalize(_GLF_IDENTITY(-287.688, _GLF_IDENTITY((true ? -287.688 : _GLF_FUZZED(ldexp(_GLF_IDENTITY(5.9, mix(float(5.9), float(_GLF_FUZZED(-22.25)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))), -15494))), mix(float((true ? -287.688 : _GLF_FUZZED(ldexp(5.9, _GLF_IDENTITY(-15494, clamp(-15494, _GLF_IDENTITY(-15494, max(-15494, -15494)), -15494)))))), float(_GLF_FUZZED(426.870)), bool(false))))))), injectionSwitch) != vec2(4.2, 6.6)))
        {
         bvec2 _GLF_SWITCH_0_0v[4], _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           break;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          break;
         mat3x4 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v[71];
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         uvec2 _GLF_SWITCH_0_5v[98], _GLF_SWITCH_0_6v;
         if(_GLF_DEAD(false))
          barrier();
         ivec4 _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v;
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))) || false))
          {
           do
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         {
          if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            switch(_GLF_SWITCH((0 ^ 0)))
             {
              case 0:
              case 35:
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                 }
                else
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                 }
               }
              break;
              case 21:
              ;
              case 18:
              mat3 _GLF_SWITCH_3_0v;
              default:
              1;
              if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) || false)))))))
               barrier();
             }
           }
          else
           {
            switch(_GLF_SWITCH(((0 ^ 0) >> _GLF_IDENTITY(int(7), int(7)))))
             {
              case 84:
              uint _GLF_SWITCH_4_0v;
              case 69:
              if(_GLF_DEAD(false))
               return;
              bvec4(true, false, false, false);
              if(_GLF_DEAD(false))
               continue;
              case 0:
              case 75:
              for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 barrier();
               }
              case 38:
              if(_GLF_DEAD(false))
               barrier();
              case 79:
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                _GLF_SWITCH_0_6v;
               }
              break;
              if(_GLF_DEAD(false))
               barrier();
              default:
              1;
             }
            if(_GLF_DEAD(false))
             continue;
           }
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              break;
             }
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(false))
             barrier();
            barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             continue;
           }
          ivec2 _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_WRAPPED_IF_FALSE(false))
           {
           }
          else
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            uvec4(48551u, 14010u, 23618u, 143672u);
           }
          uvec4(196781u, 153476u, 31893u, 8440u);
          if(_GLF_DEAD(false))
           barrier();
          mat2x3 _GLF_SWITCH_0_11v;
          if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch - vec2(-7.8, 2709.4785))) : injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch - vec2(-7.8, 2709.4785))) : injectionSwitch)).y) || false)))))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            continue;
           }
         }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         float _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v[91], _GLF_SWITCH_0_14v;
         if(_GLF_DEAD(false))
          barrier();
         (((ivec2(43989, 21958) % -32708) - -73277) , _GLF_SWITCH_0_3v);
         if(_GLF_DEAD(false))
          barrier();
         mat2x3 _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v[11], _GLF_SWITCH_0_17v;
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          switch(_GLF_SWITCH(0))
           {
            case 9:
            do
             {
              _GLF_SWITCH_0_15v;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
            while(_GLF_WRAPPED_LOOP(false));
            case 0:
            case 86:
            if(_GLF_DEAD(false))
             return;
            if((_GLF_IDENTITY(ivec3(-93184, -80420, -93051) != ivec3(ivec4(58480, -63708, -27466, -43083)), bool(bool(_GLF_IDENTITY(ivec3(-93184, -80420, -93051) != ivec3(ivec4(58480, -63708, -27466, -43083)), bool(_GLF_IDENTITY(bool(ivec3(-93184, -80420, -93051) != ivec3(ivec4(58480, -63708, -27466, -43083))), bool(bvec3(bool(ivec3(-93184, -80420, -93051) != ivec3(ivec4(58480, -63708, -27466, -43083))), true, false))))))))))
             {
              switch(_GLF_SWITCH(0))
               {
                case 3:
                mat3x2(-0.9, -25.24, -640.196, 7095.8179, 29.03, -922.350);
                case 0:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                 }
                mat3x2 _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v;
                float _GLF_SWITCH_0_20v[73], _GLF_SWITCH_0_21v;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  barrier();
                 }
                break;
                case 58:
                uvec4(63124u, 92708u, 145969u, 59867u);
                case 21:
                mat4 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
                default:
                1;
               }
             }
            if(_GLF_DEAD(false))
             barrier();
            {
             if(_GLF_DEAD(false))
              break;
             (_GLF_SWITCH_0_3v == (mat3x4(_GLF_SWITCH_0_14v) / mat3x4(-8576.1457, 9918.5239, _GLF_IDENTITY(_GLF_IDENTITY(-8800.6510, _GLF_IDENTITY((_GLF_IDENTITY(-8800.6510, (-8800.6510) - 0.0)), ((_GLF_IDENTITY(-8800.6510, (-8800.6510) - 0.0))) - 0.0) - _GLF_IDENTITY(0.0, float(float(0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(-8800.6510, _GLF_IDENTITY((_GLF_IDENTITY(-8800.6510, (-8800.6510) - 0.0)), ((_GLF_IDENTITY(-8800.6510, (-8800.6510) - 0.0))) - 0.0) - _GLF_IDENTITY(0.0, float(float(0.0)))), max(_GLF_IDENTITY(-8800.6510, _GLF_IDENTITY((_GLF_IDENTITY(-8800.6510, (-8800.6510) - 0.0)), ((_GLF_IDENTITY(-8800.6510, (-8800.6510) - 0.0))) - 0.0) - _GLF_IDENTITY(0.0, float(float(0.0)))), _GLF_IDENTITY(-8800.6510, _GLF_IDENTITY((_GLF_IDENTITY(-8800.6510, (-8800.6510) - 0.0)), ((_GLF_IDENTITY(-8800.6510, (-8800.6510) - 0.0))) - 0.0) - _GLF_IDENTITY(0.0, float(float(0.0)))))) : _GLF_FUZZED(_GLF_SWITCH_0_12v))), -1.0, 8.1, 3.7, 5.6, 5.6, -43.56, 5.4, 8.4, -8.6)));
             if(_GLF_DEAD(false))
              break;
             ;
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             ;
             mat3x2 _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v, _GLF_SWITCH_0_24v;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
              {
               switch(_GLF_SWITCH((62579 & (0 & -93175))))
                {
                 case 72:
                 (- ivec3(-35577, 39392, 67696));
                 case 0:
                 case 33:
                 case 81:
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      return;
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 break;
                 default:
                 1;
                }
              }
             _GLF_SWITCH_0_3v;
            }
            _GLF_SWITCH_0_1v;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             continue;
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))
             {
              switch(_GLF_SWITCH(0))
               {
                case 29:
                false;
                case 39:
                ;
                case 0:
                if(_GLF_DEAD(false))
                 barrier();
                case 30:
                barrier();
                break;
                case 25:
                mat4x2 _GLF_SWITCH_5_0v[59], _GLF_SWITCH_5_1v;
                default:
                1;
               }
             }
            if(_GLF_DEAD(false))
             barrier();
            injectionSwitch;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            if(_GLF_DEAD(false))
             barrier();
            while(false)
             {
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 {
                  do
                   {
                    barrier();
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                break;
               }
              isnan(vec2(-49.30, 2.1)).stt;
              if(_GLF_DEAD(false))
               break;
              min(_GLF_SWITCH_0_6v, _GLF_SWITCH_0_6v);
              if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))) && true))
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
                 {
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    return;
                   }
                  else
                   {
                   }
                 }
                barrier();
               }
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
              barrier();
             }
            if(_GLF_DEAD(false))
             continue;
            while((mat4(-6.5, -2116.3381, -85.41, -687.788, -0.2, -65.23, _GLF_IDENTITY(5.8, (false ? _GLF_FUZZED(6.0) : 5.8)), -1.1, -3.1, 35.83, 39.53, 5.6, _GLF_IDENTITY(24.78, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-75.72), mix(float(_GLF_FUZZED(-97.86)), float(_GLF_FUZZED(-75.72)), bool(true)))), float(24.78), bool(true)), (mix(float(_GLF_IDENTITY(_GLF_FUZZED(-75.72), mix(float(_GLF_FUZZED(-97.86)), float(_GLF_FUZZED(-75.72)), bool(true)))), float(24.78), bool(true))) / 1.0)), -48.06, 776.476, 7.3) == _GLF_IDENTITY(mat4(599.722, -520.472, 832.380, 6.2, -27.02, -6488.3518, -7980.2725, -5.2, -86.14, -5.7, 2.8, 99.64, -6.1, 780.606, -5965.8042, -886.224), transpose(transpose(mat4(599.722, -520.472, 832.380, 6.2, -27.02, -6488.3518, -7980.2725, _GLF_IDENTITY(-5.2, (-5.2) - _GLF_ZERO(0.0, injectionSwitch.x)), -86.14, _GLF_IDENTITY(-5.7, (-5.7) / _GLF_ONE(1.0, injectionSwitch.y)), 2.8, 99.64, -6.1, 780.606, -5965.8042, -886.224))))))
             {
              ;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 break;
                return;
                if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
                 return;
               }
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 barrier();
               }
              else
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   continue;
                  barrier();
                 }
                barrier();
                if(_GLF_DEAD(false))
                 barrier();
               }
             }
            if(_GLF_DEAD(false))
             barrier();
            case 70:
            vec4 _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               break;
              barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             continue;
            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
             {
              do
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   continue;
                  barrier();
                 }
               }
              while(_GLF_WRAPPED_LOOP(false));
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                barrier();
               }
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
              if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
               barrier();
             }
            else
             {
              if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                 barrier();
                uvec4((subgroup_local_id * workgroup_id), workgroup_base, _GLF_SWITCH_0_6v);
               }
              else
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                 barrier();
               }
             }
            break;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            if(_GLF_DEAD(false))
             barrier();
            case 40:
            mat3x2 _GLF_SWITCH_2_0v[2], _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
            default:
            do
             {
              switch(_GLF_SWITCH(0))
               {
                case 32:
                bvec4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[17];
                if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                 barrier();
                case 0:
                case 49:
                case 24:
                if(_GLF_DEAD(false))
                 barrier();
                case 72:
                1;
                case 50:
                case 42:
                case 7:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                case 30:
                if(_GLF_DEAD(false))
                 barrier();
                break;
                case 37:
                if(_GLF_DEAD(false))
                 barrier();
                vec4(897.466, -4.0, -0.1, 7.9).yyxz;
                default:
                1;
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 continue;
               }
              if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
               barrier();
             }
            while(_GLF_WRAPPED_LOOP(false));
           }
          if(_GLF_DEAD(false))
           break;
         }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, cos(0.0)), mix(vec2((vec2(injectionSwitch.x, cos(0.0)))[0], _GLF_FUZZED(88.02)), vec2(_GLF_FUZZED(11.94), (vec2(injectionSwitch.x, cos(0.0)))[1]), bvec2(false, true))))) > injectionSwitch.y))))
        barrier();
       case 0:
       case 87:
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       case 67:
       case 52:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       case 27:
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        barrier();
       case 65:
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) - 0)))))
          {
           case 0:
           case 51:
           case 80:
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           case 3:
           case 87:
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           break;
           case 99:
           mat3x4(-1.5, 2.8, 2.9, -901.637, -0.2, 0.2, _GLF_IDENTITY(-8.5, 1.0 * (-8.5)), -7137.8069, -3.2, 256.031, -4.9, 128.120);
           default:
           1;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       case 56:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       case 98:
       if(_GLF_DEAD(false))
        continue;
       atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       break;
       if(_GLF_DEAD(false))
        barrier();
       case 49:
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)) > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              return;
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
          break;
         if(_GLF_DEAD(false))
          barrier();
         uvec3(189812u, 48264u, 88527u);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             switch(_GLF_SWITCH(0))
              {
               case 0:
               case 95:
               case 84:
               case 25:
               case 33:
               case 50:
               barrier();
               case 58:
               case 91:
               case 94:
               case 80:
               if(_GLF_DEAD(false))
                barrier();
               break;
               case 29:
               vec2 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v;
               case 51:
               mat4x3 _GLF_SWITCH_6_2v[39], _GLF_SWITCH_6_3v, _GLF_SWITCH_6_4v[81];
               default:
               1;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       default:
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(false, true, false))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           switch(_GLF_SWITCH(0))
            {
             case 15:
             ivec4(-15182, -12597, -46453, 85254);
             case 1:
             bvec4 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v;
             case 0:
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             break;
             default:
             1;
            }
          }
         else
          {
           switch(_GLF_SWITCH(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) | (0 ^ 0))))
            {
             case 99:
             mat2x3(_GLF_SWITCH_1_0v);
             case 0:
             case 15:
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               barrier();
              }
             break;
             case 64:
             mat4 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v[24];
             default:
             1;
            }
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         1;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     break;
     case 23:
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          barrier();
         barrier();
        }
      }
     else
      {
      }
     mat2x4(6.7, -7868.7333, 1.0, 67.98, -3.3, -88.11, 7.5, -77.99);
     default:
     1;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, false || ((_GLF_IDENTITY(false, ! (! (false)))) || false))), (false) && true)), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, ((false) && true) && true)))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-237.156)), vec2(_GLF_FUZZED(-76.58), (injectionSwitch)[1]), bvec2(false, true))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), int(ivec2(int(2), 0)))) | 0)))))
          {
           case 26:
           {
            mat4 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v;
            mat3x4 _GLF_SWITCH_6_2v;
            bvec2(true, false);
            ;
            vec3(7.7, 9889.0085, -3.7);
            mat4x2 _GLF_SWITCH_6_3v;
            mat4 _GLF_SWITCH_6_4v;
            (mat4x2(mat4x3(_GLF_SWITCH_6_3v)) , bvec2(false, true));
           }
           case 0:
           case 27:
           case 56:
           case 91:
           if(_GLF_DEAD(false))
            barrier();
           case 69:
           case 13:
           case 21:
           case 80:
           barrier();
           break;
           case 49:
           while(true)
            {
             bitfieldReverse(ivec2(88967, 53794));
             uint _GLF_SWITCH_6_5v, _GLF_SWITCH_6_6v;
             mat3x2 _GLF_SWITCH_6_7v[89];
            }
           case 73:
           mat2x3(-30.37, 822.759, -2.0, -6118.7213, -61.31, 65.94);
           default:
           1;
          }
        }
      }
     else
      {
       return;
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH(0))
    {
     case 0:
     case 99:
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bool(bool(bool(_GLF_DEAD(false))))))))
      barrier();
     case 29:
     case 46:
     if(_GLF_DEAD(false))
      barrier();
     case 9:
     barrier();
     case 28:
     case 68:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      return;
     break;
     if(_GLF_DEAD(false))
      return;
     default:
     1;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
}
