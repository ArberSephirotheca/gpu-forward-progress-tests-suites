#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 uvec3 _f0;
 float _f1;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
 bool _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_5 {
 uvec2 _f0;
 vec2 _f1;
 vec3 _f2;
 ivec4 _f3;
 uvec3 _f4;
 ivec3 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_4 {
 uvec4 _f0;
 uvec3 _f1;
 bvec3 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_8 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
 uint next_virtual_gid;
 _GLF_struct_7 _f3;
} ;

struct _GLF_struct_2 {
 mat2 _f0;
 mat3 _f1;
 mat3 _f2;
 mat2x3 _f3;
 uvec2 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_1 {
 bvec4 _f0;
 bvec4 _f1;
 vec2 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_0 {
 mat3x2 _f0;
 bvec2 _f1;
 bvec3 _f2;
 int _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 bvec3 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 float _f4;
} ;

struct _GLF_struct_9 {
 _GLF_struct_3 _f0;
 ivec3 _f1;
 ivec3 _f2;
 mat3 _f3;
 mat2x4 _f4;
 _GLF_struct_8 _f5;
 mat3x2 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))) - abs(0.0)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(false))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch))), (mat2(1.0) * (injectionSwitch)) * vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0), injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), (_GLF_IDENTITY(_GLF_FUZZED(-3.3), clamp(_GLF_FUZZED(-3.3), _GLF_FUZZED(-3.3), _GLF_IDENTITY(_GLF_FUZZED(-3.3), float(mat2(_GLF_FUZZED(-3.3), 1.0, 1.0, 1.0)))))) + 0.0)), float((injectionSwitch.y) - 0.0), bool(true)))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-3.3), (_GLF_IDENTITY(_GLF_FUZZED(-3.3), clamp(_GLF_FUZZED(-3.3), _GLF_FUZZED(-3.3), _GLF_IDENTITY(_GLF_FUZZED(-3.3), float(mat2(_GLF_FUZZED(-3.3), 1.0, 1.0, 1.0)))))) + 0.0)), float((injectionSwitch.y) - 0.0), bool(true))))) - 0.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0), (_GLF_IDENTITY(mat3(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, sqrt(0.0), _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0)), 0.0))), 1.0), transpose(transpose(mat3(injectionSwitch, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 0.0))))).x), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.2)), bool(false))), 0.0, 1.0, sqrt(0.0), 0.0, 1.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED((-570.616 - -453.351))), bool(false))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) && true)))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(ceil(determinant(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(ceil(determinant(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1))), min(ceil(determinant(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1))), _GLF_IDENTITY(ceil(determinant(mat3(-359.754, -525.607, 588.159, -0.6, _GLF_IDENTITY(64.92, (64.92) * 1.0), -65.87, -56.63, _GLF_IDENTITY(-35.55, mix(float(_GLF_FUZZED(_GLF_IDENTITY(0.2, 0.0 + (0.2)))), float(-35.55), bool(true))), -9.1))), mix(float(ceil(determinant(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1)))), float(_GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(97.38, _GLF_IDENTITY(float(mat3(97.38, sin(0.0), 1.0, 1.0, 1.0, abs(0.0), 0.0, abs(1.0), 0.0)), (false ? _GLF_FUZZED(-141.451) : float(mat3(97.38, sin(0.0), 1.0, 1.0, 1.0, abs(0.0), 0.0, abs(1.0), 0.0))))), 0.0 + (97.38)), 0.2, -27.09).s)), bool(false))))), ceil(determinant(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), _GLF_IDENTITY(mat3(mat4x3(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), (mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (true ? _GLF_IDENTITY(mat3(mat4x3(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), (mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, _GLF_IDENTITY(-35.55, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -35.55 : _GLF_IDENTITY(_GLF_FUZZED(-1195.1195), (_GLF_IDENTITY(_GLF_FUZZED(-1195.1195), mix(float(_GLF_FUZZED(-1195.1195)), float(_GLF_FUZZED(-4014.0086)), bool(false)))) + tan(0.0)))), -9.1)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), transpose(transpose(mat3(mat4x3(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), (mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, _GLF_IDENTITY(-35.55, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -35.55 : _GLF_IDENTITY(_GLF_FUZZED(-1195.1195), (_GLF_IDENTITY(_GLF_FUZZED(-1195.1195), mix(float(_GLF_FUZZED(-1195.1195)), float(_GLF_FUZZED(-4014.0086)), bool(false)))) + tan(0.0)))), -9.1)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) : _GLF_FUZZED(mat3(-223.374, 8472.4914, -6840.4485, -67.09, 2.7, 8.9, 659.443, _GLF_IDENTITY(-78.94, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -78.94 : _GLF_FUZZED(669.836))), _GLF_IDENTITY(1.3, _GLF_IDENTITY((1.3) * 1.0, float(mat3x4((1.3) * 1.0, _GLF_IDENTITY(dot(vec2(1.0, sqrt(0.0)), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, sqrt(0.0)), vec2(1.0, 0.0)), 0.0 + (dot(vec2(1.0, sqrt(0.0)), vec2(1.0, 0.0))))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0))))))))))), ceil(determinant(mat3(-359.754, _GLF_IDENTITY(-525.607, max(-525.607, -525.607)), 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1)))), max(clamp(_GLF_IDENTITY(ceil(determinant(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1))), min(ceil(determinant(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1))), _GLF_IDENTITY(ceil(determinant(mat3(-359.754, -525.607, 588.159, -0.6, _GLF_IDENTITY(64.92, (64.92) * 1.0), -65.87, -56.63, _GLF_IDENTITY(-35.55, mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(0.2, (true ? 0.2 : _GLF_FUZZED(min(uintBitsToFloat(subgroup_id), -9.3)))), 0.0 + (0.2)))), float(-35.55), bool(true))), -9.1))), mix(float(ceil(determinant(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1)))), float(_GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(97.38, _GLF_IDENTITY(float(mat3(97.38, sin(0.0), 1.0, 1.0, 1.0, abs(0.0), 0.0, abs(1.0), 0.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-141.451), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-141.451), 0.0 + (_GLF_FUZZED(-141.451))), 1.0, 1.0, 1.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-141.451), 0.0 + (_GLF_FUZZED(-141.451))), 1.0, 1.0, 1.0, 0.0, 0.0)), max(float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-141.451), 0.0 + (_GLF_FUZZED(-141.451))), 1.0, 1.0, 1.0, 0.0, 0.0)), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-141.451), 0.0 + (_GLF_FUZZED(-141.451))), 1.0, 1.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-141.451), 0.0 + (_GLF_FUZZED(-141.451))), 1.0, 1.0, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(6.3) : float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-141.451), 0.0 + (_GLF_FUZZED(-141.451))), 1.0, 1.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-141.451), 0.0 + (_GLF_FUZZED(-141.451))), 1.0, 1.0, 1.0, 0.0, 0.0)), 0.0 + (float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-141.451), 0.0 + (_GLF_FUZZED(-141.451))), 1.0, 1.0, 1.0, 0.0, 0.0))))))) : float(mat3(97.38, sin(0.0), 1.0, 1.0, 1.0, abs(0.0), 0.0, abs(1.0), 0.0))))), 0.0 + (97.38)), 0.2, -27.09).s)), bool(false))))), ceil(determinant(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), _GLF_IDENTITY(mat3(mat4x3(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), (mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), dot(vec2(0.0, 0.0), vec2(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0), mat4(1.0) * (mat3x4(0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), dot(vec2(0.0, 0.0), vec2(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0))))), 0.0, 0.0)))), (true ? _GLF_IDENTITY(mat3(mat4x3(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), (mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, _GLF_IDENTITY(-35.55, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -35.55 : _GLF_IDENTITY(_GLF_FUZZED(-1195.1195), (_GLF_IDENTITY(_GLF_FUZZED(-1195.1195), mix(float(_GLF_FUZZED(-1195.1195)), float(_GLF_FUZZED(-4014.0086)), bool(false)))) + tan(0.0)))), -9.1)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), transpose(transpose(mat3(mat4x3(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), (mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, _GLF_IDENTITY(-35.55, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -35.55 : _GLF_IDENTITY(_GLF_FUZZED(-1195.1195), (_GLF_IDENTITY(_GLF_FUZZED(-1195.1195), mix(float(_GLF_FUZZED(-1195.1195)), float(_GLF_FUZZED(-4014.0086)), bool(false)))) + tan(0.0)))), -9.1)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) : _GLF_FUZZED(mat3(-223.374, 8472.4914, -6840.4485, -67.09, 2.7, 8.9, 659.443, _GLF_IDENTITY(-78.94, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -78.94 : _GLF_FUZZED(669.836))), _GLF_IDENTITY(1.3, _GLF_IDENTITY((1.3) * 1.0, float(mat3x4((1.3) * 1.0, _GLF_IDENTITY(dot(vec2(1.0, sqrt(0.0)), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, sqrt(0.0)), vec2(1.0, 0.0)), 0.0 + (dot(vec2(1.0, sqrt(0.0)), vec2(1.0, 0.0))))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0))))))))))), _GLF_IDENTITY(ceil(determinant(mat3(-359.754, _GLF_IDENTITY(-525.607, max(-525.607, -525.607)), 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1))), (ceil(determinant(mat3(-359.754, _GLF_IDENTITY(-525.607, max(_GLF_IDENTITY(-525.607, clamp(-525.607, -525.607, -525.607)), -525.607)), 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1)))) / 1.0)), clamp(_GLF_IDENTITY(ceil(determinant(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1))), min(ceil(determinant(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1))), _GLF_IDENTITY(ceil(determinant(mat3(-359.754, -525.607, 588.159, -0.6, _GLF_IDENTITY(64.92, (64.92) * 1.0), -65.87, -56.63, _GLF_IDENTITY(-35.55, mix(float(_GLF_FUZZED(_GLF_IDENTITY(0.2, 0.0 + (0.2)))), float(-35.55), bool(true))), -9.1))), mix(float(ceil(determinant(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1)))), float(_GLF_FUZZED(vec3(_GLF_IDENTITY(_GLF_IDENTITY(97.38, _GLF_IDENTITY(float(mat3(97.38, sin(0.0), 1.0, 1.0, 1.0, abs(0.0), 0.0, abs(1.0), 0.0)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), (bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))) || false)) ? _GLF_FUZZED(-141.451) : float(mat3(97.38, sin(0.0), 1.0, 1.0, 1.0, abs(0.0), 0.0, abs(1.0), 0.0))))), 0.0 + (97.38)), 0.2, -27.09).s)), bool(false))))), ceil(determinant(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), _GLF_IDENTITY(mat3(mat4x3(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), (mat3(-359.754, -525.607, 588.159, _GLF_IDENTITY(-0.6, mix(float(-0.6), float(_GLF_FUZZED(-6.3)), bool(false))), 64.92, -65.87, -56.63, -35.55, -9.1)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (true ? _GLF_IDENTITY(mat3(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), (true ? _GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), mat3(mat3(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1)))) : _GLF_FUZZED(mat3(-9.1, 2.5, 902.648, 7.2, -2.0, -4.9, -19.96, 8881.1238, -1023.4346)))), (mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, _GLF_IDENTITY(-35.55, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -35.55 : _GLF_IDENTITY(_GLF_FUZZED(-1195.1195), (_GLF_IDENTITY(_GLF_FUZZED(-1195.1195), mix(float(_GLF_FUZZED(-1195.1195)), float(_GLF_FUZZED(-4014.0086)), bool(false)))) + tan(0.0)))), -9.1)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), transpose(transpose(mat3(mat4x3(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), (mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, _GLF_IDENTITY(-35.55, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -35.55 : _GLF_IDENTITY(_GLF_FUZZED(-1195.1195), (_GLF_IDENTITY(_GLF_FUZZED(-1195.1195), mix(float(_GLF_FUZZED(-1195.1195)), float(_GLF_FUZZED(-4014.0086)), bool(false)))) + tan(0.0)))), -9.1)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) : _GLF_FUZZED(mat3(-223.374, 8472.4914, -6840.4485, -67.09, 2.7, 8.9, 659.443, _GLF_IDENTITY(-78.94, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -78.94 : _GLF_FUZZED(669.836))), _GLF_IDENTITY(1.3, _GLF_IDENTITY((1.3) * 1.0, float(mat3x4((1.3) * 1.0, _GLF_IDENTITY(dot(vec2(1.0, sqrt(0.0)), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, sqrt(0.0)), vec2(1.0, 0.0)), 0.0 + (dot(vec2(1.0, sqrt(0.0)), vec2(1.0, 0.0))))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0))))))))))), ceil(determinant(mat3(-359.754, _GLF_IDENTITY(-525.607, max(-525.607, -525.607)), 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1)))))))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)) > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(ceil(determinant(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, _GLF_IDENTITY(-56.63, min(-56.63, -56.63)), -35.55, _GLF_IDENTITY(-9.1, clamp(-9.1, -9.1, _GLF_IDENTITY(-9.1, mix(float(_GLF_IDENTITY(-9.1, (-9.1) * cos(0.0))), float(_GLF_FUZZED(-6.9)), bool(false)))))))), clamp(_GLF_IDENTITY(ceil(determinant(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, _GLF_IDENTITY(-65.87, mix(float(_GLF_FUZZED(41.66)), float(-65.87), bool(true))), -56.63, -35.55, -9.1))), min(ceil(determinant(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, _GLF_IDENTITY(-35.55, (true ? -35.55 : _GLF_FUZZED(3398.1382))), -9.1))), _GLF_IDENTITY(ceil(determinant(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, _GLF_IDENTITY(-56.63, min(-56.63, -56.63)), _GLF_IDENTITY(-35.55, clamp(_GLF_IDENTITY(-35.55, _GLF_IDENTITY(float(mat2x3(-35.55, 0.0, 0.0, 1.0, 0.0, 1.0)), (true ? float(mat2x3(-35.55, 0.0, 0.0, 1.0, 0.0, 1.0)) : _GLF_FUZZED(2854.5456)))), -35.55, _GLF_IDENTITY(-35.55, float(mat2x3(-35.55, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), tan(0.0)))))), -9.1))), mix(float(_GLF_IDENTITY(ceil(determinant(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1))), mix(float(_GLF_IDENTITY(ceil(determinant(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, _GLF_IDENTITY(-65.87, mix(float(-65.87), float(_GLF_FUZZED(7.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(-56.63, _GLF_IDENTITY(float(vec2(-56.63, round(length(normalize(1.0))))), (true ? float(vec2(-56.63, round(length(_GLF_IDENTITY(normalize(1.0), (normalize(1.0)) / round(length(normalize(vec2(1.0, 1.0))))))))) : _GLF_FUZZED(8.2)))), -35.55, -9.1))), max(ceil(_GLF_IDENTITY(determinant(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, _GLF_IDENTITY(64.92, (_GLF_IDENTITY(64.92, clamp(_GLF_IDENTITY(64.92, 0.0 + (64.92)), _GLF_IDENTITY(64.92, mix(float(_GLF_FUZZED(-450.092)), float(64.92), bool(true))), 64.92))) - 0.0), -65.87, -56.63, -35.55, -9.1), transpose(transpose(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), mat3(1.0) * (mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1))))))), clamp(determinant(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, _GLF_IDENTITY(-9.1, float(_GLF_IDENTITY(mat3(-9.1, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(-9.1, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))), transpose(transpose(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), mat3(1.0) * (mat3(-359.754, -525.607, 588.159, _GLF_IDENTITY(-0.6, max(-0.6, _GLF_IDENTITY(-0.6, clamp(-0.6, -0.6, -0.6)))), 64.92, -65.87, -56.63, -35.55, -9.1))))))), determinant(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), transpose(transpose(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), mat3(1.0) * (mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1))))))), determinant(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), transpose(transpose(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), mat3(1.0) * (mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1)))))))))), ceil(_GLF_IDENTITY(determinant(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, _GLF_IDENTITY(-65.87, (-65.87) * 1.0), -56.63, -35.55, -9.1)), max(determinant(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1)), determinant(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), (mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), float(_GLF_FUZZED(-7149.0140)), bool(false)))), float(_GLF_IDENTITY(_GLF_FUZZED(vec3(97.38, 0.2, -27.09).s), (_GLF_FUZZED(_GLF_IDENTITY(vec3(97.38, 0.2, -27.09), min(vec3(97.38, 0.2, -27.09), vec3(97.38, 0.2, -27.09))).s)) / 1.0)), bool(false))))), ceil(determinant(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), (true ? mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1) : _GLF_FUZZED(_GLF_IDENTITY(mat3(-46.21, 5465.8590, 31.70, -238.834, 0.8, -4321.4880, 2.3, -75.33, 6.1), mat3(mat4x3(mat3(-46.21, 5465.8590, _GLF_IDENTITY(31.70, mix(float(31.70), _GLF_IDENTITY(float(_GLF_FUZZED(28.43)), min(float(_GLF_FUZZED(28.43)), float(_GLF_FUZZED(28.43)))), bool(false))), -238.834, 0.8, -4321.4880, 2.3, -75.33, 6.1))))))))), ceil(determinant(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1)))))) : injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(ceil(determinant(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, _GLF_IDENTITY(-9.1, clamp(-9.1, -9.1, _GLF_IDENTITY(-9.1, mix(float(-9.1), float(_GLF_FUZZED(-6.9)), bool(false)))))))), clamp(_GLF_IDENTITY(ceil(determinant(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1))), min(ceil(determinant(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, _GLF_IDENTITY(-35.55, (true ? -35.55 : _GLF_FUZZED(3398.1382))), -9.1))), _GLF_IDENTITY(ceil(determinant(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, _GLF_IDENTITY(-35.55, clamp(_GLF_IDENTITY(-35.55, _GLF_IDENTITY(float(mat2x3(-35.55, 0.0, 0.0, 1.0, 0.0, 1.0)), (true ? float(mat2x3(-35.55, 0.0, 0.0, 1.0, 0.0, 1.0)) : _GLF_FUZZED(2854.5456)))), -35.55, _GLF_IDENTITY(-35.55, float(mat2x3(-35.55, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), tan(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((vec4(6301.5267, -73.97, 587.050, 3.9).b / -6.1))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), -9.1))), mix(float(_GLF_IDENTITY(ceil(determinant(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1))), mix(float(_GLF_IDENTITY(ceil(determinant(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, _GLF_IDENTITY(-65.87, mix(float(-65.87), float(_GLF_FUZZED(7.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(-56.63, _GLF_IDENTITY(float(vec2(-56.63, round(length(normalize(1.0))))), (true ? float(vec2(-56.63, round(length(normalize(1.0))))) : _GLF_FUZZED(8.2)))), -35.55, -9.1))), max(ceil(_GLF_IDENTITY(determinant(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), transpose(transpose(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), mat3(1.0) * (mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1))))))), clamp(determinant(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), transpose(transpose(_GLF_IDENTITY(mat3(_GLF_IDENTITY(-359.754, clamp(_GLF_IDENTITY(-359.754, (true ? -359.754 : _GLF_FUZZED(-97.83))), _GLF_IDENTITY(-359.754, (-359.754) / 1.0), -359.754)), -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), mat3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, _GLF_IDENTITY(dot(vec4(abs(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(abs(0.0), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), length(0.0), tan(0.0), 0.0, 0.0)))) * _GLF_IDENTITY((mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1)), transpose(_GLF_IDENTITY(transpose((mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1))), (transpose((mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1)))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), transpose(transpose(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), mat3(1.0) * (mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1)))))), transpose(transpose(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), transpose(transpose(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), mat3(1.0) * (mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1)))))))))), determinant(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), transpose(transpose(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), mat3(1.0) * (mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1)))))))))), ceil(_GLF_IDENTITY(determinant(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, _GLF_IDENTITY(-65.87, (-65.87) * 1.0), -56.63, -35.55, -9.1)), max(determinant(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1)), determinant(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), (mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), float(_GLF_FUZZED(-7149.0140)), bool(false)))), float(_GLF_IDENTITY(_GLF_FUZZED(vec3(97.38, 0.2, -27.09).s), (_GLF_FUZZED(_GLF_IDENTITY(vec3(97.38, 0.2, -27.09), min(vec3(97.38, 0.2, -27.09), vec3(97.38, 0.2, -27.09))).s)) / 1.0)), bool(false))))), ceil(determinant(_GLF_IDENTITY(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1), (true ? mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1) : _GLF_FUZZED(_GLF_IDENTITY(mat3(-46.21, 5465.8590, 31.70, -238.834, 0.8, -4321.4880, 2.3, -75.33, 6.1), mat3(mat4x3(mat3(-46.21, 5465.8590, _GLF_IDENTITY(31.70, mix(float(31.70), float(_GLF_FUZZED(28.43)), bool(false))), -238.834, 0.8, -4321.4880, 2.3, -75.33, 6.1))))))))), ceil(determinant(mat3(-359.754, -525.607, 588.159, -0.6, 64.92, -65.87, -56.63, -35.55, -9.1)))))) : injectionSwitch.x)) > injectionSwitch.y))))), true, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, _GLF_IDENTITY(true, (true) && true), true))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))) / 1.0) > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 1.0), (true ? vec3(injectionSwitch.x, 1.0, 1.0) : _GLF_FUZZED(vec3(6.0, 32.52, -96.61))))), clamp(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 1.0), (true ? vec3(injectionSwitch.x, 1.0, 1.0) : _GLF_FUZZED(vec3(6.0, 32.52, -96.61))))), float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 1.0), (true ? vec3(injectionSwitch.x, 1.0, 1.0) : _GLF_FUZZED(vec3(6.0, 32.52, -96.61)))), max(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 1.0), (true ? vec3(injectionSwitch.x, 1.0, 1.0) : _GLF_FUZZED(vec3(6.0, 32.52, -96.61)))), _GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 1.0), (true ? vec3(injectionSwitch.x, 1.0, 1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec3(6.0, 32.52, -96.61)), vec3(mat4x3(_GLF_IDENTITY(_GLF_FUZZED(vec3(6.0, 32.52, -96.61)), (_GLF_FUZZED(vec3(6.0, 32.52, -96.61))) - abs(vec3(0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))), float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 1.0), (true ? vec3(injectionSwitch.x, 1.0, 1.0) : _GLF_FUZZED(vec3(6.0, 32.52, -96.61)))))))) > injectionSwitch.y)), false || (((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 1.0), (true ? vec3(injectionSwitch.x, 1.0, 1.0) : _GLF_FUZZED(vec3(6.0, 32.52, -96.61))))), clamp(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 1.0), (true ? vec3(injectionSwitch.x, 1.0, 1.0) : _GLF_FUZZED(vec3(6.0, 32.52, -96.61))))), float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 1.0), (true ? vec3(injectionSwitch.x, 1.0, 1.0) : _GLF_FUZZED(vec3(6.0, 32.52, -96.61)))), max(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 1.0), (true ? vec3(injectionSwitch.x, 1.0, 1.0) : _GLF_FUZZED(vec3(6.0, 32.52, -96.61)))), _GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, 1.0), (true ? vec3(injectionSwitch.x, 1.0, 1.0) : _GLF_FUZZED(vec3(6.0, 32.52, -96.61))))))), float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))))), (true ? vec3(injectionSwitch.x, 1.0, 1.0) : _GLF_FUZZED(vec3(6.0, 32.52, -96.61)))))))) > injectionSwitch.y)))))), false, true, true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_DEAD(false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0)), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0)), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0))) - 0.0))) : _GLF_FUZZED(1.5)))), false, false))), true, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y) * abs(1.0))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0))), false, false))), true, true)), true, false, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))), bool(bvec3(! (false), false, false)))))), bool(bvec4(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, ! (! (true))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true), true)), true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-4954.3785))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bool((! (injectionSwitch.x > injectionSwitch.y))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))) || false)), true)), ! (! (bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(799.223), _GLF_FUZZED(2756.9524)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])))).y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true, false, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackSnorm2x16(subgroup_id)))).y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true, false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).x > injectionSwitch.y))), true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6.2))), injectionSwitch.y))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x)))), _GLF_IDENTITY(max(uint(uint(_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x)))), uint(uint(_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x))))), min(max(uint(uint(_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x)))), uint(uint(_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x))))), _GLF_IDENTITY(max(uint(uint(_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x)))), uint(uint(_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ _GLF_IDENTITY((gl_WorkGroupID.x), 1u * ((gl_WorkGroupID.x))))))), ~ (~ (_GLF_IDENTITY(max(uint(uint(_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x)))), uint(uint(_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x))))), (_GLF_IDENTITY(max(uint(uint(_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x)))), uint(uint(_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x))))), ~ (~ (max(uint(uint(_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)).x)))), uint(uint(_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x))))))))) | 0u))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), vec2(_GLF_FUZZED(95.49), _GLF_FUZZED(-56.90)), bvec2(false, false)))).y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, 0u + (workgroup_size * workgroup_id));
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 0u, 1u, _GLF_IDENTITY(1u, (1u) + _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), (uint(uvec4(subgroup_size, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u)), 1u, 1u))) >> 0u)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.6)), float(1.0), bool(true))), (false ? _GLF_FUZZED(3.4) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(7.6, float(_GLF_IDENTITY(mat2x4(7.6, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0))), 0.0, 0.0), _GLF_IDENTITY(mat2x4(mat3x4(mat2x4(7.6, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0))), 0.0, 0.0))), mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x4(mat3x4(mat2x4(7.6, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0))), 0.0, 0.0)))))))))), float(1.0), bool(true))), min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.6)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.6)), float(1.0), bool(true))))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), float(vec4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.6)), float(1.0), bool(true))), (false ? _GLF_FUZZED(_GLF_IDENTITY(3.4, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(3.4, mix(float(3.4), float(_GLF_FUZZED(9380.4607)), bool(false))), 0.0, 1.0, 1.0, 1.0, abs(1.0), sin(0.0), 0.0, 1.0), mat3(1.0) * (_GLF_IDENTITY(mat3(_GLF_IDENTITY(3.4, mix(float(3.4), float(_GLF_FUZZED(9380.4607)), bool(false))), 0.0, 1.0, 1.0, 1.0, abs(1.0), sin(0.0), 0.0, 1.0), (mat3(_GLF_IDENTITY(3.4, mix(float(3.4), float(_GLF_FUZZED(9380.4607)), bool(false))), 0.0, 1.0, 1.0, 1.0, abs(1.0), sin(0.0), 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.6)), float(1.0), bool(true))), min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.6)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.6)), float(1.0), bool(true))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.6)), float(1.0), bool(true))), (false ? _GLF_FUZZED(3.4) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.6)), float(1.0), bool(true))), min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.6)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.6)), float(1.0), bool(true))))))))))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.6)), float(1.0), bool(true))), (false ? _GLF_FUZZED(3.4) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.6)), float(1.0), bool(true))), min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.6)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.6)), float(1.0), bool(true)))))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true)))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_3(_GLF_struct_0(mat3x2(1.0), bvec2(true), bvec3(_GLF_IDENTITY(true, ! (! (true)))), 1), bvec3(true), _GLF_struct_1(bvec4(true), bvec4(true), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat2x3(1.0)), _GLF_struct_2(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat3(1.0), mat3(1.0), mat2x3(1.0), uvec2(1u), vec3(1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, mix(float(_GLF_IDENTITY((1.0) / 1.0, float(mat3x4((1.0) / 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(-117.080)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(1.0, (1.0) / 1.0))), max(1.0, 1.0))), float(_GLF_IDENTITY(_GLF_FUZZED((7.4)), mix(float(_GLF_FUZZED((7.4))), float(_GLF_FUZZED(6.2)), bool(false)))), bool(false)))), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0))), max(1.0, 1.0))), float(_GLF_FUZZED((7.4))), bool(false)), mix(float(_GLF_FUZZED(7863.3591)), float(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), float(_GLF_IDENTITY(mat4x2((1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat4x2((1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.0)), bool(false))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2.8)))))))), max(1.0, 1.0))), float(_GLF_FUZZED((7.4))), bool(false))), bool(true)))), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(length(vec4(injectionSwitch, 64.17, 9794.9117))) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) * 1.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, min(_GLF_IDENTITY((1.0) / 1.0, mix(float((1.0) / 1.0), float(_GLF_FUZZED(-4.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (1.0) / 1.0))), _GLF_IDENTITY(1.0, (1.0) / 1.0))), max(1.0, 1.0))), float(_GLF_FUZZED((7.4))), bool(false)))))), (false ? _GLF_FUZZED(97.31) : max(_GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8793.5264)), bool(false))), 1.0)), mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), ((1.0)) * 1.0) / 1.0))), max(1.0, 1.0))), float(mat2x3(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), ((1.0)) * 1.0) / 1.0))), max(1.0, 1.0))), (false ? _GLF_FUZZED(-5.4) : float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), ((1.0)) * 1.0) / 1.0))), max(1.0, 1.0))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, sqrt(0.0)), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-19.22) : 0.0)))), vec3(1.0, 1.0, 1.0))), 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), ((1.0)) * 1.0) / 1.0))), max(1.0, 1.0))), float(mat2x3(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), ((1.0)) * 1.0) / 1.0))), max(1.0, 1.0))), (false ? _GLF_FUZZED(-5.4) : float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), ((1.0)) * 1.0) / 1.0))), max(1.0, 1.0))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, sqrt(0.0)), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-19.22) : 0.0)))), vec3(1.0, 1.0, 1.0))), 1.0))), (false ? _GLF_FUZZED(-1.8) : _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), ((1.0)) * 1.0) / 1.0))), max(1.0, 1.0))), float(mat2x3(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), ((1.0)) * 1.0) / 1.0))), max(1.0, 1.0))), (false ? _GLF_FUZZED(-5.4) : float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), ((1.0)) * 1.0) / 1.0))), max(1.0, 1.0))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, sqrt(0.0)), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-19.22) : 0.0)))), vec3(1.0, 1.0, 1.0))), 1.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), ((1.0)) * 1.0) / 1.0))), max(1.0, 1.0))), float(mat2x3(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), ((1.0)) * 1.0) / 1.0))), max(1.0, 1.0))), (false ? _GLF_FUZZED(-5.4) : float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), ((1.0)) * 1.0) / 1.0))), max(1.0, 1.0))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, sqrt(0.0)), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-19.22) : 0.0)))), vec3(1.0, 1.0, 1.0))), 1.0))))), float(_GLF_FUZZED((7.4))), bool(false)))))), _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, (_GLF_IDENTITY((1.0) / 1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6209.2705), min(_GLF_IDENTITY(_GLF_FUZZED(6209.2705), min(_GLF_FUZZED(6209.2705), _GLF_FUZZED(6209.2705))), _GLF_FUZZED(6209.2705)))), float(_GLF_IDENTITY((1.0) / 1.0, 1.0 * ((1.0) / 1.0))), bool(true)))) - length(vec3(0.0, 0.0, 0.0)))), _GLF_IDENTITY(1.0, (1.0) / 1.0))), mix(float(_GLF_FUZZED(55.10)), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0)))), bool(true))), max(1.0, 1.0))), float(_GLF_FUZZED((_GLF_IDENTITY(7.4, mix(float(_GLF_FUZZED(-30.45)), float(_GLF_IDENTITY(7.4, float(mat3(7.4, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), bool(true)))))), bool(false)))), (max(_GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0))), max(1.0, 1.0))), float(_GLF_FUZZED((7.4))), bool(false))))) * 1.0), max(_GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0)), min(min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0)), min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0))))), max(1.0, 1.0))), float(_GLF_FUZZED((7.4))), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), false || (_GLF_IDENTITY(bool(false), (bool(false)) && true)))))))))), ivec3(1), ivec3(1), mat3(1.0), mat2x4(1.0), _GLF_struct_8(_GLF_struct_4(uvec4(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), max(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u))))), max(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) + uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u)))))), 0u), uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(0u, (0u) ^ 0u)), max(uvec2(0u, 0u), uvec2(0u, 0u)))))))))) | (_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(max(_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u))), uvec3(1u)), uvec3(1u, 1u, 1u) * (max(_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u))), uvec3(1u))))))), uvec3(1u))), (true ? _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), min(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), min(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), min(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), min(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))))))))) : 1u))), max(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) + uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(0u, (0u) ^ 0u)), max(uvec2(0u, 0u), uvec2(0u, 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))), max(uvec2(0u, 0u), uvec2(0u, 0u))))))), min(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, _GLF_IDENTITY(0u, (0u) << (0u << _GLF_IDENTITY(uint(2u), uint(2u))))), uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), (0u) ^ 0u)), max(uvec2(0u, 0u), uvec2(0u, 0u))))))), _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) ^ uvec2(0u, 0u)), clamp(uvec2(0u, 0u), uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(0u, (0u) ^ 0u)), max(uvec2(0u, 0u), uvec2(0u, 0u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(0u, (0u) ^ 0u)), max(uvec2(0u, 0u), uvec2(0u, 0u))))))), min(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(0u, (0u) ^ 0u)), max(uvec2(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))), 0u)) : _GLF_FUZZED(atomicMax(workgroup_base, (workgroup_id --)))))), uvec2(0u, 0u))))))), _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(0u, (0u) ^ 0u)), max(uvec2(0u, 0u), uvec2(0u, 0u)))))))))) * 1u)) | 0u)))) | (_GLF_IDENTITY(uvec3(1u), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(min(uvec3(1u), uvec3(1u)), (min(uvec3(1u), uvec3(1u))) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), uvec3(1u))))))), uvec3(1u))) : _GLF_FUZZED(uvec3(26051u, 83324u, 155502u)))), bvec3(true), mat4x3(1.0)), _GLF_struct_5(uvec2(1u), vec2(1.0), vec3(1.0), _GLF_IDENTITY(ivec4(1), (ivec4(1)) << ivec4(0, 0, 0, 0)), uvec3(1u), _GLF_IDENTITY(ivec3(1), ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), clamp(ivec3(1), _GLF_IDENTITY(ivec3(1), ivec3(0, 0, 0) | (ivec3(1))), ivec3(1))), (ivec3(1)) >> ivec3(0, 0, 0))))), ivec2(1)), _GLF_struct_6(ivec4(1), true, bvec4(true)), workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)))) % subgroup_size), _GLF_struct_7(uvec3(1u), 1.0)), mat3x2(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bool(_GLF_IDENTITY((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ((bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true)))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), (_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), ((injectionSwitch) - vec2(0.0, 0.0)) * mat2(1.0)), clamp((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), sqrt(vec2(0.0, 0.0)) + (vec2(0.0, 0.0))), (injectionSwitch) - vec2(0.0, 0.0))), (injectionSwitch) - vec2(0.0, 0.0)))) - tan(vec2(0.0, 0.0)))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), (_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), ((injectionSwitch) - vec2(0.0, 0.0)) * mat2(1.0)), clamp((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), sqrt(vec2(0.0, 0.0)) + (vec2(0.0, 0.0))), (injectionSwitch) - vec2(0.0, 0.0))), (injectionSwitch) - vec2(0.0, 0.0)))) - tan(vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), (_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), ((injectionSwitch) - vec2(0.0, 0.0)) * mat2(1.0)), clamp((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), sqrt(vec2(0.0, 0.0)) + (vec2(0.0, 0.0))), (injectionSwitch) - vec2(0.0, 0.0))), (injectionSwitch) - vec2(0.0, 0.0)))) - tan(vec2(0.0, 0.0)))))).x > injectionSwitch.y))) && true)), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(sin(0.0), clamp(sin(0.0), _GLF_IDENTITY(sin(0.0), (sin(0.0)) + 0.0), _GLF_IDENTITY(sin(0.0), clamp(sin(0.0), sin(0.0), sin(0.0)))))))) > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), float(_GLF_FUZZED(-318.605)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-827.028)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[_GLF_struct_replacement_9._f5.next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), (! (_GLF_IDENTITY(! (false), (! (false)) || false))) || false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), (! (_GLF_IDENTITY(! (false), (! (false)) || false))) || false))) || false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sqrt(0.0))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), true)), false || (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), true)), bool(bvec3(bool(bvec2((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), true)), false, true)))))) || false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), false, true))), false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), true && (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))), _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), false), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) * 1.0)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), bool(bvec3(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), false, false))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), bool(bvec3(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), false, false))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), bool(bvec3(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), false, false))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), false || (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (false ? _GLF_FUZZED(subgroup_id) : read)), 4, 64, 4);
}
