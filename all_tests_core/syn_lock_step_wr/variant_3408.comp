#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ((_GLF_DEAD(false)) || false) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) || (false)))) && true, bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (false)))), true, false), bvec3(bvec3(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && _GLF_IDENTITY(true, true && (true)), true, false))))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, false, false))), false))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, false, false))), false))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))))) && true))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(970.947)), (float(_GLF_FUZZED(970.947))) - 0.0), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))[1], clamp(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0), injectionSwitch[1], injectionSwitch[1])))).x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(2.7)))), vec2(_GLF_FUZZED(-7.9), _GLF_FUZZED(-79.86)), bvec2(false, false))).x < injectionSwitch.y)))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat2(float(mat4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), sin(0.0), 1.0, 0.0)), round(length(normalize(1.0))) * (float(mat2(float(mat4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)), sin(0.0), 1.0, 0.0)))))))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.3)), bool(false)))) / 1.0)))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))))), gl_NumWorkGroups)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))))), gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))))), gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y) || false)))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * _GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), _GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(8374u, 97665u, 146026u)) : gl_WorkGroupSize))))[2])), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), _GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(8374u, 97665u, 146026u)) : gl_WorkGroupSize))))[2])), 1u), (uvec2(_GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), _GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(8374u, 97665u, 146026u)) : gl_WorkGroupSize))))[2])), 1u)) - uvec2(0u, 0u))))))))))) - (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) / 1u), (0u) << 0u), 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), (uvec3(8u)) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), (uvec3(8u)) / ((((uvec3(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : 1u)), 1u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u))) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)))), _GLF_IDENTITY((uvec3(8u)), (false ? _GLF_FUZZED(uvec3(85915u, 140808u, 36928u)) : (uvec3(8u)))) >> uvec3(0u, 0u, 0u)))), (false ? _GLF_FUZZED(_GLF_IDENTITY((subgroup_local_id * uvec3(127435u, 44628u, 193916u)), (_GLF_IDENTITY((subgroup_local_id * uvec3(127435u, 44628u, 193916u)), max((subgroup_local_id * uvec3(127435u, 44628u, 193916u)), (subgroup_local_id * uvec3(127435u, 44628u, 193916u))))) - uvec3(0u, 0u, 0u))) : _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * _GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, max(1, 1))], _GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u)), 1u * (~ (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u)))))))))))), (uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, max(1, 1))], _GLF_IDENTITY(gl_WorkGroupSize[2], min(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize))[2], _GLF_IDENTITY(gl_WorkGroupSize[2], ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u)), 1u * (~ (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u))))))))))))) / uvec3(1u, 1u, 1u))))) - _GLF_IDENTITY((uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, clamp((0u) << 0u, (0u) << 0u, _GLF_IDENTITY((0u) << 0u, max(_GLF_IDENTITY((0u) << 0u, ~ (~ ((0u) << 0u))), (0u) << 0u))))), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u)), 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), (uvec3(8u)) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(8u), _GLF_IDENTITY((uvec3(8u)), (false ? _GLF_FUZZED(uvec3(85915u, 140808u, 36928u)) : (uvec3(8u)))) >> uvec3(0u, 0u, 0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u)), 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), (uvec3(8u)) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(8u), _GLF_IDENTITY((uvec3(8u)), (false ? _GLF_FUZZED(uvec3(85915u, 140808u, 36928u)) : (uvec3(8u)))) >> uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u) + ((uvec3(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u)), 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), (uvec3(8u)) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(8u), _GLF_IDENTITY((uvec3(8u)), (false ? _GLF_FUZZED(uvec3(85915u, 140808u, 36928u)) : (uvec3(8u)))) >> uvec3(0u, 0u, 0u))))))), uvec3(uvec3(~ (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u)), 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), (uvec3(8u)) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(8u), _GLF_IDENTITY((uvec3(8u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(85915u, 140808u, 36928u)), (_GLF_FUZZED(uvec3(85915u, 140808u, 36928u))) * (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u))) : (uvec3(8u)))) >> uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u) + ((uvec3(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u)), 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), (uvec3(8u)) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(8u), _GLF_IDENTITY((uvec3(8u)), (false ? _GLF_FUZZED(uvec3(85915u, 140808u, 36928u)) : (uvec3(8u)))) >> uvec3(0u, 0u, 0u)))))))))))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * _GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(7716u, 19555u, 167936u))))[_GLF_IDENTITY(1, max(1, 1))], _GLF_IDENTITY(gl_WorkGroupSize[2], min(gl_WorkGroupSize[2], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u)), 1u * (~ (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u))))), ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))) + (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u)), 1u * (~ (_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) / 1u))))))))))))))))) - _GLF_IDENTITY((uvec3(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u)), 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), (uvec3(8u)) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(8u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(8u)), (false ? _GLF_FUZZED(uvec3(85915u, 140808u, 36928u)) : (uvec3(8u)))) >> uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec3(8u)), (false ? _GLF_FUZZED(uvec3(85915u, 140808u, 36928u)) : (uvec3(8u)))) >> uvec3(0u, 0u, 0u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u)), (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u), (true ? clamp(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u) : _GLF_FUZZED(packUnorm4x8(vec4(-8580.2035, 960.330, -949.943, 5.9)))))) : _GLF_FUZZED(uint(false)))), 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), (_GLF_IDENTITY(uvec3(8u), (uvec3(8u)) >> uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(8u), _GLF_IDENTITY((uvec3(8u)), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(85915u, 140808u, 36928u)) : (uvec3(8u)), max(false ? _GLF_FUZZED(uvec3(85915u, 140808u, 36928u)) : (uvec3(8u)), false ? _GLF_FUZZED(uvec3(85915u, 140808u, 36928u)) : (uvec3(8u))))), uvec3(1u, 1u, 1u) * ((_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(85915u, 140808u, 36928u)) : (uvec3(8u)), max(false ? _GLF_FUZZED(uvec3(85915u, 140808u, 36928u)) : (uvec3(8u)), false ? _GLF_FUZZED(uvec3(85915u, 140808u, 36928u)) : (uvec3(8u)))))))) >> uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u) + ((uvec3(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u)), 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), (uvec3(_GLF_IDENTITY(8u, (8u) / 1u))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(8u), _GLF_IDENTITY((uvec3(8u)), (false ? _GLF_FUZZED(uvec3(85915u, 140808u, 36928u)) : (uvec3(8u)))) >> uvec3(0u, 0u, 0u))))))), uvec3(uvec3(~ (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u)), 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), (uvec3(8u)) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(8u), _GLF_IDENTITY((uvec3(8u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(85915u, 140808u, 36928u)) : (uvec3(8u)), min(false ? _GLF_FUZZED(uvec3(85915u, 140808u, 36928u)) : (uvec3(8u)), _GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(85915u, 140808u, 36928u)) : (uvec3(8u)), clamp(false ? _GLF_FUZZED(uvec3(85915u, 140808u, 36928u)) : (uvec3(8u)), false ? _GLF_FUZZED(uvec3(85915u, 140808u, 36928u)) : (uvec3(8u)), _GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(85915u, 140808u, 36928u)) : (uvec3(8u)), (true ? false ? _GLF_FUZZED(uvec3(85915u, 140808u, 36928u)) : (uvec3(8u)) : _GLF_FUZZED(uvec3(9686u, 55017u, 25504u)))))))))) >> uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u) + ((uvec3(_GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u)), 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), (uvec3(8u)) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(8u), _GLF_IDENTITY((uvec3(8u)), (false ? _GLF_FUZZED(uvec3(85915u, 140808u, 36928u)) : (uvec3(8u)))) >> uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u))))))))))))))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), _GLF_IDENTITY(! (! (bool(bvec4(_GLF_DEAD(false), false, true, false)))), (! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(false), false, true, false))), ! (! (! (bool(bvec4(_GLF_DEAD(false), false, true, false)))))))) && true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(true, (true) && true), false)), _GLF_IDENTITY(! (! (bool(bvec4(_GLF_DEAD(false), false, true, false)))), (! (! (bool(bvec4(_GLF_DEAD(false), false, true, false))))) && true)))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), ! (! (bool(bvec3(false, true, false))))))), false, true, false)), ! (! _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(false), false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))))), ((bool(bvec4(_GLF_DEAD(false), false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)))))))) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (! ((false)))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool((false)))))), bool(bool(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool((false)))))))))), true && (_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool((false)))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))))), (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]), _GLF_IDENTITY(clamp(uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)))))[1], gl_WorkGroupID[2]), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), clamp(clamp(uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)))))[1], gl_WorkGroupID[2]), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), clamp(uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)))))[1], gl_WorkGroupID[2]), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), _GLF_IDENTITY(clamp(uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)))))[1], gl_WorkGroupID[2]), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), (clamp(uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)))))[1], gl_WorkGroupID[2]), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) - uvec3(0u, 0u, 0u))))))) << uvec3(0u, 0u, 0u))) << (uvec3(46514u, 74156u, 42285u) & uvec3(0u, 0u, 0u)))) >> uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3610.2369)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))), bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))), true, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(false || (! (false)), _GLF_IDENTITY((false || (! (false))), bool(bool(_GLF_IDENTITY((false || (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false || (! (false)))))))) && true)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), (false || (! (false))) && true)), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), (false || (! (false))) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), (false || (! (false))) && true)), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), (false || (! (false))) && true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), (false || (! (false))) && true)), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), (false || (! (false))) && true))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), (false || (! (false))) && true)), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), (false || (! (false))) && true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), (false || (! (false))) && true)), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), (false || (! (false))) && true))))))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), (false || (! (false))) && true)), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), (false || (! (false))) && true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), (false || (! (false))) && true)), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), (false || (! (false))) && true))))))))))))))))), false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) - abs(0.0)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, true && (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - abs(0.0)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), true && (true && (injectionSwitch.x > injectionSwitch.y))))))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), (! (! ((injectionSwitch.x < injectionSwitch.y)))) || false)))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((true), true && ((true))) && true), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! _GLF_IDENTITY((! (true)), bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(true, true && (true)))), ((! _GLF_IDENTITY((true), _GLF_IDENTITY(((true)) && true, (((true)) && true) || false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, log(1.0) + (injectionSwitch.x)))) > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), true && (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).x > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, false, true)), true && (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, false, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat3x4(mat2(1.0)), mat4(1.0) * (mat3x4(mat2(1.0)))))) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5.0, 851.813)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.7)), float(1.0), bool(true))), 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(_GLF_IDENTITY(1.0, abs(1.0) * (_GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))))), 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (0.0) / 1.0)))), vec3(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(13.02, clamp(13.02, _GLF_IDENTITY(13.02, _GLF_IDENTITY(clamp(_GLF_IDENTITY(13.02, max(13.02, 13.02)), 13.02, 13.02), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(13.02, max(13.02, 13.02)), 13.02, 13.02), max(clamp(_GLF_IDENTITY(13.02, max(13.02, 13.02)), 13.02, 13.02), clamp(_GLF_IDENTITY(13.02, max(13.02, 13.02)), 13.02, 13.02))) : _GLF_FUZZED(64.98)))), 13.02))))), 1.0)), 1.0))))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, min(1u, 1u))))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))), 1u * (_GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) >> 0u), min(_GLF_IDENTITY(~ (subgroup_base), _GLF_IDENTITY((~ (subgroup_base)) / 1u, clamp((~ (subgroup_base)) / 1u, _GLF_IDENTITY((~ (subgroup_base)) / 1u, (_GLF_IDENTITY((~ (subgroup_base)), (true ? (~ (subgroup_base)) : _GLF_FUZZED(subgroup_id))) / 1u) | (_GLF_IDENTITY((~ (subgroup_base)), _GLF_IDENTITY(uint(uvec4((~ (subgroup_base)), 0u, 0u, 0u)), max(uint(uvec4((~ (subgroup_base)), 0u, 0u, 0u)), uint(uvec4((~ (subgroup_base)), 0u, 0u, _GLF_IDENTITY(0u, (0u) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) / 1u)), (_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(~ (subgroup_base), clamp(~ (subgroup_base), ~ (subgroup_base), _GLF_IDENTITY(~ (subgroup_base), clamp(~ (subgroup_base), ~ (subgroup_base), ~ (subgroup_base)))))) << (0u << _GLF_IDENTITY(uint(6u), uint(6u))))) / 1u))), ~ (subgroup_base))))), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u ^ _GLF_IDENTITY((subgroup_base), clamp((subgroup_base), _GLF_IDENTITY((subgroup_base), 0u + ((subgroup_base))), _GLF_IDENTITY((subgroup_base), 0u | ((subgroup_base)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(~ (subgroup_base), min(_GLF_IDENTITY(~ (subgroup_base), max(~ (subgroup_base), ~ (subgroup_base))), ~ (subgroup_base)))) >> 0u), min(_GLF_IDENTITY(~ (subgroup_base), _GLF_IDENTITY((~ (subgroup_base)) / 1u, clamp((~ (subgroup_base)) / 1u, _GLF_IDENTITY((~ (subgroup_base)) / 1u, ((~ (subgroup_base)) / 1u) | _GLF_IDENTITY(((~ (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u))))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) / 1u)))) / 1u)), (true ? ((~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u))))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) / 1u)))) / 1u)) : _GLF_FUZZED((subgroup_id | workgroup_size))))), (_GLF_IDENTITY(~ (subgroup_base), _GLF_IDENTITY(max(~ (subgroup_base), _GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) | 0u)), 0u | (max(~ (subgroup_base), _GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) | 0u)))))) / 1u))), ~ (subgroup_base)))))) << 0u) + ((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), bool(bvec4(! (bool(_GLF_DEAD(false))), false, _GLF_IDENTITY(true, ! (! (true))), true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), (bool(bvec4(true, true, false, false))) && true)) ? injectionSwitch.x : _GLF_FUZZED((708.704)))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), false || (bool(false))))), (_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), false || (bool(false)))))) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))) || (bool(false)))), ! (! (false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), false || (bool(false)))))))))), (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) && true)))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-62441)))))), 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, 0 | (64)), _GLF_IDENTITY(64, (64) | 0), _GLF_IDENTITY(64, ~ (~ (64))))), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))))).x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))), max(_GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))), clamp(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))))), _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))) / vec2(1.0, 1.0))))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0)), (vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0))) * mat2(1.0))).y)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), (bool(bool(false))) && true), (bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))) && true))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), (bool(bool(false))) && true), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), (bool(bool(false))) && true), true))), (bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))) && true))))), true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.9)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / abs(vec2(1.0, 1.0)))))).y, float(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, 1.0, tan(_GLF_IDENTITY(0.0, (0.0) / exp(0.0))), 1.0, exp(0.0), 0.0, 1.0, 0.0)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)) && true))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], 4, 64, 2);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y) || false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(33.29) : injectionSwitch.y))) && true))) && (_GLF_IDENTITY(false, true && (false))))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))))))), false || ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false)))))))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), false, false)), (bool(bvec3(true && (false), false, false))) && true)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, true && (false))))), true && (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, true && (false))))), false || (! (! (! (_GLF_IDENTITY(false, true && (false))))))))), false), bvec2(bvec3(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec2(true && (false), true), bvec2(bvec3(bvec2(true && (false), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, true && (false))))), true && (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, true && (false))))), false || (! (! (! (_GLF_IDENTITY(false, true && (false))))))))), false), bvec2(bvec3(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec2(true && (false), true), bvec2(bvec3(bvec2(true && (false), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true && (false), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true && (false), _GLF_IDENTITY(false, false || (false)), false))), bvec3(bvec3(bvec3(bvec3(bvec3(true && (false), false, false)))))))), (bool(bvec3(true && (false), false, false))) && true)))))), bool(_GLF_IDENTITY(bvec2(! (! (! (_GLF_IDENTITY(false, true && (false))))), false), bvec2(bvec3(bvec2(! (! (! (_GLF_IDENTITY(false, true && (false))))), false), true))))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), false, _GLF_IDENTITY(false, bool(bvec2(false, false))))), (bool(bvec3(true && (_GLF_IDENTITY(false, true && (false))), false, false))) && true)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), false, false)), (bool(bvec3(true && (false), false, false))) && true))))))), true && (! ((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec3(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false, false)), (bool(bvec3(_GLF_IDENTITY(true && (false), bool(bvec4(true && (false), true, true, true))), false, false))) && true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), false, false)), (bool(bvec3(true && (false), false, false))) && true))))))), true && (! ((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec3(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false, false)), (bool(bvec3(_GLF_IDENTITY(true && (false), bool(bvec4(true && (false), true, true, true))), false, false))) && true)))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), false, false)), (bool(bvec3(true && (false), false, false))) && true))))))), true && (! ((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec3(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false, false)), (bool(bvec3(_GLF_IDENTITY(true && (false), bool(bvec4(true && (false), true, true, true))), false, false))) && true))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), false, false)), (bool(bvec3(true && (false), false, false))) && true))))))), true && (! ((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec3(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false, false)), (bool(bvec3(_GLF_IDENTITY(true && (false), bool(bvec4(true && (false), true, true, true))), false, false))) && true))))))))), (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), false, false)), (bool(bvec3(true && (false), false, false))) && true))))))), true && (! ((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec3(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false, false)), (bool(bvec3(_GLF_IDENTITY(true && (false), bool(bvec4(true && (false), true, true, true))), false, false))) && true)), ! (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec3(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false, false)), (bool(bvec3(_GLF_IDENTITY(true && (false), bool(bvec4(true && (false), true, true, true))), false, false))) && true))))))))))))) || false))))) && true)))), bool(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))), _GLF_IDENTITY(false, (false) && true), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))))))), bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, (false) && true), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))))))), false, true), bvec3(bvec4(bvec3((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, (false) && true), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))))))), false, true), false)))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))))), false)), bvec2(bvec2(bvec2(bvec2(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))))), false)))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))), false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)) || false), true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false)))))), ! (! (_GLF_IDENTITY(false, true && (false)))))))), false))))), true))))), true))))))), bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), false, _GLF_IDENTITY(false, bool(bvec2(false, false))))), (bool(bvec3(true && (_GLF_IDENTITY(false, true && (false))), false, false))) && true)))))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), false, false)), (bool(bvec3(true && (false), false, false))) && true))))))), true && (! ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.1)), vec2(_GLF_FUZZED(-0.4), (injectionSwitch)[1]), bvec2(false, true))), 0.0))).x > injectionSwitch.y)), true)), bool(bool(bool(bvec3(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true && (false), bool(bvec4(true && (false), true, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true && (false), bool(bvec4(true && (false), true, true, true))), bool(bool(_GLF_IDENTITY(true && (false), bool(bvec4(true && (false), true, true, true)))))))), false, false))) && true))))))))))), bool(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, (false) && true), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))))))), bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, (false) && true), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))))))), false, true), bvec3(bvec4(bvec3((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, (false) && true), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))), false, false)))))))))), false, true), false)))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))), false))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))), false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (false)))))))), true && ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (false)))))))))), false))))), true))))), true))))))), (((_GLF_IDENTITY(! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), false, _GLF_IDENTITY(false, bool(bvec2(false, false))))), (bool(bvec3(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), false, false))) && true)))))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), false, false)), (bool(bvec3(true && (false), false, false))) && true))))))), true && (! ((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(_GLF_IDENTITY(bvec3(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), false, false)), (bool(bvec3(_GLF_IDENTITY(true && (false), bool(bvec4(true && (false), true, true, true))), false, false))) && true))))))))))), bool(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, (false) && true), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))))))), bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, (false) && true), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))))), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, true && (true))) && true)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))))))))), false, true), bvec3(bvec4(bvec3((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, (false) && true), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, (false) && true), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false))))))))))))), false, true), false)))))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))))), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))), false))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))), false))), bvec2(bvec3(bvec2(bvec2(bvec2(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))), false))), bvec2(bvec3(bvec2(bvec2(bvec2(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))), false))))), false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))))), ! (! (_GLF_IDENTITY(false, true && (false)))))))), false))))), true))))), true)))))))) && true)))), ! (! (! ((_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bool(bvec3(true && (false), false, false)), (bool(bvec3(true && (false), _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false))) && true))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), false, false)), (bool(bvec3(_GLF_IDENTITY(true, (true) || false) && (false), false, false))) && true))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) && (false), false || (_GLF_IDENTITY(true && (false), bool(bvec4(true && (false), true, false, false))))), _GLF_IDENTITY(bool(bvec3(true && (false), false, false)), (bool(bvec3(true && (false), false, false))) && _GLF_IDENTITY(true, (true) || false)))))))), (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), false, false)), (bool(bvec3(true && (false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), false))) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(true && _GLF_IDENTITY((false), false || ((false))), false || (_GLF_IDENTITY(true && (false), bool(bvec4(true && (false), true, false, false))))), _GLF_IDENTITY(bool(bvec3(true && (false), false, false)), (bool(bvec3(true && (false), false, false))) && _GLF_IDENTITY(true, (true) || false))))))))) && _GLF_IDENTITY(true, ! (! (true)))))))), bool(_GLF_IDENTITY(bvec2(! (! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), bool(_GLF_IDENTITY(bvec2((! ((false))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2((! ((false))), true), bvec2(bvec3(bvec2((! ((false))), true), true))), false, true)))))))))), false), bvec2(bvec3(bvec2(! (! (! (_GLF_IDENTITY(false, true && (false))))), false), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0))), true)))))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), false, false)), (bool(bvec3(true && (false), false, false))) && true)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (_GLF_IDENTITY(false, true && (false))))), false), bvec2(bvec3(bvec2(! (! (! (_GLF_IDENTITY(false, true && (false))))), false), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (! (_GLF_IDENTITY(false, true && (false))))), false), bvec2(bvec3(bvec2(! (! (! (_GLF_IDENTITY(false, true && (false))))), false), true))))))))))), ! (_GLF_IDENTITY(! (! (! ((_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), false, false)), (bool(bvec3(true && (false), false, false))) && true)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (_GLF_IDENTITY(false, true && (false))))), false), bvec2(bvec3(bvec2(! (! (! (_GLF_IDENTITY(false, true && (false))))), false), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (! (_GLF_IDENTITY(false, true && (false))))), false), bvec2(bvec3(bvec2(! (! (! (_GLF_IDENTITY(false, true && (false))))), false), true)))))))))))), bool(bvec4(! (! (! ((_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), false, false)), (bool(bvec3(true && (false), false, false))) && true)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (_GLF_IDENTITY(false, true && (false))))), false), bvec2(bvec3(bvec2(! (! (! (_GLF_IDENTITY(false, true && (false))))), false), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (! (_GLF_IDENTITY(false, true && (false))))), false), bvec2(bvec3(bvec2(! (! (! (_GLF_IDENTITY(false, true && (false))))), false), true)))))))))))), false, true, false))))), (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), false, false)), (bool(bvec3(true && (false), false, false))) && true))))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), false, false)), (bool(bvec3(true && (false), false, false))) && true))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (_GLF_IDENTITY(false, true && (false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, true && (false))))), false || (! (! (! (_GLF_IDENTITY(false, true && (false))))))))), false), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (! (_GLF_IDENTITY(false, true && (false))))), false), bvec2(bvec3(bvec2(! (! (! (_GLF_IDENTITY(false, true && (false))))), false), true)))))))))), bool(bvec4(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), false, false)), (bool(bvec3(true && (false), false, false))) && true)))))), ! (! (! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), false, false)), (bool(bvec3(true && (false), false, false))) && true))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false))))), false), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false))))))))))) || false)), false), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, true && (false))))), ! (! ((! (! (_GLF_IDENTITY(false, true && (false)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, true && (false))))), bool(bvec2(! (! (! (_GLF_IDENTITY(false, true && (false))))), true))), false), true)))))))))), _GLF_IDENTITY(true, (true) || false) && (! ((_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(true && (false), false, false)), (bool(bvec3(true && (false), false, false))) && true)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (_GLF_IDENTITY(false, true && (false))))), false), bvec2(bvec3(bvec2(! (! (! (_GLF_IDENTITY(false, true && (false))))), false), true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (_GLF_IDENTITY(false, true && (false))))), false), bvec2(bvec3(bvec2(! (! (! (_GLF_IDENTITY(false, true && (false))))), false), true)))), (bool(_GLF_IDENTITY(bvec2(! (! (! (_GLF_IDENTITY(false, true && (false))))), false), bvec2(bvec3(bvec2(! (! (! (_GLF_IDENTITY(false, true && (false))))), false), true))))) || false))))))))), false, _GLF_IDENTITY(false, (false) || false), false))))) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
