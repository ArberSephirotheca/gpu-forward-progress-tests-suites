#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), _GLF_IDENTITY(false || (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec2(false, false))))) || (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).x > injectionSwitch.y)))))), false)))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)) && _GLF_IDENTITY(true, ! (! (true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (! (_GLF_IDENTITY(false, (false) || false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) && true))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))), false, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))), _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))) * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (_GLF_IDENTITY(1 | 1, 0 ^ (1 | 1))), 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0))), (_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))) | 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (_GLF_IDENTITY(1 | 1, 0 ^ (1 | 1))), 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0))), (_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))) | 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (-71652 & 0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (_GLF_IDENTITY(1 | 1, 0 ^ (1 | 1))), 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) / 1)))))), (_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))) | 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (_GLF_IDENTITY(1 | 1, 0 ^ _GLF_IDENTITY((1 | 1), (true ? _GLF_IDENTITY((1 | 1), clamp(_GLF_IDENTITY((1 | 1), int(ivec4((1 | 1), 1, 1, 1))), (1 | 1), (1 | 1))) : _GLF_FUZZED(33737))))), 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, (1 | 1), 0, 0)), 0 | (int(ivec4(1, (1 | 1), 0, 0))))), (_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))) | 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (-71652 & 0))) + 0), _GLF_IDENTITY(1, (1) - 0), 1), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (_GLF_IDENTITY(1 | 1, 0 ^ (1 | 1))), 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0))), (_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))) | 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (_GLF_IDENTITY(1 | 1, 0 ^ (1 | 1))), 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0))), (_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))) | 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (-71652 & 0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (_GLF_IDENTITY(1 | 1, 0 ^ (1 | 1))), 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) / 1)))))), (_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))) | 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (_GLF_IDENTITY(1 | 1, 0 ^ _GLF_IDENTITY((1 | 1), (true ? _GLF_IDENTITY((1 | 1), clamp(_GLF_IDENTITY((1 | 1), int(ivec4((1 | 1), 1, 1, 1))), (1 | 1), (1 | 1))) : _GLF_FUZZED(33737))))), 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, (1 | 1), 0, 0)), 0 | (int(ivec4(1, (1 | 1), 0, 0))))), (_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))) | 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (-71652 & 0))) + 0), _GLF_IDENTITY(1, (1) - 0), 1)) | (clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (_GLF_IDENTITY(1 | 1, 0 ^ (1 | 1))), 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0))), (_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))) | 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (_GLF_IDENTITY(1 | 1, 0 ^ (1 | 1))), 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0))), (_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))) | 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (-71652 & 0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (_GLF_IDENTITY(1 | 1, 0 ^ (1 | 1))), 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) / 1)))))), (_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))) | 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (_GLF_IDENTITY(1 | 1, 0 ^ _GLF_IDENTITY((1 | 1), (true ? _GLF_IDENTITY((1 | 1), clamp(_GLF_IDENTITY((1 | 1), int(ivec4((1 | 1), 1, 1, 1))), (1 | 1), (1 | 1))) : _GLF_FUZZED(33737))))), 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, (1 | 1), 0, 0)), 0 | (int(ivec4(1, (1 | 1), 0, 0))))), (_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))) | 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (-71652 & 0))) + 0), _GLF_IDENTITY(1, (1) - 0), 1)))), clamp(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(int(ivec4(1, (1 | 1), 0, 0)), ~ (~ (int(ivec4(1, (1 | 1), 0, 0)))))), (_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)))), min(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) * vec2(1.0, 1.0))))))).x))), _GLF_IDENTITY(1, (1) - 0), 1)), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0))), (_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1, (1) - 0), 1)), (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0))), (_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1, (1) - 0), 1))) >> 0u), subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, min(1, 1)), (1 | 1), 0, 0))), (_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY((1 | 1), max(_GLF_IDENTITY((1 | 1), ((1 | 1)) - 0), _GLF_IDENTITY((1 | _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(72350) : 1))) | (_GLF_IDENTITY(1, (1) / 1)))), min((1 | 1), _GLF_IDENTITY((1 | _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | 0)))), min((1 | 1), (_GLF_IDENTITY(1 | 1, (_GLF_IDENTITY(1 | 1, max(1 | 1, _GLF_IDENTITY(1 | 1, 0 | (1 | 1))))) | (1 | 1))))))))), 0, 0)))) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))))), _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) << ivec2(0, 0))))), ((1)) ^ 0) - _GLF_IDENTITY(0, (0) >> 0)), 1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, min(1, 1)), (1 | 1), 0, 0))), (_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1)) | 1), max(_GLF_IDENTITY((1 | 1), ((1 | 1)) - 0), _GLF_IDENTITY((1 | 1), min((1 | 1), _GLF_IDENTITY((1 | 1), min((1 | 1), (_GLF_IDENTITY(1, int(ivec3(1, 0, 0))) | 1))))))), 0, 0)))) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))))), _GLF_IDENTITY(1, (1) - 0), 1), 0 | _GLF_IDENTITY((_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, min(1, 1)), (1 | 1), 0, 0))), (_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY((1 | 1), max(_GLF_IDENTITY((1 | 1), ((1 | 1)) - 0), _GLF_IDENTITY((1 | 1), min((1 | 1), _GLF_IDENTITY((1 | 1), min((1 | 1), (1 | 1))))))), 0, 0)))) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))))), _GLF_IDENTITY(1, (1) - 0), 1), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, min(1, 1)), (1 | 1), 0, 0))), (_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY((1 | 1), max(_GLF_IDENTITY((1 | 1), ((1 | 1)) - 0), _GLF_IDENTITY((1 | 1), min((1 | 1), _GLF_IDENTITY((1 | 1), min((1 | 1), (1 | 1))))))), 0, 0)))) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))))), _GLF_IDENTITY(1, (1) - 0), 1)) ^ 0)), 0 + ((_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, min(1, 1)), (1 | 1), 0, 0))), (_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY((1 | 1), max(_GLF_IDENTITY((1 | 1), ((1 | 1)) - 0), _GLF_IDENTITY((1 | 1), min((1 | 1), _GLF_IDENTITY((1 | 1), min((1 | 1), (1 | 1))))))), 0, 0)))) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))))), _GLF_IDENTITY(1, (1) - 0), 1), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, min(1, 1)), (1 | 1), 0, 0))), (_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY((1 | 1), max(_GLF_IDENTITY((1 | 1), ((1 | 1)) - 0), _GLF_IDENTITY((1 | 1), min((1 | 1), _GLF_IDENTITY((1 | 1), min((1 | 1), (1 | 1))))))), 0, 0)))) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))))), _GLF_IDENTITY(1, (1) - 0), 1)) ^ 0))))))) ^ (0 >> _GLF_IDENTITY(int(0), int(0))))))) % subgroup_size), min(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), int(int((1) | (1))))), int(ivec4(1, (1 | _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, max(1, 1)), 0)), (int(ivec2(_GLF_IDENTITY(1, max(1, 1)), 0))) | (int(ivec2(_GLF_IDENTITY(1, max(1, 1)), 0)))))))), 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0))), (_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))) | 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1, (1) - 0), 1)), clamp(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, (1 | 1), 0, 0)), ~ (_GLF_IDENTITY(~ (int(ivec4(1, (1 | 1), 0, 0))), 0 | (~ (int(ivec4(1, (1 | 1), 0, 0)))))))), (_GLF_IDENTITY(1, int(ivec4(1, (1 | _GLF_IDENTITY(1, 0 | (1))), 0, 0)))) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) - 0), 1)), subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0))), (_GLF_IDENTITY(1, int(ivec4(1, (1 | _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (1) | (1)))), (int(int(_GLF_IDENTITY(1, (1) | (1))))) * 1))), 0, 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) - 0), 1)), subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, min(1, 1)), (1 | 1), 0, 0), clamp(ivec4(_GLF_IDENTITY(1, min(1, 1)), (1 | 1), 0, 0), ivec4(_GLF_IDENTITY(1, min(1, 1)), (1 | 1), 0, 0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, min(1, 1)), (1 | 1), 0, 0), (ivec4(_GLF_IDENTITY(1, min(1, 1)), (1 | 1), 0, 0)) * ivec4(1, 1, 1, 1)))))), (_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0), _GLF_IDENTITY((1 | 1), max(_GLF_IDENTITY((1 | 1), ((_GLF_IDENTITY(1, (1) - (0 >> _GLF_IDENTITY(int(7), int(7)))) | 1)) - 0), _GLF_IDENTITY((1 | 1), min((1 | 1), _GLF_IDENTITY(_GLF_IDENTITY((1 | 1), min((1 | 1), (1 | 1))), (_GLF_IDENTITY((1 | 1), min((1 | 1), (1 | 1)))) | 0))))), 0, 0)))) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((3.6 + -642.825))), float(injectionSwitch.x), bool(true)))) + tan(0.0))))), _GLF_IDENTITY(1, (1) - 0), 1)))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), int(ivec4(1, (1 | _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(83392) : 1)), 1))), 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0))), ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))))), (_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))) | 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1, (1) - 0), 1)), clamp(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, (1 | 1), 0, 0)), ~ (~ (int(ivec4(1, (1 | 1), 0, 0)))))), (_GLF_IDENTITY(1, int(ivec4(1, (_GLF_IDENTITY(1 | _GLF_IDENTITY(1, 0 | (1)), (1 | _GLF_IDENTITY(1, 0 | (1))) | (1 | _GLF_IDENTITY(1, 0 | (1))))), 0, 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1, (1) - 0), 1)), subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, (1 | 1), _GLF_IDENTITY(0, 0 ^ (0)), 0)), (int(ivec4(1, (1 | 1), _GLF_IDENTITY(0, 0 ^ (0)), 0))) ^ (0 | 0))), (_GLF_IDENTITY(1, int(ivec4(1, (_GLF_IDENTITY(1 | 1, (1 | 1) | (1 | 1))), 0, 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) - 0), 1)), subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, min(1, 1)), (1 | 1), 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) | (0)))))) | (0))))), (_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY((1 | 1), max(_GLF_IDENTITY((1 | 1), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - (0 >> _GLF_IDENTITY(int(7), int(7)))) | 1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - (0 >> _GLF_IDENTITY(int(7), int(7)))) | 1, (_GLF_IDENTITY(1, (1) - (0 >> _GLF_IDENTITY(int(7), int(7)))) | 1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - (0 >> _GLF_IDENTITY(int(7), int(7)))) | 1, (false ? _GLF_FUZZED(10744) : _GLF_IDENTITY(1, (1) - (0 >> _GLF_IDENTITY(int(7), int(7)))) | 1))))) | 0))) - 0), _GLF_IDENTITY((1 | 1), min((1 | 1), _GLF_IDENTITY((1 | 1), min((1 | 1), (1 | 1))))))), 0, 0)))) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))))), _GLF_IDENTITY(1, (1) - 0), 1))))) << 0u)) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 0u), (uvec2(subgroup_local_id, 0u)) | (_GLF_IDENTITY(uvec2(subgroup_local_id, 0u), ~ (~ (uvec2(subgroup_local_id, 0u)))))))) + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, (1 | 1), 0, 0), (ivec4(1, (1 | 1), 0, 0)) | (_GLF_IDENTITY(ivec4(1, (1 | 1), 0, 0), ivec4(0, 0, 0, 0) + (ivec4(1, (1 | 1), 0, 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))), min(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))), 0 | ((_GLF_IDENTITY(1, int(ivec4(1, (_GLF_IDENTITY(1, (1) | (1)) | 1), 0, 0)))))), (_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))))) | 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1, (1) - 0), 1), 0 | (clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, (1 | 1), 0, 0), (ivec4(1, (1 | 1), 0, 0)) | (_GLF_IDENTITY(ivec4(1, (1 | 1), 0, 0), ivec4(0, 0, 0, 0) + (ivec4(1, (1 | 1), 0, 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))), min(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))), 0 | ((_GLF_IDENTITY(1, int(ivec4(1, (_GLF_IDENTITY(1, (1) | (1)) | 1), 0, 0)))))), (_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))))) | 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1, (1) - 0), 1)))), clamp(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, (1 | 1), 0, 0), (_GLF_IDENTITY(ivec4(1, (1 | 1), 0, 0), min(ivec4(1, (1 | 1), 0, 0), ivec4(1, (1 | 1), 0, 0)))) / ivec4(1, 1, 1, 1))), _GLF_IDENTITY(~ (~ (int(ivec4(1, (1 | 1), 0, 0)))), ~ (~ (~ (~ (int(ivec4(1, (1 | 1), 0, 0))))))))), (_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1, (1) - 0), 1)), subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0))), (_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(injectionSwitch[1]) : 0.0)), injectionSwitch.x))), _GLF_IDENTITY(1, (1) - 0), 1)), subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, min(1, 1)))), (1 | 1), 0, 0))), (_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY((1 | 1), max(_GLF_IDENTITY((1 | 1), ((1 | 1)) - 0), _GLF_IDENTITY((1 | 1), min((1 | 1), _GLF_IDENTITY(_GLF_IDENTITY((1 | 1), min((1 | 1), (1 | 1))), (true ? _GLF_IDENTITY((1 | 1), min((1 | 1), (1 | 1))) : _GLF_FUZZED(_GLF_IDENTITY(-88791, clamp(-88791, -88791, -88791))))))))), 0, 0)))) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))))))), _GLF_IDENTITY(1, (1) - 0), 1))))) % subgroup_size), 0u ^ (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY((1 | 1), ((1 | 1)) << 0), 0, 0))), (_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))) | 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1, (1) - 0), 1), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0))), (_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0))), (_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))) | 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1, (1) - 0), 1)) ^ 0)), clamp(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, _GLF_IDENTITY(_GLF_IDENTITY((1 | 1), ((1 | 1)) / 1), min((1 | 1), (1 | 1))), 0, 0)), ~ (~ (int(ivec4(1, (1 | 1), 0, 0)))))), _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))), min((_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))), (_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1, (1) - 0), 1)), subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 | _GLF_IDENTITY(1, int(ivec3(1, 1, 1)))), 0, 0))), (_GLF_IDENTITY(1, int(ivec4(1, (1 | 1), 0, 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(1, (1) - 0)) + 0), 1)), subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(_GLF_IDENTITY(min(1, 1), (min(1, 1)) / 1), _GLF_IDENTITY(min(1, 1), min(min(1, 1), min(1, 1))), min(1, 1)))), (1 | 1), 0, 0))), (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, _GLF_IDENTITY((1 | 1), max(_GLF_IDENTITY((1 | 1), ((1 | 1)) - 0), _GLF_IDENTITY((1 | 1), min((1 | 1), _GLF_IDENTITY((1 | 1), min((1 | 1), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 0 + (1)))) | 1))))))), 0, 0), ivec4(0, 0, 0, 0) | (ivec4(1, _GLF_IDENTITY((1 | 1), max(_GLF_IDENTITY((1 | 1), ((1 | 1)) - 0), _GLF_IDENTITY((1 | 1), min(_GLF_IDENTITY((_GLF_IDENTITY(1 | 1, 0 | (_GLF_IDENTITY(1 | 1, min(1 | 1, 1 | 1))))), clamp((_GLF_IDENTITY(1 | 1, 0 | (_GLF_IDENTITY(1 | 1, min(1 | 1, 1 | 1))))), (_GLF_IDENTITY(1 | 1, 0 | (_GLF_IDENTITY(1 | 1, min(1 | 1, 1 | 1))))), (_GLF_IDENTITY(1 | 1, 0 | (_GLF_IDENTITY(1 | 1, min(1 | 1, 1 | 1))))))), _GLF_IDENTITY((1 | 1), min((1 | 1), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 0 + (1)))) | 1))))))), 0, 0)))))) | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))))), _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, int(int(1)))), 0 ^ (_GLF_IDENTITY((1), clamp((1), (1), (1))))) - 0), 1))))) % subgroup_size)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec2(bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec2(bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(495.976) : max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))), (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))), (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))), (injectionSwitch.x > injectionSwitch.y))) || false)), false || ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))), (injectionSwitch.x > injectionSwitch.y))))))))), (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(950.136)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))), (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec2(1.0, 1.0))))))))), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))), (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))) || false)), false || ((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))), (injectionSwitch.x > injectionSwitch.y)))))))))) && true), (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, min((injectionSwitch.y) + 0.0, (injectionSwitch.y) + 0.0))))))))))), (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0)), clamp(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0))))).x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-90.06)), vec2(_GLF_FUZZED(vec3(-957.425, 725.961, -518.871).z), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + 0.0, mix(float(_GLF_FUZZED(-8851.1652)), float(_GLF_IDENTITY((injectionSwitch.y) + 0.0, clamp((injectionSwitch.y) + 0.0, (injectionSwitch.y) + 0.0, (injectionSwitch.y) + 0.0))), bool(true)))))))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))), (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_IDENTITY((injectionSwitch.y), float(_GLF_IDENTITY(mat2x3((injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0), mat2x3(mat3(mat2x3((injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0))))))), float(_GLF_FUZZED((-0.7))), bool(false))) + 0.0))))))) || false)))), (injectionSwitch.x > injectionSwitch.y))) && true))))), ! (! ((! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)), min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))), (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY(((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))))), (injectionSwitch.x > injectionSwitch.y)))), (((_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0) : _GLF_FUZZED(69.45))))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false))))))) && _GLF_IDENTITY(true, (true) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, false || ((_GLF_DEAD(false)) || _GLF_IDENTITY(false, (false) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.3) : injectionSwitch.y))))) && true)) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), false || (! _GLF_IDENTITY((bool(bvec2(false, false))), bool(bvec2((bool(bvec2(false, false))), true))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(921.563)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), bool(true))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2((_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 0u)))))], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
