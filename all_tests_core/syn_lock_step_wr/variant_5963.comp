#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) - 0)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(170.939)), bool(false))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) && true), false)))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) && true), false))))))), bool(bvec2(! (bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) && true), false))))))), false))))), (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.9)), bool(false))) > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))) || false))) && true), false)))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false))))))))))))) && true)) || false)))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(78.61) : injectionSwitch.x), min((false ? _GLF_FUZZED(78.61) : injectionSwitch.x), (false ? _GLF_FUZZED(78.61) : injectionSwitch.x)))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.y) / 1.0)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, ~ (~ (1)))); _injected_loop_counter ++)
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           else
            {
            }
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.7)), float(injectionSwitch.y), bool(true))))) && (_GLF_DEAD(false))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      {
       barrier();
      }
     else
      {
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
        barrier();
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, sqrt(0.0), log(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, 0.0)))))));
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) || (_GLF_IDENTITY(false, (false) && true)))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, float(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, determinant(mat2(cos(0.0), 0.0, 1.0, 1.0)), 1.0, 1.0, cos(0.0), 1.0))))) || (_GLF_IDENTITY(false, (false) && true)))), false, true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), ! (! (bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (bool(injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))))), bool(bvec4(! (bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))))), true, true, false)))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))))), bool(bvec4(! (bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))))), true, true, false)))))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), vec2(mat3x4(vec2(vec4(injectionSwitch, 1.0, 1.0)), 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 0.0)))).x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), injectionSwitch.x)) > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73)))).y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), vec2(_GLF_IDENTITY(mat3((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(249.278, 7686.5476, -34.89, -9.8, -2.1, 7.6, 100.073, -5.5, -5.6)) : mat3((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0)))))).y), true && (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), vec2(_GLF_IDENTITY(mat3((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(249.278, 7686.5476, -34.89, -9.8, -2.1, 7.6, 100.073, -5.5, -5.6)) : mat3((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0)))))).y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), vec2(_GLF_IDENTITY(mat3((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(249.278, 7686.5476, -34.89, -9.8, -2.1, 7.6, 100.073, -5.5, -5.6)) : mat3((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0)))))).y))))))), bool(bvec4((! (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73)))).y)), false, _GLF_IDENTITY(true, false || (true)), false))), false || (_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), vec2(_GLF_IDENTITY(mat3((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat3(249.278, 7686.5476, -34.89, -9.8, -2.1, 7.6, 100.073, -5.5, -5.6)), (true ? _GLF_FUZZED(mat3(249.278, 7686.5476, -34.89, -9.8, -2.1, 7.6, 100.073, -5.5, -5.6)) : _GLF_FUZZED(mat3(4.7, 7.9, -1.4, 30.86, 4012.3917, 7649.5041, 6.7, 8.6, -537.459)))) : mat3((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0)))))).y), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0))))), mix(float(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0)))))), float(_GLF_FUZZED(9.0)), bool(false)))) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), vec2(_GLF_IDENTITY(mat3((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-9.6, -84.73), (false ? _GLF_FUZZED(vec2(11.89, -689.031)) : vec2(-9.6, -84.73))))), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(249.278, 7686.5476, -34.89, -9.8, -2.1, 7.6, 100.073, -5.5, -5.6)) : mat3((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, length(0.0), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0), mat3x2(mat3(mat3x2(0.0, 0.0, 0.0, length(0.0), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0)))))), 0.0, cos(0.0), 1.0, 1.0, 1.0)))))).y), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0))))), mix(float(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0)))))), float(_GLF_FUZZED(9.0)), bool(false)))) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), vec2(_GLF_IDENTITY(mat3((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-9.6, -84.73), (false ? _GLF_FUZZED(vec2(11.89, -689.031)) : vec2(-9.6, -84.73))))), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(249.278, 7686.5476, -34.89, -9.8, -2.1, 7.6, 100.073, -5.5, -5.6)) : mat3((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, length(0.0), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0), mat3x2(mat3(mat3x2(0.0, 0.0, 0.0, length(0.0), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0)))))), 0.0, cos(0.0), 1.0, 1.0, 1.0)))))).y)) && true), ! (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), vec2(_GLF_IDENTITY(mat3((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(249.278, 7686.5476, -34.89, -9.8, -2.1, _GLF_IDENTITY(7.6, max(7.6, 7.6)), _GLF_IDENTITY(100.073, (true ? 100.073 : _GLF_FUZZED(clamp(358.522, 1994.0930, 7.7)))), -5.5, -5.6)) : mat3((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0)))))).y))))))), ((! _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), vec2(_GLF_IDENTITY(mat3((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat3(249.278, 7686.5476, -34.89, -9.8, -2.1, 7.6, 100.073, -5.5, -5.6)), (true ? _GLF_FUZZED(mat3(249.278, 7686.5476, -34.89, -9.8, -2.1, 7.6, 100.073, -5.5, -5.6)) : _GLF_FUZZED(mat3(4.7, 7.9, -1.4, 30.86, 4012.3917, 7649.5041, 6.7, 8.6, -537.459)))) : mat3((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0)))))).y), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0))))), mix(float(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0)))))), float(_GLF_FUZZED(9.0)), bool(false)))) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), vec2(_GLF_IDENTITY(mat3((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-9.6, -84.73), (false ? _GLF_FUZZED(vec2(11.89, -689.031)) : vec2(-9.6, -84.73))))), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(249.278, 7686.5476, -34.89, -9.8, -2.1, 7.6, 100.073, -5.5, -5.6)) : mat3((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, length(0.0), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0), mat3x2(mat3(mat3x2(0.0, 0.0, 0.0, length(0.0), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0)))))), 0.0, cos(0.0), 1.0, 1.0, 1.0)))))).y), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0))))), mix(float(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0)))))), float(_GLF_FUZZED(9.0)), bool(false)))) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), vec2(_GLF_IDENTITY(mat3((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-9.6, -84.73), (false ? _GLF_FUZZED(vec2(11.89, -689.031)) : vec2(-9.6, -84.73))))), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(249.278, 7686.5476, -34.89, -9.8, -2.1, 7.6, 100.073, -5.5, -5.6)) : mat3((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, length(0.0), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0), mat3x2(mat3(mat3x2(0.0, 0.0, 0.0, length(0.0), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0)))))), 0.0, cos(0.0), 1.0, 1.0, 1.0)))))).y)) && true), ! (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), vec2(_GLF_IDENTITY(mat3((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(249.278, 7686.5476, -34.89, -9.8, -2.1, _GLF_IDENTITY(7.6, max(7.6, 7.6)), _GLF_IDENTITY(100.073, (true ? 100.073 : _GLF_FUZZED(clamp(358.522, 1994.0930, 7.7)))), -5.5, -5.6)) : mat3((true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73))), 1.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0)))))).y)))))))) || false), bool(bvec4((! (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73)))).y)), false, _GLF_IDENTITY(true, false || (true)), false))))), true)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73)))), mix(vec2(_GLF_FUZZED(-2.3), _GLF_FUZZED(-9.3)), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73)))))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))) ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-9.6, float(mat3x4(-9.6, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))), -84.73)))))[1]), bvec2(true, true))).y)), bool(bvec4((! (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73)))).y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73)))).y) / 1.0))), false, true, false))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY((! (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73)))), mix(vec2(_GLF_FUZZED(-2.3), _GLF_FUZZED(-9.3)), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73)))))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))) ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-9.6, float(mat3x4(-9.6, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))), -84.73)))))[1]), bvec2(true, true))).y)), bool(bvec4((! (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73)))).y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73)))).y) / 1.0))), false, true, false))), true))), ! (! (! (bool(bvec2(_GLF_IDENTITY((! (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73)))), mix(vec2(_GLF_FUZZED(-2.3), _GLF_FUZZED(-9.3)), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73)))))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))) ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-9.6, float(mat3x4(-9.6, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))), -84.73)))))[1]), bvec2(true, true))).y)), bool(bvec4((! (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73)))).y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73)))).y) / 1.0))), false, true, false))), true)))))))))), ! (! ((! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73)))), mix(vec2(_GLF_FUZZED(-2.3), _GLF_FUZZED(-9.3)), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73)))))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))) ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-9.6, float(mat3x4(-9.6, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))), -84.73)))))[1]), bvec2(true, true))).y)), bool(bvec4((! (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73)))).y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73)))).y) / 1.0))), false, true, false))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY((! (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73)))), mix(vec2(_GLF_FUZZED(-2.3), _GLF_FUZZED(-9.3)), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73)))))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))) ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-9.6, float(mat3x4(-9.6, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))), -84.73)))))[1]), bvec2(true, true))).y)), bool(bvec4((! (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73)))).y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73)))).y) / 1.0))), false, true, false))), true))), ! (! (! (bool(bvec2(_GLF_IDENTITY((! (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73)))), mix(vec2(_GLF_FUZZED(-2.3), _GLF_FUZZED(-9.3)), vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73)))))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))) ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-9.6, float(mat3x4(-9.6, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0))), -84.73)))))[1]), bvec2(true, true))).y)), bool(bvec4((! (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73)))).y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, -84.73)))).y) / 1.0))), false, true, false))), true))))))))))))))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), (int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))) | (int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))))); _injected_loop_counter --)
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), max(~ (0), ~ (0))))) + (_GLF_IDENTITY(0, (0) | (0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false))))), (bool(bvec4(false, false, false, false))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-8.5)), (true ? _GLF_IDENTITY(float(_GLF_FUZZED(-8.5)), mix(float(float(_GLF_FUZZED(-8.5))), float(_GLF_FUZZED(-3.9)), bool(false))) : _GLF_FUZZED(-6381.2841))), bool(false))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.5)), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.5)), bool(false)))) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), float(mat3((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.5)), bool(false)))) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(0.0), 0.0, log(1.0), 0.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.5)), bool(false))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.5)), bool(false)))) * 1.0)))))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     barrier();
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true, true), false)))))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (0 ^ 0), false || (_GLF_IDENTITY(_injected_loop_counter > (0 ^ 0), true && (_injected_loop_counter > (0 ^ 0)))))); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7.4)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) && true), _GLF_IDENTITY(true, bool(bool(true)))))))))))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec4(~ (gl_WorkGroupSize), 0u))))), min(_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec4(~ (gl_WorkGroupSize), 0u))), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec4(~ (gl_WorkGroupSize), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec4(~ (gl_WorkGroupSize), 0u))), (false ? _GLF_FUZZED(uvec3(134577u, 110624u, 143303u)) : _GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec4(~ (gl_WorkGroupSize), 0u))))), _GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec4(~ (gl_WorkGroupSize), 0u)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec4(~ (gl_WorkGroupSize), 0u))), clamp(_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec4(~ (gl_WorkGroupSize), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec4(~ (gl_WorkGroupSize), 0u))), (false ? _GLF_FUZZED(uvec3(134577u, 110624u, 143303u)) : _GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec4(~ (gl_WorkGroupSize), 0u))))), _GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec4(~ (gl_WorkGroupSize), 0u))))))) + uvec3(0u, 0u, 0u))), _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), uvec3(uvec4(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize))), 0u))))))).x, min(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), ~ (~ (gl_WorkGroupSize))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED((uvec3(103238u, 96091u, 79452u)))))), (uvec3(1u, 1u, 1u) ^ (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u))) ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED((uvec3(103238u, 96091u, 79452u)))))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED((uvec3(103238u, 96091u, 79452u)))))), (~ (_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED((uvec3(103238u, 96091u, 79452u))))))) << uvec3(0u, 0u, 0u))))))), (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED((uvec3(103238u, 96091u, 79452u)))))))) | uvec3(0u, 0u, 0u))))).x));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)) + 0u), clamp(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)) + 0u), (false ? _GLF_FUZZED((subgroup_id >> subgroup_local_id)) : workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)) + 0u))), workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)) + 0u), workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)) + 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)))) + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (workgroup_base) ^ 0u)))) + subgroup_id * subgroup_size))) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (0u & 8300u) | (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(max((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size))), (subgroup_local_id + 1) % subgroup_size), min(max((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size))), (subgroup_local_id + 1) % subgroup_size), max((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u)))), (max((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) * int(_GLF_ONE(1.0, injectionSwitch.y))), subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size))), (subgroup_local_id + 1) % subgroup_size)) | (max((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(subgroup_size), (true ? subgroup_size : _GLF_FUZZED(subgroup_size)) | 0u))), (subgroup_local_id + 1) % subgroup_size))))), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))), (subgroup_local_id + 1) % subgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ((0 & -32149) >> _GLF_IDENTITY(int(1), int(1))) + (1)), (subgroup_local_id + 1) ^ 0u)) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY((true ? _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1) ^ 0u)) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size))), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), subgroup_local_id + 1))) << 0u)) / 1u)) ^ 0u)) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size))))) : _GLF_FUZZED(42515u)), ((true ? _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(1.0) : _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))))) + 1) ^ 0u)) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))))), (subgroup_local_id + _GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, (0) ^ 0))) % subgroup_size))), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) ^ 0u)) % _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u))), max((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, 1u, 0u, 0u)))) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))) : _GLF_FUZZED(42515u))) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) - 0u) + _GLF_IDENTITY(1, (1) * 1)) ^ 0u, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)), uint(uvec2(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)), 0u ^ ((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)))), 1u))) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), max((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(29628)))), max(int(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(29628)))), int(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(29628))))))))) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) ^ 0u))), (subgroup_local_id + 1) % subgroup_size)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size))))), max((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u, 0u, 1u)), (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u, 0u, 1u))) >> 0u)))) + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) ^ 0u))), (subgroup_local_id + 1) % subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), uint(uvec3((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), 0u, 1u))))), max((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) ^ 0u))), (subgroup_local_id + 1) % subgroup_size))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size))))), max((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u, 0u, 1u)), (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u, 0u, 1u))) >> 0u)))) + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) ^ 0u))), (subgroup_local_id + 1) % subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), uint(uvec3((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), 0u, 1u))))), max((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) ^ 0u))), (subgroup_local_id + 1) % subgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size))))), max((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u, 0u, 1u)), (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u, 0u, 1u))) >> 0u)))) + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) ^ 0u))), (subgroup_local_id + 1) % subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), uint(uvec3((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), 0u, 1u))))), max((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) ^ 0u))), (subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size))))), max((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u, 0u, 1u)), (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u, 0u, 1u))) >> 0u)))) + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) ^ 0u))), (subgroup_local_id + 1) % subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), uint(uvec3((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), 0u, 1u))))), max((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) ^ 0u))), (subgroup_local_id + 1) % subgroup_size))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size))))), max((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u, 0u, 1u)), (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u, 0u, 1u))) >> 0u)))) + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) ^ 0u))), (subgroup_local_id + 1) % subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), uint(uvec3((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), 0u, 1u))))), max((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) ^ 0u))), (subgroup_local_id + 1) % subgroup_size)))))))))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-97715))) | (1)), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-84882)))) | 0)) ^ 0u)) % subgroup_size, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-97715))) | (1)), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-84882)))) | 0)) ^ 0u)) % subgroup_size), 0u + (~ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-97715))) | (1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-84882)))) | 0, (true ? _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-84882), ~ (~ (true ? 1 : _GLF_FUZZED(-84882))))))) | _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) >> 0), 0)), ~ (~ ((_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-84882), ~ (~ (true ? 1 : _GLF_FUZZED(-84882))))))) | _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) >> 0), 0))))) : _GLF_FUZZED(-8438))))) ^ 0u)) % subgroup_size))))), max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uint(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size : _GLF_FUZZED(workgroup_id))))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(2388) : _GLF_IDENTITY(1, 0 | (1)))), (subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-47026)))) ^ _GLF_IDENTITY(0u, (0u) - 0u))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))), clamp((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))), (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))), (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))))))) | 0u) % subgroup_size))), (1u & ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) * (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(2388), (_GLF_FUZZED(2388)) - 0) : _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), min(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, 0 | (1)))), _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, 0 | (1)))))), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-47026)), clamp(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-47026)), ((true ? 1 : _GLF_FUZZED(-47026))) | ((true ? 1 : _GLF_FUZZED(-47026)))), (true ? 1 : _GLF_FUZZED(-47026)), (true ? 1 : _GLF_FUZZED(-47026)))))) ^ _GLF_IDENTITY(0u, (0u) - 0u))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))))))) | _GLF_IDENTITY(0u, (0u) | (0u))) % subgroup_size))))))) : _GLF_FUZZED(42515u)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) - 0u) + _GLF_IDENTITY(1, (1) * 1)) ^ 0u, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)), uint(uvec2(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)), 0u ^ ((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)))), 1u))) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), max((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(29628)))), max(int(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(29628)))), int(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(29628))))))))) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) ^ 0u))), (subgroup_local_id + 1) % subgroup_size)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size))))), max((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u, 0u, 1u)), (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u, 0u, 1u))) >> 0u)))) + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) ^ 0u))), (subgroup_local_id + 1) % subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), uint(uvec3((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), 0u, 1u))))), max((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) ^ 0u))), (subgroup_local_id + 1) % subgroup_size))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size))))), max((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u, 0u, 1u)), (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u, 0u, 1u))) >> 0u)))) + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) ^ 0u))), (subgroup_local_id + 1) % subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), uint(uvec3((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), 0u, 1u))))), max((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) ^ 0u))), (subgroup_local_id + 1) % subgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size))))), max((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u, 0u, 1u)), (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u, 0u, 1u))) >> 0u)))) + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) ^ 0u))), (subgroup_local_id + 1) % subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), uint(uvec3((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), 0u, 1u))))), max((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) ^ 0u))), (subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size))))), max((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u, 0u, 1u)), (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u, 0u, 1u))) >> 0u)))) + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) ^ 0u))), (subgroup_local_id + 1) % subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), uint(uvec3((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), 0u, 1u))))), max((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) ^ 0u))), (subgroup_local_id + 1) % subgroup_size))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size))))), max((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u, 0u, 1u)), (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 0u, 0u, 1u))) >> 0u)))) + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) ^ 0u))), (subgroup_local_id + 1) % subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), uint(uvec3((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, min((subgroup_local_id + 1) ^ 0u, _GLF_IDENTITY((subgroup_local_id + 1) ^ 0u, ~ (~ ((subgroup_local_id + 1) ^ 0u))))))) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), 0u, 1u))))), max((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) ^ 0u))), (subgroup_local_id + 1) % subgroup_size)))))))))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-97715))) | (1)), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-84882)))) | 0)) ^ 0u)) % subgroup_size, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-97715))) | (1)), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-84882)))) | 0)) ^ 0u)) % subgroup_size), 0u + (~ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-97715))) | (1)), _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-84882)))) | 0, (true ? _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-84882), ~ (~ (true ? 1 : _GLF_FUZZED(-84882))))))) | _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) >> 0), 0)), ~ (~ ((_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-84882), ~ (~ (true ? 1 : _GLF_FUZZED(-84882))))))) | _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) >> 0), 0))))) : _GLF_FUZZED(-8438))))) ^ 0u)) % subgroup_size))))), max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uint(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size : _GLF_FUZZED(workgroup_id))))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(2388) : _GLF_IDENTITY(1, 0 | (1)))), (subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-47026)))) ^ _GLF_IDENTITY(0u, (0u) - 0u))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))), clamp((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))), (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))), (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))))))) | 0u) % subgroup_size))), (1u & ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) * (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(2388), (_GLF_FUZZED(2388)) - 0) : _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), min(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, 0 | (1)))), _GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, 0 | (1)))))), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-47026)), clamp(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-47026)), ((true ? 1 : _GLF_FUZZED(-47026))) | ((true ? 1 : _GLF_FUZZED(-47026)))), (true ? 1 : _GLF_FUZZED(-47026)), (true ? 1 : _GLF_FUZZED(-47026)))))) ^ _GLF_IDENTITY(0u, (0u) - 0u))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))), ~ (~ ((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))))))) | _GLF_IDENTITY(0u, (0u) | (0u))) % subgroup_size))))))) : _GLF_FUZZED(42515u)))))) >> _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) ^ 0)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   for(int _injected_loop_counter = (((1 ^ 0) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) < _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec4(~ (1), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(38754 & 0, (false ? _GLF_FUZZED(bitfieldExtract(-20496, _injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(38754 & 0, int(_GLF_IDENTITY(int(38754 & 0), min(int(38754 & 0), int(38754 & 0)))))))))))))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) + (0 << _GLF_IDENTITY(int(0), int(0))))) >> 0))
        {
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! (true && (true))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[_GLF_IDENTITY(1, max(1, 1))], injectionSwitch[1]))))))), (false ? _GLF_FUZZED(92.89) : (_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))) / 1.0))).x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[_GLF_IDENTITY(1, max(1, 1))], injectionSwitch[1]))))))), (false ? _GLF_FUZZED(92.89) : (_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))) / 1.0))).x < injectionSwitch.y)), bool(bvec4(bool(bool(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[_GLF_IDENTITY(1, max(1, 1))], injectionSwitch[1]))))))), (false ? _GLF_FUZZED(92.89) : (_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))) / 1.0))).x < injectionSwitch.y)), true, false, true)))), false || (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ (0 >> _GLF_IDENTITY(int(7), int(7))))], clamp(injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ (0 >> _GLF_IDENTITY(int(7), int(7))))], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ (0 >> _GLF_IDENTITY(int(7), int(7))))], (injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ (0 >> _GLF_IDENTITY(int(7), int(7))))]) - 0.0), injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ (0 >> _GLF_IDENTITY(int(7), int(7))))])), 1.0 * (_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) - (0 | 0))])))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[_GLF_IDENTITY(1, max(1, 1))], injectionSwitch[1]))))))), (false ? _GLF_FUZZED(92.89) : (_GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))))), injectionSwitch[1]))))) / 1.0))).x < injectionSwitch.y))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[_GLF_IDENTITY(1, max(1, 1))], injectionSwitch[1]))))))), (false ? _GLF_FUZZED(92.89) : (_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))) / 1.0))).x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[_GLF_IDENTITY(1, max(1, 1))], injectionSwitch[1]))))))), (false ? _GLF_FUZZED(92.89) : (_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))) / 1.0))).x < injectionSwitch.y)), bool(bvec4(bool(bool(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[_GLF_IDENTITY(1, max(1, 1))], injectionSwitch[1]))))))), (false ? _GLF_FUZZED(92.89) : (_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))) / 1.0))).x < injectionSwitch.y)), true, false, true)))), false || (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ (0 >> _GLF_IDENTITY(int(7), int(7))))], clamp(injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ (0 >> _GLF_IDENTITY(int(7), int(7))))], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ (0 >> _GLF_IDENTITY(int(7), int(7))))], (injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ (0 >> _GLF_IDENTITY(int(7), int(7))))]) - 0.0), injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ (0 >> _GLF_IDENTITY(int(7), int(7))))])), 1.0 * (_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) - (0 | 0))])))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[_GLF_IDENTITY(1, max(1, 1))], injectionSwitch[1]))))))), (false ? _GLF_FUZZED(92.89) : (_GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))))), injectionSwitch[1]))))) / 1.0))).x < injectionSwitch.y))))), (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[_GLF_IDENTITY(1, max(1, 1))], injectionSwitch[1]))))))), (false ? _GLF_FUZZED(92.89) : (_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))) / 1.0))).x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[_GLF_IDENTITY(1, max(1, 1))], injectionSwitch[1]))))))), (false ? _GLF_FUZZED(92.89) : (_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))) / 1.0))).x < injectionSwitch.y)), bool(bvec4(bool(bool(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[_GLF_IDENTITY(1, max(1, 1))], injectionSwitch[1]))))))), (false ? _GLF_FUZZED(92.89) : (_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))) / 1.0))).x < injectionSwitch.y)), true, false, true)))), false || (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ (0 >> _GLF_IDENTITY(int(7), int(7))))], clamp(injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ (0 >> _GLF_IDENTITY(int(7), int(7))))], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ (0 >> _GLF_IDENTITY(int(7), int(7))))], (injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ (0 >> _GLF_IDENTITY(int(7), int(7))))]) - 0.0), injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ (0 >> _GLF_IDENTITY(int(7), int(7))))])), 1.0 * (_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) - (0 | 0))])))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[_GLF_IDENTITY(1, max(1, 1))], injectionSwitch[1]))))))), (false ? _GLF_FUZZED(92.89) : (_GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))))), injectionSwitch[1]))))) / 1.0))).x < injectionSwitch.y)))))) && true))), bool(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))) - vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-4.5) : injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, ~ (~ (1)))], min(_GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(max(injectionSwitch[1], injectionSwitch[1]), max(_GLF_IDENTITY(max(injectionSwitch[1], injectionSwitch[1]), max(max(injectionSwitch[1], injectionSwitch[1]), max(injectionSwitch[1], injectionSwitch[1]))), max(injectionSwitch[1], injectionSwitch[1])))))), max(_GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), 1.0 * (_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0)))))[1])))), _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / determinant(mat2(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0))), _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))), max(1.0 * (_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1]))), 1.0 * (_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))))))), (false ? _GLF_FUZZED(92.89) : (_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), max(1, 1))], injectionSwitch[1]))))) / 1.0))).x < injectionSwitch.y)), false)))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ (buf[virtual_gid]), uint(uvec2(_GLF_IDENTITY(~ _GLF_IDENTITY((buf[virtual_gid]), min(_GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), min((buf[virtual_gid]), (buf[virtual_gid]))), 1u * ((buf[virtual_gid]))), (buf[virtual_gid]))), uint(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((buf[virtual_gid]), min(_GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), min((buf[virtual_gid]), (buf[virtual_gid]))), 1u * ((buf[virtual_gid]))), (buf[virtual_gid]))), 1u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(~ _GLF_IDENTITY((buf[virtual_gid]), min(_GLF_IDENTITY(_GLF_IDENTITY((buf[virtual_gid]), min((buf[virtual_gid]), (buf[virtual_gid]))), 1u * ((buf[virtual_gid]))), (buf[virtual_gid]))), 1u, 0u))))), 0u))))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0 | (64)), 0);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (4) << 0), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), float(_GLF_FUZZED(-9846.8591)), bool(false))) > injectionSwitch.y))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.2)), bool(false))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(log(1.0), 0.0), vec2(1.0, 1.0)), dot(vec2(log(1.0), 0.0), vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), 1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, log(1.0), 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((+ 9672.2404))), bool(false))), 0.0, tan(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-3.7)))), 0.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), max(_GLF_IDENTITY(1.0 * (injectionSwitch.y), max(1.0 * (injectionSwitch.y), 1.0 * (injectionSwitch.y))), 1.0 * (injectionSwitch.y)))))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     do
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-46640) : 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-15965) : 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-5172.3431)), bool(false)))))));
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
  }
}
