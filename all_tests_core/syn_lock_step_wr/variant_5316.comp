#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.3) : injectionSwitch.y))))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(false, ! (! (false))), false, true)), ! (! (bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), false, false, true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), false, false, true)), ! (! (bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(false, (false) && true), false, true)))))))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), false, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (! (_GLF_IDENTITY((! (false)), true && ((! (false)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (! (_GLF_IDENTITY((! (false)), true && ((! (false)))))))))), (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))) && true)))))))), false, false, true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, false, true)), bool(bool(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, false, true))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, false, true)), bool(bool(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, false, true))))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, false, true)), bool(bool(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, false, true))))), true, false), false)))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, false, true)), bool(bool(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, false, true))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, false, true)), bool(bool(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, false, true))))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, false, true)), bool(bool(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, false, true))))), true, false), false)))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, false, true)), bool(bool(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, false, true))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, false, true)), bool(bool(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, false, true))))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, false, true)), bool(bool(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, false, true))))), true, false), false)))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, false, true)), bool(bool(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, false, true))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, false, true)), bool(bool(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, false, true))))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, false, true)), bool(bool(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && ((! (false))))), ! (! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))))))), false, false, true))))), true, false), false))))))))))))))))))))))), true, true))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), true && ((! (! (false))))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false, true))))))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), true && ((! (! (false))))))), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false, true)))))))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), true && ((! (! (false))))))), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false, true)))))))))))), bool(bool(_GLF_IDENTITY((bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), true && ((! (! (false))))))), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false, true)))))))))))), ! (! ((bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), true && ((! (! (false))))))), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false, true))))))))))))))))))))) && true)), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false)) && true), false, true)), ! (_GLF_IDENTITY(! (bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))), false, false, true))), ! (! (! (bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))), false, false, true)))))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true && (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))) * 1.0), (injectionSwitch.x > injectionSwitch.y) || false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y) || false, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y) || false, true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y) || false, true, false), true)))))))))), true && (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (injectionSwitch.y))) * 1.0), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) || false)))))))))))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(exp(0.0)), log(1.0), 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(exp(0.0)), log(1.0), 1.0))))))))), false), bvec2(bvec2(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))).y)))))))), false || (! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(8667.2671), _GLF_FUZZED(3.7)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-7.9)), bool(false)))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (false ? _GLF_FUZZED(injectionSwitch) : mix(vec2(_GLF_FUZZED(8667.2671), _GLF_FUZZED(3.7)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-7.9)), bool(false)))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).x > injectionSwitch.y))))))))) || false)), _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))))) || false))) || false, false || (((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), length(vec4(0.0, 0.0, 0.0, 0.0)))), cos(0.0), 1.0))) > injectionSwitch.y))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))))) || false))) || false)))) && true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, cos(0.0), 0.0, tan(sin(0.0)), 1.0, 0.0))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, cos(0.0), 0.0, tan(sin(0.0)), 1.0, 0.0))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), bool(bvec2(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), false))), _GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), true, false)), ! (! (bool(bvec3(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), true, false))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))), _GLF_IDENTITY(! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), false || (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) + 0.0)))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, sin(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, min(0.0, 0.0))))), 1.0, 0.0, 0.0))))), 1.0), vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)), dot(vec2(0.0, 1.0), vec2(round(length(normalize(vec4(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0, 1.0)))), 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0) + (mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0) : _GLF_FUZZED(vec2(79.54, -7337.9628)))))), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), mix(float(float(float(1.0))), float(_GLF_FUZZED(5.7)), bool(false)))), 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), clamp(vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch), vec2(0.0, 0.0) + (injectionSwitch)))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(round(_GLF_IDENTITY(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0))), clamp(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-95.10), max(_GLF_IDENTITY(_GLF_FUZZED(-95.10), clamp(_GLF_FUZZED(-95.10), _GLF_IDENTITY(_GLF_FUZZED(-95.10), (true ? _GLF_FUZZED(-95.10) : _GLF_FUZZED(-9995.0354))), _GLF_FUZZED(-95.10))), _GLF_IDENTITY(_GLF_FUZZED(-95.10), min(_GLF_FUZZED(-95.10), _GLF_FUZZED(-95.10))))) : length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), max(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0))))) / vec4(1.0, 1.0, 1.0, 1.0))))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0)), dot(vec2(0.0, 1.0), vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, cos(0.0), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0)) + (injectionSwitch.y))), 0.0), mat3x2(mat4(mat3x2(1.0, 1.0, cos(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)), dot(vec2(0.0, 1.0), vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0), vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), float(_GLF_IDENTITY(mat3x4(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 1.0, 1.0), (true ? mat3x4(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3x4(5.6, -3.0, 48.84, -61.60, 6.4, -1.8, -6.9, 7857.7991, -6.3, 0.1, -4.4, 0.7))))))), 0.0), clamp(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), _GLF_IDENTITY(vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0), (true ? vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0) : _GLF_FUZZED(injectionSwitch))))))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)), dot(vec2(0.0, 1.0), vec2(round(length(normalize(vec4(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 1.0, abs(length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0))), 1.0, 1.0, 1.0)))), 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))).x, mix(float(_GLF_FUZZED(-6339.1235)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-5.3, 8.7)) : vec2(0.0, 1.0))), vec2(round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), vec4(vec4(vec4(1.0, 1.0, 1.0, 1.0)))), vec4(1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(0.0, min(0.0, 0.0))))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec4(0.0, 1.0, sin(0.0), 0.0), vec4(0.0, 1.0, 0.0, length(0.0))), dot(vec4(0.0, 1.0, sin(0.0), 0.0), vec4(0.0, 1.0, 0.0, length(0.0))))), 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7.1)), float(0.0), bool(true))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, log(_GLF_ONE(1.0, injectionSwitch.y)), cos(0.0), 1.0, 0.0))), 0.0) + (mat3x4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)))), dot(vec2(0.0, 1.0), vec2(round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) * vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))), mix(float(_GLF_FUZZED(-2.4)), float(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)), dot(vec2(0.0, 1.0), vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)))), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0))))).x, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)), dot(vec2(0.0, 1.0), vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (vec4(1.0, 1.0, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0))))), 0.0)), dot(vec2(0.0, 1.0), vec2(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))))).x : _GLF_FUZZED(8.6)))), bool(true))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), 1.0, 1.0)))), 0.0)), dot(vec2(0.0, 1.0), vec2(round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), vec4(1.0, 1.0, 1.0, 1.0) * (normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0)))), 0.0)), clamp(dot(vec2(0.0, 1.0), vec2(round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0)))), 0.0)), dot(vec2(0.0, 1.0), vec2(round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0)))), 0.0)), dot(vec2(0.0, 1.0), vec2(round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0)))), 0.0))))), 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(length(vec3(20.72, -9.5, -5.2))))), 1.0))))).x)) > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), false, false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (! (true))))))))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), false, false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))) && true), true))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), true, true)), _GLF_IDENTITY(false, true && (false)) || (bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(bool(bool(bool(bvec3(false, false, false)))), false || (bool(bool(bool(bvec3(false, false, false)))))))) || false), true, true))))))), false || (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))), bool(bvec2(false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))))))))), true && ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, bool(bvec2(false, true))))), (bool(bvec3(false, false, false))) || false), true, true)), false || (bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), true, true))))))), false || (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))), bool(bvec2(false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, bool(bvec2(false, true))))), (bool(bvec3(false, false, false))) || false), true, true)), false || (bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), true, true))))))), false || (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))), bool(bvec2(false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, bool(bvec2(false, true))))), (bool(bvec3(false, false, false))) || false), true, true)), false || (bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), true, true))))))), false || (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))), bool(bvec2(false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, bool(bvec2(false, true))))), (bool(bvec3(false, false, false))) || false), true, true)), false || (bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false), true, true))))))), false || (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))), bool(bvec2(false, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))))))))) && true)))))))))) || false)), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), false, false), false))), true)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)))) << 0u) : gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (_GLF_IDENTITY(false, ! (! (false)))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (_GLF_IDENTITY(false, ! (! (false)))))), false, false, true))) && true)))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(exp(11.24)) : injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) && true)), false || (injectionSwitch.x > injectionSwitch.y)))))) || false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, true)))))) || false))))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, false)))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, false)))))), false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID))[2], 1u))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(89251u, (false ? _GLF_FUZZED(atomicXor(subgroup_size, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) : 89251u)), 97871u, 69406u), ~ (~ (uvec3(89251u, 97871u, 69406u))))) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (~ (gl_WorkGroupID)), (~ (~ (gl_WorkGroupID))) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), min(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), (true ? _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))) : _GLF_FUZZED(uvec3(184869u, 187037u, 44390u)))))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.7)), vec2(_GLF_FUZZED(1.2), (injectionSwitch)[1]), bvec2(false, true))).y)) || (_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false, true && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))))) || false), bool(_GLF_IDENTITY(bvec2(((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))))) || false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, true))), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))))) || false), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec3(bvec2(((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))) || (_GLF_DEAD(false)))))) || false), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(uint(uvec3(workgroup_size * workgroup_id, 0u, 0u)), _GLF_IDENTITY((uint(uvec3(workgroup_size * workgroup_id, 0u, 0u))), ((uint(uvec3(workgroup_size * workgroup_id, 0u, 0u)))) >> (0u << _GLF_IDENTITY(uint(1u), uint(1u)))) >> 0u));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(24.97)), bool(false)))), (0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(24.97)), bool(false)))), float(mat3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(24.97)), bool(false)))), 1.0 * ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(24.97)), bool(false)))))), 0.0, 0.0, sqrt(1.0), determinant(mat2(sin(0.0), 0.0, 1.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)))) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))) > injectionSwitch.y)) ? _GLF_FUZZED((++ subgroup_size)) : workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((++ subgroup_size)) : workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((++ subgroup_size)) : workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) >> 0u))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((++ subgroup_size)) : workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY(((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4464.1575), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(65.14)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4464.1575), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(65.14)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))).y, injectionSwitch.y)))))) ? _GLF_FUZZED(_GLF_IDENTITY((++ subgroup_size), _GLF_IDENTITY(~ (~ ((++ subgroup_size))), 0u | (~ (~ ((++ subgroup_size))))))) : workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id)))), clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))))) | 0u))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 1.0), (_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 1.0), mix(vec4(_GLF_FUZZED(1.3), _GLF_FUZZED((- -6.1)), (vec4(1.0, 1.0, 0.0, 1.0))[2], (vec4(1.0, 1.0, 0.0, 1.0))[3]), vec4((vec4(1.0, 1.0, 0.0, 1.0))[0], (vec4(1.0, 1.0, 0.0, 1.0))[1], _GLF_FUZZED(4.5), _GLF_FUZZED(-6.5)), bvec4(true, true, false, false)))) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0)))) - _GLF_IDENTITY(dot(vec3(1.0, length(0.0), 1.0), vec3(0.0, 1.0, abs(0.0))), dot(vec3(1.0, length(0.0), 1.0), vec3(0.0, 1.0, abs(0.0)))))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0)))) - _GLF_IDENTITY(dot(vec3(1.0, length(0.0), 1.0), vec3(0.0, 1.0, abs(0.0))), dot(vec3(1.0, length(0.0), 1.0), vec3(0.0, 1.0, abs(0.0))))))) || false)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0)))) - _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, length(0.0), 1.0), vec3(0.0, 1.0, abs(0.0))), clamp(dot(vec3(1.0, length(0.0), 1.0), vec3(0.0, 1.0, abs(0.0))), dot(vec3(1.0, length(0.0), 1.0), vec3(0.0, 1.0, abs(0.0))), _GLF_IDENTITY(dot(vec3(1.0, length(0.0), 1.0), vec3(0.0, 1.0, abs(0.0))), max(dot(vec3(1.0, length(0.0), 1.0), vec3(0.0, 1.0, abs(0.0))), dot(vec3(1.0, length(0.0), 1.0), vec3(0.0, 1.0, abs(0.0))))))), dot(vec3(1.0, length(0.0), 1.0), vec3(0.0, 1.0, abs(0.0)))))), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(-7.7, -8296.7348, -7.3, -50.53)) : vec4(0.0, 0.0, 1.0, 0.0))))), 0.0, 1.0)))) - _GLF_IDENTITY(dot(vec3(1.0, length(0.0), 1.0), vec3(0.0, 1.0, abs(0.0))), dot(vec3(1.0, length(0.0), 1.0), vec3(0.0, 1.0, abs(0.0)))), ((_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(-7.7, -8296.7348, -7.3, -50.53)) : vec4(0.0, 0.0, 1.0, 0.0))))), 0.0, 1.0)))) - _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, length(0.0), 1.0), vec3(0.0, 1.0, abs(0.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (dot(vec3(1.0, _GLF_IDENTITY(length(0.0), (length(0.0)) - 0.0), 1.0), vec3(0.0, 1.0, abs(0.0))))), dot(vec3(1.0, length(0.0), 1.0), vec3(0.0, 1.0, abs(0.0))))) + 0.0)))) || false))))) ? _GLF_FUZZED((_GLF_IDENTITY(++ subgroup_size, (++ subgroup_size) << 0u))) : workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), (false ? _GLF_FUZZED(190575u) : (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((++ subgroup_size)) : workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((++ subgroup_size)) : workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) - 0u, (false ? _GLF_FUZZED(subgroup_size) : ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), true)))))) ? _GLF_FUZZED((++ subgroup_size)) : workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 1u))) * subgroup_size + subgroup_local_id)) - 0u)))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + _GLF_IDENTITY(0u, (0u) | 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) >> 0u, ((subgroup_local_id) >> 0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, max(0u, 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (subgroup_local_id) >> 0u)) >> 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))) / 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u)))) >> 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)) >> 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))) / 1u) >> (_GLF_IDENTITY(0u, (0u) | (0u)) & 193787u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) >> 0u, ((subgroup_local_id) >> 0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, max(0u, 0u))))), (_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))) * 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)) >> 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))) / 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), ~ (~ (uint(uvec2(0u, 0u))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u)))) >> 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)) >> 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))) / 1u) >> (_GLF_IDENTITY(0u, (0u) | (0u)) & 193787u)))) / 1u)) | (subgroup_local_id)))) + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (true ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), max(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))), _GLF_FUZZED(workgroup_size))) : _GLF_FUZZED(uvec2(188498u, 62901u)[0]))) : _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) >> 0u, (_GLF_IDENTITY((subgroup_local_id) >> 0u, ~ (_GLF_IDENTITY(~ ((subgroup_local_id) >> 0u), (~ ((subgroup_local_id) >> 0u)) * 1u)))) - uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, max(0u, 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) >> 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)) >> 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))) / 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u)), _GLF_IDENTITY(0u, min(0u, 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), max(uint(uvec2(subgroup_local_id, 1u)), uint(uvec2(subgroup_local_id, 1u)))))) >> 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)) >> 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))) / 1u) >> (_GLF_IDENTITY(0u, (0u) | (0u)) & 193787u)))) | (subgroup_local_id)))) + 1) % subgroup_size) | ((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) >> 0u, ((subgroup_local_id) >> 0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), max(0u, 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> _GLF_IDENTITY(0u, max(0u, 0u))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)) >> _GLF_IDENTITY(0u, ~ (~ (0u)))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))) / 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u)))) >> 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)) >> 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))) / 1u) >> (_GLF_IDENTITY(0u, (0u) | (0u)) & 193787u)))) | (subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) >> 0u, _GLF_IDENTITY(((subgroup_local_id) >> 0u), (_GLF_IDENTITY(((subgroup_local_id) >> 0u), 0u | (_GLF_IDENTITY(((subgroup_local_id) >> 0u), (true ? ((subgroup_local_id) >> 0u) : _GLF_FUZZED(num_workgroup)))))) - 0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, max(0u, 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))) >> 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))) / 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u)))) << 0u))))) >> 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)) >> 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))) / 1u) >> (_GLF_IDENTITY(0u, (0u) | (0u)) & 193787u)))) | (subgroup_local_id))) | (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) << 0u))))))) + 1) % subgroup_size)));
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uint(uint(1)))), min(uint(1), _GLF_IDENTITY(uint(1), (uint(1)) ^ 0u))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) / 1u, ~ (_GLF_IDENTITY(~ ((virtual_gid) / 1u), (~ ((virtual_gid) / 1u)) << 0u))))], _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) | 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) | 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) | 0))))) / 1)) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) | 0)))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) | 0))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) | 0)))))))) | (4)), 64, _GLF_IDENTITY(0, (0) - _GLF_IDENTITY(0, (false ? _GLF_FUZZED(81827) : _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / (1 & 1))) | (0))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), bool(bvec4((! _GLF_IDENTITY((false), ((false)) || false)), false, false, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false)))))) && true)))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))) && true)))), false)))) || false))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], injectionSwitch[1])).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], injectionSwitch[1])).y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], injectionSwitch[1])).y))))))))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, 0u + _GLF_IDENTITY((virtual_gid), max(_GLF_IDENTITY((virtual_gid), (0u ^ 1u) * ((virtual_gid))), (virtual_gid))))], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), false || (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, bool(bvec3(true, true, true)))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) && true)) && true)), false || (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), (! (false)) && _GLF_IDENTITY(true, ! (! (true))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), false || (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), false || (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), (! (false)) && true)), false || (! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ((false)) && true), (! (false)) && true)))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), (! (false)) && true)), false || (! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), false))) && true)))))))), true))))))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), true, false))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), true, false)))))))))), ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, sqrt(0.0)), min(vec4(injectionSwitch, 1.0, sqrt(0.0)), vec4(injectionSwitch, 1.0, sqrt(0.0))))), mix(vec2(_GLF_FUZZED((9.9 + 2981.7601)), _GLF_FUZZED(5.4)), vec2((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, sqrt(0.0)), min(vec4(injectionSwitch, 1.0, sqrt(0.0)), vec4(injectionSwitch, 1.0, sqrt(0.0))))))[0], (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, sqrt(0.0)), min(vec4(injectionSwitch, 1.0, sqrt(0.0)), vec4(injectionSwitch, 1.0, sqrt(0.0))))))[1]), bvec2(true, true)))).y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
}
