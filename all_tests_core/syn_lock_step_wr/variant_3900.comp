#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false))), bool(bvec4(false, false, false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false))), bool(bvec4(false, false, false, true)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false))), bool(bvec4(false, false, false, true)))), false))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(-73119))), float(injectionSwitch.y), bool(true)))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)))), false)), true))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))))), false))))))))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) : _GLF_FUZZED(-8.1))))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) : _GLF_FUZZED(-8.1))))))) > injectionSwitch.y))))) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))))), true)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true))) || false, true && ((bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true))) || false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(vec3(-4.5, -8.8, 9.1))), mat2(1.0) * (_GLF_FUZZED(vec2(vec3(-4.5, -8.8, 9.1))))) : injectionSwitch)).y)), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) || (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (bool(bool(_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))), true && (false || _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x > injectionSwitch.y)) || false))), true && ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0)))))), 0.0))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x > injectionSwitch.y)) || false))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))), false))))))))), ! (! (_GLF_IDENTITY(false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, tan(0.0), log(1.0)), mat2(mat4x3(mat2(injectionSwitch, tan(0.0), log(1.0)))))))) * vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6491.4455) : 1.0))) * 1.0))).x, mix(float(_GLF_FUZZED(float(-47033))), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, tan(0.0), log(1.0)), mat2(mat4x3(mat2(injectionSwitch, tan(0.0), log(1.0))))))), (false ? _GLF_FUZZED(vec2(4070.8014, 6362.9325)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, tan(0.0), log(1.0)), mat2(mat4x3(mat2(injectionSwitch, tan(0.0), log(1.0)))))))))) * vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6491.4455) : 1.0))) * 1.0))).x), bool(true))) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size)) ^ _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), 0u), uvec2(0u, 0u)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | 0u) ^ 0u), ~ (~ (_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | 0u) ^ 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), min(_GLF_IDENTITY((subgroup_id * subgroup_size), (false ? _GLF_FUZZED(num_workgroup) : (subgroup_id * subgroup_size))), (subgroup_id * subgroup_size)))) ^ 0u), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) ^ 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | 0u) ^ 0u), ~ (~ (_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)), _GLF_IDENTITY((((subgroup_id * subgroup_size))) | 0u, uint(uvec4((((subgroup_id * subgroup_size))) | 0u, 0u, 0u, 0u)))) ^ 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) ^ 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) ^ 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), ((subgroup_id * subgroup_size)) ^ 0u), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) ^ 0u)))) << 0u)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(188299u))) * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)), (((_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), (true ? (~ (subgroup_id)) : _GLF_FUZZED(78089u)))) * subgroup_size))) | 0u) ^ _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 0u)))))), ~ (~ (_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)), ((_GLF_IDENTITY((subgroup_id * subgroup_size), 0u + (_GLF_IDENTITY((subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), (~ ((subgroup_id * subgroup_size))) ^ 0u))))))) | 0u) ^ 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) ^ 0u))))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) * 1u)), _GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | 0u) ^ 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - 0u), (0u | 0u), 0u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - 0u), (0u | 0u), 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | 0u) ^ 0u, (_GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | 0u) ^ 0u) - 0u))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) * 1u)), _GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | 0u) ^ 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - 0u), (0u | 0u), 0u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-92.47))), injectionSwitch.x)) | (uvec3(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - 0u), (0u | 0u), 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | 0u) ^ 0u, (_GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | 0u) ^ 0u) - 0u))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), ~ (~ (~ ((subgroup_id * subgroup_size))))))), ((subgroup_id * subgroup_size)) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), ~ (~ (~ ((subgroup_id * subgroup_size))))))), ((subgroup_id * subgroup_size)) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), ~ (~ (~ ((subgroup_id * subgroup_size))))))), ((subgroup_id * subgroup_size)) ^ 0u))), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), clamp(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)))))) ^ 0u)))))))), 0u + (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))), _GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | 0u) ^ 0u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)), _GLF_IDENTITY((((subgroup_id * subgroup_size))) | 0u, uint(uvec4((((subgroup_id * subgroup_size))) | 0u, 0u, 0u, 0u)))) ^ 0u))), (true ? ~ (~ (_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)), _GLF_IDENTITY((((subgroup_id * subgroup_size))) | 0u, uint(uvec4((((subgroup_id * subgroup_size))) | 0u, 0u, 0u, 0u)))) ^ 0u))) : _GLF_FUZZED(workgroup_id)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) ^ 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)))), 0u)))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) ^ 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) ^ 0u)))) << 0u)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(188299u))) * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)), (((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size))) | 0u) ^ 0u), ~ (~ (_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | 0u) ^ 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)) ^ 0u, clamp(((subgroup_id * subgroup_size)) ^ 0u, ((subgroup_id * subgroup_size)) ^ 0u, _GLF_IDENTITY(((subgroup_id * subgroup_size)) ^ 0u, 0u ^ (((subgroup_id * subgroup_size)) ^ 0u))))), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) ^ 0u))))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) * 1u)), _GLF_IDENTITY(((subgroup_id * subgroup_size)), (_GLF_IDENTITY(((subgroup_id * subgroup_size)), min(((subgroup_id * subgroup_size)), ((subgroup_id * subgroup_size))))) | 0u) ^ 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - 0u), (0u | 0u), 0u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - 0u), (0u | 0u), _GLF_IDENTITY(0u, ~ (~ (0u))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - 0u), (0u | 0u), 0u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - 0u), (0u | 0u), _GLF_IDENTITY(0u, ~ (~ (0u))))))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - 0u), (0u | 0u), 0u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - 0u), (0u | 0u), _GLF_IDENTITY(0u, ~ (~ (0u)))))))), (~ (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - 0u), (0u | 0u), 0u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - 0u), (0u | 0u), _GLF_IDENTITY(0u, ~ (~ (0u))))))))) | (~ (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - 0u), (0u | 0u), 0u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - 0u), (0u | 0u), _GLF_IDENTITY(0u, ~ (~ (0u))))))))))))) | (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - 0u), (0u | 0u), 0u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - 0u), (0u | 0u), _GLF_IDENTITY(0u, ~ (~ (0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | 0u) ^ 0u, (_GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | 0u) ^ 0u) - 0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), ~ (~ (~ ((subgroup_id * subgroup_size))))))), ((subgroup_id * subgroup_size)) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), ~ (~ (~ ((subgroup_id * subgroup_size))))))), ((subgroup_id * subgroup_size)) ^ 0u)) << 0u), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) ^ 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) * 1u)), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_id * subgroup_size)), (_GLF_IDENTITY(((subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(workgroup_size) : ((subgroup_id * subgroup_size))))) | 0u), (((subgroup_id * subgroup_size))) | 0u) ^ 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - 0u), (0u | 0u), 0u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - 0u), (0u | 0u), 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | 0u) ^ 0u, (_GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | 0u) ^ 0u) - 0u))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - 0u), (0u | 0u), 0u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - 0u), (0u | 0u), 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | 0u) ^ 0u, (_GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | 0u) ^ 0u) - 0u)))) >> (0u | 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), ~ (~ (~ ((subgroup_id * subgroup_size))))))), ((subgroup_id * subgroup_size)) ^ 0u), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) ^ 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) * 1u)), _GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | 0u) ^ 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), uint(uvec3((subgroup_id * subgroup_size), 0u, 1u)))) - 0u), (0u | 0u), 0u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - 0u), (0u | 0u), 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | 0u) ^ 0u, (_GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | 0u) ^ 0u) - 0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_id * subgroup_size)), ~ (~ (~ ((subgroup_id * subgroup_size))))))), ((subgroup_id * subgroup_size)) ^ 0u), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) ^ 0u)))))))))))), (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | 0u) ^ 0u), ~ (~ (_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | 0u) ^ 0u, min(_GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | 0u) ^ 0u, _GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))) | 0u) ^ 0u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) ^ 0u)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | 0u) ^ 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size))), _GLF_IDENTITY(((subgroup_id * subgroup_size)), (((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u)))) | 0u) ^ 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, 1u))))))) * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) ^ 0u))))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | 0u) ^ 0u), ~ (~ (_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)))), (((subgroup_id * subgroup_size))) | 0u) ^ 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u + (0u)), 0u)))) ^ 0u))))))))) | (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), clamp((subgroup_id * subgroup_size), (subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u))), _GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | 0u) ^ 0u), ~ (~ (_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)), _GLF_IDENTITY((((subgroup_id * subgroup_size))) | 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) / 1u)) | 0u, 0u ^ ((((subgroup_id * subgroup_size))) | 0u)))))) ^ 0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) ^ 0u)), (false ? _GLF_FUZZED(bitfieldInsert(subgroup_size, 173597u, 83404, 81420)) : ~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) ^ 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), clamp((subgroup_id * subgroup_size), (subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) * 1u))), (((_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size))) | 0u) ^ 0u), ~ (~ (_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_id * subgroup_size)), ((_GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : (subgroup_id * subgroup_size)))) >> (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))) | (((subgroup_id * subgroup_size)))), _GLF_IDENTITY((((subgroup_id * subgroup_size))) | 0u, ~ (~ (_GLF_IDENTITY((((subgroup_id * subgroup_size))) | 0u, 0u ^ ((((subgroup_id * subgroup_size))) | 0u)))))) ^ 0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) ^ 0u)), (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) ? _GLF_FUZZED(bitfieldInsert(subgroup_size, 173597u, 83404, 81420)) : ~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) ^ 0u))))))) - (0u | 0u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | 0u) ^ 0u), ~ (~ (_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), (((subgroup_id * subgroup_size))) | 0u) ^ 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u), (_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u + (0u)), 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) - 0u)))))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) | 0u) ^ 0u), ~ (~ (_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)), _GLF_IDENTITY((((subgroup_id * subgroup_size))), clamp((((subgroup_id * subgroup_size))), (((subgroup_id * subgroup_size))), _GLF_IDENTITY((((subgroup_id * subgroup_size))), max((((subgroup_id * subgroup_size))), (((subgroup_id * subgroup_size))))))) | 0u) ^ 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_size)))) >> 0u)), ((subgroup_id * subgroup_size)) ^ 0u), (_GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), (true ? _GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), (subgroup_id * subgroup_size))) : _GLF_FUZZED(workgroup_base)))) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) ^ 0u))))))))))) - 0u), _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u)))) * 1u)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, _GLF_IDENTITY(true, (true) && true))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (_GLF_IDENTITY(! ((true) && true), bool(bool(! ((true) && true))))))))), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, true && (true)))))) && true)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), bool(bool(bool(_GLF_IDENTITY(bool(false), false || (bool(false))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (false) || false))), (bool(bool(_GLF_IDENTITY(false, (false) || false)))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(1.0)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))) || false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))) || false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(928.518) : injectionSwitch.x)) > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))) || _GLF_IDENTITY(false, ! (! (false))))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! _GLF_IDENTITY((! (! ((false)))), false || ((! (! ((false))))))))))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, false)), (bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, false))) && true)), false, true, false))), false || (true)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) / (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u) & 1u)) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec4((subgroup_local_id + 1) % subgroup_size, 0u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED((workgroup_size)) : 1u)), (_GLF_IDENTITY(1u & 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, 0u | _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | (1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((1u)))), 1u)) & 1u)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3580.2848)), vec2(_GLF_FUZZED(-8812.9671), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3580.2848)), vec2(_GLF_FUZZED(-8812.9671), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3580.2848)), vec2(_GLF_FUZZED(-8812.9671), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), (_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3580.2848)), vec2(_GLF_FUZZED(-8812.9671), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), false || (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3580.2848)), vec2(_GLF_FUZZED(-8812.9671), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))) && true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) || false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))], uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((1), ((1)) >> 0) : _GLF_FUZZED(-22753))) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-550) : 1)))), (-40009 & 0), 0, 0), min(ivec4(1, (-40009 & 0), 0, 0), ivec4(1, (-40009 & 0), 0, 0)))))), 4, _GLF_IDENTITY(64, 0 ^ (64)), 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), cos(0.0)))), mix(vec2(_GLF_FUZZED(-35.45), _GLF_FUZZED(-31.28)), vec2((mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), cos(0.0)))))[0], (mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0))), vec2(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), cos(0.0)))))[1]), bvec2(true, true)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, sin(0.0)), transpose(transpose(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0), mat2(mat2(mat2(1.0)))) * (injectionSwitch)))) * vec2(1.0, 1.0))), 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0))))))).y)))) && true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))), false || (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))))), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) && true)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-3.7, mix(float(-3.7), float(_GLF_FUZZED(7.9)), bool(false))))), vec2(_GLF_FUZZED(4.5), (injectionSwitch)[1]), bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-3.7, mix(float(-3.7), float(_GLF_FUZZED(7.9)), bool(false))))), vec2(_GLF_FUZZED(4.5), (injectionSwitch)[1]), bvec2(false, true))), (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-3.7, mix(float(-3.7), float(_GLF_FUZZED(7.9)), bool(false))))), vec2(_GLF_FUZZED(4.5), (injectionSwitch)[1]), bvec2(false, true))) : _GLF_FUZZED(injectionSwitch)))) * vec2(1.0, 1.0)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6.8) : 0.0)), 0.0)), exp(0.0), 0.0, 0.0, 1.0))), injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) && _GLF_IDENTITY(true, ! (! (true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-3.7, mix(float(-3.7), float(_GLF_FUZZED(7.9)), bool(false))))), vec2(_GLF_FUZZED(4.5), (injectionSwitch)[1]), bvec2(false, true))), (false ? _GLF_FUZZED(vec2(-6346.8511, -9050.9282)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-3.7, mix(float(-3.7), float(_GLF_FUZZED(7.9)), bool(false))))), vec2(_GLF_FUZZED(4.5), (injectionSwitch)[1]), bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-3.7, mix(float(-3.7), float(_GLF_FUZZED(7.9)), bool(false))))), vec2(_GLF_FUZZED(4.5), (injectionSwitch)[1]), bvec2(false, true))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-3.7, mix(float(-3.7), float(_GLF_FUZZED(7.9)), bool(false))))), vec2(_GLF_FUZZED(4.5), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-3.7, mix(float(-3.7), float(_GLF_FUZZED(7.9)), bool(false))))), vec2(_GLF_FUZZED(4.5), (injectionSwitch)[1]), bvec2(false, true)))))) - vec2(0.0, 0.0)))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(227.481), _GLF_FUZZED(397.223)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(227.481), _GLF_FUZZED(397.223)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(227.481), _GLF_FUZZED(397.223)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ vec3(-2131.9847, -8.1, -5261.5681)).z)), bool(_GLF_IDENTITY(false, false || (false))))))), false)))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bool(! (! (false))), _GLF_IDENTITY(bool(bvec2(bool(! (! (false))), false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(! (! (false))), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bool(! (! (false))), false), false), bvec3(bvec4(bvec3(bvec2(bool(! (! (false))), false), false), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec2(bool(! (! (false))), false), false), bvec3(bvec4(bvec3(bvec2(bool(! (! (false))), false), false), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(bool(! (! (false))), false), false), bvec3(bvec4(bvec3(bvec2(bool(! (! (false))), false), false), true)))))))))))), (bool(_GLF_IDENTITY(bvec2(bool(! (! (false))), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bool(! (! (false))), false), false), bvec3(bvec4(bvec3(bvec2(bool(! (! (false))), false), false), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(bool(! (! (false))), false), false), bvec3(bvec4(bvec3(bvec2(bool(! (! (false))), false), false), true)))))))))) || false), true, false, false)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true)) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}
