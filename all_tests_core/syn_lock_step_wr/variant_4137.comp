#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), bool(bvec4((false) || _GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, false))))))))), false)))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))), (bool(bool(_GLF_IDENTITY(false, (false) || false)))) || false)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(vec2(3.3, 44.04), 87.22)) : injectionSwitch)).x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))), true))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-0.6, -38.33)))).x, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-0.6, -38.33)))).x) * 1.0) > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))), true))))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec4(bvec3(bvec2(false, false), false), false)))))))))) || false)), true, false)))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))), ! (! (_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (((false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) && true))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))).y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x)), (false ? _GLF_FUZZED((num_workgroup --)) : (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) | 0u))) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u), (true ? _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u) : _GLF_FUZZED(171u)))))))), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY((~ (gl_WorkGroupSize.x)) << 0u, clamp(_GLF_IDENTITY((~ (gl_WorkGroupSize.x)) << 0u, 0u ^ ((~ (gl_WorkGroupSize.x)) << 0u)), (~ (gl_WorkGroupSize.x)) << 0u, _GLF_IDENTITY((~ (gl_WorkGroupSize.x)) << 0u, (81101u & 0u) + ((~ (gl_WorkGroupSize.x)) << 0u)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((injectionSwitch.x), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) + 0.0)))) > injectionSwitch.y) && true))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) / vec2(1.0, 1.0)).x), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) + 0.0)))) > injectionSwitch.y) && true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), (_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), clamp(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), 0u ^ (min(workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))) << 0u), (workgroup_size * workgroup_id) | 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) << 0u))), workgroup_base)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), 0u | ((workgroup_base))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)), uint(uvec3((workgroup_base), 1u, 1u))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), ~ (~ ((workgroup_base)))))), (~ (workgroup_base)) + 0u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), min(_GLF_IDENTITY((workgroup_base), (true ? _GLF_IDENTITY((workgroup_base), uint(uvec3((workgroup_base), 1u, 1u))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))))), (~ (workgroup_base)) + 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), (uvec4(_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), min(_GLF_IDENTITY((workgroup_base), (true ? _GLF_IDENTITY((workgroup_base), uint(uvec3((workgroup_base), 1u, 1u))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))))), (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) + 0u), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1u, (1u) << 0u))) - uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(~ (workgroup_base), clamp(_GLF_IDENTITY(~ (workgroup_base), 0u + _GLF_IDENTITY((~ (workgroup_base)), (true ? _GLF_IDENTITY((~ (workgroup_base)), clamp((~ (workgroup_base)), (~ (workgroup_base)), _GLF_IDENTITY((~ (workgroup_base)), uint(uvec4((~ (workgroup_base)), 1u, 0u, 0u))))) : _GLF_FUZZED(subgroup_local_id)))), ~ (workgroup_base), ~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) / 1u), workgroup_base)), (workgroup_base) | (workgroup_base))))))))), _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, uint(uint(0u))))), ((~ (_GLF_IDENTITY(0u, uint(uint(0u)))))) / 1u)), 1u, 1u)), (uint(uvec4(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(max(_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), min(_GLF_IDENTITY((workgroup_base), (true ? _GLF_IDENTITY((workgroup_base), uint(uvec3((workgroup_base), 1u, 1u))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))))), (~ (workgroup_base)) + 0u), _GLF_IDENTITY(~ (workgroup_base), clamp(_GLF_IDENTITY(~ (workgroup_base), 0u + _GLF_IDENTITY((~ (workgroup_base)), (true ? _GLF_IDENTITY((~ (workgroup_base)), clamp((~ (workgroup_base)), (~ (workgroup_base)), _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) ^ 0u))) : _GLF_FUZZED(subgroup_local_id)))), ~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))) + 0u)), ~ (workgroup_base)))), (_GLF_IDENTITY(max(_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), min(_GLF_IDENTITY((workgroup_base), (true ? _GLF_IDENTITY((workgroup_base), uint(uvec3((workgroup_base), 1u, 1u))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))))), (~ (workgroup_base)) + 0u), _GLF_IDENTITY(~ (workgroup_base), clamp(_GLF_IDENTITY(~ (workgroup_base), 0u + _GLF_IDENTITY((~ (workgroup_base)), (true ? _GLF_IDENTITY((~ (workgroup_base)), clamp((~ (workgroup_base)), (~ (workgroup_base)), _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) ^ 0u))) : _GLF_FUZZED(subgroup_local_id)))), ~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))) + 0u)), ~ (workgroup_base)))), ~ (~ (max(_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), min(_GLF_IDENTITY((workgroup_base), (true ? _GLF_IDENTITY((workgroup_base), uint(uvec3((workgroup_base), 1u, 1u))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))))), (~ (workgroup_base)) + 0u), _GLF_IDENTITY(~ (workgroup_base), clamp(_GLF_IDENTITY(~ (workgroup_base), 0u + _GLF_IDENTITY((~ (workgroup_base)), (true ? _GLF_IDENTITY((~ (workgroup_base)), clamp((~ (workgroup_base)), (~ (workgroup_base)), _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) ^ 0u))) : _GLF_FUZZED(subgroup_local_id)))), ~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))) + 0u)), ~ (workgroup_base)))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u))))), (~ (~ (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u)))))) << 0u)), 1u, 1u))) * 1u)) + subgroup_id * subgroup_size + subgroup_local_id, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), max(uint(subgroup_id * subgroup_size), _GLF_IDENTITY(uint(subgroup_id * subgroup_size), (uint(subgroup_id * subgroup_size)) | (uint(subgroup_id * subgroup_size)))))), max(uint(_GLF_IDENTITY(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), max(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * subgroup_size), max(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), uint(subgroup_id * subgroup_size))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), max(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ (uint(subgroup_id * subgroup_size)), (~ (uint(subgroup_id * subgroup_size))) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))), _GLF_IDENTITY(uint(subgroup_id * subgroup_size), (uint(subgroup_id * subgroup_size)) | (uint(subgroup_id * subgroup_size)))))), max(uint(_GLF_IDENTITY(uint(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), min(false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), min(false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))))) | 0u)), _GLF_IDENTITY(max(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), max(max(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)), max(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec4(subgroup_id * subgroup_size, 1u, _GLF_IDENTITY(1u, 0u ^ (1u)), (1u | 0u))))), max(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), uint(subgroup_id * subgroup_size))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))), subgroup_id)) * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), max(uint(subgroup_id * subgroup_size), _GLF_IDENTITY(uint(subgroup_id * subgroup_size), (uint(subgroup_id * subgroup_size)) | (uint(subgroup_id * subgroup_size)))))), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), (0u & 167244u) ^ (uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))))), max(uint(subgroup_id * subgroup_size), _GLF_IDENTITY(uint(subgroup_id * subgroup_size), (_GLF_IDENTITY(uint(subgroup_id * subgroup_size), clamp(uint(subgroup_id * subgroup_size), _GLF_IDENTITY(uint(subgroup_id * subgroup_size), (uint(subgroup_id * subgroup_size)) | (uint(subgroup_id * subgroup_size))), uint(subgroup_id * subgroup_size)))) | 0u)))), uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), max(uint(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_id)))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 0u), (uvec2(subgroup_size, 0u)) | uvec2(0u, 0u)))), (subgroup_size) | 0u)), uint(subgroup_id * subgroup_size))))))), (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), max(uint(subgroup_id * subgroup_size), _GLF_IDENTITY(uint(subgroup_id * subgroup_size), (uint(subgroup_id * subgroup_size)) | (uint(subgroup_id * subgroup_size)))))), max(uint(_GLF_IDENTITY(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), max(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), max(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), uint(subgroup_id * subgroup_size)))), 0u | (uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), max(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), uint(subgroup_id * subgroup_size)))))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), max(uint(subgroup_id * subgroup_size), _GLF_IDENTITY(uint(subgroup_id * subgroup_size), (uint(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size)) | (uint(subgroup_id * subgroup_size)))))), max(uint(_GLF_IDENTITY(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), max(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))), uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), max(_GLF_IDENTITY(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), min(_GLF_IDENTITY(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), min(uint(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), clamp(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), min(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))), uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))), uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))), _GLF_IDENTITY(uint(subgroup_id * subgroup_size), clamp(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size))))))))))), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), max(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u)), _GLF_IDENTITY(uint(subgroup_id * subgroup_size), (uint(subgroup_id * subgroup_size)) | (uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (subgroup_size)))))))), _GLF_IDENTITY(max(uint(_GLF_IDENTITY(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), max(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))), uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), max(uint(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (subgroup_size) | 0u)), uint(subgroup_id * subgroup_size))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(max(uint(_GLF_IDENTITY(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), max(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))), uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), max(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), uint(subgroup_id * subgroup_size))))), 0u + (_GLF_IDENTITY(max(uint(_GLF_IDENTITY(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), max(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))), uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), max(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), uint(subgroup_id * subgroup_size))))), (max(uint(_GLF_IDENTITY(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), max(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))), uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), max(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), uint(subgroup_id * subgroup_size)))))) >> 0u))), max(_GLF_IDENTITY(max(uint(_GLF_IDENTITY(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), max(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))), uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), max(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), uint(subgroup_id * subgroup_size))))), max(max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), max(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), (true ? subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) : _GLF_FUZZED(workgroup_base))), subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))))), max(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), (uint(subgroup_id * subgroup_size)) | 0u), uint(subgroup_id * subgroup_size)))), uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), max(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), uint(subgroup_id * subgroup_size))))), max(uint(_GLF_IDENTITY(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), max(uint(subgroup_id * subgroup_size), uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))))))))), uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), max(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), uint(subgroup_id * subgroup_size))))))), max(uint(_GLF_IDENTITY(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), max(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))), uint(_GLF_IDENTITY(uint(subgroup_id * subgroup_size), max(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), uint(subgroup_id * subgroup_size))))))), max(uint(_GLF_IDENTITY(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), max(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))), uint(_GLF_IDENTITY(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), max(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), uint(subgroup_id * subgroup_size))))), max(uint(_GLF_IDENTITY(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), max(uint(subgroup_id * subgroup_size), uint(subgroup_id * subgroup_size)))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)), max(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), uint(subgroup_id * subgroup_size))))))))))) + subgroup_local_id));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), int(ivec3(_GLF_IDENTITY(1, 0 | (1)), 1, ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (false)))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uvec4(next_virtual_gid, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(0u, 0u, 0u, 0u) | (uvec4(next_virtual_gid, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, determinant(mat3(0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))), 1.0))), min(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, determinant(mat3(0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))), 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, determinant(mat3(0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))), 1.0))))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(_GLF_DEAD(false), true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true))))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)), (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)))) && true)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))))))), (! (_GLF_IDENTITY(false, (false) && true))) && true)))), false, false))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))))), true && (bool(bool(true)))), ! (_GLF_IDENTITY(! (bool(bool(true))), _GLF_IDENTITY(bool(bvec4(! (bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))), false, true, false)), true && (_GLF_IDENTITY(bool(bvec4(! (bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))), false, true, false)), ! (! (bool(bvec4(! (bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))), false, true, false))))))))))) && (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_IDENTITY(true, (true) || false)))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true))))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))), (false) && true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)), (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)))) && true)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))))))), (! (_GLF_IDENTITY(false, (false) && true))) && true)), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))))))), (! (_GLF_IDENTITY(false, (false) && true))) && true)))))), false, _GLF_IDENTITY(false, false || (false))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))))), true && (bool(bool(true)))), ! (_GLF_IDENTITY(! (bool(bool(true))), _GLF_IDENTITY(bool(bvec4(! (bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))), false, true, false)), true && (_GLF_IDENTITY(bool(bvec4(! (bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))), false, true, false)), ! (! (bool(bvec4(! (bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))), false, true, false))))))))))) && (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_IDENTITY(true, (true) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))))), true && (bool(bool(true)))), ! (_GLF_IDENTITY(! (bool(bool(true))), _GLF_IDENTITY(bool(bvec4(! (bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))), false, true, false)), true && (_GLF_IDENTITY(bool(bvec4(! (bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))), false, true, false)), ! (! (bool(bvec4(! (bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))), false, true, false))))))))))) && (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_IDENTITY(true, (true) || false))))), ! (! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))))), true && (bool(bool(true)))), ! (_GLF_IDENTITY(! (bool(bool(true))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (bool(true)) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))))), false, true, false)), true && (_GLF_IDENTITY(bool(bvec4(! (bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))), false, true, false)), ! (! (bool(bvec4(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(true), (bool(true)) || false))))), false, true, false))))))))))) && (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_IDENTITY(true, (true) || false)))))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(9730.7852, -1643.9435).y), _GLF_FUZZED(7.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(9730.7852, -1643.9435).y), _GLF_FUZZED(7.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec3(_GLF_DEAD(false), true, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(227.629) : _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (1 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(6), int(6)), (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) | (6))), int(_GLF_IDENTITY(_GLF_IDENTITY(6, (6) + _GLF_IDENTITY(0, min(0, 0))), (_GLF_IDENTITY(6, (6) + _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, max(0, 0)) : _GLF_FUZZED(12556))))) - 0)))) ^ (-49792 & _GLF_IDENTITY(0, (0) * 1)))) >> _GLF_IDENTITY(int(6), int(6)))) ^ (0)));
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y))))
  return;
}
