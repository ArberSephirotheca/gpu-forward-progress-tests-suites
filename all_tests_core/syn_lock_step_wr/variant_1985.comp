#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))), bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))), true, true))))))) || false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), ! (! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(62.97, 774.956)))))), injectionSwitch)).x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), false, false, false)), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), false, false, false)), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.2)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y))), false, false))))))))), true && (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))) && true))), false, false, false)), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))))))), bool(bvec4(! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), false, false, false)), _GLF_IDENTITY(! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))), bool(bvec3(! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3x2(injectionSwitch[1], 1.0, 1.0, 0.0, 1.0, 1.0)))), (true ? _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3x2(injectionSwitch[1], 1.0, 1.0, 0.0, 1.0, 1.0)))), vec2(vec4(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3x2(injectionSwitch[1], 1.0, 1.0, 0.0, 1.0, 1.0)))), 1.0, 1.0))) : _GLF_FUZZED(injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(false))))) || false) || false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9390.8280)), vec2(_GLF_FUZZED(527.608), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), injectionSwitch)).y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(3066.0337) : injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), ! (! (! (false))))))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, true))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, true))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y)), true, true)))), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y)), true, true)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (false ? _GLF_FUZZED(-593.609) : injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.7)), float(injectionSwitch.y), bool(true)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))) || false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, _GLF_IDENTITY(6.5, (false ? _GLF_FUZZED(floor(7.6)) : 6.5)))))), 1.0, determinant(mat4(1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, sin(0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 0.0, 1.0))), 1.0))) - 0.0), 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) + vec2(0.0, 0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 0.0, 1.0, 1.0, abs(1.0)), mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, 6.5)))), 1.0, determinant(mat4(1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, (1.0) / abs(1.0)), 0.0))))), 0.0, 1.0, 1.0, abs(1.0))))), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(809.249), (vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(3.4, clamp(3.4, 3.4, 3.4)), 6.5)))), 1.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(-6.4, -17.45)) : _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))))), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-34.17)), float(0.0), bool(true)))))))), 0.0))), cos(0.0), determinant(mat4(sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))))), 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), clamp(float(mat3x2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(97.45)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0))), cos(0.0), determinant(mat4(sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), abs(0.0), 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), float(mat3x2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sin(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat3x4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sin(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(1.0))), 0.0, 1.0, 1.0, 0.0, 0.0)))))), 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0))), cos(0.0), determinant(mat4(sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(850.542)), bool(false))), 1.0)))), 0.0, 0.0, 0.0, sqrt(1.0), abs(0.0), 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), float(mat3x2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0))), cos(0.0), determinant(mat4(sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), abs(0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(18.26)), bool(false))), abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))))), 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-69.25) : _GLF_IDENTITY(0.0, 0.0 + (0.0))))), clamp(_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-69.25) : _GLF_IDENTITY(0.0, 0.0 + (0.0))))), (0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-69.25) : _GLF_IDENTITY(0.0, 0.0 + (0.0)))))) * 1.0), _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-69.25) : _GLF_IDENTITY(0.0, 0.0 + (0.0))))), (false ? _GLF_FUZZED(dot(injectionSwitch, vec2(5.9, 7229.2698))) : 0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-69.25) : _GLF_IDENTITY(0.0, 0.0 + (0.0))))))), _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-69.25) : _GLF_IDENTITY(0.0, 0.0 + (0.0))))), clamp(0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-69.25) : _GLF_IDENTITY(0.0, 0.0 + (0.0))))), 0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-69.25) : _GLF_IDENTITY(0.0, 0.0 + (0.0))))), 0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-69.25) : _GLF_IDENTITY(0.0, 0.0 + (0.0)))))))))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 0.0, 1.0, 1.0, abs(1.0)), _GLF_IDENTITY(mat4(1.0), transpose(_GLF_IDENTITY(transpose(mat4(1.0)), mat4(1.0) * (transpose(mat4(1.0)))))) * (mat2x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, 6.5)))), 1.0, determinant(mat4(1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2612.0694)), float(1.0), bool(true))))) : _GLF_FUZZED(normalize(9289.6961)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 0.0, 1.0, 1.0, abs(1.0))))))[1]), (vec2(_GLF_FUZZED(809.249), (vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true, false, false))) ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(3.4, clamp(3.4, 3.4, 3.4)), 6.5)))), 1.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0))), cos(0.0), determinant(mat4(sqrt(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(72.63)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), abs(0.0), 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), clamp(float(mat3x2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), cos(0.0)))), 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0))), cos(0.0), determinant(mat4(sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), abs(0.0), 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), float(mat3x2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0))), cos(0.0), determinant(mat4(sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), abs(0.0), 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), float(mat3x2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), mix(float(_GLF_FUZZED(40.33)), float(dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), bool(true)))), 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0))), cos(0.0), determinant(mat4(sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), abs(0.0), 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))))), 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-69.25) : _GLF_IDENTITY(0.0, 0.0 + (0.0)))))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 0.0, 1.0, 1.0, abs(1.0)), mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, 6.5)))), 1.0, determinant(mat4(1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(10.59)), bool(false))), sin(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 0.0, 1.0, 1.0, abs(1.0))))))[1])) * vec2(1.0, 1.0)), vec2((vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(3.4, 6.5), mix(vec2(_GLF_FUZZED(8.8), _GLF_IDENTITY(_GLF_FUZZED((9012.7241)), min(_GLF_FUZZED((9012.7241)), _GLF_FUZZED((9012.7241))))), vec2((vec2(3.4, 6.5))[0], _GLF_IDENTITY((vec2(3.4, 6.5))[1], max((vec2(3.4, 6.5))[1], (vec2(3.4, 6.5))[1]))), bvec2(true, true)))))), 1.0, determinant(mat4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 1.0))), 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 0.0, 1.0, 1.0, abs(1.0)), mat4(1.0) * (mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, 6.5)), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, 6.5)))))), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, 6.5)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, 6.5))))))), mix(vec2(_GLF_FUZZED(-470.907), _GLF_IDENTITY((vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, 6.5)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(3.4, 6.5), max(vec2(3.4, 6.5), vec2(3.4, 6.5))))))))))[1], max((vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, 6.5)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, 6.5))))))))[1], (vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, 6.5)))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, 6.5))))), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, 6.5)))))) - sqrt(vec2(0.0, 0.0))))))[1]))), vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, 6.5)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, 6.5))))))))[0], (true ? (vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, 6.5)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.4, 6.5))))))))[0] : _GLF_FUZZED(sinh((-4.3 / -214.588))))), _GLF_FUZZED(-3.5)), bvec2(true, false))))), 1.0, determinant(mat4(1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-179.593))), 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 0.0, 1.0, 1.0, abs(1.0))))))[0], _GLF_FUZZED(788.880)), bvec2(true, false)))).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))) && true)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-16.86), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-91.84)), bvec2(true, false))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(0u, max(0u, 0u)) | (workgroup_size)), (workgroup_size) - _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), min(_GLF_IDENTITY(max(0u, 0u), 0u ^ (max(0u, 0u))), max(_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(7u), uint(7u))), ~ (_GLF_IDENTITY(~ ((0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), clamp(~ ((0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), ~ ((0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), ~ ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))))))))), 0u))))) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u)) >> 0u), workgroup_id)), _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, _GLF_IDENTITY(uint(uvec3(7u, 1u, 0u)), (uint(uvec3(7u, 1u, 0u))) | (uint(uvec3(7u, 1u, 0u)))))), uint(7u))) << _GLF_IDENTITY(uint(7u), uint(7u)))))), 1u)), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) >> _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, ~ (~ ((0u) / 1u)))), 0u, _GLF_IDENTITY(0u, max(0u, 0u)))))), (_GLF_IDENTITY((workgroup_id), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((workgroup_id), 0u + ((_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, (workgroup_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(subgroup_local_id))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(_GLF_IDENTITY((workgroup_id), 0u + ((workgroup_id)))), (uint(_GLF_IDENTITY((workgroup_id), 0u + ((workgroup_id))))) << 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY((workgroup_id), 0u + ((workgroup_id)))), ~ (~ (uint(_GLF_IDENTITY((workgroup_id), 0u + ((workgroup_id)))))))), (min(_GLF_IDENTITY(uint(_GLF_IDENTITY((workgroup_id), 0u + ((workgroup_id)))), (uint(_GLF_IDENTITY((workgroup_id), 0u + ((workgroup_id))))) << 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY((workgroup_id), 0u + ((workgroup_id)))), ~ (~ (uint(_GLF_IDENTITY((workgroup_id), 0u + ((workgroup_id))))))))) | 0u)))) >> _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 0u | (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), 1u * (uint(uvec2(_GLF_IDENTITY(0u, (0u) / 1u), 0u))))))) << 0u)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u))))))))) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)), ((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) >> 0u, (true ? (workgroup_id) >> 0u : _GLF_FUZZED(105193u)))))) << 0u) - (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), 0u | (_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (~ (1u)))))), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (~ (1u)))))), (false ? _GLF_FUZZED(79396u) : (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), 0u | (~ (1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), 0u | (~ (1u))), max(_GLF_IDENTITY(~ (1u), 0u | (~ (1u))), _GLF_IDENTITY(~ (1u), 0u | (~ (1u))))), _GLF_IDENTITY(~ (1u), 0u | (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), 0u | (~ (1u))), ~ (~ (_GLF_IDENTITY(~ (1u), 0u | (~ (1u))))))))))))))))))) ^ _GLF_IDENTITY(1u, 0u | (1u)))), workgroup_id)), 0u, 1u))) - 0u));
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(cos(5.8)))), determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x), 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY(true, false || (true)), true))), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)) >> (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, ~ (~ (1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), max(uint(_GLF_IDENTITY(1u, (1u) + (0u & 37635u))), uint(1u))), clamp(_GLF_IDENTITY(uint(1u), max(uint(_GLF_IDENTITY(1u, (1u) + (0u & 37635u))), uint(1u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), max(uint(_GLF_IDENTITY(1u, (1u) + (0u & 37635u))), uint(1u))), min(_GLF_IDENTITY(uint(1u), max(uint(_GLF_IDENTITY(1u, (1u) + (0u & 37635u))), uint(1u))), _GLF_IDENTITY(uint(1u), max(uint(_GLF_IDENTITY(1u, (1u) + (0u & 37635u))), uint(1u))))), _GLF_IDENTITY(uint(1u), max(uint(_GLF_IDENTITY(1u, (1u) + (0u & 37635u))), uint(1u)))))))), max(workgroup_base + subgroup_base + subgroup_local_id, workgroup_base + subgroup_base + subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) + _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), false || (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false))), true), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false))), true), false)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false))))))) || false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true)))) && (false))))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))) - 0u, (((subgroup_local_id + 1)) - 0u) >> 0u))) / _GLF_IDENTITY((1u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((1u ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | ((1u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(0u, 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ _GLF_IDENTITY((~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min((~ (uvec2(subgroup_size, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, abs(1.0))), max(float(vec3(0.0, 0.0, abs(1.0))), float(vec3(0.0, 0.0, abs(1.0)))))), injectionSwitch.x))))), (~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(236.746)), float(injectionSwitch.x), bool(true))))))) | (_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min((~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (~ _GLF_IDENTITY((~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min((~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | (~ _GLF_IDENTITY((~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min((~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))) + (uvec2(0u, 0u) | uvec2(0u, 0u)), (_GLF_IDENTITY(((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(236.746)), float(injectionSwitch.x), bool(true))))))) | (_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min((~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (~ _GLF_IDENTITY((~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min((~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | (~ _GLF_IDENTITY((~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min((~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))) + (uvec2(0u, 0u) | uvec2(0u, 0u)), max(((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(236.746)), float(injectionSwitch.x), bool(true))))))) | (_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min((~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (~ _GLF_IDENTITY((~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min((~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | (~ _GLF_IDENTITY((~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min((~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))) + (uvec2(0u, 0u) | uvec2(0u, 0u)), ((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(236.746)), float(injectionSwitch.x), bool(true))))))) | (_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min((~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (~ _GLF_IDENTITY((~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min((~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | (~ _GLF_IDENTITY((~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min((~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))) + (uvec2(0u, 0u) | uvec2(0u, 0u))))) / uvec2(1u, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * (1u & 1u))), (_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(uvec2(uvec2(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_ONE(1.0, injectionSwitch.y))))))))) | (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)))) | (uvec2(subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) * 1u))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0)), min(float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0)), float(_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0), mat2(1.0) * (_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0), (mat2(_GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0)) * mat2(1.0))))) - mat2(0.0, 0.0, 0.0, 0.0)))))))), (uvec2(subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0)), min(float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0)), float(_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0), (_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0), mat2(1.0) * (_GLF_IDENTITY(mat2(_GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0), (mat2(_GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0)) * mat2(1.0))))) - mat2(0.0, 0.0, 0.0, 0.0))))))))) | uvec2(0u, 0u)), (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min((_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0)), min(float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), sin(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 0.0, 0.0)), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0))))))), (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(2.3)), bool(false))))))) | (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0)), min(float(mat2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8185.2045)), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.5)))), bool(true)))), sin(0.0), 0.0, 0.0)), float(mat2(_GLF_ZERO(_GLF_IDENTITY(0.0, determinant(mat4(abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + (0.0)), injectionSwitch.x), sin(0.0), 0.0, 0.0))))))), (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min((_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0)), min(float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0)), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0))))))), (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0)), min(float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0)), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0))))))), (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-38.02) : 0.0)))), min(float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0)), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0))))))), (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | ((_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.5), _GLF_FUZZED(87.50)), bvec2(false, false))))).x), sin(0.0), 0.0, 0.0)), min(float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0)), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0))))))), (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))) | (_GLF_IDENTITY(uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec2(subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + vec2(0.0, 0.0)) + _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))], clamp(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), (buf[virtual_gid]) / 1u), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), min(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, int(ivec3(64, 0, 1)))))) | 0), 64)), _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) + _GLF_IDENTITY(0, (0) + (0 << _GLF_IDENTITY(int(7), int(7))))), min(64, 64)))), 2), max(atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))], _GLF_IDENTITY(clamp(buf[virtual_gid], _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))], (buf[virtual_gid]) / 1u), buf[virtual_gid]), (clamp(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u), buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base)))))))])) >> 0u)), 4, _GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(2, min(2, 2))), atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) >> 0u, (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((virtual_gid), 0u | ((virtual_gid))) >> 0u)))) | (virtual_gid))], clamp(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ ((buf[virtual_gid]))) / 1u)), ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ ((buf[virtual_gid]))) / 1u))) | ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ ((buf[virtual_gid]))) / 1u)))) >> 0u), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u)), (min(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ ((buf[virtual_gid]))) / 1u)), ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ ((buf[virtual_gid]))) / 1u))) | ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ ((buf[virtual_gid]))) / 1u)))) >> 0u), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u))) + 0u)), buf[virtual_gid])), _GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) | (64)))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) ^ 0)) / 1))));
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
}
