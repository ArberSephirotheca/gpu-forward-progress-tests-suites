#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = ((_GLF_IDENTITY((0 & 40815) << _GLF_IDENTITY(int(5), int(5)), ((0 & 40815) << _GLF_IDENTITY(int(5), int(5))) - 0)) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(0, 0 + (0)) ^ (int(7))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || false)))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       barrier();
      }
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)), (false ? _GLF_FUZZED(vec2(3.3, -6.5)) : _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)))).x, mix(float(_GLF_FUZZED(-8.6)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x, float(mat4x2(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x, 0.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x))), bool(true))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)), (false ? _GLF_FUZZED(vec2(3.3, -6.5)) : _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)))).x, mix(float(_GLF_FUZZED(-8.6)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x, float(mat4x2(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x, 0.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x))), bool(true))) > injectionSwitch.y)))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(num_workgroup)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), true)))) || false), false)))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ _GLF_IDENTITY(1, 1 * (1)))); _injected_loop_counter ++)
    {
     barrier();
    }
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) * (_GLF_IDENTITY(workgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(160608u)))))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-286.140) : injectionSwitch.y)), injectionSwitch.y))))))
    {
     for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false))) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), ((_GLF_IDENTITY(true, (true) && true))) || false)), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), ((_GLF_IDENTITY(true, (true) && true))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true, true))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), false)))))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           do
            {
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
            {
             for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, (0) - 0)), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, (true ? (1) | 0 : _GLF_FUZZED((- _GLF_IDENTITY(86033, (true ? 86033 : _GLF_FUZZED(_injected_loop_counter))))))))) - int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))))); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)))), _GLF_IDENTITY(0u | (workgroup_base + subgroup_id * subgroup_size), min(_GLF_IDENTITY(0u | (workgroup_base + subgroup_id * subgroup_size), (0u | (workgroup_base + subgroup_id * subgroup_size)) | 0u), 0u | (workgroup_base + subgroup_id * subgroup_size)))), uint(uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)))), _GLF_IDENTITY(0u | (workgroup_base + subgroup_id * subgroup_size), min(_GLF_IDENTITY(0u | (workgroup_base + subgroup_id * subgroup_size), (0u | (workgroup_base + subgroup_id * subgroup_size)) | 0u), 0u | (workgroup_base + subgroup_id * subgroup_size))))))) + subgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), false))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, (1) >> 0), false || (_injected_loop_counter < _GLF_IDENTITY(1, (1) >> 0)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec3(bool(bvec4(false, true, true, true)), false, true))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4192.5977)), vec2(_GLF_FUZZED(-1913.8542), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(9684.6613)), bool(false)))), bvec2(false, true))).x) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(84.76)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, min(1.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 1u))) : _GLF_FUZZED(subgroup_local_id))) * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), 0u + (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))))) ^ 0u) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) >> (0u | 0u)), 0u ^ ((0u ^ 0u))) ^ (workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 1u))) : _GLF_FUZZED(subgroup_local_id))) * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), 0u + (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))))) ^ 0u) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((0u ^ 0u), ((0u ^ 0u)) >> (0u | 0u)), 0u ^ ((0u ^ 0u))) ^ (workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))) ^ 0u) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * (1u | 1u))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) | ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))) | (subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) << 0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)) + ((_injected_loop_counter) << 0), clamp(_GLF_IDENTITY(0 + ((_injected_loop_counter) << 0), 0 | (0 + ((_injected_loop_counter) << 0))), _GLF_IDENTITY(0 + ((_injected_loop_counter) << 0), clamp(0 + ((_injected_loop_counter) << 0), 0 + ((_injected_loop_counter) << 0), 0 + ((_injected_loop_counter) << 0))), 0 + ((_injected_loop_counter) << 0))), ~ (~ (0 + ((_injected_loop_counter) << 0)))))) > (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) << 0)), (int(_GLF_IDENTITY(1, (1) << 0))) ^ 0), _GLF_IDENTITY(int(1), max(_GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(3), int(3)))) + (_GLF_IDENTITY(1, (1) | 0)))), clamp(int(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(3), int(3)))) + (_GLF_IDENTITY(1, (1) | 0)))), int(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(3), int(3)))) + (_GLF_IDENTITY(1, (1) | 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(3), int(3)))) + (_GLF_IDENTITY(1, (1) | 0)))), ~ (~ (int(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(3), int(3)))) + (_GLF_IDENTITY(1, (1) | 0))))))))), int(1)))), int(ivec4(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), int(1))), ~ (~ (_GLF_IDENTITY(int(1), max(int(1), int(1)))))), _GLF_IDENTITY(int(1), max(int(1), int(1)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1)))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(77519) : _GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1)))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), (true ? ~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, 1 * (1))), max(int(1), int(1)))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(649.883) : injectionSwitch.x)))))) : _GLF_FUZZED(66177)))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1)))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(77519) : _GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1)))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), (true ? ~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, 1 * (1))), max(int(1), int(1)))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(649.883) : injectionSwitch.x)))))) : _GLF_FUZZED(66177))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1)))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(77519) : _GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1)))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), (true ? ~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, 1 * (1))), max(int(1), int(1)))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(649.883) : injectionSwitch.x)))))) : _GLF_FUZZED(66177)))))), clamp(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1)))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(77519) : _GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1)))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), (true ? ~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, 1 * (1))), max(int(1), int(1)))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(649.883) : injectionSwitch.x)))))) : _GLF_FUZZED(66177)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1)))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(77519) : _GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1)))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), (true ? ~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, 1 * (1))), max(int(1), int(1)))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(649.883) : injectionSwitch.x)))))) : _GLF_FUZZED(66177)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1)))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(77519) : _GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1)))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), (true ? ~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, 1 * (1))), max(int(1), int(1)))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1))))) ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(649.883) : injectionSwitch.x)))))) : _GLF_FUZZED(66177))))))))))), 1, 1, 0))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), min((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), clamp(min(virtual_gid, virtual_gid), _GLF_IDENTITY(min(virtual_gid, virtual_gid), (false ? _GLF_FUZZED(workgroup_base) : min(virtual_gid, virtual_gid))), min(virtual_gid, virtual_gid)))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), min((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), min((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))))))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), min((_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) >> (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))), (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))))))))), min((~ _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), min((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), clamp(min(virtual_gid, virtual_gid), _GLF_IDENTITY(min(virtual_gid, virtual_gid), (false ? _GLF_FUZZED(workgroup_base) : min(virtual_gid, virtual_gid))), min(virtual_gid, virtual_gid)))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), min((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), min((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))))))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), min((_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) >> (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))), (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), min((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), clamp(min(virtual_gid, virtual_gid), _GLF_IDENTITY(min(virtual_gid, virtual_gid), (false ? _GLF_FUZZED(workgroup_base) : min(virtual_gid, virtual_gid))), min(virtual_gid, virtual_gid)))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), min((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), min((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))))))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), min((_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) >> (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))), (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))))))))))))], _GLF_IDENTITY(4, (4) | (4)), 64, 0);
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), vec2(mat3x2(injectionSwitch, abs(1.0), 0.0, sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(abs(-946.614)) : 1.0))), 1.0))), 1.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), max(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(2.5), (_GLF_FUZZED(2.5)) / 1.0)), float(0.0), bool(true))), 0.0)))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0 * (determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), max(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(2.5), (_GLF_FUZZED(2.5)) / 1.0)), float(0.0), bool(true))), 0.0)))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x3(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(11.12), _GLF_IDENTITY((_GLF_FUZZED(11.12)) - 0.0, (true ? (_GLF_FUZZED(11.12)) - 0.0 : _GLF_FUZZED(9630.7569))))), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5653.4585)), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6083.2920) : 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 1.0, 1.0)), max(_GLF_IDENTITY(float(vec3(0.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(float(vec3(0.0, 1.0, 1.0)), (float(vec3(0.0, 1.0, 1.0))) - 0.0), float(vec3(0.0, 1.0, 1.0)), _GLF_IDENTITY(float(vec3(0.0, 1.0, 1.0)), (_GLF_IDENTITY(float(vec3(0.0, 1.0, 1.0)), max(float(vec3(0.0, 1.0, 1.0)), float(vec3(0.0, 1.0, 1.0))))) / 1.0))), float(vec3(0.0, 1.0, 1.0)))))))), bool(true))))), clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(1.0, (1.0) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), 1.0, 1.0))))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, 0.0 + (0.0)))), 1.0))))), mix(vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x3(injectionSwitch, 1.0, determinant(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true))), min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true))))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true))), min(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-8.9), (_GLF_FUZZED(-8.9)) - _GLF_IDENTITY(0.0, (0.0) + 0.0))), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true)))))) * 1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED((- (-47.51 * -46.16)))), bool(false))), 1.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(69.31) : 1.0)), cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))))[0], clamp(_GLF_IDENTITY((vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x3(injectionSwitch, 1.0, determinant(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true))), min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true))))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true))), min(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-8.9), (_GLF_FUZZED(-8.9)) - _GLF_IDENTITY(0.0, (0.0) + 0.0))), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true)))))) * 1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED((- (-47.51 * -46.16)))), bool(false))), 1.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(69.31) : 1.0)), cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))))[0], (false ? _GLF_FUZZED(9133.6677) : (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x3(injectionSwitch, 1.0, determinant(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true))), min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true))))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true))), min(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-8.9), (_GLF_FUZZED(-8.9)) - _GLF_IDENTITY(0.0, (0.0) + 0.0))), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true)))))) * 1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED((- (-47.51 * -46.16)))), bool(false))), 1.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(69.31) : 1.0)), cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))))[0])), (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x3(injectionSwitch, 1.0, determinant(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true))), min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true))))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true))), min(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-8.9), (_GLF_FUZZED(-8.9)) - _GLF_IDENTITY(0.0, (0.0) + 0.0))), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true)))))) * 1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED((- (-47.51 * -46.16)))), bool(false))), 1.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(69.31) : 1.0)), cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))))[0], _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x3(injectionSwitch, 1.0, determinant(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true))), min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true))))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true))), min(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-8.9), (_GLF_FUZZED(-8.9)) - _GLF_IDENTITY(0.0, (0.0) + 0.0))), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true)))))) * 1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED((- (-47.51 * -46.16)))), bool(false))), 1.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(69.31) : 1.0)), cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))))[0], (true ? (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x3(injectionSwitch, 1.0, determinant(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true))), min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true))))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true))), min(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-8.9), (_GLF_FUZZED(-8.9)) - _GLF_IDENTITY(0.0, (0.0) + 0.0))), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true)))))) * 1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED((- (-47.51 * -46.16)))), bool(false))), 1.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(69.31) : 1.0)), cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))))))[0] : _GLF_FUZZED(-1.6))))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.4)))) * 1.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0)), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x3(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7624.6366))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec4(1.0, 0.0, 0.0, 0.0))), sqrt(0.0)))), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0)))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))[1], max((vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 1.0))) * _GLF_IDENTITY((0.0), ((0.0)) / 1.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0)), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), min((1.0), (1.0)))), 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.7)), bool(false))), 1.0), transpose(transpose(mat4x3(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-7624.6366)), (false ? _GLF_FUZZED(-4.2) : (true ? 0.0 : _GLF_FUZZED(-7624.6366))))), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (0.0) - 0.0), 1.0, cos(0.0)), vec3(vec3(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (0.0) - 0.0), 1.0, cos(0.0)), max(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (0.0) - 0.0), 1.0, cos(0.0)), vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (0.0) - 0.0), 1.0, cos(0.0))))))))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))[1], _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0)), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0)), max(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0)), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0)), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0))))), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x3(injectionSwitch, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-568.050)), float(1.0), bool(true))), determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7624.6366))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0)))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))[1], clamp((vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)) * (0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0)), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1264.3500) : _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x3(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7624.6366))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0)))), mix(float(_GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0))))), float(_GLF_FUZZED(-4.4)), bool(false))), _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0)))))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))[1], (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9844.4169))) : _GLF_FUZZED(73.96))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), 0.0)), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x3(injectionSwitch, 1.0, determinant(_GLF_IDENTITY(mat4(1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-7624.6366, mix(float(_GLF_IDENTITY(-7624.6366, min(-7624.6366, -7624.6366))), float(_GLF_FUZZED(2.8)), bool(false)))))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), transpose(transpose(mat4(1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-7624.6366, mix(float(_GLF_IDENTITY(-7624.6366, min(-7624.6366, -7624.6366))), float(_GLF_FUZZED(2.8)), bool(false)))))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))), _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0)))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))[_GLF_IDENTITY(1, (1) << 0)], _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0)), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x3(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(-7624.6366))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0)))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))[1], max((vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0)), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0)), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0))), clamp(float(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0)), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0))), _GLF_IDENTITY(float(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0)), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0))), 0.0 + (float(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0)), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0))))), float(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0)), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0)))))), (float(_GLF_IDENTITY(float(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0)), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0))), clamp(float(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0)), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0))), _GLF_IDENTITY(float(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0)), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0))), 0.0 + (float(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0)), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0))))), float(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0)), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 1.0))))))) * 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x3(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7624.6366))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, cos(0.0)))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))[1], (vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(193.766)), float(0.0), bool(true))), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, abs(0.0), sin(0.0), 0.0, sin(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0)), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-0.4))) + (1.0)), 1.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x3(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-7624.6366, (-7624.6366) + 0.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), ((0.0)) / 1.0) - 0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-133.637) : 1.0)), cos(0.0)))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))[1]))))))), vec2(_GLF_IDENTITY(_GLF_FUZZED(6.7), clamp(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7), _GLF_IDENTITY(_GLF_FUZZED(6.7), mix(float(_GLF_FUZZED((-3.0 / -46.68))), float(_GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))), bool(true))))), _GLF_FUZZED(94.21)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), false), false))), false)))))), injectionSwitch)).y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(ivec4(_injected_loop_counter, 0, 0, 0)), (int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 0, 0, 0), (ivec4(_injected_loop_counter, 0, 0, 0)) ^ ivec4(0, 0, 0, 0)))) - 0)), _injected_loop_counter)) != 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((1 & 1), ((1 & 1)) / 1)), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)))))))))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((1 & 1), 0 ^ (_GLF_IDENTITY((1 & 1), _GLF_IDENTITY(((1 & 1)) | ((1 & 1)), (_GLF_IDENTITY(((1 & 1)) | ((1 & 1)), 0 + (((1 & 1)) | ((1 & 1))))) >> 0))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) ^ 0))) & 1)))))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)) != (1 & 1)), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)))), (_GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)))), _GLF_IDENTITY(((! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1))))) || false, (((! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & _GLF_IDENTITY(1, (1) ^ 0)))))) || false) && true))) && true)))))))))); _injected_loop_counter ++)
        {
         do
          {
           do
            {
             atomicStore(checker[virtual_gid], read, 4, 64, 4);
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))))
          barrier();
         barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       else
        {
        }
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
}
