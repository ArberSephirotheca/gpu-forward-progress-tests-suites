#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), (injectionSwitch.x) / 1.0) : _GLF_FUZZED(0.0))), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch , vec2(8871.8480, 2088.7114))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5.1, 3.6)) : injectionSwitch))))) * mat2(1.0)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(163.000)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))) || (_GLF_IDENTITY(false, (false) || false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), false || (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y)))), true && (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(injectionSwitch.x > injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(84.73), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-7.1), 1.0 * (_GLF_FUZZED(-7.1)))), bvec2(true, false))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + _GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))) : _GLF_FUZZED(asin(injectionSwitch)))).x, float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0), length(vec2(0.0, 0.0))), mat3x4(mat4(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0), length(vec2(0.0, 0.0)))))))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.8)), float(1.0), bool(true))), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec3(-5.2, 7.1, 692.830).x)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))).x)), 1.0, 0.0, 1.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), (bool(false)) && true)), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), (bool(false)) && true))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) || false, _GLF_IDENTITY(bool(bvec2((bool(false)) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2((bool(false)) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(false)) && true)), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), (bool(false)) && true))))))))) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), (bool(false)) && true)), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) || false), (bool(false)) && true))))))) && true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))) + sin(0.0)) > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, (injectionSwitch.y) * 1.0)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-83.08, 186.483)))).x > injectionSwitch.y)), true, true, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (! (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))) || false)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), true))), false))))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), true))), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), true))), false))))))))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, abs(0.0), tan(0.0), 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 0.0)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)).x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), true && (! (false))), true, true, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(float(13824), clamp(_GLF_IDENTITY(float(13824), (float(13824)) / 1.0), float(13824), float(13824))))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)), injectionSwitch.x))), bool(true))) > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(float(13824), clamp(_GLF_IDENTITY(float(13824), (float(13824)) / 1.0), float(13824), float(13824))))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)), injectionSwitch.x))), bool(true))) > injectionSwitch.y)))) || false)), true && (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(float(13824), clamp(_GLF_IDENTITY(float(13824), (float(13824)) / 1.0), float(13824), float(13824))))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)), injectionSwitch.x))), bool(true))) > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(float(13824), clamp(_GLF_IDENTITY(float(13824), (float(13824)) / 1.0), float(13824), float(13824))))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)), injectionSwitch.x))), bool(true))) > injectionSwitch.y)))) || false)), bool(bvec4((! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(float(13824), clamp(_GLF_IDENTITY(float(13824), (float(13824)) / 1.0), float(13824), float(13824))))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)), injectionSwitch.x))), bool(true))) > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(float(13824), clamp(_GLF_IDENTITY(float(13824), (float(13824)) / 1.0), float(13824), float(13824))))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)), injectionSwitch.x))), bool(true))) > injectionSwitch.y)))) || false)), false, false, false))))))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(13824))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, abs(0.0)))).x < injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(177091u)))))), max((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(177091u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(177091u)))), clamp(~ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(177091u)))), ~ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(177091u)))), ~ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(177091u)))))))))), clamp((~ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(177091u, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(177091u, 0u ^ (177091u))))))))), (~ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(177091u))))), (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true, false || (true)) ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(177091u, clamp(_GLF_IDENTITY(177091u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (177091u)), 177091u, 177091u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(177091u)))))), clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(177091u)))))), _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(177091u)))))), _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(177091u)))))))), max((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(177091u)))))), clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(177091u)))))), _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(177091u)))))), _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(177091u)))))))), (subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(177091u)))))), clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(177091u)))))), _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(177091u)))))), _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(177091u)))))))))), max((_GLF_IDENTITY(subgroup_local_id + 1, 0u + (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))))) % _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(177091u), (true ? subgroup_size : _GLF_FUZZED(177091u)) << 0u)))))), (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(177091u, ~ (~ (177091u)))))), (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(177091u), max(_GLF_FUZZED(177091u), _GLF_FUZZED(177091u)))))) / 1u)), (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false) ? subgroup_size : _GLF_FUZZED(177091u))))) | 0u))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(abs(0.0), 1.0)), dot(vec2(1.0, 0.0), vec2(abs(0.0), 1.0))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(49.93), _GLF_FUZZED(vec2(-794.839, -8.2).r)), bvec2(false, false))).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(49.93), _GLF_FUZZED(vec2(-794.839, -8.2).r)), bvec2(false, false))).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(49.93), _GLF_FUZZED(vec2(-794.839, -8.2).r)), bvec2(false, false))).y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(false))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (_GLF_IDENTITY(false, true && (false)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, false || (true)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, false || (true)))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, false || (true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), cos(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(mat4x2(vec2(0.0, 0.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(vec2(0.0, 0.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0)))))) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) >> 0)), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_IDENTITY(_GLF_FUZZED(-91457), min(_GLF_FUZZED(-91457), _GLF_FUZZED(-91457))), (true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_IDENTITY(_GLF_FUZZED(-91457), min(_GLF_FUZZED(-91457), _GLF_FUZZED(-91457)))) | (_GLF_IDENTITY(true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_IDENTITY(_GLF_FUZZED(-91457), min(_GLF_FUZZED(-91457), _GLF_FUZZED(-91457))), _GLF_IDENTITY((false ? _GLF_FUZZED(-39488) : true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_IDENTITY(_GLF_FUZZED(-91457), min(_GLF_FUZZED(-91457), _GLF_FUZZED(-91457)))), int(ivec3(_GLF_IDENTITY((false ? _GLF_FUZZED(-39488) : true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_IDENTITY(_GLF_FUZZED(-91457), min(_GLF_FUZZED(-91457), _GLF_FUZZED(-91457)))), min((false ? _GLF_FUZZED(-39488) : true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_IDENTITY(_GLF_FUZZED(-91457), min(_GLF_FUZZED(-91457), _GLF_FUZZED(-91457)))), (false ? _GLF_FUZZED(-39488) : true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_IDENTITY(_GLF_FUZZED(-91457), min(_GLF_FUZZED(-91457), _GLF_FUZZED(-91457)))))), 0, 0)))))), 0 ^ (_GLF_IDENTITY(true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_IDENTITY(_GLF_FUZZED(-91457), min(_GLF_FUZZED(-91457), _GLF_FUZZED(-91457))), (true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_IDENTITY(_GLF_FUZZED(-91457), min(_GLF_FUZZED(-91457), _GLF_FUZZED(-91457)))) ^ 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true))), true, false)))))) ? _GLF_IDENTITY((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(_GLF_IDENTITY(-91457, _GLF_IDENTITY(int(int(-91457)), (int(int(-91457))) ^ 0)))), _GLF_IDENTITY((false ? _GLF_FUZZED(ivec4(_GLF_IDENTITY(-5649, 0 ^ (-5649)), 82221, -79292, -71559).x) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), (~ (4)) << 0), ~ (4), ~ (4))))))) : _GLF_FUZZED(-91457)), _GLF_IDENTITY((_GLF_IDENTITY((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_IDENTITY(_GLF_FUZZED(-91457), clamp(_GLF_FUZZED(_GLF_IDENTITY(-91457, max(_GLF_IDENTITY(-91457, clamp(-91457, -91457, -91457)), -91457))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-91457), clamp(_GLF_FUZZED(-91457), _GLF_IDENTITY(_GLF_FUZZED(-91457), (_GLF_FUZZED(-91457)) | 0), _GLF_FUZZED(-91457))), (_GLF_FUZZED(-91457)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-91457), max(_GLF_IDENTITY(_GLF_FUZZED(-91457), ~ (~ (_GLF_FUZZED(-91457)))), _GLF_IDENTITY(_GLF_FUZZED(-91457), max(_GLF_FUZZED(-91457), _GLF_FUZZED(-91457))))), clamp(_GLF_FUZZED(-91457), _GLF_IDENTITY(_GLF_FUZZED(-91457), (_GLF_FUZZED(-91457)) | 0), _GLF_FUZZED(-91457))), (_GLF_FUZZED(-91457)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_FUZZED(-91457)))), (_GLF_IDENTITY((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_IDENTITY(_GLF_FUZZED(-91457), clamp(_GLF_FUZZED(_GLF_IDENTITY(-91457, max(_GLF_IDENTITY(-91457, clamp(-91457, -91457, -91457)), -91457))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-91457), clamp(_GLF_FUZZED(-91457), _GLF_IDENTITY(_GLF_FUZZED(-91457), (_GLF_FUZZED(-91457)) | 0), _GLF_FUZZED(-91457))), (_GLF_FUZZED(-91457)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-91457), max(_GLF_IDENTITY(_GLF_FUZZED(-91457), ~ (~ (_GLF_FUZZED(-91457)))), _GLF_IDENTITY(_GLF_FUZZED(-91457), max(_GLF_FUZZED(-91457), _GLF_FUZZED(-91457))))), clamp(_GLF_FUZZED(-91457), _GLF_IDENTITY(_GLF_FUZZED(-91457), (_GLF_FUZZED(-91457)) | 0), _GLF_FUZZED(-91457))), (_GLF_FUZZED(-91457)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_FUZZED(-91457)))), 0 ^ ((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_IDENTITY(_GLF_FUZZED(-91457), clamp(_GLF_FUZZED(_GLF_IDENTITY(-91457, max(_GLF_IDENTITY(-91457, clamp(-91457, -91457, -91457)), -91457))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-91457), clamp(_GLF_FUZZED(-91457), _GLF_IDENTITY(_GLF_FUZZED(-91457), (_GLF_FUZZED(-91457)) | 0), _GLF_FUZZED(-91457))), (_GLF_FUZZED(-91457)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-91457), max(_GLF_IDENTITY(_GLF_FUZZED(-91457), ~ (~ (_GLF_FUZZED(-91457)))), _GLF_IDENTITY(_GLF_FUZZED(-91457), max(_GLF_FUZZED(-91457), _GLF_FUZZED(-91457))))), clamp(_GLF_FUZZED(-91457), _GLF_IDENTITY(_GLF_FUZZED(-91457), (_GLF_FUZZED(-91457)) | 0), _GLF_FUZZED(-91457))), (_GLF_FUZZED(-91457)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_FUZZED(-91457))))))) | 0)), 1 * ((_GLF_IDENTITY((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_IDENTITY(_GLF_FUZZED(-91457), clamp(_GLF_FUZZED(_GLF_IDENTITY(-91457, max(_GLF_IDENTITY(-91457, clamp(-91457, -91457, -91457)), -91457))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-91457), clamp(_GLF_FUZZED(-91457), _GLF_IDENTITY(_GLF_FUZZED(-91457), (_GLF_FUZZED(-91457)) | 0), _GLF_FUZZED(-91457))), (_GLF_FUZZED(-91457)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-91457), max(_GLF_IDENTITY(_GLF_FUZZED(-91457), ~ (~ (_GLF_FUZZED(-91457)))), _GLF_IDENTITY(_GLF_FUZZED(-91457), max(_GLF_FUZZED(-91457), _GLF_FUZZED(-91457))))), clamp(_GLF_FUZZED(-91457), _GLF_IDENTITY(_GLF_FUZZED(-91457), (_GLF_FUZZED(-91457)) | 0), _GLF_FUZZED(-91457))), (_GLF_FUZZED(-91457)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_FUZZED(-91457)))), (_GLF_IDENTITY((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_IDENTITY(_GLF_FUZZED(-91457), clamp(_GLF_FUZZED(_GLF_IDENTITY(-91457, max(_GLF_IDENTITY(-91457, clamp(-91457, -91457, -91457)), -91457))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-91457), clamp(_GLF_FUZZED(-91457), _GLF_IDENTITY(_GLF_FUZZED(-91457), (_GLF_FUZZED(-91457)) | 0), _GLF_FUZZED(-91457))), (_GLF_FUZZED(-91457)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-91457), max(_GLF_IDENTITY(_GLF_FUZZED(-91457), ~ (~ (_GLF_FUZZED(-91457)))), _GLF_IDENTITY(_GLF_FUZZED(-91457), max(_GLF_FUZZED(-91457), _GLF_FUZZED(-91457))))), clamp(_GLF_FUZZED(-91457), _GLF_IDENTITY(_GLF_FUZZED(-91457), (_GLF_FUZZED(-91457)) | 0), _GLF_FUZZED(-91457))), (_GLF_FUZZED(-91457)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_FUZZED(-91457)))), 0 ^ ((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_IDENTITY(_GLF_FUZZED(-91457), clamp(_GLF_FUZZED(_GLF_IDENTITY(-91457, max(_GLF_IDENTITY(-91457, clamp(-91457, -91457, -91457)), -91457))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-91457), clamp(_GLF_FUZZED(-91457), _GLF_IDENTITY(_GLF_FUZZED(-91457), (_GLF_FUZZED(-91457)) | 0), _GLF_FUZZED(-91457))), (_GLF_FUZZED(-91457)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-91457), max(_GLF_IDENTITY(_GLF_FUZZED(-91457), ~ (~ (_GLF_FUZZED(-91457)))), _GLF_IDENTITY(_GLF_FUZZED(-91457), max(_GLF_FUZZED(-91457), _GLF_FUZZED(-91457))))), clamp(_GLF_FUZZED(-91457), _GLF_IDENTITY(_GLF_FUZZED(-91457), (_GLF_FUZZED(-91457)) | 0), _GLF_FUZZED(-91457))), (_GLF_FUZZED(-91457)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_FUZZED(-91457))))))) | 0)))) / 1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457)), ((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457))) | 0), (false ? _GLF_FUZZED(58701) : _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457)), ((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457))) | 0), 0 + (_GLF_IDENTITY((true ? _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), ~ (~ (_GLF_IDENTITY(min(4, 4), (false ? _GLF_FUZZED((72991 / 36840)) : min(_GLF_IDENTITY(4, max(4, 4)), 4))))))) : _GLF_FUZZED(-91457)), _GLF_IDENTITY(((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), min(4, 4)) : _GLF_FUZZED(-91457))), (true ? _GLF_IDENTITY(((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), min(4, 4)) : _GLF_FUZZED(-91457))), (((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), min(4, 4)) : _GLF_FUZZED(-91457)))) >> 0) : _GLF_FUZZED(92755))) | 0))))), _GLF_IDENTITY(((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457))) / 1, min(((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457))) / 1, _GLF_IDENTITY(((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457))) / 1, (((true ? _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), clamp(_GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(min(4, 4), (min(4, 4)) - 0)) - 0), min(4, 4), min(4, 4)))) : _GLF_FUZZED(-91457))) / _GLF_IDENTITY(1, 0 + (1))) | (_GLF_IDENTITY(((true ? _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), int(ivec2(min(4, 4), 1)))) : _GLF_FUZZED(-91457))) / 1, (true ? ((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457))) / 1 : _GLF_FUZZED(-52223))))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457)), ((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457))) | 0), (_GLF_IDENTITY((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457)), int(ivec3((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457)), 1, 1)))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457)), ((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457))) ^ 0)) | 0), (_GLF_IDENTITY((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457)), int(ivec3((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457)), 1, 1)))) / 1)) * (0 | 1))), (_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))) : _GLF_IDENTITY(_GLF_FUZZED(-91457), (_GLF_FUZZED(-91457)) | (_GLF_FUZZED(-91457)))), ((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457))) | _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) / 1)), min(~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) / 1)), ~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) / 1))))))), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) | (4)))), min(4, 4)) : _GLF_FUZZED(-91457))) / 1)))) / 1)), 0 | ((false ? _GLF_FUZZED(ivec4(_GLF_IDENTITY(-5649, 0 ^ (-5649)), 82221, -79292, -71559).x) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), clamp(_GLF_IDENTITY(~ (4), (~ (4)) << 0), ~ (4), ~ (4))))))) : _GLF_FUZZED(-91457)), _GLF_IDENTITY((_GLF_IDENTITY((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_IDENTITY(_GLF_FUZZED(-91457), clamp(_GLF_FUZZED(_GLF_IDENTITY(-91457, max(_GLF_IDENTITY(-91457, clamp(-91457, -91457, -91457)), -91457))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-91457), clamp(_GLF_FUZZED(-91457), _GLF_IDENTITY(_GLF_FUZZED(-91457), (_GLF_FUZZED(-91457)) | 0), _GLF_FUZZED(-91457))), (_GLF_FUZZED(-91457)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-91457), max(_GLF_IDENTITY(_GLF_FUZZED(-91457), ~ (~ (_GLF_FUZZED(-91457)))), _GLF_IDENTITY(_GLF_FUZZED(-91457), max(_GLF_FUZZED(-91457), _GLF_FUZZED(-91457))))), clamp(_GLF_FUZZED(-91457), _GLF_IDENTITY(_GLF_FUZZED(-91457), (_GLF_FUZZED(-91457)) | 0), _GLF_FUZZED(-91457))), (_GLF_FUZZED(-91457)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_FUZZED(-91457)))), (_GLF_IDENTITY((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_IDENTITY(_GLF_FUZZED(-91457), clamp(_GLF_FUZZED(_GLF_IDENTITY(-91457, max(_GLF_IDENTITY(-91457, clamp(-91457, -91457, -91457)), -91457))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-91457), clamp(_GLF_FUZZED(-91457), _GLF_IDENTITY(_GLF_FUZZED(-91457), (_GLF_FUZZED(-91457)) | 0), _GLF_FUZZED(-91457))), (_GLF_FUZZED(-91457)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-91457), max(_GLF_IDENTITY(_GLF_FUZZED(-91457), ~ (~ (_GLF_FUZZED(-91457)))), _GLF_IDENTITY(_GLF_FUZZED(-91457), max(_GLF_FUZZED(-91457), _GLF_FUZZED(-91457))))), clamp(_GLF_FUZZED(-91457), _GLF_IDENTITY(_GLF_FUZZED(-91457), (_GLF_FUZZED(-91457)) | 0), _GLF_FUZZED(-91457))), (_GLF_FUZZED(-91457)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_FUZZED(-91457)))), 0 ^ ((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_IDENTITY(_GLF_FUZZED(-91457), clamp(_GLF_FUZZED(_GLF_IDENTITY(-91457, max(_GLF_IDENTITY(-91457, clamp(-91457, -91457, -91457)), -91457))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-91457), clamp(_GLF_FUZZED(-91457), _GLF_IDENTITY(_GLF_FUZZED(-91457), (_GLF_FUZZED(-91457)) | 0), _GLF_FUZZED(-91457))), (_GLF_FUZZED(-91457)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-91457), max(_GLF_IDENTITY(_GLF_FUZZED(-91457), ~ (~ (_GLF_FUZZED(-91457)))), _GLF_IDENTITY(_GLF_FUZZED(-91457), max(_GLF_FUZZED(-91457), _GLF_FUZZED(-91457))))), clamp(_GLF_FUZZED(-91457), _GLF_IDENTITY(_GLF_FUZZED(-91457), (_GLF_FUZZED(-91457)) | 0), _GLF_FUZZED(-91457))), (_GLF_FUZZED(-91457)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_FUZZED(-91457))))))) | 0)), 1 * ((_GLF_IDENTITY((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_IDENTITY(_GLF_FUZZED(-91457), clamp(_GLF_FUZZED(_GLF_IDENTITY(-91457, max(_GLF_IDENTITY(-91457, clamp(-91457, -91457, -91457)), -91457))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-91457), clamp(_GLF_FUZZED(-91457), _GLF_IDENTITY(_GLF_FUZZED(-91457), (_GLF_FUZZED(-91457)) | 0), _GLF_FUZZED(-91457))), (_GLF_FUZZED(-91457)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-91457), max(_GLF_IDENTITY(_GLF_FUZZED(-91457), ~ (~ (_GLF_FUZZED(-91457)))), _GLF_IDENTITY(_GLF_FUZZED(-91457), max(_GLF_FUZZED(-91457), _GLF_FUZZED(-91457))))), clamp(_GLF_FUZZED(-91457), _GLF_IDENTITY(_GLF_FUZZED(-91457), (_GLF_FUZZED(-91457)) | 0), _GLF_FUZZED(-91457))), (_GLF_FUZZED(-91457)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_FUZZED(-91457)))), (_GLF_IDENTITY((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_IDENTITY(_GLF_FUZZED(-91457), clamp(_GLF_FUZZED(_GLF_IDENTITY(-91457, max(_GLF_IDENTITY(-91457, clamp(-91457, -91457, -91457)), -91457))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-91457), clamp(_GLF_FUZZED(-91457), _GLF_IDENTITY(_GLF_FUZZED(-91457), (_GLF_FUZZED(-91457)) | 0), _GLF_FUZZED(-91457))), (_GLF_FUZZED(-91457)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-91457), max(_GLF_IDENTITY(_GLF_FUZZED(-91457), ~ (~ (_GLF_FUZZED(-91457)))), _GLF_IDENTITY(_GLF_FUZZED(-91457), max(_GLF_FUZZED(-91457), _GLF_FUZZED(-91457))))), clamp(_GLF_FUZZED(-91457), _GLF_IDENTITY(_GLF_FUZZED(-91457), (_GLF_FUZZED(-91457)) | 0), _GLF_FUZZED(-91457))), (_GLF_FUZZED(-91457)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_FUZZED(-91457)))), 0 ^ ((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_IDENTITY(_GLF_FUZZED(-91457), clamp(_GLF_FUZZED(_GLF_IDENTITY(-91457, max(_GLF_IDENTITY(-91457, clamp(-91457, -91457, -91457)), -91457))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-91457), clamp(_GLF_FUZZED(-91457), _GLF_IDENTITY(_GLF_FUZZED(-91457), (_GLF_FUZZED(-91457)) | 0), _GLF_FUZZED(-91457))), (_GLF_FUZZED(-91457)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-91457), max(_GLF_IDENTITY(_GLF_FUZZED(-91457), ~ (~ (_GLF_FUZZED(-91457)))), _GLF_IDENTITY(_GLF_FUZZED(-91457), max(_GLF_FUZZED(-91457), _GLF_FUZZED(-91457))))), clamp(_GLF_FUZZED(-91457), _GLF_IDENTITY(_GLF_FUZZED(-91457), (_GLF_FUZZED(-91457)) | 0), _GLF_FUZZED(-91457))), (_GLF_FUZZED(-91457)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_FUZZED(-91457))))))) | 0)))) / 1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457)), ((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457))) | 0), (false ? _GLF_FUZZED(58701) : _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457)), ((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457))) | 0), 0 + (_GLF_IDENTITY((true ? _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), ~ (~ (_GLF_IDENTITY(min(4, 4), (false ? _GLF_FUZZED((72991 / 36840)) : min(_GLF_IDENTITY(4, max(4, 4)), 4))))))) : _GLF_FUZZED(-91457)), _GLF_IDENTITY(((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), min(4, 4)) : _GLF_FUZZED(-91457))), (true ? _GLF_IDENTITY(((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), min(4, 4)) : _GLF_FUZZED(-91457))), (((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), min(4, 4)) : _GLF_FUZZED(-91457)))) >> 0) : _GLF_FUZZED(92755))) | 0))))), _GLF_IDENTITY(((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457))) / 1, min(((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457))) / 1, _GLF_IDENTITY(((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457))) / 1, (((true ? _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), clamp(_GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(min(4, 4), (min(4, 4)) - 0)) - 0), min(4, 4), min(4, 4)))) : _GLF_FUZZED(-91457))) / _GLF_IDENTITY(1, 0 + (1))) | (_GLF_IDENTITY(((true ? _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), int(ivec2(min(4, 4), 1)))) : _GLF_FUZZED(-91457))) / 1, (true ? ((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457))) / 1 : _GLF_FUZZED(-52223))))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457)), ((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457))) | 0), (_GLF_IDENTITY((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457)), int(ivec3((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457)), 1, 1)))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457)), ((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457))) ^ 0)) | 0), (_GLF_IDENTITY((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457)), int(ivec3((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457)), 1, 1)))) / 1)) * (0 | 1))), (_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))) : _GLF_IDENTITY(_GLF_FUZZED(-91457), (_GLF_FUZZED(-91457)) | (_GLF_FUZZED(-91457)))), ((true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-91457))) | _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) / 1)), min(~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) / 1)), ~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) / 1))))))), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) | (4)))), min(4, 4)) : _GLF_FUZZED(-91457))) / 1)))) / 1))))) : _GLF_IDENTITY(_GLF_FUZZED(-45163), clamp(_GLF_IDENTITY(_GLF_FUZZED(-45163), max(_GLF_FUZZED(-45163), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-45163), min(_GLF_FUZZED(_GLF_IDENTITY(-45163, (-45163) | (-45163))), _GLF_IDENTITY(_GLF_FUZZED(-45163), (false ? _GLF_FUZZED(-8668) : _GLF_IDENTITY(_GLF_FUZZED(-45163), max(_GLF_FUZZED(-45163), _GLF_FUZZED(-45163))))))), _GLF_IDENTITY(0 ^ (_GLF_FUZZED(-45163)), 0 | (0 ^ (_GLF_FUZZED(-45163))))))), _GLF_FUZZED(_GLF_IDENTITY(-45163, (-45163) - 0)), _GLF_IDENTITY(_GLF_FUZZED(-45163), (_GLF_FUZZED(-45163)) | (_GLF_FUZZED(-45163))))))))) - 0), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY(int(false), max(_GLF_IDENTITY(int(false), (_GLF_IDENTITY(int(false), (int(false)) << 0)) | 0), int(false)))) : _GLF_IDENTITY(4, (4) | 0))), 64, _GLF_IDENTITY(0, (0) << (-23617 & 0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
