#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(1.5, 624.848, 429.787, 7.2)), (_GLF_FUZZED(mat2(1.5, 624.848, 429.787, 7.2))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))))) * (injectionSwitch)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true)))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, cos(0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) / 1.0), 0.0)))))))))))))) || false), false, false))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2953.7501) : injectionSwitch.y))), float(_GLF_FUZZED(3.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2953.7501) : injectionSwitch.y))), float(_GLF_FUZZED(3.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2953.7501) : injectionSwitch.y))), float(_GLF_FUZZED(3.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(acosh(injectionSwitch)) : injectionSwitch)).y))))))))))), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), true && (false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))), (injectionSwitch.x > injectionSwitch.y))) && true), true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x < injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-18.76)), bool(false))))), injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / 1.0)) / 1.0) - 0.0)) - 0.0)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec2(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), false), true))))))))) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)) : _GLF_FUZZED(tan(injectionSwitch)))).x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec2(bool(bvec3(false, false, true)), false)))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x))))), 1.0, 0.0, 0.0), (mat2x3(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) + sqrt(0.0))))), 1.0, 0.0, 0.0)) * mat2(1.0))))) - 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / sqrt(vec2(1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(1.0), 0.0, 1.0))))).y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, 1 * (_injected_loop_counter --)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       continue;
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))))))))
            return;
           continue;
          }
         if(_GLF_DEAD(false))
          continue;
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           continue;
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           continue;
          }
         if(_GLF_DEAD(false))
          break;
         break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             break;
            }
           break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            return;
           continue;
          }
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        break;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))), false, true, true)))) || false))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_DEAD(false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))) && true))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, min(1.0, 1.0)) * (injectionSwitch.x)), 1.0, 0.0, abs(1.0)))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)), false || (_GLF_DEAD(false)))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(-86.79)), bool(false))), injectionSwitch.y, injectionSwitch.y))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.4)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), false, true))), true, true))), false, true)))) || false))), (bool(bvec4(false, true, true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((false)) || false) || false), (injectionSwitch.x > injectionSwitch.y))))) || false)), (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true, false || ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))).x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), uint(_GLF_ONE(1.0, injectionSwitch.y))), min(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec2(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)))) / uvec2(1u, 1u))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-4330.4133), mix(float(_GLF_FUZZED(-4330.4133)), float(_GLF_FUZZED(-7996.3026)), bool(false))), (injectionSwitch)[1]), mix(_GLF_IDENTITY(vec2((vec2(_GLF_FUZZED(-4330.4133), (injectionSwitch)[1]))[0], _GLF_FUZZED(vec4(292.787, -20.51, 61.87, -226.943).r)), vec2(0.0, 0.0) + (vec2((vec2(_GLF_FUZZED(-4330.4133), (injectionSwitch)[1]))[0], _GLF_FUZZED(vec4(292.787, -20.51, 61.87, -226.943).r)))), vec2(_GLF_FUZZED(807.421), (vec2(_GLF_FUZZED(-4330.4133), (injectionSwitch)[1]))[1]), bvec2(false, true))), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(28.34)), mix(float(float(_GLF_FUZZED(28.34))), float(_GLF_FUZZED((- -5.0))), bool(_GLF_IDENTITY(false, ! (! (false)))))), float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))), vec3(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.4)), bool(false))), 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(mix(float(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3((vec3(1.0, 0.0, 0.0))[0], (vec3(1.0, 0.0, 0.0))[1], _GLF_FUZZED(-27.85)), vec3(_GLF_FUZZED(805.828), _GLF_FUZZED(float(49695)), (vec3(1.0, 0.0, 0.0))[2]), bvec3(false, _GLF_IDENTITY(false, (false) && true), true))), max(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), clamp(1.0, 1.0, 1.0)), 0.0, 0.0), (_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec3(8.5, -3.2, 8818.7786)) : _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))) - vec3(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, abs(0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))))), float(_GLF_FUZZED(-44.67)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), bool(bool(_GLF_IDENTITY(false, true && (false))))))), float(mat3x4(mix(float(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-44.67)), (float(_GLF_FUZZED(-44.67))) - 0.0), bool(false)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0)))), float(_GLF_FUZZED(-5.0)), bool(false))), 1.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, log(1.0), 0.0, tan(0.0)))))) * ((injectionSwitch)[0])), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(1.1, clamp(_GLF_IDENTITY(1.1, (true ? 1.1 : _GLF_FUZZED(6367.5878))), 1.1, 1.1))), float(vec2(_GLF_FUZZED(1.1), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(764.122) : _GLF_IDENTITY(0.0, float(float(0.0)))))) * 1.0))))), bvec2(true, _GLF_IDENTITY(false, (false) && true)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec3(false || (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))) || (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))) || (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))), ! (! (_GLF_IDENTITY(false, false || (false)))))))) || false), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-37.93)), bvec2(true, false))).y, mix(float(_GLF_FUZZED((- 143.903))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3311.7146) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(47.47)), float(1.0), bool(true)))) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(66.34, 9203.3322)) : mat2(1.0) * (injectionSwitch))), (true ? mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) : _GLF_FUZZED(vec2(-8.0, -2548.5351))))), injectionSwitch)).y)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-3311.7146, (-3311.7146) - 0.0)) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(26.27)), vec2(_GLF_FUZZED(8.3), (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ 0)]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y)))))) * vec2(1.0, 1.0)).y, injectionSwitch.y))), ((false ? _GLF_FUZZED(_GLF_IDENTITY(-3311.7146, (-3311.7146) - 0.0)) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-36.33), _GLF_FUZZED(float(-2318))), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec2((injectionSwitch)[0], 1.0))), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(26.27)), vec2(_GLF_FUZZED(8.3), (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ 0)]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * vec2(1.0, 1.0)).y, injectionSwitch.y)))) + _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-9.0) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(-3311.7146) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), float(mat2x3(false ? _GLF_FUZZED(-9.0) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), injectionSwitch)).y, float(mat3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))), bool(bvec4(bool(! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))), false, true, true))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(59.27)), float(sin(0.0)), bool(true)))) - 0.0), 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-3311.7146) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(14.38) : false ? _GLF_FUZZED(-3311.7146) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), abs(0.0), determinant(mat3(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))) + _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(74.04)))))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, exp(0.0), 0.0)))), (false ? _GLF_FUZZED(64.96) : _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-9.0) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3311.7146) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), float(mat2x3(false ? _GLF_FUZZED(-9.0) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y, float(mat3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (1.0)), injectionSwitch.y), 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-3311.7146) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(14.38) : false ? _GLF_FUZZED(-3311.7146) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), abs(0.0), determinant(mat3(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (true ? 0.0 : _GLF_FUZZED(74.04)))))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(exp(0.0), clamp(_GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(7.5)), float(exp(0.0)), bool(true))), exp(0.0), _GLF_IDENTITY(exp(0.0), (exp(0.0)) * 1.0))), 0.0)))), float(mat4x3((_GLF_IDENTITY(false ? _GLF_FUZZED(-9.0) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7053.8972)), bool(false)))) / 1.0))), (false ? _GLF_FUZZED(-3311.7146) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), float(mat2x3(false ? _GLF_FUZZED(-9.0) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y, float(mat3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))) : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(-3311.7146) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(false ? _GLF_FUZZED(-3311.7146) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), false ? _GLF_FUZZED(-3311.7146) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (false ? _GLF_FUZZED(14.38) : false ? _GLF_FUZZED(-3311.7146) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(-2.3)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0)))), bool(true))))))))), abs(0.0), determinant(mat3(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(74.04))))), 1.0 * (_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(74.04))))), (true ? max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (true ? min(1.0, 1.0) : _GLF_FUZZED(-33.99))))) + _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(74.04))))) : _GLF_FUZZED(cosh(-4.4))))))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, exp(0.0), 0.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))) - 0.0)), bool(true))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)))), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : (gl_WorkGroupID.x))) - 0u, uint(uvec3(_GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : (gl_WorkGroupID.x))) - 0u, 0u, 0u))))) - 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(7333.6239), _GLF_FUZZED((564.692 - (true ? -13.38 : -5564.5452)))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false, false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), (1u << _GLF_IDENTITY(uint(6u), uint(6u))) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) >> 0u) : _GLF_FUZZED(atomicMax(subgroup_size, 135458u)))), 0u)))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)) * workgroup_id, _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u))) * (workgroup_size * workgroup_id))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(intBitsToFloat(23692)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, false)), bool(_GLF_IDENTITY(bool(bool(bvec2((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, false))), true && (bool(bool(bvec2((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, false)))))))))), ! (! _GLF_IDENTITY((! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(27203u)), (true ? _GLF_FUZZED(float(27203u)) : _GLF_FUZZED(-11.09)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(float(27203u))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), true, false, false))))))), (_GLF_IDENTITY((! (bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false), true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(float(27203u))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))), ((! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(float(27203u))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))) && true)) && true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, false)), bool(_GLF_IDENTITY(bool(bool(bvec2((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, false))), true && (bool(bool(bvec2((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, false)))))))))), ! (! _GLF_IDENTITY((! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(27203u)), (true ? _GLF_FUZZED(float(27203u)) : _GLF_FUZZED(-11.09)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(float(27203u))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), true, false, false))))))), (_GLF_IDENTITY((! (bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false), true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(float(27203u))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))), ((! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(float(27203u))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))) && true)) && true)))), false, _GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, false)), bool(_GLF_IDENTITY(bool(bool(bvec2((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, false))), true && (bool(bool(bvec2((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, false)))))))))), ! (! _GLF_IDENTITY((! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(27203u)), (true ? _GLF_FUZZED(float(27203u)) : _GLF_FUZZED(-11.09)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(float(27203u))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), true, false, false))))))), (_GLF_IDENTITY((! (bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false), true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(float(27203u))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))), ((! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(float(27203u))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))) && true)) && true)))), false, _GLF_IDENTITY(false, (false) && true)), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, false)), bool(_GLF_IDENTITY(bool(bool(bvec2((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, false))), true && (bool(bool(bvec2((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, false)))))))))), ! (! _GLF_IDENTITY((! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(27203u)), (true ? _GLF_FUZZED(float(27203u)) : _GLF_FUZZED(-11.09)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(float(27203u))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), true, false, false))))))), (_GLF_IDENTITY((! (bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false), true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(float(27203u))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))), ((! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(float(27203u))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))) && true)) && true)))), false, _GLF_IDENTITY(false, (false) && true)), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, false)), bool(_GLF_IDENTITY(bool(bool(bvec2((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, false))), true && (bool(bool(bvec2((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, false)))))))))), ! (! _GLF_IDENTITY((! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(27203u)), (true ? _GLF_FUZZED(float(27203u)) : _GLF_FUZZED(-11.09)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(float(27203u))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), true, false, false))))))), (_GLF_IDENTITY((! (bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false), true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(float(27203u))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))), ((! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(float(27203u))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))) && true)) && true)))), false, _GLF_IDENTITY(false, (false) && true)), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, false)), bool(_GLF_IDENTITY(bool(bool(bvec2((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, false))), true && (bool(bool(bvec2((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, false)))))))))), ! (! _GLF_IDENTITY((! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(27203u)), (true ? _GLF_FUZZED(float(27203u)) : _GLF_FUZZED(-11.09)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(float(27203u))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), true, false, false))))))), (_GLF_IDENTITY((! (bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false), true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(float(27203u))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))), ((! (bool(bvec4(_GLF_DEAD(false), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(float(27203u))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))) && true)) && true)))), false, _GLF_IDENTITY(false, (false) && true)), true))))), false)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))) || false), (injectionSwitch.x > injectionSwitch.y) && true))))))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), false || (bool(_GLF_IDENTITY(false, false || (false)))))))))
    return;
   return;
  }
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), 0u ^ ((subgroup_size) | (subgroup_size))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), false || (bool(bool(_GLF_IDENTITY(false, true && (false))))))) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ (subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), ~ (~ (subgroup_local_id))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), uint(uvec4(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), 0u, 0u, 1u)))) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0))))) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), false || (bool(! (false)))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch, injectionSwitch))) - abs(vec2(0.0, 0.0))).x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false, true))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((subgroup_local_id + 1))) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((subgroup_local_id + 1), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))))) ^ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u))))) % subgroup_size), min(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, 0 | (0))), 1, _GLF_IDENTITY(1, min(1, 1))))), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-36764), _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-36764)), min((true ? 1 : _GLF_FUZZED(-36764)), _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-36764, (_GLF_IDENTITY(-36764, max(-36764, -36764))) - 0))), ((true ? 1 : _GLF_FUZZED(-36764))) | (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-36764)), ((true ? 1 : _GLF_FUZZED(-36764))) - 0))))) + 0)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((subgroup_local_id + 1))) % subgroup_size), max((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, 0 | (0))), 1, _GLF_IDENTITY(1, min(1, 1))))), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-36764), _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-36764, 0 ^ (_GLF_IDENTITY(-36764, int(ivec2(-36764, 1))))))), min((true ? 1 : _GLF_FUZZED(-36764)), _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-36764)), _GLF_IDENTITY(((true ? 1 : _GLF_FUZZED(-36764))) | (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-36764)), ((true ? 1 : _GLF_FUZZED(-36764))) - 0)), (((true ? 1 : _GLF_FUZZED(-36764))) | (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-36764)), ((true ? 1 : _GLF_FUZZED(-36764))) - 0))) / 1)))) + 0)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((subgroup_local_id + 1))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, 0 | (0))), 1, _GLF_IDENTITY(1, min(1, 1))))), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-36764), _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-36764)), min((true ? 1 : _GLF_FUZZED(-36764)), _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-36764)), _GLF_IDENTITY(((true ? 1 : _GLF_FUZZED(-36764))) | (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-36764)), ((true ? 1 : _GLF_FUZZED(-36764))) - 0)), min(((true ? 1 : _GLF_FUZZED(-36764))) | (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-36764)), ((true ? 1 : _GLF_FUZZED(-36764))) - 0)), _GLF_IDENTITY(((true ? 1 : _GLF_FUZZED(-36764))) | (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-36764)), ((true ? 1 : _GLF_FUZZED(-36764))) - 0)), (((true ? 1 : _GLF_FUZZED(-36764))) | (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-36764)), ((true ? 1 : _GLF_FUZZED(-36764))) - 0))) ^ 0)))))) + 0)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((subgroup_local_id + 1))) % subgroup_size))), (_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(uvec4(0u, 0u, 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))), (_GLF_IDENTITY(((subgroup_local_id + 1)), max(((subgroup_local_id + 1)), ((subgroup_local_id + 1))))) >> 0u)) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size)), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) + ((0u << _GLF_IDENTITY(uint(6u), uint(6u))) | 0u)) | 0u), subgroup_size, subgroup_size)))))) - 0u, uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((subgroup_local_id + 1), (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))))) ^ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u))))) % subgroup_size), min(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, 0 | (0))), 1, _GLF_IDENTITY(1, min(1, 1))))), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-36764), _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-36764)), min((true ? 1 : _GLF_FUZZED(-36764)), _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-36764, (_GLF_IDENTITY(-36764, max(-36764, -36764))) - 0))), ((true ? 1 : _GLF_FUZZED(-36764))) | (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-36764)), ((true ? 1 : _GLF_FUZZED(-36764))) - 0))))) + 0)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((subgroup_local_id + 1))) % subgroup_size), max((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, 0 | (0))), 1, _GLF_IDENTITY(1, min(1, 1))))), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-36764), _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(-36764, 0 ^ (_GLF_IDENTITY(-36764, int(ivec2(-36764, 1))))))), min((true ? 1 : _GLF_FUZZED(-36764)), _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-36764)), _GLF_IDENTITY(((true ? 1 : _GLF_FUZZED(-36764))) | (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-36764)), ((true ? 1 : _GLF_FUZZED(-36764))) - 0)), (((true ? 1 : _GLF_FUZZED(-36764))) | (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-36764)), ((true ? 1 : _GLF_FUZZED(-36764))) - 0))) / 1)))) + 0)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((subgroup_local_id + 1))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, 0 | (0))), 1, _GLF_IDENTITY(1, min(1, 1))))), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-36764), _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-36764)), min((true ? 1 : _GLF_FUZZED(-36764)), _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-36764)), _GLF_IDENTITY(((true ? 1 : _GLF_FUZZED(-36764))) | (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-36764)), ((true ? 1 : _GLF_FUZZED(-36764))) - 0)), min(((true ? 1 : _GLF_FUZZED(-36764))) | (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-36764)), ((true ? 1 : _GLF_FUZZED(-36764))) - 0)), _GLF_IDENTITY(((true ? 1 : _GLF_FUZZED(-36764))) | (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-36764)), ((true ? 1 : _GLF_FUZZED(-36764))) - 0)), (((true ? 1 : _GLF_FUZZED(-36764))) | (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-36764)), ((true ? 1 : _GLF_FUZZED(-36764))) - 0))) ^ 0)))))) + 0)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((subgroup_local_id + 1))) % subgroup_size))), (_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (uint(uvec4(0u, 0u, 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))), (_GLF_IDENTITY(((subgroup_local_id + 1)), max(((subgroup_local_id + 1)), ((subgroup_local_id + 1))))) >> 0u)) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size)), subgroup_size)), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) + ((0u << _GLF_IDENTITY(uint(6u), uint(6u))) | 0u)) | 0u), subgroup_size, subgroup_size)))))) - 0u, 0u, 0u, 1u))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && (false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && (false)))), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && _GLF_IDENTITY((false), false || ((false)))))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(1.0), 0.0, 0.0, length(sqrt(0.0)), 1.0)), (false ? _GLF_FUZZED(6779.0612) : float(mat2x3(injectionSwitch.x, sqrt(1.0), 0.0, 0.0, length(sqrt(0.0)), 1.0))))) < injectionSwitch.y)) && (false)))) && true, ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(1.0), 0.0, 0.0, length(sqrt(0.0)), 1.0)), (false ? _GLF_FUZZED(6779.0612) : float(mat2x3(injectionSwitch.x, sqrt(1.0), 0.0, 0.0, length(sqrt(0.0)), 1.0))))) < injectionSwitch.y)) && (false)))) && true) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)) || false))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (64) / 1), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))), ((bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))))) || false) && true)), bool(bvec3(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), false, false))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-694.950) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-694.950) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3.1)), float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(69.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(41.26)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) && true), false))).y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) | (_GLF_IDENTITY(_GLF_IDENTITY(read, ~ (~ (_GLF_IDENTITY(read, min(read, read))))), clamp(read, read, read)))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), injectionSwitch)).x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_IDENTITY((vec2(1.0, 1.0))[0], ((vec2(1.0, 1.0))[0]) + 0.0), (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-4.8), _GLF_FUZZED(-431.037)), bvec2(false, false)))).y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), max(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-8.7), min(_GLF_IDENTITY(_GLF_FUZZED(-8.7), (true ? _GLF_FUZZED(-8.7) : _GLF_FUZZED(1.0))), _GLF_IDENTITY(_GLF_FUZZED(-8.7), max(_GLF_FUZZED(-8.7), _GLF_FUZZED(-8.7))))), _GLF_FUZZED(22.78)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((mat2(835.121, -4200.4799, -96.12, 89.24) * injectionSwitch)))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4(1.0) * (mat2x4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))))), injectionSwitch)).y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))), false || ((bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))) || false)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(22.78)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED((mat2(835.121, -4200.4799, _GLF_IDENTITY(-96.12, max(-96.12, -96.12)), 89.24) * injectionSwitch)))), vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, _GLF_IDENTITY(false, (false) && true)), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), false)))))) || false))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
