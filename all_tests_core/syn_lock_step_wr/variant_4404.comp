#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 uvec4 _f0;
 uint workgroup_size;
 vec2 _f1;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 mat4x3 _f1;
 _GLF_struct_0 _f2;
 ivec2 _f3;
 uvec3 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, false)))), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, false))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9175.8419) : injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(251.138)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sin(0.0) + (injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), mat4(1.0) * (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(_GLF_IDENTITY(0.0, float(vec3(0.0, length(vec2(0.0, 0.0)), 1.0))), 0.0)), 0.0)), dot(vec3(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.1) : 1.0)), sqrt(1.0)), vec3(_GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(-75.10))), length(vec2(0.0, 0.0)), 0.0))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)))), 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), (float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), mat4(1.0) * (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2320.0042) : _GLF_IDENTITY(1.0, (1.0) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))), vec3(log(1.0), length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0))))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))) * 1.0)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.7)), float(0.0), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))), 0.0))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4(-7.5, 75.20, -4011.3374, -13.12, -802.753, 67.13, -1.1, 41.86, -812.102, -7.3, -577.842, 5.1, -4.3, -4.2, -0.1, -361.145)) : _GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), (mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) * mat4(1.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), mat4(1.0) * (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0)), 0.0))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(_GLF_IDENTITY(log(1.0), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(log(1.0), float(mat3x4(log(1.0), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 0.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(1.0)), (mat3x4(_GLF_IDENTITY(log(1.0), float(mat3x4(log(1.0), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 0.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(1.0))) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), length(vec2(0.0, 0.0)), 0.0))), determinant(mat4(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(67.31))))), 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-97.33)), bool(false))), 0.0, 0.0, 0.0, 1.0))), mat4(1.0) * (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), mix(vec4(_GLF_FUZZED(6103.4937), (_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), mat4(1.0) * (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(-5.4))), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))[1], _GLF_FUZZED(9371.7184), (_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))))), _GLF_IDENTITY(length(vec2(0.0, 0.0)), max(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0)))), 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), mat4(1.0) * (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))[3]), vec4((_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-8957.1812))), 0.0)), 0.0))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, exp(0.0), exp(0.0), 1.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)), min(float(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, exp(0.0), exp(0.0), 1.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)), float(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, exp(0.0), exp(0.0), 1.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))))), 1.0))), mat4(1.0) * (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0))), determinant(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 0.0, 0.0, 0.0, 1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 0.0, 0.0, 0.0, 1.0))))))))[0], _GLF_FUZZED(13.34), _GLF_IDENTITY((_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), mat4(1.0) * (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))[2], ((_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(_GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), _GLF_IDENTITY(log(1.0), float(mat4(_GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0))))), length(vec2(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0)))), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.2)), float(0.0), bool(true))))), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1263.4558)), bool(false))))), 0.0, 0.0, 1.0))), mat4(1.0) * (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))[2]) * 1.0), _GLF_FUZZED(-50.25)), bvec4(true, false, true, false)))), float(vec3(float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, (1.0) + 0.0))), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), mat4(1.0) * (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), mix(vec4(_GLF_FUZZED(6103.4937), (_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0))), determinant(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat3x2(mat3x4(mat3x2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0))), (mat3x2(mat3x4(mat3x2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0)))) * mat3(1.0)))), min(float(_GLF_IDENTITY(mat3x2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat3x2(mat3x4(mat3x2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0))), (mat3x2(mat3x4(mat3x2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0)))) * mat3(1.0)))), float(_GLF_IDENTITY(mat3x2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat3x2(mat3x4(mat3x2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0))), (mat3x2(mat3x4(mat3x2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0)))) * mat3(1.0))))))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(-276.512, -81.40, -8.1, 3120.4868, 4.5, 9.6, -4.9, 5.7, 38.16, 220.339, 4458.8427, -365.367, -1.9, 9.7, 379.457, -6.1)) : mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat3x2(mat3x4(mat3x2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0))), (mat3x2(mat3x4(mat3x2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0)))) * mat3(1.0)))), min(float(_GLF_IDENTITY(mat3x2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat3x2(mat3x4(mat3x2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0))), (mat3x2(mat3x4(mat3x2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0)))) * mat3(1.0)))), float(_GLF_IDENTITY(mat3x2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat3x2(mat3x4(mat3x2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0))), (mat3x2(mat3x4(mat3x2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0)))) * mat3(1.0))))))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), mat4(1.0) * (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))[1], _GLF_FUZZED(9371.7184), (_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), mat4(1.0) * (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))[3]), vec4((_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), min(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)))), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), mat4(1.0) * (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), _GLF_IDENTITY(vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0), mix(vec3(_GLF_FUZZED(5845.6566), (vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0))[1], _GLF_FUZZED(81.39)), vec3((vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0))[0], _GLF_FUZZED((vec4(9.3, -3979.6767, 6.7, 36.79).z)), (vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))[0], _GLF_FUZZED(13.34), _GLF_IDENTITY((_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(_GLF_IDENTITY(1.0, 1.0 * (1.0))), length(vec2(0.0, 0.0)), 0.0))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), mat4(1.0) * (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 1.0, 0.0)), mix(float(float(vec4(0.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-55.65)), bool(false)))), 0.0, 1.0))))))[2], ((_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) + 0.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), mat4(1.0) * (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 1.0, sqrt(1.0)), clamp(vec3(1.0, 1.0, sqrt(1.0)), vec3(1.0, 1.0, sqrt(1.0)), vec3(1.0, 1.0, sqrt(1.0)))), _GLF_IDENTITY(vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0), vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0))))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(length(vec3(803.593, 8786.4461, 3237.5953))))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))[2]) * 1.0), _GLF_FUZZED(-50.25)), bvec4(true, false, true, false)))), 1.0, exp(0.0))))) * 1.0))) / 1.0) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) - 0.0)), vec3(log(1.0), length(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)))), 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, length(0.0), 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, abs(0.0), 0.0, abs(1.0), abs(1.0), _GLF_IDENTITY(0.0, (0.0) + length(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), 0.0, 1.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), exp(log(1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, sqrt(0.0), abs(1.0), 0.0, tan(0.0), 1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))), 1.0))), mat4(1.0) * (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(_GLF_IDENTITY(1.0, 0.0 + (1.0))), length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) + 0.0))), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0))), determinant(mat4(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, mix(float(_GLF_FUZZED(27.25)), float((1.0) - 0.0), bool(true)))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))), 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, sqrt(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-468.772) : 0.0))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-532.531) : 0.0))), float(_GLF_FUZZED(-9.6)), bool(false))), (false ? _GLF_FUZZED(-468.772) : 0.0))), mix(float(_GLF_FUZZED(1.0)), float((_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-468.772) : 0.0)))), bool(true))), (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-468.772) : 0.0))), (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-468.772) : 0.0, (true ? false ? _GLF_FUZZED(-468.772) : 0.0 : _GLF_FUZZED(tan(400.782))))))))) / 1.0), 0.0, 0.0, 1.0)))))), (float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0))), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), mat4(1.0) * (vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0)), dot(vec3(1.0, 1.0, sqrt(1.0)), vec3(log(1.0), length(vec2(0.0, 0.0)), 0.0))), determinant(mat4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0)), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(4.7) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))) * 1.0)) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.2), _GLF_FUZZED(9.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)) || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(float(13302u))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(float(13302u))), (float(_GLF_FUZZED(float(13302u)))) - 0.0), float(_GLF_FUZZED(float(13302u))), float(_GLF_FUZZED(float(13302u))))), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(uvec2(1u), mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_struct_0(uvec4(1u), _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, _GLF_IDENTITY(vec2(1.0), mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(1.0))[0], clamp((vec2(1.0))[0], _GLF_IDENTITY((vec2(1.0))[0], _GLF_IDENTITY(((_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0))))[0]) - 0.0, float(_GLF_IDENTITY(mat3x2(((_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0))))[0]) - 0.0, 1.0, 0.0, 0.0, abs(determinant(mat2(0.0, 0.0, 1.0, 0.0))), 1.0), mat2(1.0) * (mat3x2(((_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0))))[0]) - 0.0, 1.0, 0.0, 0.0, abs(determinant(mat2(0.0, 0.0, 1.0, 0.0))), 1.0)))))), (vec2(1.0))[0])), (vec2(1.0))[1]), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(1.0))[0], clamp((vec2(1.0))[0], _GLF_IDENTITY((vec2(1.0))[0], (_GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0)))), clamp((_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0)))), min((_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0)))), (_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0)))))), (_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0))))))[0]) - 0.0), (vec2(1.0))[0])), (vec2(1.0))[1]), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY((vec2(1.0))[0], clamp((vec2(1.0))[0], _GLF_IDENTITY((vec2(1.0))[0], (_GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0)))), clamp((_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0)))), min((_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0)))), (_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0)))))), (_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0))))))[0]) - 0.0), (vec2(1.0))[0])), (vec2(1.0))[1]))), vec2(_GLF_IDENTITY((vec2(1.0))[0], clamp((vec2(1.0))[0], _GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * mat2(1.0)))[0], ((_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED((mat2(-470.021, 95.46, 2.1, -1.4) * vec2(-83.71, 2.7))) : vec2(1.0))), min(vec2(1.0), vec2(1.0))))[0]) - 0.0), (vec2(1.0))[0])), (vec2(1.0))[1]), vec2(_GLF_IDENTITY((vec2(1.0))[0], clamp((vec2(1.0))[0], _GLF_IDENTITY((vec2(1.0))[0], ((_GLF_IDENTITY(vec2(1.0), min(vec2(1.0), vec2(1.0))))[0]) - 0.0), (vec2(1.0))[0])), (vec2(1.0))[1]))), vec2(_GLF_FUZZED(21.42), _GLF_FUZZED(-991.254)), bvec2(false, false)))), ivec2(1), _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((true ? uvec3(1u) : _GLF_FUZZED(uvec3(173887u, 39134u, 150286u))), ~ (~ ((true ? uvec3(1u) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(173887u, (false ? _GLF_FUZZED(num_workgroup) : 173887u)), _GLF_IDENTITY(39134u, clamp(39134u, 39134u, 39134u)), 150286u))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), true)), (bool(bvec4(! (false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_struct_replacement_1._f2.workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sqrt(0.0) + (injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.5)), float(injectionSwitch.y), bool(true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true, false)), ! (! (bool(bvec4(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true, false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) ^ 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, false))) && (false))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, false)))) || false))) || false))) || false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, 0 | (0))], _GLF_IDENTITY(injectionSwitch[1], float(vec2(injectionSwitch[1], 1.0))))).y))))))))) || false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))) + (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, sin(0.0), 1.0, 1.0, 0.0, length(sqrt(vec3(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.8)))) / 1.0), 0.0)))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   subgroupBarrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(step(46.15, 886.721)))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), bool(bvec4((false), false, false, false))))))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false), true))), false, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, log(1.0), abs(0.0)), (true ? mat3x2(injectionSwitch, 1.0, 0.0, log(1.0), abs(0.0)) : _GLF_FUZZED(mat3x2(-12.54, -244.279, 56.13, 536.634, -950.644, 491.456)))))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) ^ 0))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
}
