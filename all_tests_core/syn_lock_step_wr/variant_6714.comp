#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.8)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), mix(vec2(_GLF_FUZZED(-33.80), _GLF_FUZZED(-137.722)), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.8)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.8)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))[1]), bvec2(true, true))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && true)))) && true)))), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) && true)), ! (! (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))))))))) && _GLF_IDENTITY(true, true && (true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_IDENTITY(true, ! (! (true))), false, true))) && true, (_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))) && true) || false))))), (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))), bool(bool(_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))))))))) && true, (_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))) && true) || false))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))) && true, true && ((bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))) && true, (_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))) && true) || false))))), ! (! (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))) && true, (_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))) && true) || false)))))))), (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))) && true)) || false), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))) && true, (_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))) && true) || false))), true && (false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))) && true, (_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))) && true) || false))))))), (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))) && true, (_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))) && true) || false))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))))) && true)) || false), false, false)), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, _GLF_IDENTITY(false, bool(bool(false))), true))) && true, (_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))) && true) || false))))), (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))) && true, (_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))) && true) || false))))), (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))) && true)) || false), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, _GLF_IDENTITY(false, bool(bool(false))), true))) && true, (_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))) && true) || false))))), (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))) && true, (_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))) && true) || false))))), (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))) && true)) || false), false, false))))), false))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(false, (false) && true))), true && (! (false || (_GLF_IDENTITY(false, (false) && true)))))))))) && true)), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, false), bvec3(bvec4(bvec3((false), false, false), true))))), true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) || false), false, false), bvec3(bvec4(bvec3((false), false, false), true))))), _GLF_IDENTITY((_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3((false), false, false), true)))))) || false, bool(bool((_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3((false), false, false), true)))))) || false)))), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, false), bvec3(bvec4(bvec3((false), false, false), true))))), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3((false), false, false), true)))))) || false), true, false, true)), true))))))) && true, (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, false, true)), (bool(bvec4((false), true, false, true))) || false)) && true) || false))))), (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))) && true)))))), false || ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true)))))), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(false, (false) && true))), true && (! (false || (_GLF_IDENTITY(false, (false) && true)))))))))) && true)), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, false), bvec3(bvec4(bvec3((false), false, false), true))))), true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, false), bvec3(bvec4(bvec3((false), false, false), true))))), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3((false), false, false), true)))))) || false), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, false), bvec3(bvec4(bvec3((false), false, false), true))))), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(bvec3((false), false, false), true)))))) || false), true, false, true)), true))))))) && true, (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, false, true)), (bool(bvec4((false), true, false, true))) || false)) && true) || false))))), (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, false || ((false) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x2(mat2(1.0) * (injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), 1.0, 0.0)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.7), _GLF_FUZZED(-7.5)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(700.101, 588.091, 2.3, -691.053, 3073.6731, -7158.7159)) : mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-75.78)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), (float(vec2(0.0, 0.0))) / 1.0))), bool(true))))))), 1.0 * (float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(700.101, 588.091, 2.3, -691.053, 3073.6731, -7158.7159)) : mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 1.0, 1.0, 0.0))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(14.74)), bvec2(true, false)))) - tan(vec2(0.0, 0.0))), 1.0, 0.0))).y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7340.1248)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)))), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7340.1248)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))))) || false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.1)), bool(false))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) || false)))))))) && true))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(gl_NumWorkGroups[0], (gl_NumWorkGroups[0]) ^ (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.8), _GLF_FUZZED(-3.8)), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(0.0 + ((injectionSwitch)[0]), float(mat2(0.0 + ((injectionSwitch)[0]), 1.0, exp(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)))))), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(8.8), _GLF_FUZZED(-3.8)), mat2(1.0) * (vec2(_GLF_FUZZED(8.8), _GLF_FUZZED(-3.8)))), vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(0.0 + ((injectionSwitch)[0]), float(mat2(0.0 + ((injectionSwitch)[0]), 1.0, exp(0.0), determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), mat2(mat2x4(mat2(0.0, 0.0, 0.0, 0.0))))))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(2.3), _GLF_FUZZED(-2332.8169)), bvec2(false, false))))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID.x), 0u | (~ (gl_WorkGroupID.x)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))), true, true, true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))), true, true))))), ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))), true, true)))))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3.8)), float(injectionSwitch.y), bool(true)))))))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, (workgroup_id) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))) >> (1u ^ _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) | 0u)), _GLF_IDENTITY((~ (_GLF_IDENTITY(1u, (1u) | 0u))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((1u))) | 0u))), 0u ^ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), min(_GLF_IDENTITY(1u, (1u) | 0u), _GLF_IDENTITY(1u, (1u) | 0u)))))))) / 1u) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) | 0u)), (~ (_GLF_IDENTITY(1u, (1u) | 0u))) * 1u)))))));
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-534.327) : injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)).x))), float(_GLF_FUZZED(512.930)), bool(false)), mix(float(mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-534.327) : injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) + vec2(0.0, 0.0)).x))), float(_GLF_FUZZED(512.930)), bool(false))), float(_GLF_FUZZED(-5.5)), bool(false)))) > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec3(subgroup_local_id + 1, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u + (_GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)) | 0u, clamp((uint(3u)) | 0u, (uint(3u)) | 0u, (uint(3u)) | 0u))))))), (0u | 0u))))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_DEAD(false)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y, injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))), false)))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false, ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0), (mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2820.0894)), vec2(_GLF_FUZZED(916.883), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0)))), (mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0, log(1.0), 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), (float(mat4(0.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0, log(1.0), 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0))) / 1.0)))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.4, 9.0)))), 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.4, 9.0)))), 1.0, 0.0))))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), (_GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (sqrt(vec2(1.0, 1.0))))) + vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2820.0894)), vec2(_GLF_FUZZED(916.883), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0, 0.0))), abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0), (mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0)) / mat3(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-2820.0894, clamp(_GLF_IDENTITY(-2820.0894, mix(float(_GLF_FUZZED((+ -5.4))), float(-2820.0894), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(-2820.0894, (-2820.0894) / 1.0), _GLF_IDENTITY(-2820.0894, clamp(-2820.0894, -2820.0894, -2820.0894)))))), vec2(_GLF_FUZZED(916.883), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))) || false) && true)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))), false)))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false, ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0), (mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2820.0894)), vec2(_GLF_FUZZED(916.883), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0)))), (mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0, log(1.0), 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), (float(mat4(0.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0, log(1.0), 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0))) / 1.0)))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.4, 9.0)))), 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.4, 9.0)))), 1.0, 0.0))))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), (_GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (sqrt(vec2(1.0, 1.0))))) + vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2820.0894)), vec2(_GLF_FUZZED(916.883), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0, 0.0))), abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0), (mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0)) / mat3(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-2820.0894, clamp(_GLF_IDENTITY(-2820.0894, mix(float(_GLF_FUZZED((+ -5.4))), float(-2820.0894), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(-2820.0894, (-2820.0894) / 1.0), _GLF_IDENTITY(-2820.0894, clamp(-2820.0894, -2820.0894, -2820.0894)))))), vec2(_GLF_FUZZED(916.883), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))) || false) && true)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))), false)))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false, ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0), (mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2820.0894)), vec2(_GLF_FUZZED(916.883), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0)))), (mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0, log(1.0), 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), (float(mat4(0.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0, log(1.0), 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0))) / 1.0)))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.4, 9.0)))), 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.4, 9.0)))), 1.0, 0.0))))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), (_GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (sqrt(vec2(1.0, 1.0))))) + vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2820.0894)), vec2(_GLF_FUZZED(916.883), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0, 0.0))), abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0), (mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0)) / mat3(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-2820.0894, clamp(_GLF_IDENTITY(-2820.0894, mix(float(_GLF_FUZZED((+ -5.4))), float(-2820.0894), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(-2820.0894, (-2820.0894) / 1.0), _GLF_IDENTITY(-2820.0894, clamp(-2820.0894, -2820.0894, -2820.0894)))))), vec2(_GLF_FUZZED(916.883), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))) || false) && true)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(1.0, 1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))), false))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))), false))))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-3.6)), vec2(_GLF_FUZZED(5.6), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y), true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false, ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0), (mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0), abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2820.0894)), vec2(_GLF_FUZZED(916.883), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch, injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0)))), (mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0, log(1.0), 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), (float(mat4(0.0, 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0, log(1.0), 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0))) / 1.0)))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), vec2(mat2(vec2(mat2x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), injectionSwitch)))), injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.4, 9.0)))), 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.4, 9.0)))), 1.0, 0.0))))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), (_GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (sqrt(vec2(1.0, 1.0))))) + vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2820.0894)), vec2(_GLF_FUZZED(916.883), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat3(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0, 0.0))), abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) / cos(vec2(0.0, 0.0))), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0)) / mat3(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-2820.0894, clamp(_GLF_IDENTITY(-2820.0894, mix(float(_GLF_FUZZED((+ -5.4))), float(-2820.0894), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(-2820.0894, (-2820.0894) / 1.0), _GLF_IDENTITY(-2820.0894, clamp(_GLF_IDENTITY(-2820.0894, float(_GLF_IDENTITY(vec3(-2820.0894, 1.0, 1.0), clamp(vec3(-2820.0894, 1.0, 1.0), vec3(-2820.0894, 1.0, 1.0), _GLF_IDENTITY(vec3(-2820.0894, 1.0, 1.0), clamp(vec3(-2820.0894, 1.0, 1.0), vec3(-2820.0894, 1.0, 1.0), vec3(-2820.0894, 1.0, 1.0))))))), -2820.0894, -2820.0894)))))), vec2(_GLF_FUZZED(916.883), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))) || false) && true))))))) || false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)], clamp(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u), buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))])), 4, 64, _GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, clamp(2, 2, 2)), 0, 1), ivec3(ivec3(ivec3(_GLF_IDENTITY(2, clamp(2, 2, 2)), 0, 1)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)), bool(bvec4(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)), false, false, true)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), float(mat3x4(float(injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, length(0.0), 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-10.67) : injectionSwitch.y)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true))), 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-10.67) : injectionSwitch.y)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true))), 0.0, 0.0))))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(6238.5808, (_GLF_IDENTITY(6238.5808, float(mat4(6238.5808, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) - 0.0))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-10.67) : injectionSwitch.y)), determinant(_GLF_IDENTITY(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true))), 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-10.67) : injectionSwitch.y)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true)), float(_GLF_IDENTITY(mat4x3(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(_GLF_IDENTITY(true, true && (true)))), 1.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, tan(0.0), sqrt(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4x3(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true)), 1.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, tan(0.0), sqrt(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), mat3(1.0) * (mat4x3(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-9.5), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_FUZZED(-9.5), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat3(_GLF_FUZZED(-9.5), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0)))), clamp(float(_GLF_IDENTITY(mat3(_GLF_FUZZED(-9.5), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat3(_GLF_FUZZED(-9.5), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0)))), float(_GLF_IDENTITY(mat3(_GLF_FUZZED(-9.5), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat3(_GLF_FUZZED(-9.5), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0)))), float(_GLF_IDENTITY(mat3(_GLF_FUZZED(-9.5), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat3(_GLF_FUZZED(-9.5), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0)))))))), float(0.0), bool(true)), 1.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, tan(0.0), sqrt(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))), mat4(1.0) * (transpose(_GLF_IDENTITY(mat4x3(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true)), 1.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, tan(0.0), sqrt(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), mat3(1.0) * (mat4x3(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true)), 1.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(tan(0.0), mix(float(_GLF_FUZZED(-3.1)), float(_GLF_IDENTITY(tan(0.0), (tan(0.0)) / 1.0)), bool(true))), sqrt(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))))))))), 0.0, 0.0))))), (true ? float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-10.67) : injectionSwitch.y)), determinant(_GLF_IDENTITY(mat3(0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0), (mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true))), 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-10.67) : injectionSwitch.y)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true)), max(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true))), float(_GLF_FUZZED(9.1)), bool(false))))), mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true))))), 0.0, 0.0))))) : _GLF_FUZZED(3.6)))), bool(true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), float(mat3x4(float(injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, length(0.0), 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-10.67) : injectionSwitch.y)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true))), 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-10.67) : injectionSwitch.y)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true))), 0.0, 0.0))))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(6238.5808, (_GLF_IDENTITY(6238.5808, float(mat4(6238.5808, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) - 0.0))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-10.67) : injectionSwitch.y)), determinant(_GLF_IDENTITY(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true))), 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-10.67) : injectionSwitch.y)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true)), float(_GLF_IDENTITY(mat4x3(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(_GLF_IDENTITY(true, true && (true)))), 1.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, tan(0.0), sqrt(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4x3(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true)), 1.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, tan(0.0), sqrt(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), mat3(1.0) * (mat4x3(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-9.5), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_FUZZED(-9.5), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat3(_GLF_FUZZED(-9.5), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0)))), clamp(float(_GLF_IDENTITY(mat3(_GLF_FUZZED(-9.5), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat3(_GLF_FUZZED(-9.5), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0)))), float(_GLF_IDENTITY(mat3(_GLF_FUZZED(-9.5), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat3(_GLF_FUZZED(-9.5), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0)))), float(_GLF_IDENTITY(mat3(_GLF_FUZZED(-9.5), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat3(_GLF_FUZZED(-9.5), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0)))))))), float(0.0), bool(true)), 1.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, tan(0.0), sqrt(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))), mat4(1.0) * (transpose(_GLF_IDENTITY(mat4x3(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true)), 1.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, tan(0.0), sqrt(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), mat3(1.0) * (mat4x3(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true)), 1.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(tan(0.0), mix(float(_GLF_FUZZED(-3.1)), float(_GLF_IDENTITY(tan(0.0), (tan(0.0)) / 1.0)), bool(true))), sqrt(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))))))))), 0.0, 0.0))))), (true ? float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-10.67) : injectionSwitch.y)), determinant(_GLF_IDENTITY(mat3(0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0), (mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true))), 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-10.67) : injectionSwitch.y)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true)), max(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true))), float(_GLF_FUZZED(9.1)), bool(false))))), mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true))))), 0.0, 0.0))))) : _GLF_FUZZED(3.6)))), bool(true))))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), float(mat3x4(float(injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, length(0.0), 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-10.67) : injectionSwitch.y)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true))), 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-10.67) : injectionSwitch.y)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true))), 0.0, 0.0))))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(6238.5808, (_GLF_IDENTITY(6238.5808, float(mat4(6238.5808, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) - 0.0))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-10.67) : injectionSwitch.y)), determinant(_GLF_IDENTITY(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true))), 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-10.67) : injectionSwitch.y)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true)), float(_GLF_IDENTITY(mat4x3(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(_GLF_IDENTITY(true, true && (true)))), 1.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, tan(0.0), sqrt(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4x3(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true)), 1.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, tan(0.0), sqrt(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), mat3(1.0) * (mat4x3(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-9.5), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_FUZZED(-9.5), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat3(_GLF_FUZZED(-9.5), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0)))), clamp(float(_GLF_IDENTITY(mat3(_GLF_FUZZED(-9.5), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat3(_GLF_FUZZED(-9.5), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0)))), float(_GLF_IDENTITY(mat3(_GLF_FUZZED(-9.5), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat3(_GLF_FUZZED(-9.5), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0)))), float(_GLF_IDENTITY(mat3(_GLF_FUZZED(-9.5), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat3(_GLF_FUZZED(-9.5), _GLF_IDENTITY(dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, sin(0.0)), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0)))))))), float(0.0), bool(true)), 1.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, tan(0.0), sqrt(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))), mat4(1.0) * (transpose(_GLF_IDENTITY(mat4x3(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true)), 1.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, tan(0.0), sqrt(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), mat3(1.0) * (mat4x3(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true)), 1.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(tan(0.0), mix(float(_GLF_FUZZED(-3.1)), float(_GLF_IDENTITY(tan(0.0), (tan(0.0)) / 1.0)), bool(true))), sqrt(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))))))))), 0.0, 0.0))))), (true ? float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-10.67) : injectionSwitch.y)), determinant(_GLF_IDENTITY(mat3(0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0), (mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true))), 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-10.67) : injectionSwitch.y)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true)), max(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true))), float(_GLF_FUZZED(9.1)), bool(false))))), mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(-9.5)), float(0.0), bool(true))))), 0.0, 0.0))))) : _GLF_FUZZED(3.6)))), bool(true)))))) || false))))))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
