#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uvec3 GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     break;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((6990.7146))), float(injectionSwitch.x), bool(true)))) + 0.0) < injectionSwitch.y)), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, true)))) || false)), (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))));
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)) < 1); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (vec2(vec2(injectionSwitch))) * mat2(1.0))).x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    break;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    continue;
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(42192) : 1))) << 0)]), vec2(_GLF_FUZZED(-6.9), _GLF_FUZZED(6885.4071)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y), mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec3(8200.5150, -5.4, 4.1), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(8200.5150, mix(float(_GLF_FUZZED(4.5)), float(_GLF_IDENTITY(8200.5150, max(8200.5150, 8200.5150))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), -5.4, 4.1), (vec3(8200.5150, -5.4, 4.1)) - vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7.2)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true)))) - 0.0), 0.0, 0.0))) / vec3(1.0, 1.0, 1.0)).g)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.9), _GLF_FUZZED(6885.4071)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))).y), max(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.9), _GLF_FUZZED(6885.4071)), bvec2(false, false)), (true ? mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.9), _GLF_FUZZED(6885.4071)), bvec2(false, false)) : _GLF_FUZZED(injectionSwitch)))).y), _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-6.9, mix(float(_GLF_IDENTITY(-6.9, (-6.9) - 0.0)), float(_GLF_FUZZED(7.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FUZZED(6885.4071)), bvec2(false, false))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-6.9, mix(float(_GLF_IDENTITY(-6.9, (-6.9) - 0.0)), float(_GLF_FUZZED(7.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FUZZED(6885.4071)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-6.9, mix(float(_GLF_IDENTITY(-6.9, (-6.9) - 0.0)), float(_GLF_FUZZED(7.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FUZZED(6885.4071)), bvec2(false, false))))).y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-6.9, mix(float(_GLF_IDENTITY(-6.9, (-6.9) - 0.0)), float(_GLF_FUZZED(7.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FUZZED(6885.4071)), bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))))), false))).y) + 0.0)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.9), _GLF_FUZZED(6885.4071)), bvec2(false, false))).y), max(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.9), _GLF_FUZZED(6885.4071)), bvec2(false, false)), (true ? mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.9), _GLF_FUZZED(6885.4071)), bvec2(_GLF_IDENTITY(false, ! (! (false))), false)) : _GLF_FUZZED(injectionSwitch)))).y), _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-6.9, mix(float(_GLF_IDENTITY(-6.9, (-6.9) - 0.0)), float(_GLF_FUZZED(7.5)), bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, true, true))))))))), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FUZZED(6885.4071)), bvec2(false, false))).y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-6.9, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(-6.9, (-6.9) - 0.0)), float(_GLF_FUZZED(7.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), min(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(-6.9, (-6.9) - 0.0)), float(_GLF_FUZZED(7.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), min(mix(float(_GLF_IDENTITY(-6.9, (-6.9) - 0.0)), float(_GLF_FUZZED(7.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(_GLF_IDENTITY(-6.9, (-6.9) - 0.0)), float(_GLF_FUZZED(7.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(-6.9, (-6.9) - 0.0)), float(_GLF_FUZZED(7.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), min(mix(float(_GLF_IDENTITY(-6.9, (-6.9) - 0.0)), float(_GLF_FUZZED(7.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(_GLF_IDENTITY(-6.9, (-6.9) - 0.0)), float(_GLF_FUZZED(7.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FUZZED(6885.4071)), bvec2(false, false))).y) + 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.9), _GLF_FUZZED(6885.4071)), bvec2(false, false))).y), max(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.9), _GLF_FUZZED(6885.4071)), bvec2(false, false)), (true ? mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8243.1346), _GLF_FUZZED(243.295)), bvec2(false, false))))), 1.0, 0.0))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.9), _GLF_FUZZED(6885.4071)), bvec2(false, false)) : _GLF_FUZZED(injectionSwitch)))).y), _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-6.9, mix(float(_GLF_IDENTITY(-6.9, (-6.9) - 0.0)), float(_GLF_FUZZED(7.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FUZZED(6885.4071)), bvec2(false, false))).y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-6.9, mix(float(_GLF_IDENTITY(-6.9, (-6.9) - 0.0)), float(_GLF_FUZZED(7.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_FUZZED(6885.4071), (_GLF_FUZZED(6885.4071)) * 1.0)), bvec2(false, false))).y) + 0.0)))), max(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.9), _GLF_FUZZED(6885.4071)), bvec2(false, false))).y), max(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], (true ? _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], clamp((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], (injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], (injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))])) : _GLF_FUZZED(12.94))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.9), _GLF_FUZZED(6885.4071)), bvec2(false, false)), (true ? mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.9), _GLF_FUZZED(6885.4071)), bvec2(false, false)) : _GLF_FUZZED(injectionSwitch)))).y), _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-6.9, mix(float(_GLF_IDENTITY(-6.9, (-6.9) - 0.0)), float(_GLF_FUZZED(7.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FUZZED(6885.4071)), bvec2(false, false))).y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-6.9, mix(float(_GLF_IDENTITY(-6.9, (-6.9) - 0.0)), float(_GLF_FUZZED(7.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FUZZED(6885.4071)), bvec2(false, false))).y) + 0.0)))), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.9), _GLF_FUZZED(6885.4071)), bvec2(false, false)), mix(vec2(_GLF_FUZZED(-60.54), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.9), _GLF_FUZZED(6885.4071)), bvec2(false, false)))[1]), vec2((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.9), _GLF_FUZZED(6885.4071)), bvec2(false, false)))[0], _GLF_FUZZED(9019.5720)), bvec2(true, false)))).y), max(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.9), _GLF_FUZZED(6885.4071)), bvec2(false, false)), (true ? mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.9), _GLF_FUZZED(6885.4071)), bvec2(false, false)) : _GLF_FUZZED(injectionSwitch)))).y), _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-6.9, mix(float(_GLF_IDENTITY(-6.9, (-6.9) - 0.0)), float(_GLF_FUZZED(7.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (false ? _GLF_FUZZED(pow(7.6, 4186.6564)) : _GLF_IDENTITY(-6.9, mix(float(_GLF_IDENTITY(-6.9, (-6.9) - 0.0)), float(_GLF_FUZZED(7.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FUZZED(6885.4071)), bvec2(false, false))).y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-6.9, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(-6.9, (-6.9) / 1.0), (-6.9) - 0.0)), float(_GLF_FUZZED(7.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FUZZED(6885.4071)), bvec2(false, false))).y) + 0.0))))))) * 1.0) : _GLF_FUZZED(vec3(8.4, -170.632, _GLF_IDENTITY(4.4, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))) * (4.4))).x)))), bool(true)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < injectionSwitch.y)) ? _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((_injected_loop_counter --), (_GLF_IDENTITY((_injected_loop_counter --), ((_injected_loop_counter --)) << 0)) | (1 ^ int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))) ^ 0)) * 1) : _GLF_FUZZED(_GLF_IDENTITY(42317, (_GLF_IDENTITY(42317, (42317) | 0)) * (0 | 1))))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               return;
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
             else
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 break;
                }
              }
             if(_GLF_DEAD(false))
              continue;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))))); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), int(ivec3(int(7), 1, 1)))) - 0), int(7)))), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(7), int(7))))), ! (! ((_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(7), int(7)))))))) || false); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, true, true)), true && (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, true, true)))))) && true))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(1u * (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | (subgroup_local_id))), _GLF_IDENTITY(uint(uvec3(1u * (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | (subgroup_local_id))), 0u, 0u)), max(uint(uvec3(1u * (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | (subgroup_local_id))), 0u, 0u)), _GLF_IDENTITY(uint(uvec3(1u * (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | (subgroup_local_id))), 0u, 0u)), 0u | (uint(uvec3(1u * (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | (subgroup_local_id))), 0u, 0u))))))), 0u | (_GLF_IDENTITY(1u * (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | (subgroup_local_id))), (1u * (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) / (((1u | 1u) << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) * 1u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) >> 0u))))) | (subgroup_local_id)))) - 0u))));
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
    return;
  }
 else
  {
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(tan(985.160))))))))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         return;
         if(_GLF_DEAD(false))
          break;
        }
      }
     return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-10.98, 4.9)) : injectionSwitch)).y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-10.98, 4.9)) : injectionSwitch)).y)))))))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | (0))))); _injected_loop_counter --)
  {
   GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.z = workgroup_size;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))))
    break;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true))))))))), (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    continue;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = (0 ^ (1 & 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | 0)))) >> 0) ^ 1, int(ivec4(1 ^ 1, 0, 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.z * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 1u * (workgroup_id)), workgroup_id)), workgroup_id)), 0u), ~ (~ (uvec2(workgroup_id, 0u))))), min(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 1u * (workgroup_id)), workgroup_id)), workgroup_id)), 0u), ~ (~ (uvec2(workgroup_id, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u)))))))))), ((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 1u * (workgroup_id)), workgroup_id)), workgroup_id)), 0u), ~ (~ (uvec2(workgroup_id, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u))))))))))) | ((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 1u * (workgroup_id)), workgroup_id)), workgroup_id)), 0u), ~ (~ (uvec2(workgroup_id, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u)))))))))))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_id, 1u * (workgroup_id)), workgroup_id), clamp(min(_GLF_IDENTITY(workgroup_id, 1u * (workgroup_id)), workgroup_id), min(_GLF_IDENTITY(workgroup_id, 1u * (workgroup_id)), workgroup_id), _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_id, 1u * (workgroup_id)), workgroup_id), uint(uint(min(_GLF_IDENTITY(workgroup_id, 1u * (workgroup_id)), workgroup_id))))))), workgroup_id)), 0u), ~ (~ _GLF_IDENTITY((uvec2(workgroup_id, 0u)), clamp((uvec2(workgroup_id, 0u)), (uvec2(workgroup_id, 0u)), (uvec2(workgroup_id, 0u))))))))) | _GLF_IDENTITY((uvec2(workgroup_id, 0u)), max((uvec2(workgroup_id, 0u)), _GLF_IDENTITY((uvec2(workgroup_id, 0u)), ((uvec2(workgroup_id, 0u))) - uvec2(0u, 0u))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (true ? uvec2(workgroup_id, 0u) : _GLF_FUZZED(uvec2(66046u, 119048u)))), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))), (1u ^ 1u) | (_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (_GLF_IDENTITY(uvec2(workgroup_id, 0u), max(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (uvec2(workgroup_id, 0u)) >> _GLF_IDENTITY(uvec2(0u, 0u), max(uvec2(0u, 0u), uvec2(0u, 0u)))), uvec2(workgroup_id, 0u))))))) | (uvec2(workgroup_id, 0u)))))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.z * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (_GLF_IDENTITY(uvec2(workgroup_id, 0u), (uvec2(workgroup_id, 0u)) + uvec2(0u, 0u)))))) | (uvec2(workgroup_id, 0u))))), (1u ^ 1u) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))) | ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))))))))))), (~ (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.z * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (_GLF_IDENTITY(uvec2(workgroup_id, 0u), (uvec2(workgroup_id, 0u)) + uvec2(0u, 0u)))))) | (uvec2(workgroup_id, 0u))))), (1u ^ 1u) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))) | ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))))))))))))) | (~ (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.z * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (_GLF_IDENTITY(uvec2(workgroup_id, 0u), (uvec2(workgroup_id, 0u)) + uvec2(0u, 0u)))))) | (uvec2(workgroup_id, 0u))))), (1u ^ 1u) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))) | ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))))))))))))), (false ? _GLF_FUZZED(subgroup_id) : ~ (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.z * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) | 0u)), 0u), (_GLF_IDENTITY(uvec2(workgroup_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) / 1u)), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ _GLF_IDENTITY((~ (uvec2(workgroup_id, 0u))), ((~ (uvec2(workgroup_id, 0u)))) | ((~ (uvec2(workgroup_id, 0u))))))) | (uvec2(workgroup_id, 0u)))) / uvec2(1u, 1u)))), (1u ^ 1u) | (_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (workgroup_id) << 0u), 0u)))))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.z * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (_GLF_IDENTITY(uvec2(workgroup_id, 0u), (uvec2(workgroup_id, 0u)) + uvec2(0u, 0u)))))) | (uvec2(workgroup_id, 0u))))), (1u ^ 1u) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))) | ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))))))))))), (~ (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.z * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (_GLF_IDENTITY(uvec2(workgroup_id, 0u), (uvec2(workgroup_id, 0u)) + uvec2(0u, 0u)))))) | (uvec2(workgroup_id, 0u))))), (1u ^ 1u) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))) | ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))))))))))))) | (~ (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.z * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (_GLF_IDENTITY(uvec2(workgroup_id, 0u), (uvec2(workgroup_id, 0u)) + uvec2(0u, 0u)))))) | (uvec2(workgroup_id, 0u))))), (1u ^ 1u) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))) | ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))))))))))))), (false ? _GLF_FUZZED(subgroup_id) : ~ (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.z * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) | 0u)), 0u), (_GLF_IDENTITY(uvec2(workgroup_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) / 1u)), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ _GLF_IDENTITY((~ (uvec2(workgroup_id, 0u))), ((~ (uvec2(workgroup_id, 0u)))) | ((~ (uvec2(workgroup_id, 0u))))))) | (uvec2(workgroup_id, 0u)))) / uvec2(1u, 1u)))), (1u ^ 1u) | (_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (workgroup_id) << 0u), 0u))))))))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.z * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (_GLF_IDENTITY(uvec2(workgroup_id, 0u), (uvec2(workgroup_id, 0u)) + uvec2(0u, 0u)))))) | (uvec2(workgroup_id, 0u))))), (1u ^ 1u) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))) | ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))))))))))), (~ (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.z * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (_GLF_IDENTITY(uvec2(workgroup_id, 0u), (uvec2(workgroup_id, 0u)) + uvec2(0u, 0u)))))) | (uvec2(workgroup_id, 0u))))), (1u ^ 1u) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))) | ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))))))))))))) | (~ (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.z * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (_GLF_IDENTITY(uvec2(workgroup_id, 0u), (uvec2(workgroup_id, 0u)) + uvec2(0u, 0u)))))) | (uvec2(workgroup_id, 0u))))), (1u ^ 1u) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))) | ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))))))))))))), (false ? _GLF_FUZZED(subgroup_id) : ~ (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.z * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) | 0u)), 0u), (_GLF_IDENTITY(uvec2(workgroup_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) / 1u)), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ _GLF_IDENTITY((~ (uvec2(workgroup_id, 0u))), ((~ (uvec2(workgroup_id, 0u)))) | ((~ (uvec2(workgroup_id, 0u))))))) | (uvec2(workgroup_id, 0u)))) / uvec2(1u, 1u)))), (1u ^ 1u) | (_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (workgroup_id) << 0u), 0u)))))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.z * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (_GLF_IDENTITY(uvec2(workgroup_id, 0u), (uvec2(workgroup_id, 0u)) + uvec2(0u, 0u)))))) | (uvec2(workgroup_id, 0u))))), (1u ^ 1u) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))) | ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))))))))))), (~ (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.z * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (_GLF_IDENTITY(uvec2(workgroup_id, 0u), (uvec2(workgroup_id, 0u)) + uvec2(0u, 0u)))))) | (uvec2(workgroup_id, 0u))))), (1u ^ 1u) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))) | ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))))))))))))) | (~ (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.z * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (_GLF_IDENTITY(uvec2(workgroup_id, 0u), (uvec2(workgroup_id, 0u)) + uvec2(0u, 0u)))))) | (uvec2(workgroup_id, 0u))))), (1u ^ 1u) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u)))))), ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))) | ((_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))))))))))))))), (false ? _GLF_FUZZED(subgroup_id) : ~ (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.z * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) | 0u)), 0u), (_GLF_IDENTITY(uvec2(workgroup_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) / 1u)), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(workgroup_id, 0u))), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ _GLF_IDENTITY((~ (uvec2(workgroup_id, 0u))), ((~ (uvec2(workgroup_id, 0u)))) | ((~ (uvec2(workgroup_id, 0u))))))) | (uvec2(workgroup_id, 0u)))) / uvec2(1u, 1u)))), (1u ^ 1u) | (_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (_GLF_IDENTITY(uvec2(workgroup_id, 0u), ~ (~ (uvec2(workgroup_id, 0u))))) | (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (workgroup_id) << 0u), 0u))))))))))))))) + 0u))));
 do
  {
   do
    {
     GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y = workgroup_base;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false || (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))
    continue;
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))) || false))))))), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true))))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true))))))) > injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), min(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), 1.0 * (mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))))))) > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch))) * mat2(1.0)) / vec2(1.0, 1.0))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch))) * mat2(1.0)) / vec2(1.0, 1.0))).x > injectionSwitch.y)))))), ! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true))))) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true))))) > injectionSwitch.y)), (bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true))))) > injectionSwitch.y))) && true)), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true))))) > injectionSwitch.y)), (bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true))))) > injectionSwitch.y))) && true))) || false))))), ((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true))))) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true))))) > injectionSwitch.y)), (bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true))))) > injectionSwitch.y))) && true)), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true))))) > injectionSwitch.y)), (bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true))))) > injectionSwitch.y))) && true))) || false)))))) && true)))))))), (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), min(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), 1.0 * (mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))))))) > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), min(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), 1.0 * (mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))))))) > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), min(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), 1.0 * (mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))))))) > injectionSwitch.y)))), true && (bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), min(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), 1.0 * (mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))))))) > injectionSwitch.y)))))))), false, true, false))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))))), injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), injectionSwitch))) * mat2(1.0)) / vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((-3991.6407 - injectionSwitch)))))), injectionSwitch)), injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.8)), float(1.0), bool(true))) : _GLF_FUZZED(63.60))))) / vec2(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), 1.0))).x > injectionSwitch.y)))))), ! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true))))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true))))) > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(true), false || (bool(true))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(true), false || (bool(true))), false, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(true), false || (bool(true))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(true), false || (bool(true))), false, false))))))))))))) > injectionSwitch.y)), (bool((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true)))), min(_GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true)))), min(mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true)))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true)))))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true))))))) > injectionSwitch.y))) && _GLF_IDENTITY(true, true && (true)))), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true)))), _GLF_ONE(1.0, injectionSwitch.y) * (mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0)), (true ? _GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(5546.0244)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true))))))) > injectionSwitch.y)), (bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true))))) > injectionSwitch.y))) && true))) || false))))), ((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(737.438), _GLF_FUZZED(-842.407)), bvec2(false, false))).y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true))))) > injectionSwitch.y)), (bool((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (_GLF_IDENTITY(-5.4, (-5.4) + 0.0)) * 1.0))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (_GLF_IDENTITY(-5.4, (-5.4) + 0.0)) * 1.0))), (false ? _GLF_FUZZED(-2.7) : _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (_GLF_IDENTITY(-5.4, (-5.4) + 0.0)) * 1.0))), float(vec4(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (_GLF_IDENTITY(-5.4, (-5.4) + 0.0)) * 1.0))), 1.0, 1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (_GLF_IDENTITY(-5.4, (-5.4) + 0.0)) * 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (_GLF_IDENTITY(-5.4, (-5.4) + 0.0)) * 1.0))), (false ? _GLF_FUZZED(log2(3.9)) : float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (_GLF_IDENTITY(-5.4, (-5.4) + 0.0)) * 1.0))))))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(false, (false) || false) || (bool(true))))) > injectionSwitch.y))) && true)), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false || (bool(true))))) > injectionSwitch.y)), (bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true))))) > injectionSwitch.y))) && true))) || false)))))) && true)))))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), min(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), 1.0 * (mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))))))) > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), min(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), 1.0 * (mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))))))) > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), min(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), 1.0 * (mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))))))) > injectionSwitch.y)))), true && (bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), min(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), 1.0 * (mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))))))) > injectionSwitch.y)))))))), false, true, false))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))))), injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), injectionSwitch))) * mat2(1.0)) / vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((-3991.6407 - injectionSwitch)))))), injectionSwitch)), injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.8)), float(1.0), bool(true))) : _GLF_FUZZED(63.60))))) / vec2(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), 1.0))).x > injectionSwitch.y)))))), ! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true))))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true))))) > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(true), false || (bool(true))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(true), false || (bool(true))), false, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(true), false || (bool(true))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(true), false || (bool(true))), false, false))))))))))))) > injectionSwitch.y)), (bool((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true)))), min(_GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true)))), min(mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true)))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true)))))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true))))))) > injectionSwitch.y))) && _GLF_IDENTITY(true, true && (true)))), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true)))), _GLF_ONE(1.0, injectionSwitch.y) * (mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0)), (true ? _GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(5546.0244)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true))))))) > injectionSwitch.y)), (bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true))))) > injectionSwitch.y))) && true))) || false))))), ((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(737.438), _GLF_FUZZED(-842.407)), bvec2(false, false))).y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true))))) > injectionSwitch.y)), (bool((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (_GLF_IDENTITY(-5.4, (-5.4) + 0.0)) * 1.0))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (_GLF_IDENTITY(-5.4, (-5.4) + 0.0)) * 1.0))), (false ? _GLF_FUZZED(-2.7) : _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (_GLF_IDENTITY(-5.4, (-5.4) + 0.0)) * 1.0))), float(vec4(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (_GLF_IDENTITY(-5.4, (-5.4) + 0.0)) * 1.0))), 1.0, 1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (_GLF_IDENTITY(-5.4, (-5.4) + 0.0)) * 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (_GLF_IDENTITY(-5.4, (-5.4) + 0.0)) * 1.0))), (false ? _GLF_FUZZED(log2(3.9)) : float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (_GLF_IDENTITY(-5.4, (-5.4) + 0.0)) * 1.0))))))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(false, (false) || false) || (bool(true))))) > injectionSwitch.y))) && true)), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false || (bool(true))))) > injectionSwitch.y)), (bool((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.4, (-5.4) * 1.0))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (bool(true))))) > injectionSwitch.y))) && true))) || false)))))) && true)))))))))))) && true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))))))))), (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0))))).x > injectionSwitch.y)))), ! (! (true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0))))).x > injectionSwitch.y)))))))), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(-1993.0723)), float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), 0.0 + (mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))))), bool(true)))) > injectionSwitch.y))))), bool(bvec2((! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(-1993.0723)), float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), 0.0 + (mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))))), bool(true)))) > injectionSwitch.y))))), false)))))))) && true)), ((_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))))))))), (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0))))).x > injectionSwitch.y)))), ! (! (true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0))))).x > injectionSwitch.y)))))))), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(-1993.0723)), float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), 0.0 + (mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))))), bool(true)))) > injectionSwitch.y))))), bool(bvec2((! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(-1993.0723)), float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true)), 0.0 + (mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch.x), bool(true))))), bool(true)))) > injectionSwitch.y))))), false)))))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size) >> uvec3(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u)).y, max(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size) >> uvec3(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u)).y, _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size) >> _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), clamp((_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u)))), _GLF_IDENTITY((0u), ((0u)) | ((0u))), _GLF_IDENTITY((0u), ((0u)) ^ 0u))) - 0u), 0u), uvec3(_GLF_IDENTITY(uvec3(uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u)))), _GLF_IDENTITY((0u), ((0u)) | ((0u))), _GLF_IDENTITY((0u), ((0u)) ^ 0u))), (false ? _GLF_FUZZED((num_workgroup * subgroup_local_id)) : _GLF_IDENTITY(_GLF_IDENTITY((0u), clamp((_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u)))), _GLF_IDENTITY((0u), ((0u)) | ((0u))), _GLF_IDENTITY((0u), ((0u)) ^ 0u))), max(_GLF_IDENTITY((0u), clamp((_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u)))), _GLF_IDENTITY((0u), ((0u)) | ((0u))), _GLF_IDENTITY((0u), ((0u)) ^ 0u))), _GLF_IDENTITY((0u), clamp((_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u)))), _GLF_IDENTITY((0u), ((0u)) | ((0u))), _GLF_IDENTITY((0u), ((0u)) ^ 0u))))))) - _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))), 0u)), uvec3(_GLF_IDENTITY(uvec4(uvec3(uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY((0u), clamp((_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u)))), _GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), max((0u), _GLF_IDENTITY((0u), clamp((0u), _GLF_IDENTITY((0u), ~ (~ ((0u)))), (0u))))))), _GLF_IDENTITY((0u), ((0u)) ^ 0u))) - 0u), 0u)), 0u), (uvec4(uvec3(uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), clamp((_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) | ((0u))), max(_GLF_IDENTITY(_GLF_IDENTITY((0u), ((0u)) | ((0u))), 0u ^ (_GLF_IDENTITY((0u), ((0u)) | ((0u))))), _GLF_IDENTITY((0u), ((0u)) | ((0u))))), _GLF_IDENTITY((0u), ((0u)) ^ 0u))) - 0u), 0u)), 0u)) - uvec4(0u, 0u, 0u, 0u))))))).y)) + subgroup_id * subgroup_size + _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x, 0u | (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x))), 0u ^ ((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x, 0u | (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((+ -53813) & 0)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))) / _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).y))) >> 0u))), 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec2(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) >> 0u))), 1u) : _GLF_FUZZED(uvec2(132030u, 178742u))))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) * 1.0), injectionSwitch.y))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), 0u ^ (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))))) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))))), (subgroup_size) | _GLF_IDENTITY((subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_size)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, max(num_workgroup, num_workgroup))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(true ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(25192u), (_GLF_IDENTITY(true ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(25192u), (true ? true ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(25192u) : _GLF_FUZZED(workgroup_size)))) / 1u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (0u) | 0u) ^ (subgroup_id)) * subgroup_size)) + ((GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x + _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), max((~ (1)), (~ (1))))), 1)), (1) + 0), 1)) : _GLF_FUZZED((_GLF_IDENTITY(- (-8852 / -29958), (_GLF_IDENTITY(- _GLF_IDENTITY((-8852 / -29958), ~ (~ ((-8852 / -29958)))), min(- (-8852 / -29958), - (-8852 / -29958)))) | _GLF_IDENTITY((- (-8852 / _GLF_IDENTITY(-29958, (-29958) | (-29958)))), 1 * (_GLF_IDENTITY((- (-8852 / -29958)), int(int((- (-8852 / -29958))))))))))))) % subgroup_size), uint(_GLF_IDENTITY(uvec4(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))) / _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).y))) >> 0u))), 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec2(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) >> 0u))), 1u) : _GLF_FUZZED(uvec2(132030u, 178742u))))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) * 1.0), injectionSwitch.y))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), 0u ^ (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))))) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))))), (subgroup_size) | _GLF_IDENTITY((subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_size)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, max(num_workgroup, num_workgroup))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(true ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(25192u), (_GLF_IDENTITY(true ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(25192u), (true ? true ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(25192u) : _GLF_FUZZED(workgroup_size)))) / 1u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (0u) | 0u) ^ (subgroup_id)) * subgroup_size)) + ((GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x + _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), max((~ (1)), (~ (1))))), 1)), (1) + 0), 1)) : _GLF_FUZZED((_GLF_IDENTITY(- (-8852 / -29958), (_GLF_IDENTITY(- _GLF_IDENTITY((-8852 / -29958), ~ (~ ((-8852 / -29958)))), min(- (-8852 / -29958), - (-8852 / -29958)))) | _GLF_IDENTITY((- (-8852 / _GLF_IDENTITY(-29958, (-29958) | (-29958)))), 1 * (_GLF_IDENTITY((- (-8852 / -29958)), int(int((- (-8852 / -29958))))))))))))) % subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u ^ 0u), 1u), (uvec4(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))) / _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).y))) >> 0u))), 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec2(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) >> 0u))), 1u) : _GLF_FUZZED(uvec2(132030u, 178742u))))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) * 1.0), injectionSwitch.y))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), 0u ^ (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))))) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))))), (subgroup_size) | _GLF_IDENTITY((subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_size)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, max(num_workgroup, num_workgroup))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(true ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(25192u), (_GLF_IDENTITY(true ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(25192u), (true ? true ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(25192u) : _GLF_FUZZED(workgroup_size)))) / 1u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (0u) | 0u) ^ (subgroup_id)) * subgroup_size)) + ((GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x + _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), max((~ (1)), (~ (1))))), 1)), (1) + 0), 1)) : _GLF_FUZZED((_GLF_IDENTITY(- (-8852 / -29958), (_GLF_IDENTITY(- _GLF_IDENTITY((-8852 / -29958), ~ (~ ((-8852 / -29958)))), min(- (-8852 / -29958), - (-8852 / -29958)))) | _GLF_IDENTITY((- (-8852 / _GLF_IDENTITY(-29958, (-29958) | (-29958)))), 1 * (_GLF_IDENTITY((- (-8852 / -29958)), int(int((- (-8852 / -29958))))))))))))) % subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u ^ 0u), 1u)) | (uvec4(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))) / _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).y))) >> 0u))), 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec2(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) >> 0u))), 1u) : _GLF_FUZZED(uvec2(132030u, 178742u))))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) * 1.0), injectionSwitch.y))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), 0u ^ (clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))))) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))))), (subgroup_size) | _GLF_IDENTITY((subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((subgroup_size)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, max(num_workgroup, num_workgroup))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(true ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(25192u), (_GLF_IDENTITY(true ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(25192u), (true ? true ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(25192u) : _GLF_FUZZED(workgroup_size)))) / 1u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (0u) | 0u) ^ (subgroup_id)) * subgroup_size)) + ((GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x + _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), max((~ (1)), (~ (1))))), 1)), (1) + 0), 1)) : _GLF_FUZZED((_GLF_IDENTITY(- (-8852 / -29958), (_GLF_IDENTITY(- _GLF_IDENTITY((-8852 / -29958), ~ (~ ((-8852 / -29958)))), min(- (-8852 / -29958), - (-8852 / -29958)))) | _GLF_IDENTITY((- (-8852 / _GLF_IDENTITY(-29958, (-29958) | (-29958)))), 1 * (_GLF_IDENTITY((- (-8852 / -29958)), int(int((- (-8852 / -29958))))))))))))) % subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u ^ 0u), 1u)))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * exp(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * exp(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))))) && true))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), false, false))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) > injectionSwitch.y))))))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
        }
      }
     for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((((1 & 1) & 1) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6)))))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           return;
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          continue;
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
        {
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
         atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))), true, false))) ? _GLF_IDENTITY(64, max(64, 64)) : _GLF_FUZZED(-96124))), 4);
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        break;
      }
     do
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)), 1, 1)) ^ 0)); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ (1 ^ 1)))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, sqrt(log(1.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-751.051)), float(0.0), bool(true))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(5234.0506, 0.2, -197.811, 4225.2049).x)), float(0.0), bool(true)))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), mat3x4(mat4(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, sqrt(log(1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), min(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), max(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 0.0 + (dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))))))) > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(false || (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), true && (_GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), bool(bool(! (true))))))))) || false), false))) && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), false, true)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))) && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), false, true)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true)))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))) && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true && (false), false || (true && (false))))))))), false, true)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true))))))))))), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))) && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), false, true)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true)))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))) && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true && (false), false || (true && (false))))))))), false, true)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))) && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))) && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))) && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || false) || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_DEAD(false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), false, _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))) && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), false, true)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true))))) && (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true)))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true)))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (true), bool(bool(! (true))))), _GLF_IDENTITY(bool(bvec3(false || (_GLF_IDENTITY(! (true), bool(bool(! (true))))), false, true)), false || (bool(bvec3(false || (_GLF_IDENTITY(! (true), bool(bool(! (true))))), false, true)))))))) && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true && (false), false || (true && (false))))))))), false, true)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true))))))))))))))) || false), false || _GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))), bool(bool(! (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), false || (false || (_GLF_IDENTITY(false, ! (! (false)))))))) && true), false, false))))))))))))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, false, false))), ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (true), bool(bool(! (true))))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), _GLF_IDENTITY(bool(bool(! (true))), false || (bool(bool(! (true)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bool(! _GLF_IDENTITY((true), bool(bvec2((true), true)))))))))), bool(bvec4(! (false || (_GLF_IDENTITY(! (true), bool(bool(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))) && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), false, true)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec3(! (_GLF_IDENTITY(false, (false) && true)), false, false))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), false, true), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), false, true), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))))), true, true, true))))), true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), bool(bool((_GLF_DEAD(false)))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))), false))))), true)))))))))), ! (! ((! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))), bool(bool(! (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) && true), false, false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))), bool(bool(! (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) && true), false, false)))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), false, false, false))))), bool(bool(! (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) && true), false, false))))))))))) || false)) && true)))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (true), bool(bool(! (true))))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bool(! (true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), bool(bool(! (true)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (true), bool(bool(! (true)))), true), true, false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), bool(bool(! (true)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (true), bool(bool(! (true)))), true), true, false))))) && true)), false || (_GLF_IDENTITY(! (true), bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec2((true), true))), ! (! (_GLF_IDENTITY((true), bool(bvec2((true), true))))))))))))), bool(bvec4(! (false || _GLF_IDENTITY((_GLF_IDENTITY(! (true), bool(bool(! (true))))), false || ((_GLF_IDENTITY(! (true), bool(bool(! (true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))) && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (true), bool(bool(! (true))))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bool(! (true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), bool(bool(! (true)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (true), bool(bool(! (true)))), true), true, false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), bool(bool(! (true)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (true), bool(bool(! (true)))), true), true, false))))) && true)), false || (_GLF_IDENTITY(! (true), bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec2((true), true))), ! (! (_GLF_IDENTITY((true), bool(bvec2((true), true))))))))))))), bool(bvec4(! (false || _GLF_IDENTITY((_GLF_IDENTITY(! (true), bool(bool(! (true))))), false || ((_GLF_IDENTITY(! (true), bool(bool(! (true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))) && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), false, true))))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), false, true), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), false, true), false)))), true, true, true))))), true && (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false)))))), false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false))))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false))))), true)))), false, true)))) || false)))))))))))))) && true))
                  return;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-928.213)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
                return;
               return;
              }
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))) / 1.0)) * (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) * 1.0))) > injectionSwitch.y, false, true)))), false))))))
            return;
          }
         else
          {
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_DEAD(false))))), bool(bvec2(bool(bool(_GLF_DEAD(false))), false)))))
        {
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), false || ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), false), bvec3(bvec3(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), false)))))))), false || ((injectionSwitch.x > injectionSwitch.y))))))))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) | (0)))), 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              continue;
            }
           else
            {
             return;
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          continue;
        }
      }
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))), false))))))
    {
     do
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, 0u + (_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(num_workgroup))))), virtual_gid))], 4, 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << 0)) >> (0 << _GLF_IDENTITY(int(5), int(5)))))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))
      {
       for(int _injected_loop_counter = (_GLF_IDENTITY(38402 & 0, (38402 & 0) ^ 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          continue;
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
              break;
             return;
             if(_GLF_DEAD(false))
              break;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
            break;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          continue;
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), clamp(_GLF_IDENTITY(int(2), (int(2)) >> 0), _GLF_IDENTITY(int(2), 1 * (int(2))), int(2))), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) >> 0)) | 0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) + 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) + 0), (0 << _GLF_IDENTITY(int(7), int(7))) ^ (_GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((_injected_loop_counter --), 0 ^ ((_injected_loop_counter --))) + 0))) : _GLF_FUZZED(22294))))
          {
           if(_GLF_DEAD(false))
            return;
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true, false, false)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], (true ? (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0] : _GLF_FUZZED(-80.55))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(-8802.1420)), bvec2(false, false))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true, false, false)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))))))), bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], (true ? (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0] : _GLF_FUZZED(-80.55))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(-8802.1420)), bvec2(false, false))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true, false, false)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))))))), false))) || false))
                return;
               atomicStore(checker[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), clamp(min(virtual_gid, virtual_gid), min(virtual_gid, virtual_gid), _GLF_IDENTITY(min(virtual_gid, virtual_gid), (_GLF_IDENTITY(min(virtual_gid, virtual_gid), ~ (~ (min(virtual_gid, virtual_gid))))) | (min(virtual_gid, virtual_gid))))))], read, 4, 64, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 0 ^ (4)))));
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))))))))
        break;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) && true)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), false)))))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)), false, false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, true)))))))
    {
     for(int _injected_loop_counter = (1 ^ (1 ^ 1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, bool(_GLF_IDENTITY(bvec3(_injected_loop_counter != 0, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), bvec3(bvec3(bvec3(_injected_loop_counter != 0, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))); _injected_loop_counter --)
      {
       return;
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      continue;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))) - sqrt(vec2(0.0, 0.0))), 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))).y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0))))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, (true) && true))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))))))) && true))) && true), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((false) || false)))))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))); _injected_loop_counter ++)
          {
           return;
          }
        }
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) * 1)); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
}
