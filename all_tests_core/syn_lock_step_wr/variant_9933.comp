#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-585.096))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-585.096))) > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.4)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true)))))))))
          return;
         for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) - 0)))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), _GLF_IDENTITY(true, ! (! (true))))))))))
        break;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, ! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.1)), vec2(_GLF_FUZZED(2600.4541), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(5.6)), bool(false)))), bvec2(false, true)))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))) && true)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       if(_GLF_DEAD(false))
        continue;
       for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(false)), false), bvec2(bvec2(bvec2((_GLF_DEAD(false)), false)))))), _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY((! (_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool((! (_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3((! (_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(! (_GLF_DEAD(false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) && true)), _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), (! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), (! (! ((_GLF_DEAD(false))))) && true)))))))) || false)))), (bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))), (bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))
            {
             do
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
                continue;
               for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(114.635, -364.181)))).x))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  return;
                 return;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   continue;
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                continue;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))));
          }
        }
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))).y))))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0))).y, injectionSwitch.y))))))
            break;
          }
         else
          {
          }
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
          continue;
         continue;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) > 0); _injected_loop_counter --)
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         continue;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.4), _GLF_FUZZED(60.01)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(9.4, clamp(9.4, 9.4, 9.4))), _GLF_FUZZED(60.01)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), false || (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.4), _GLF_FUZZED(60.01)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))))))))
            {
             if(_GLF_DEAD(false))
              continue;
             continue;
            }
           return;
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          break;
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(4401.6468), _GLF_FUZZED(-86.23)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true)))).y))))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      continue;
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), clamp(float(0.0), float(0.0), float(0.0)))))) / 1.0)), mix(float(_GLF_FUZZED(-919.352)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, max((injectionSwitch.x) - 0.0, (injectionSwitch.x) - 0.0))), mix(float(_GLF_FUZZED(-919.352)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-2.4), _GLF_FUZZED(-4.9)), min(_GLF_IDENTITY(vec2(_GLF_FUZZED(-2.4), _GLF_FUZZED(-4.9)), (vec2(_GLF_FUZZED(-2.4), _GLF_FUZZED(-4.9))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(-2.4), _GLF_FUZZED(-4.9)))), bvec2(false, false))).x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.1)), bool(false))), 1.0))) * (injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((321.880 * 9531.9129))), bool(false)))) - 0.0)), bool(true))))) + sqrt(0.0)) + 0.0)) * 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91))))) - vec2(0.0, 0.0)).y, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-698.957, 23.91)), (_GLF_FUZZED(vec2(-698.957, 23.91))) / vec2(1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true)), false || (bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true)))))) || false))) ? _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91)))) : _GLF_FUZZED(vec2(186.372, 4.7))))), log(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0), transpose(transpose(mat3((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91))))), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91))))), log(1.0), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / sqrt(1.0)), 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat3((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))))) - vec2(0.0, 0.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91))))), log(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(436.440)), bool(false))), 1.0, 1.0, 1.0))))), (vec2(_GLF_IDENTITY(mat3((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91))))), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat3((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91))))), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))) / vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat3((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91))))), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat3((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91))))), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (true ? transpose(_GLF_IDENTITY(mat3((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91))))), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), mat3(mat4x3(_GLF_IDENTITY(mat3((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91))))), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), mat3(mat4(mat3((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91))))), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))))) : _GLF_FUZZED((565.842 / mat3(11.22, 99.71, -14.70, -4.1, 6460.3258, 4.7, 0.2, -5.7, -728.493)))))))))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91)))) : _GLF_FUZZED(vec2(186.372, 4.7))))), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat3((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91))))), log(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0))))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91))))), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat3((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91))))), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), (vec2(_GLF_IDENTITY(mat3((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91))))), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91))))), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), (mat3((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91))))), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))))))) / vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat3((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91))))), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat3((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(-698.957, clamp(-698.957, -698.957, -698.957)), 23.91))))), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (true ? transpose(mat3((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91))))), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED((565.842 / mat3(11.22, 99.71, -14.70, -4.1, 6460.3258, 4.7, 0.2, -5.7, -728.493)))))))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91)))) : _GLF_FUZZED(vec2(186.372, 4.7))))), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat3((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91))))), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91))))), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat3((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91))))), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))))), (vec2(_GLF_IDENTITY(mat3((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91))))), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat3((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91))))), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))) / vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat3((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91))))), log(1.0), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(186704u))), float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.7)), float(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat3((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91))))), log(1.0), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-644.457) : 0.0)), 0.0, 1.0, 1.0, 1.0)), (true ? transpose(mat3((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-698.957, 23.91))))), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED((565.842 / mat3(_GLF_IDENTITY(11.22, float(mat3(11.22, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 1.0, cos(log(1.0))))), 99.71, -14.70, -4.1, 6460.3258, 4.7, 0.2, -5.7, -728.493))))))))))))) - vec2(0.0, 0.0)).y), float(_GLF_FUZZED(-7927.2852)), bool(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     break;
     if(_GLF_DEAD(false))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 0.0, abs(0.0), 1.0, sin(0.0), determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.8))))), 0.0, 0.0, 0.0)), length(0.0), 0.0, sqrt(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(8.0)))), 1.0, 0.0)), max(float(mat4x3(injectionSwitch.x, 0.0, 0.0, abs(0.0), 1.0, sin(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), length(0.0), 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0)), float(mat4x3(injectionSwitch.x, 0.0, 0.0, abs(0.0), 1.0, sin(0.0), determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), length(0.0), 0.0, sqrt(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-842.434)), bool(false)))) + 0.0))))), 1.0, 0.0))))), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x)), _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 0.0, abs(0.0), 1.0, sin(0.0), determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.8))))), 0.0, 0.0, 0.0)), length(0.0), 0.0, sqrt(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(8.0)))), 1.0, 0.0)), max(float(mat4x3(injectionSwitch.x, 0.0, 0.0, abs(0.0), 1.0, sin(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), length(0.0), 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0)), float(mat4x3(injectionSwitch.x, 0.0, 0.0, abs(0.0), 1.0, sin(0.0), determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), length(0.0), 0.0, sqrt(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-842.434)), bool(false)))) + 0.0))))), 1.0, 0.0))))), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x)), _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 0.0, abs(0.0), 1.0, sin(0.0), determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.8))))), 0.0, 0.0, 0.0)), length(0.0), 0.0, sqrt(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(8.0)))), 1.0, 0.0)), max(float(mat4x3(injectionSwitch.x, 0.0, 0.0, abs(0.0), 1.0, sin(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), length(0.0), 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0)), float(mat4x3(injectionSwitch.x, 0.0, 0.0, abs(0.0), 1.0, sin(0.0), determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), length(0.0), 0.0, sqrt(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-842.434)), bool(false)))) + 0.0))))), 1.0, 0.0))))), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x), (false ? _GLF_FUZZED(ldexp(atanh(3.9), 15392)) : max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0))))) > injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
           if(_GLF_DEAD(false))
            return;
          }
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec3(false || (false), false, true))))));
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 1.0, 1.0, length(vec2(0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.5)), float(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0)), transpose(transpose(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0)))))))), bool(true)))), (mat2x3(injectionSwitch.y, 1.0, 1.0, length(vec2(0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((-9.5 - -15.04)) : _GLF_IDENTITY(_GLF_FUZZED(0.0), clamp(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0), _GLF_FUZZED(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, true && (true)) ? 0.0 : _GLF_FUZZED(7683.2137))))))))), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (false ? _GLF_FUZZED((_GLF_IDENTITY(-9.5 - -15.04, min(-9.5 - -15.04, -9.5 - -15.04)))) : _GLF_IDENTITY(_GLF_FUZZED(0.0), clamp(_GLF_FUZZED(0.0), _GLF_FUZZED(0.0), _GLF_FUZZED(0.0)))))), _GLF_IDENTITY(float(injectionSwitch.y), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.5) : float(injectionSwitch.y))), _GLF_IDENTITY(bool(true), (bool(true)) || false)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), (false ? _GLF_FUZZED((-9.5 - -15.04)) : _GLF_IDENTITY(_GLF_FUZZED(0.0), clamp(_GLF_FUZZED(0.0), _GLF_FUZZED(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.1)), float(0.0), bool(true))), 0.0))), _GLF_FUZZED(0.0)))))), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, clamp((injectionSwitch.y) * 1.0, _GLF_IDENTITY((injectionSwitch.y) * 1.0, mix(float((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) * 1.0), float(_GLF_FUZZED(-1660.6847)), bool(false))), (injectionSwitch.y) * 1.0))), mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))), 1.0, 0.0, 0.0))), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-97.69), clamp(true ? injectionSwitch.y : _GLF_FUZZED(-97.69), true ? injectionSwitch.y : _GLF_FUZZED(-97.69), true ? injectionSwitch.y : _GLF_FUZZED(-97.69)))))), mix(float(_GLF_FUZZED(6.3)), float(float(injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)))).y, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(845.104)), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), 0.0, abs(1.0)))).y) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, false))))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0)))))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), mix(float(float(_GLF_FUZZED(_GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, (0.0) + 0.0), length(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0)))))), float(_GLF_FUZZED(2.2)), bool(false)))), float(float(_GLF_FUZZED(0.0))))), mix(float(_GLF_FUZZED(-961.375)), float(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), mix(float(float(_GLF_FUZZED(_GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, (0.0) + 0.0), length(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0)))))), float(_GLF_FUZZED(2.2)), bool(false)))), float(float(_GLF_FUZZED(0.0)))))), bool(true)))), float(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0))))))))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec2(bool(true), true)), false || (bool(bvec2(bool(true), true)))))))))))) / 1.0, min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, clamp((injectionSwitch.y) * 1.0, _GLF_IDENTITY((injectionSwitch.y) * 1.0, mix(float((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) * 1.0), float(_GLF_FUZZED(-1660.6847)), bool(false))), (injectionSwitch.y) * 1.0))), mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))), 1.0, 0.0, 0.0))), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-97.69), clamp(true ? injectionSwitch.y : _GLF_FUZZED(-97.69), true ? injectionSwitch.y : _GLF_FUZZED(-97.69), true ? injectionSwitch.y : _GLF_FUZZED(-97.69)))))), mix(float(_GLF_FUZZED(6.3)), float(float(injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)))).y, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(845.104)), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), 0.0, abs(1.0)))).y) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, false))))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0)))))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), mix(float(float(_GLF_FUZZED(_GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, (0.0) + 0.0), length(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0)))))), float(_GLF_FUZZED(2.2)), bool(false)))), float(float(_GLF_FUZZED(0.0))))), mix(float(_GLF_FUZZED(-961.375)), float(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), mix(float(float(_GLF_FUZZED(_GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, (0.0) + 0.0), length(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0)))))), float(_GLF_FUZZED(2.2)), bool(false)))), float(float(_GLF_FUZZED(0.0)))))), bool(true)))), float(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0))))))))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec2(bool(true), true)), false || (bool(bvec2(bool(true), true)))))))))))) / 1.0, mix(float(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, clamp((injectionSwitch.y) * 1.0, _GLF_IDENTITY((injectionSwitch.y) * 1.0, mix(float((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) * 1.0), float(_GLF_FUZZED(-1660.6847)), bool(false))), (injectionSwitch.y) * 1.0))), mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))), 1.0, 0.0, 0.0))), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-97.69), clamp(true ? injectionSwitch.y : _GLF_FUZZED(-97.69), true ? injectionSwitch.y : _GLF_FUZZED(-97.69), true ? injectionSwitch.y : _GLF_FUZZED(-97.69)))))), mix(float(_GLF_FUZZED(6.3)), float(float(injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)))).y, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(845.104)), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), 0.0, abs(1.0)))).y) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, false))))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0)))))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), mix(float(float(_GLF_FUZZED(_GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, (0.0) + 0.0), length(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0)))))), float(_GLF_FUZZED(2.2)), bool(false)))), float(float(_GLF_FUZZED(0.0))))), mix(float(_GLF_FUZZED(-961.375)), float(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), mix(float(float(_GLF_FUZZED(_GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, (0.0) + 0.0), length(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0)))))), float(_GLF_FUZZED(2.2)), bool(false)))), float(float(_GLF_FUZZED(0.0)))))), bool(true)))), float(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0))))))))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec2(bool(true), true)), false || (bool(bvec2(bool(true), true)))))))))))) / 1.0, float(vec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, clamp((injectionSwitch.y) * 1.0, _GLF_IDENTITY((injectionSwitch.y) * 1.0, mix(float((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) * 1.0), float(_GLF_FUZZED(-1660.6847)), bool(false))), (injectionSwitch.y) * 1.0))), mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))), 1.0, 0.0, 0.0))), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-97.69), clamp(true ? injectionSwitch.y : _GLF_FUZZED(-97.69), true ? injectionSwitch.y : _GLF_FUZZED(-97.69), true ? injectionSwitch.y : _GLF_FUZZED(-97.69)))))), mix(float(_GLF_FUZZED(6.3)), float(float(injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)))).y, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(845.104)), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), 0.0, abs(1.0)))).y) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, false))))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0)))))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), mix(float(float(_GLF_FUZZED(_GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, (0.0) + 0.0), length(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0)))))), float(_GLF_FUZZED(2.2)), bool(false)))), float(float(_GLF_FUZZED(0.0))))), mix(float(_GLF_FUZZED(-961.375)), float(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), mix(float(float(_GLF_FUZZED(_GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, (0.0) + 0.0), length(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0)))))), float(_GLF_FUZZED(2.2)), bool(false)))), float(float(_GLF_FUZZED(0.0)))))), bool(true)))), float(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0))))))))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec2(bool(true), true)), false || (bool(bvec2(bool(true), true)))))))))))) / 1.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(-955.631)), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, clamp((injectionSwitch.y) * 1.0, _GLF_IDENTITY((injectionSwitch.y) * 1.0, mix(float((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) * 1.0), float(_GLF_FUZZED(-1660.6847)), bool(false))), (injectionSwitch.y) * 1.0))), mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))), 1.0, 0.0, 0.0))), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-97.69), clamp(true ? injectionSwitch.y : _GLF_FUZZED(-97.69), true ? injectionSwitch.y : _GLF_FUZZED(-97.69), true ? injectionSwitch.y : _GLF_FUZZED(-97.69)))))), mix(float(_GLF_FUZZED(6.3)), float(float(injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)))).y, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(845.104)), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), 0.0, abs(1.0)))).y) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, false))))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0)))))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), mix(float(float(_GLF_FUZZED(_GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, (0.0) + 0.0), length(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0)))))), float(_GLF_FUZZED(2.2)), bool(false)))), float(float(_GLF_FUZZED(0.0))))), mix(float(_GLF_FUZZED(-961.375)), float(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), mix(float(float(_GLF_FUZZED(_GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, (0.0) + 0.0), length(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0)))))), float(_GLF_FUZZED(2.2)), bool(false)))), float(float(_GLF_FUZZED(0.0)))))), bool(true)))), float(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0))))))))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec2(bool(true), true)), false || (bool(bvec2(bool(true), true)))))))))))) / 1.0, clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, clamp((injectionSwitch.y) * 1.0, _GLF_IDENTITY((injectionSwitch.y) * 1.0, mix(float((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) * 1.0), float(_GLF_FUZZED(-1660.6847)), bool(false))), (injectionSwitch.y) * 1.0))), mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))), 1.0, 0.0, 0.0))), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-97.69), clamp(true ? injectionSwitch.y : _GLF_FUZZED(-97.69), true ? injectionSwitch.y : _GLF_FUZZED(-97.69), true ? injectionSwitch.y : _GLF_FUZZED(-97.69)))))), mix(float(_GLF_FUZZED(6.3)), float(float(injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)))).y, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(845.104)), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), 0.0, abs(1.0)))).y) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, false))))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0)))))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), mix(float(float(_GLF_FUZZED(_GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, (0.0) + 0.0), length(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0)))))), float(_GLF_FUZZED(2.2)), bool(false)))), float(float(_GLF_FUZZED(0.0))))), mix(float(_GLF_FUZZED(-961.375)), float(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), mix(float(float(_GLF_FUZZED(_GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, (0.0) + 0.0), length(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0)))))), float(_GLF_FUZZED(2.2)), bool(false)))), float(float(_GLF_FUZZED(0.0)))))), bool(true)))), float(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0))))))))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec2(bool(true), true)), false || (bool(bvec2(bool(true), true)))))))))))) / 1.0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, clamp((injectionSwitch.y) * 1.0, _GLF_IDENTITY((injectionSwitch.y) * 1.0, mix(float((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) * 1.0), float(_GLF_FUZZED(-1660.6847)), bool(false))), (injectionSwitch.y) * 1.0))), mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))), 1.0, 0.0, 0.0))), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-97.69), clamp(true ? injectionSwitch.y : _GLF_FUZZED(-97.69), true ? injectionSwitch.y : _GLF_FUZZED(-97.69), true ? injectionSwitch.y : _GLF_FUZZED(-97.69)))))), mix(float(_GLF_FUZZED(6.3)), float(float(injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)))).y, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(845.104)), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), 0.0, abs(1.0)))).y) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, false))))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0)))))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), mix(float(float(_GLF_FUZZED(_GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, (0.0) + 0.0), length(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0)))))), float(_GLF_FUZZED(2.2)), bool(false)))), float(float(_GLF_FUZZED(0.0))))), mix(float(_GLF_FUZZED(-961.375)), float(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), mix(float(float(_GLF_FUZZED(_GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, (0.0) + 0.0), length(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0)))))), float(_GLF_FUZZED(2.2)), bool(false)))), float(float(_GLF_FUZZED(0.0)))))), bool(true)))), float(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0))))))))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec2(bool(true), true)), false || (bool(bvec2(bool(true), true)))))))))))) / 1.0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, clamp((injectionSwitch.y) * 1.0, _GLF_IDENTITY((injectionSwitch.y) * 1.0, mix(float((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) * 1.0), float(_GLF_FUZZED(-1660.6847)), bool(false))), (injectionSwitch.y) * 1.0))), mix(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))), 1.0, 0.0, 0.0))), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-97.69), clamp(true ? injectionSwitch.y : _GLF_FUZZED(-97.69), true ? injectionSwitch.y : _GLF_FUZZED(-97.69), true ? injectionSwitch.y : _GLF_FUZZED(-97.69)))))), mix(float(_GLF_FUZZED(6.3)), float(float(injectionSwitch.y)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, exp(tan(vec2(0.0, 0.0))) * (injectionSwitch)))).y, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(845.104)), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), 0.0, abs(1.0)))).y) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, false))))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0)))))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), mix(float(float(_GLF_FUZZED(_GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, (0.0) + 0.0), length(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0)))))), float(_GLF_FUZZED(2.2)), bool(false)))), float(float(_GLF_FUZZED(0.0))))), mix(float(_GLF_FUZZED(-961.375)), float(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(_GLF_IDENTITY(float(_GLF_FUZZED(0.0)), mix(float(float(_GLF_FUZZED(_GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, (0.0) + 0.0), length(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(0.0), 1.0, 0.0)))))), float(_GLF_FUZZED(2.2)), bool(false)))), float(float(_GLF_FUZZED(0.0)))))), bool(true)))), float(_GLF_IDENTITY(float(float(_GLF_FUZZED(0.0))), clamp(float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0))), float(float(_GLF_FUZZED(0.0))))))))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec2(bool(true), true)), false || (bool(bvec2(bool(true), true)))))))))))) / 1.0))))), (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.8 * 796.139, min(0.8 * 796.139, 0.8 * 796.139)), min(0.8 * 796.139, _GLF_IDENTITY(0.8 * 796.139, (0.8 * 796.139) / 1.0))), (0.8 * 796.139) * abs(1.0))))))))))
    {
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))))))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             return;
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))) || false), true))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              continue;
             continue;
            }
           break;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
  }
 else
  {
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(cos(0.0)), 1.0, exp(0.0), 0.0, 0.0, _GLF_IDENTITY(exp(0.0), min(exp(0.0), exp(0.0))), 0.0, 1.0)))[0], injectionSwitch[1])).x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-55.38) : injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y) || false, ((injectionSwitch.x < injectionSwitch.y) || false) || false))) && true))), bool(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) && true))), true, true)))))
        {
         return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
            {
             if(_GLF_DEAD(false))
              break;
             break;
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
            }
           for(int _injected_loop_counter = (0 | _GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) - 0))), 0)) ^ _GLF_IDENTITY((0), (_GLF_IDENTITY((0), min((0), (0)))) / (1 | 1))), _GLF_IDENTITY(0, min(0, 0)))), max(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) - 0))), 0)) ^ _GLF_IDENTITY((0), (_GLF_IDENTITY((0), min((0), (0)))) / (1 | 1))), _GLF_IDENTITY(0, min(0, 0)))), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, (0) - 0))), 0)) ^ _GLF_IDENTITY((0), (_GLF_IDENTITY((0), min((0), (0)))) / (1 | 1))), _GLF_IDENTITY(0, min(0, 0))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (1) | (1)), 0)))))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
                return;
               break;
              }
             return;
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
        }
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))))), (! (! (injectionSwitch.x > injectionSwitch.y))) || false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
        break;
       break;
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          continue;
         break;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       continue;
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(372.565)), bool(false)), (_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(372.565)), bool(false)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(372.565)), bool(false)) : _GLF_FUZZED((-384.204 - -0.9))))) / 1.0), clamp(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(372.565)), bool(false)), (_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(372.565)), bool(false)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(372.565)), bool(false)) : _GLF_FUZZED((-384.204 - -0.9))))) / 1.0), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(372.565)), bool(false)), (_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(372.565)), bool(false)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(372.565)), bool(false)) : _GLF_FUZZED((-384.204 - -0.9))))) / 1.0), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(372.565)), bool(false)), (_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(372.565)), bool(false)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(372.565)), bool(false)) : _GLF_FUZZED((-384.204 - -0.9))))) / 1.0)))) < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) < injectionSwitch.y)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) || false)))))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.2)), float(1.0), bool(true))), injectionSwitch.y) * _GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(-4688.5810)), float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) / 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.2)), float(1.0), bool(true))), injectionSwitch.y) * _GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(-4688.5810)), float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) / 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.5))), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         return;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
           continue;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter, _injected_loop_counter)) != 0); _injected_loop_counter --)
                {
                 do
                  {
                   for(int _injected_loop_counter = _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), int(ivec3(int(int(1)), 0, 0)))), 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                      {
                       return;
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
            }
           return;
          }
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 1.0))), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(false))
          continue;
        }
       break;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           break;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           for(int _injected_loop_counter = (0 ^ _GLF_IDENTITY(0, (0) + _GLF_IDENTITY((0 ^ 0), (_GLF_IDENTITY((0 ^ 0), 0 ^ ((0 ^ 0)))) ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             return;
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
              break;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)) || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              continue;
             return;
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
            }
          }
        }
       continue;
      }
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) - 0u, ((gl_WorkGroupSize.x) - 0u) ^ 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)), (0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(subgroup_size, (0u & 50528u) ^ (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(subgroup_size, subgroup_size)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_size), min(_GLF_IDENTITY(0u ^ (subgroup_size), (_GLF_IDENTITY(0u ^ (subgroup_size), uint(_GLF_IDENTITY(uvec4(0u ^ (subgroup_size), 1u, 0u, 0u), clamp(uvec4(0u ^ (subgroup_size), 1u, 0u, 0u), uvec4(0u ^ (subgroup_size), 1u, 0u, 0u), uvec4(0u ^ (subgroup_size), 1u, 0u, 0u)))))) | _GLF_IDENTITY((0u ^ (subgroup_size)), clamp((0u ^ (subgroup_size)), _GLF_IDENTITY((0u ^ (subgroup_size)), ((0u ^ (subgroup_size))) ^ 0u), (0u ^ (subgroup_size))))), 0u ^ (subgroup_size))))) - 0u), min(subgroup_size, subgroup_size)))))) + _GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(0u, (0u) - 0u), 0u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, false || (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 0, ! (_GLF_IDENTITY(! (_injected_loop_counter != 0), ! (! (! (_injected_loop_counter != 0)))))), (_injected_loop_counter != 0) && true)))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        continue;
      }
     else
      {
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(((subgroup_local_id + 1) % subgroup_size), 0u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 1u, 0u)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_IDENTITY(uvec4(((subgroup_local_id + 1) % subgroup_size), 0u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(((subgroup_local_id + 1) % subgroup_size), 0u, 1u, 0u)))), min(false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_IDENTITY(uvec4(((subgroup_local_id + 1) % subgroup_size), 0u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(((subgroup_local_id + 1) % subgroup_size), 0u, 1u, 0u)))), false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_IDENTITY(uvec4(((subgroup_local_id + 1) % subgroup_size), 0u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(((subgroup_local_id + 1) % subgroup_size), 0u, 1u, 0u))))))))) : _GLF_FUZZED(workgroup_id), uint(_GLF_IDENTITY(uvec3(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % subgroup_size)))))), 0u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 1u, 0u)))), (false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_IDENTITY(uvec4(((subgroup_local_id + 1) % subgroup_size), 0u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(((subgroup_local_id + 1) % subgroup_size), 0u, 1u, 0u))))))) : _GLF_FUZZED(workgroup_id), 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))), min(uvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(((subgroup_local_id + 1) % subgroup_size), 0u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 1u, 0u)))), (false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_IDENTITY(uvec4(((subgroup_local_id + 1) % subgroup_size), 0u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(((subgroup_local_id + 1) % subgroup_size), 0u, 1u, 0u))))))) : _GLF_FUZZED(workgroup_id), 0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), uvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(((subgroup_local_id + 1) % subgroup_size), 0u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(num_workgroup)))))) | 0u)), (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - (0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u))))) % subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 1u, 0u)))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(((subgroup_local_id + 1) % subgroup_size), 0u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(((subgroup_local_id + 1) % subgroup_size), 0u, 1u, 0u)))), (uint(_GLF_IDENTITY(uvec4(((subgroup_local_id + 1) % subgroup_size), 0u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(((subgroup_local_id + 1) % subgroup_size), 0u, 1u, 0u))))) * 1u)))) : _GLF_FUZZED(workgroup_id), 0u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), (1u << _GLF_IDENTITY(uint(1u), uint(1u))) | 0u)) >> _GLF_IDENTITY(uint(1u), uint(1u))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 ^ (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         for(int _injected_loop_counter = ((_GLF_IDENTITY(1, (1) - 0) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) * 1))
          {
           return;
           if(_GLF_DEAD(false))
            return;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       do
        {
         return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(int(1))), 1))), 0u), max(uvec2(uint(1), 0u), uvec2(uint(1), 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1))), 0u), (_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1))), 0u), clamp(uvec2(uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1))), 0u), uvec2(uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1))), 0u), uvec2(uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1))), 0u)))) | (uvec2(uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 1))), 0u))), max(uvec2(uint(1), 0u), uvec2(uint(_GLF_IDENTITY(1, 0 | (1))), 0u)))), 0u ^ (uint(_GLF_IDENTITY(uvec2(uint(1), 0u), max(uvec2(uint(1), 0u), uvec2(uint(1), 0u))))))) / 1u)), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), mix(float(_GLF_FUZZED(-81.49)), float(_GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), min(1.0, 1.0)))), bool(true))))) * ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x < injectionSwitch.y)) ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter))) > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, _GLF_IDENTITY(false, (false) && true))))))))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                return;
               return;
              }
             if(_GLF_DEAD(false))
              break;
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7.3, -35.88)))).y)), false, true)), bool(bvec3(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, true))), true))))), false, _GLF_IDENTITY(false, bool(bool(false))))))))), _GLF_IDENTITY(true, (true) || false), true)))))
          break;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) && true), false))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (true) && true), false))))))))))) && _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(false)))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          break;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))))))
          continue;
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          break;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(408.739), _GLF_IDENTITY(_GLF_FUZZED(-7.4), mix(float(_GLF_FUZZED(-7.4)), float(_GLF_FUZZED(float(false))), bool(false)))), mix(vec2((vec2(_GLF_FUZZED(408.739), _GLF_IDENTITY(_GLF_FUZZED(-7.4), mix(float(_GLF_FUZZED(-7.4)), float(_GLF_FUZZED(float(false))), bool(false)))))[0], _GLF_IDENTITY((vec2(_GLF_FUZZED(408.739), _GLF_IDENTITY(_GLF_FUZZED(-7.4), mix(float(_GLF_FUZZED(-7.4)), float(_GLF_IDENTITY(_GLF_FUZZED(float(false)), min(_GLF_FUZZED(float(false)), _GLF_FUZZED(float(false))))), bool(false)))))[1], float(_GLF_IDENTITY(mat4x3((vec2(_GLF_FUZZED(408.739), _GLF_IDENTITY(_GLF_FUZZED(-7.4), mix(float(_GLF_FUZZED(-7.4)), float(_GLF_IDENTITY(_GLF_FUZZED(float(false)), min(_GLF_FUZZED(float(false)), _GLF_FUZZED(float(false))))), bool(false)))))[1], 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0), (true ? mat4x3((vec2(_GLF_FUZZED(408.739), _GLF_IDENTITY(_GLF_FUZZED(-7.4), mix(float(_GLF_FUZZED(-7.4)), float(_GLF_IDENTITY(_GLF_FUZZED(float(false)), min(_GLF_FUZZED(float(false)), _GLF_FUZZED(float(false))))), bool(false)))))[1], 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED((- mat4x3(932.347, 8.5, -750.775, 36.22, -5.2, -135.204, 5.1, 201.733, 12.77, 965.303, 85.99, -6309.7151)))))))), vec2(_GLF_FUZZED(1.9), _GLF_FUZZED(4284.4732)), bvec2(false, false))), _GLF_IDENTITY(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(75.28), _GLF_FUZZED(-419.450)), bvec2(false, false)))))[1]), max(_GLF_IDENTITY(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(75.28), _GLF_FUZZED(-419.450)), bvec2(false, false)))))[1]), max(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(75.28), _GLF_FUZZED(-419.450)), bvec2(false, false)))))[1]), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(75.28), _GLF_FUZZED(-419.450)), bvec2(false, false)))))[1]))), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(75.28), _GLF_FUZZED(-419.450)), bvec2(false, false)))))[1]))), bvec2(true, _GLF_IDENTITY(true, (true) || false)))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(408.739), _GLF_IDENTITY(_GLF_FUZZED(-7.4), mix(float(_GLF_FUZZED(-7.4)), float(_GLF_FUZZED(float(false))), bool(false)))), mix(vec2((vec2(_GLF_FUZZED(408.739), _GLF_IDENTITY(_GLF_FUZZED(-7.4), mix(float(_GLF_FUZZED(-7.4)), float(_GLF_FUZZED(float(false))), bool(false)))))[0], _GLF_IDENTITY((vec2(_GLF_FUZZED(408.739), _GLF_IDENTITY(_GLF_FUZZED(-7.4), mix(float(_GLF_FUZZED(-7.4)), float(_GLF_IDENTITY(_GLF_FUZZED(float(false)), min(_GLF_FUZZED(float(false)), _GLF_FUZZED(float(false))))), bool(false)))))[1], float(_GLF_IDENTITY(mat4x3((vec2(_GLF_FUZZED(408.739), _GLF_IDENTITY(_GLF_FUZZED(-7.4), mix(float(_GLF_FUZZED(-7.4)), float(_GLF_IDENTITY(_GLF_FUZZED(float(false)), min(_GLF_FUZZED(float(false)), _GLF_FUZZED(float(false))))), bool(false)))))[1], 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0), (true ? mat4x3((vec2(_GLF_FUZZED(408.739), _GLF_IDENTITY(_GLF_FUZZED(-7.4), mix(float(_GLF_FUZZED(-7.4)), float(_GLF_IDENTITY(_GLF_FUZZED(float(false)), min(_GLF_FUZZED(float(false)), _GLF_FUZZED(float(false))))), bool(false)))))[1], 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED((- mat4x3(932.347, 8.5, -750.775, 36.22, -5.2, -135.204, 5.1, 201.733, 12.77, 965.303, 85.99, -6309.7151)))))))), vec2(_GLF_FUZZED(1.9), _GLF_FUZZED(4284.4732)), bvec2(false, false))), _GLF_IDENTITY(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(75.28), _GLF_FUZZED(-419.450)), bvec2(false, false)))))[1]), max(_GLF_IDENTITY(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(75.28), _GLF_FUZZED(-419.450)), bvec2(false, false)))))[1]), max(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(75.28), _GLF_FUZZED(-419.450)), bvec2(false, false)))))[1]), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(75.28), _GLF_FUZZED(-419.450)), bvec2(false, false)))))[1]))), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(75.28), _GLF_FUZZED(-419.450)), bvec2(false, false)))))[1]))), bvec2(true, _GLF_IDENTITY(true, (true) || false)))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(408.739), _GLF_IDENTITY(_GLF_FUZZED(-7.4), mix(float(_GLF_FUZZED(-7.4)), float(_GLF_FUZZED(float(false))), bool(false)))), mix(vec2((vec2(_GLF_FUZZED(408.739), _GLF_IDENTITY(_GLF_FUZZED(-7.4), mix(float(_GLF_FUZZED(-7.4)), float(_GLF_FUZZED(float(false))), bool(false)))))[0], _GLF_IDENTITY((vec2(_GLF_FUZZED(_GLF_IDENTITY(408.739, max(408.739, 408.739))), _GLF_IDENTITY(_GLF_FUZZED(-7.4), mix(float(_GLF_FUZZED(-7.4)), float(_GLF_IDENTITY(_GLF_FUZZED(float(false)), min(_GLF_IDENTITY(_GLF_FUZZED(float(false)), mix(float(_GLF_FUZZED(1921.2086)), float(_GLF_FUZZED(float(false))), bool(true))), _GLF_FUZZED(float(false))))), bool(false)))))[1], float(_GLF_IDENTITY(mat4x3((vec2(_GLF_FUZZED(408.739), _GLF_IDENTITY(_GLF_FUZZED(-7.4), mix(float(_GLF_FUZZED(-7.4)), float(_GLF_IDENTITY(_GLF_FUZZED(float(false)), min(_GLF_FUZZED(float(false)), _GLF_FUZZED(float(false))))), bool(false)))))[1], 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0), (true ? mat4x3((vec2(_GLF_FUZZED(408.739), _GLF_IDENTITY(_GLF_FUZZED(-7.4), mix(float(_GLF_FUZZED(-7.4)), float(_GLF_IDENTITY(_GLF_FUZZED(float(false)), min(_GLF_FUZZED(float(false)), _GLF_FUZZED(float(false))))), bool(false)))))[1], 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED((- mat4x3(932.347, 8.5, -750.775, 36.22, -5.2, -135.204, 5.1, 201.733, _GLF_IDENTITY(12.77, clamp(12.77, 12.77, 12.77)), 965.303, 85.99, -6309.7151)))))))), vec2(_GLF_FUZZED(1.9), _GLF_FUZZED(4284.4732)), bvec2(false, false))), _GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(2), int(2)))), 0))], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(0, (0) ^ 0)], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(75.28), _GLF_FUZZED(-419.450)), bvec2(false, false)))))[1]), max(_GLF_IDENTITY(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(75.28), _GLF_FUZZED(-419.450)), bvec2(false, false)))))[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))]), max(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) ^ 0)], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(75.28), _GLF_FUZZED(-419.450)), bvec2(false, false)))))[1]), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(75.28), _GLF_FUZZED(-419.450)), bvec2(false, false)))))[1]))), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(75.28), _GLF_FUZZED(-419.450)), bvec2(false, false)))))[1]))), bvec2(true, _GLF_IDENTITY(true, (true) || false)))).y)))))) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         continue;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, ~ (~ (0))));
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
      }
     else
      {
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
