#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_37 {
 ivec3 _f0;
 uvec3 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_36 {
 ivec2 _f0;
} ;

struct _GLF_struct_38 {
 _GLF_struct_36 _f0;
 _GLF_struct_37 _f1;
} ;

struct _GLF_struct_34 {
 bvec2 _f0;
 uint _f1;
 uvec4 _f2;
 int _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_33 {
 bvec3 _f0;
 mat2x4 _f1;
 mat2 _f2;
 mat3x2 _f3;
 mat4 _f4;
 uvec3 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_32 {
 mat3 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_35 {
 mat3x2 _f0;
 _GLF_struct_32 _f1;
 _GLF_struct_33 _f2;
 _GLF_struct_34 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_39 {
 mat3 _f0;
 _GLF_struct_35 _f1;
 uvec3 _f2;
 uint workgroup_base;
 vec3 _f3;
 _GLF_struct_38 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_30 {
 ivec2 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_28 {
 uint _f0;
 mat3 _f1;
 mat2 _f2;
 int _f3;
 bvec4 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_27 {
 vec3 _f0;
 mat2x3 _f1;
 bvec4 _f2;
 vec4 _f3;
 float _f4;
} ;

struct _GLF_struct_29 {
 _GLF_struct_27 _f0;
 _GLF_struct_28 _f1;
 mat4 _f2;
 mat4x3 _f3;
 vec4 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_31 {
 mat3 _f0;
 uint workgroup_id;
 _GLF_struct_29 _f1;
 _GLF_struct_30 _f2;
} ;

struct _GLF_struct_24 {
 bool _f0;
 bvec4 _f1;
 mat2 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_23 {
 bvec3 _f0;
 float _f1;
 uvec4 _f2;
 uvec4 _f3;
 ivec2 _f4;
 mat2x4 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_22 {
 uint _f0;
 mat3 _f1;
 bvec3 _f2;
 vec4 _f3;
 mat2x3 _f4;
 bvec3 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_21 {
 vec2 _f0;
 vec2 _f1;
 bool _f2;
 vec4 _f3;
 uvec2 _f4;
 bvec2 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_20 {
 uint _f0;
 mat3x4 _f1;
 mat4x3 _f2;
 ivec2 _f3;
 mat4x2 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_25 {
 _GLF_struct_20 _f0;
 _GLF_struct_21 _f1;
 _GLF_struct_22 _f2;
 mat4x2 _f3;
 _GLF_struct_23 _f4;
 bvec3 _f5;
 _GLF_struct_24 _f6;
} ;

struct _GLF_struct_18 {
 mat2 _f0;
 ivec4 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_17 {
 bvec2 _f0;
 mat3x4 _f1;
 mat3x4 _f2;
 vec2 _f3;
 ivec3 _f4;
 ivec3 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_16 {
 uvec3 _f0;
} ;

struct _GLF_struct_19 {
 _GLF_struct_16 _f0;
 _GLF_struct_17 _f1;
 _GLF_struct_18 _f2;
 uint num_workgroup;
 mat2x3 _f3;
} ;

struct _GLF_struct_14 {
 mat2 _f0;
} ;

struct _GLF_struct_13 {
 uvec2 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_12 {
 mat3 _f0;
 uvec2 _f1;
 bvec4 _f2;
 ivec3 _f3;
 mat4x3 _f4;
 vec4 _f5;
 float _f6;
} ;

struct _GLF_struct_11 {
 ivec3 _f0;
 mat2x4 _f1;
 uvec2 _f2;
 mat4x2 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_15 {
 _GLF_struct_11 _f0;
 _GLF_struct_12 _f1;
 bool _f2;
 bvec4 _f3;
 _GLF_struct_13 _f4;
 _GLF_struct_14 _f5;
} ;

struct _GLF_struct_26 {
 _GLF_struct_15 _f0;
 _GLF_struct_19 _f1;
 uint _f2;
 bvec4 _f3;
 _GLF_struct_25 _f4;
} ;

struct _GLF_struct_9 {
 mat2x4 _f0;
} ;

struct _GLF_struct_7 {
 float _f0;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
 ivec2 _f1;
 bvec2 _f2;
 mat4x3 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_8 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
} ;

struct _GLF_struct_10 {
 float _f0;
 uint workgroup_size;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
} ;

struct _GLF_struct_3 {
 bvec2 _f0;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 vec3 _f1;
 uvec3 _f2;
 mat3 _f3;
 int _f4;
 mat3 _f5;
 bool _f6;
} ;

struct _GLF_struct_4 {
 ivec4 _f0;
 ivec3 _f1;
 vec4 _f2;
 mat3x4 _f3;
 uint _f4;
 _GLF_struct_2 _f5;
 _GLF_struct_3 _f6;
} ;

struct _GLF_struct_0 {
 vec2 _f0;
 mat2x4 _f1;
 bvec4 _f2;
 uvec4 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_5 {
 uvec3 _f0;
 float _f1;
 ivec2 _f2;
 mat2x3 _f3;
 int _f4;
 _GLF_struct_1 _f5;
 _GLF_struct_4 _f6;
 uint subgroup_size;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(20.95)), bvec2(true, false))).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false || (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), (bool(bvec4(false || (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false || (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), (bool(bvec4(false || (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) && true), true && (_GLF_IDENTITY(bool(bvec4(false || (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), _GLF_IDENTITY((bool(bvec4(false || (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(bvec4(false || (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) && true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(uvec3(1u), 1.0, _GLF_IDENTITY(ivec2(1), (ivec2(1)) | (ivec2(1))), mat2x3(1.0), 1, _GLF_struct_1(_GLF_IDENTITY(mat3(1.0), mat3(1.0) * (mat3(1.0))), _GLF_struct_0(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(true, (true) && true)))), (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), false || (! (! (_GLF_IDENTITY(true, (true) && true))))))) && true)))) ? 1.0 : _GLF_FUZZED(-7973.5750))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(true, (true) && true))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(true, (true) && true))), false, true), bvec3(bvec4(bvec3(! (! (_GLF_IDENTITY(true, (true) && true))), false, true), true)))))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(true, (true) && true)))), (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(true, (true) && true))), ((! (_GLF_IDENTITY(true, (true) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))) ? 1.0 : _GLF_FUZZED(-7973.5750))), mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(true, (true) && true))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(true, (true) && true)))), ! (! (! ((! (_GLF_IDENTITY(true, (true) && true)))))))))), (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(true, (true) && true)))), false || ((! (! (_GLF_IDENTITY(true, (true) && true))))))) && true)))) ? 1.0 : _GLF_FUZZED(-7973.5750)))), float(_GLF_FUZZED(-1110.9762)), bool(false))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(true, (true) && true)))), (! (! (! (_GLF_IDENTITY(true, (true) && true))))) && true)))) ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-7973.5750), max(_GLF_FUZZED(-7973.5750), _GLF_FUZZED(-7973.5750))))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(true, (true) && true)))), (! (! (! (_GLF_IDENTITY(true, (true) && true))))) && _GLF_IDENTITY(true, (true) || false))))) ? 1.0 : _GLF_FUZZED(-7973.5750))))), (1.0) / 1.0)), mat2x4(1.0), bvec4(true), _GLF_IDENTITY(uvec4(1u), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) * uvec4(1u, 1u, 1u, 1u)), uvec4(1u))), vec3(1.0))), _GLF_struct_4(ivec4(1), ivec3(_GLF_IDENTITY(1, max(1, 1))), vec4(1.0), mat3x4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(smoothstep(-84.17, 7231.9480, 5.9)) : 1.0))), 1u, _GLF_struct_2(uvec3(1u), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), max(vec3(_GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7687.6081)), float(1.0), bool(true))), 0.0, 1.0, sin(0.0), tan(0.0), 0.0, 0.0, sqrt(1.0))))), vec3(1.0))), (_GLF_IDENTITY(vec3(1.0), vec3(_GLF_IDENTITY(mat3x2(vec3(1.0), 1.0, 0.0, 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(vec3(1.0), 1.0, 0.0, 0.0)))))) / vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, ~ (~ (1u)))), _GLF_IDENTITY(~ (~ (uvec3(1u))), (_GLF_IDENTITY(~ (~ (uvec3(1u))), uvec3(0u, 0u, 0u) ^ (~ _GLF_IDENTITY((~ (uvec3(1u))), ((~ (uvec3(1u)))) | uvec3(0u, 0u, 0u))))) >> (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))) - uvec3(0u, 0u, 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(~ (~ (uvec3(1u))), _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (uvec3(1u))), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((~ (~ (uvec3(1u)))), min((~ (~ (uvec3(1u)))), (~ (~ (uvec3(1u)))))))) >> (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)), min(_GLF_IDENTITY((_GLF_IDENTITY(~ (~ (uvec3(1u))), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((~ (~ (uvec3(1u)))), min((~ (~ (uvec3(1u)))), (~ (~ (uvec3(1u)))))))) >> (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)), ((_GLF_IDENTITY(~ (~ (uvec3(1u))), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((~ (~ (uvec3(1u)))), min((~ (~ (uvec3(1u)))), (~ (~ (uvec3(1u)))))))) >> (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(~ (~ (uvec3(1u))), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((~ (~ (uvec3(1u)))), min((~ (~ (uvec3(1u)))), (~ (~ (uvec3(1u)))))))) >> (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))))) - uvec3(0u, 0u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(false || (_GLF_IDENTITY(false, ! (! (false)))), false, false, false)))))) ? _GLF_IDENTITY(_GLF_FUZZED(-78.13), clamp(_GLF_FUZZED(-78.13), _GLF_FUZZED(-78.13), _GLF_FUZZED(-78.13))) : 1.0))), 1, mat3(1.0), true), _GLF_struct_3(bvec2(_GLF_IDENTITY(true, true && (true))))), gl_SubgroupSize);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_26 _GLF_struct_replacement_26 = _GLF_struct_26(_GLF_struct_15(_GLF_struct_11(ivec3(1), mat2x4(1.0), uvec2(1u), mat4x2(1.0), bvec2(true)), _GLF_struct_12(_GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED((mat3(3.1, -37.87, 1.2, 4.7, -8.7, -2064.1332, -615.545, 2.1, -7950.3430) / _GLF_IDENTITY(mat3(-0.2, 73.07, -4220.6461, -5262.5660, -3.2, -380.266, -4657.6220, -3.4, -5.0), mat3(mat3x4(mat3(-0.2, 73.07, -4220.6461, -5262.5660, -3.2, -380.266, -4657.6220, -3.4, -5.0)))))) : mat3(1.0))), uvec2(1u), bvec4(true), ivec3(1), mat4x3(1.0), vec4(1.0), 1.0), _GLF_IDENTITY(true, (true) && true), bvec4(true), _GLF_struct_13(uvec2(1u), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), clamp((1), (1), (1))))) | (1)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0))), 0 + (_GLF_IDENTITY(1, (1) | (1)))), (1 ^ 0), 0, 1), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 + (_GLF_IDENTITY(1, (1) | (1)))), (1 ^ 0), 0, 1)))), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 + (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) * (1)))))), (1 ^ 0), 0, 1), ivec4(0, 0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-38139))), 0) | (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 + (_GLF_IDENTITY(1, (1) | (1)))), (1 ^ 0), 0, 1)))), 0 | (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(1, (1) | (1))), 1), (ivec2((_GLF_IDENTITY(1, (1) | (1))), 1)) * ((ivec2(1, 1) << _GLF_IDENTITY(ivec2(3), ivec2(3))) >> _GLF_IDENTITY(ivec2(3), ivec2(3))))))), (1 ^ 0), 0, 1), ivec4(0, 0, 0, 0) | (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 + (_GLF_IDENTITY(1, (1) | (1)))), (1 ^ 0), 0, 1), max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 + (_GLF_IDENTITY(1, (1) | (1)))), (1 ^ 0), 0, 1), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 + (_GLF_IDENTITY(1, (1) | (1)))), (1 ^ 0), 0, 1)) | (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 + (_GLF_IDENTITY(1, (1) | (1)))), (1 ^ 0), 0, 1))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), 0 + (_GLF_IDENTITY(1, (1) | (1)))), (1 ^ 0), 0, 1)))))))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(ivec3(-59867, -47088, -92249)) : _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) >> 0)), min(_GLF_IDENTITY(~ (1), (true ? ~ (1) : _GLF_FUZZED(-55871))), ~ (1)))))), (ivec3(1)) | ivec3(0, 0, 0)), ivec3(0, 0, 0) | (false ? _GLF_FUZZED(ivec3(-59867, -47088, -92249)) : _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) >> 0)), min(_GLF_IDENTITY(~ (1), (true ? ~ (1) : _GLF_FUZZED(-55871))), ~ (1)))))), (ivec3(1)) | ivec3(0, 0, 0))))))), _GLF_struct_14(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat2(mat3(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), _GLF_struct_19(_GLF_struct_16(uvec3(1u)), _GLF_struct_17(bvec2(true), mat3x4(1.0), mat3x4(1.0), vec2(1.0), ivec3(1), ivec3(1), vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_struct_18(mat2(1.0), ivec4(1), mat3x2(1.0)), gl_NumWorkGroups.x, mat2x3(1.0)), 1u, bvec4(true), _GLF_struct_25(_GLF_struct_20(1u, mat3x4(1.0), mat4x3(1.0), ivec2(1), mat4x2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-3.0, float(_GLF_IDENTITY(mat2x4(-3.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(-3.0, min(-3.0, -3.0)), 1.0, 1.0, _GLF_IDENTITY(abs(0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8762.7613) : abs(0.0))), 0.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x4(-3.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(bool(false), (bool(false)) && true)))), vec4(1.0)), _GLF_struct_21(vec2(_GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(float(false)))), _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, length(0.0))))), vec2(1.0), true, vec4(1.0), uvec2(1u), bvec2(true), bvec2(true)), _GLF_struct_22(1u, mat3(1.0), bvec3(true), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat2x3(1.0), bvec3(true), uvec2(1u)), mat4x2(1.0), _GLF_struct_23(bvec3(true), 1.0, uvec4(1u), uvec4(1u), ivec2(1), mat2x4(1.0), bvec4(true)), bvec3(true), _GLF_struct_24(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), bvec4(true), mat2(1.0), mat2(1.0))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(1.0, gl_WorkGroupSize.x, _GLF_struct_8(_GLF_struct_6(ivec4(1), ivec2(1), bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))), mat4x3(1.0), mat4x3(1.0)), _GLF_struct_7(1.0)), _GLF_struct_9(mat2x4(1.0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_31 _GLF_struct_replacement_31 = _GLF_struct_31(mat3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(131784u, 12931u, 143981u)) : uvec3(gl_WorkGroupID))), min(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(131784u, 12931u, 143981u)) : uvec3(gl_WorkGroupID))), _GLF_IDENTITY(uvec3(gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(131784u, 12931u, 143981u)) : uvec3(gl_WorkGroupID))))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), gl_WorkGroupID)), uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(131784u, 12931u, 143981u)), (false ? _GLF_FUZZED(uvec3(87463u, 138218u, 61044u)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec3(131784u, 12931u, 143981u)), (_GLF_FUZZED(uvec3(131784u, 12931u, 143981u))) / uvec3(1u, 1u, 1u)), uvec3(0u, 0u, 0u) | (_GLF_FUZZED(uvec3(131784u, 12931u, 143981u)))))) : uvec3(gl_WorkGroupID))))).x) >> 0u), _GLF_struct_29(_GLF_struct_27(vec3(1.0), mat2x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.1) : 1.0))), bvec4(true), vec4(1.0), 1.0), _GLF_struct_28(1u, mat3(1.0), mat2(1.0), 1, bvec4(true), mat4x3(1.0)), _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))), mat4x3(1.0), vec4(1.0), bvec3(true)), _GLF_struct_30(ivec2(1), mat4x3(1.0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_39 _GLF_struct_replacement_39 = _GLF_struct_39(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, (1.0) * 1.0)), mat3(1.0) * (mat3(_GLF_IDENTITY(1.0, (1.0) * 1.0)))), _GLF_struct_35(mat3x2(1.0), _GLF_struct_32(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (transpose(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), mat3x4(1.0)), _GLF_struct_33(bvec3(true), mat2x4(1.0), mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.7)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, log(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), (float(mat2x3(1.0, log(1.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))) / 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) + 0.0)))))))) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-34.93) : 1.0))), max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.7)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(0.7)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), float(mat3x4(mix(float(_GLF_FUZZED(0.7)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), 0.0, 0.0, 1.0, 1.0, 0.0, cos(0.0), 0.0, cos(0.0), 0.0, 0.0, 1.0)))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.7)), float(1.0), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.7)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.7)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0)), min(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.7)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.7)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.7)), float(1.0), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.7)), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), 1.0 * (dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(14.23)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0)), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(0.7)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mix(float(_GLF_FUZZED((-34.38 - -45.64))), float(mix(float(_GLF_FUZZED(0.7)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(true)))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(0.7, cos(0.0) * (0.7)))), float(1.0), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false))))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(0.7, (true ? _GLF_IDENTITY(0.7, float(_GLF_IDENTITY(vec3(0.7, 0.0, 0.0), min(vec3(0.7, 0.0, 0.0), vec3(0.7, 0.0, 0.0))))) : _GLF_FUZZED(531.517))))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.7)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0))))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x2(1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(-3733.6702))) : _GLF_FUZZED(degrees(-18.13)))), 1.0, 0.0, 1.0, 0.0))))))) / 1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.7)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mix(float(_GLF_FUZZED(0.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.7)), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))), (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.7)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * 1.0)), bool(true))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))) / 1.0)))), mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + 0.0)), _GLF_IDENTITY(mat4(1.0), (true ? mat4(1.0) : _GLF_FUZZED(mat4(8.8, 44.44, -2.3, -6.4, -381.850, -54.22, -5.3, 7.7, 952.806, 6066.9884, 914.869, -4.1, -91.07, 4.5, 800.030, 51.38)))), uvec3(1u), mat4x3(1.0)), _GLF_struct_34(bvec2(true), 1u, uvec4(1u), 1, mat2x4(1.0)), mat2(1.0)), uvec3(1u), _GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_size * _GLF_struct_replacement_31.workgroup_id, 1u * (_GLF_struct_replacement_10.workgroup_size * _GLF_struct_replacement_31.workgroup_id)), vec3(1.0), _GLF_struct_38(_GLF_struct_36(ivec2(1)), _GLF_struct_37(ivec3(1), uvec3(_GLF_IDENTITY(1u, 0u ^ (1u))), _GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), min(ivec3(1), ivec3(1)))) >> ivec3(0, 0, _GLF_IDENTITY(0, (0) ^ 0))))), bvec3(true));
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))) * _GLF_struct_replacement_5.subgroup_size;
 uint virtual_gid = _GLF_struct_replacement_39.workgroup_base + _GLF_IDENTITY(subgroup_base, max(subgroup_base, _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(true ? subgroup_base : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))) - 0u)), max(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), ((subgroup_local_id) | (subgroup_local_id)) * 1u))) - 0u)), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)), 0u + (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u), (true ? _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u) : _GLF_FUZZED(subgroup_base)))))), _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)))))), (true ? subgroup_base : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)), _GLF_IDENTITY(max(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)), min(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)), _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u))))), max(max(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)), min(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)), _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u))))), max(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)), min(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)), _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u))))))))) | (true ? subgroup_base : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)), max(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)), min(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) >> (0u ^ 0u)) - 0u)), _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)))))))), min(_GLF_IDENTITY(true ? subgroup_base : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), (subgroup_local_id) | (subgroup_local_id))) - 0u)), max(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (subgroup_local_id) | (subgroup_local_id))) - 0u)), min(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)), _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)))))), (true ? subgroup_base : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 0u))))), max(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | (subgroup_local_id))))) - 0u)), min(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)), _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u))))))) | (true ? subgroup_base : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)), max(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)), min(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) | 0u)) << 0u))) - 0u)), _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)))))))), _GLF_IDENTITY(true ? subgroup_base : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)), max(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) | (~ (subgroup_local_id)))))) | (subgroup_local_id))) - 0u)), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 1u, 0u))), subgroup_local_id)), (subgroup_local_id) | (subgroup_local_id))) - 0u)), min(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(subgroup_id))) | (subgroup_local_id))) - 0u)), _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)))))), (true ? subgroup_base : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)), max(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u, (false ? _GLF_FUZZED(180701u) : (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)), min(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)), _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u))))))) | (true ? subgroup_base : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)), max(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)), min(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ~ (~ (_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id)))))) | (subgroup_local_id))) - 0u)), _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) - 0u)))))))))))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) && true)) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_39.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_struct_replacement_5.subgroup_size), _GLF_IDENTITY((_GLF_struct_replacement_39.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_struct_replacement_5.subgroup_size)) + 0u, (true ? _GLF_IDENTITY((_GLF_struct_replacement_39.workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % _GLF_struct_replacement_5.subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : (subgroup_local_id + 1) % _GLF_struct_replacement_5.subgroup_size)))), min(_GLF_IDENTITY((_GLF_struct_replacement_39.workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_5.subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : (subgroup_local_id + 1) % _GLF_struct_replacement_5.subgroup_size)), (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_5.subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : (subgroup_local_id + 1) % _GLF_struct_replacement_5.subgroup_size))) >> 0u))), 0u | ((_GLF_struct_replacement_39.workgroup_base + subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_5.subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : (subgroup_local_id + 1) % _GLF_struct_replacement_5.subgroup_size))), ~ (~ ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_5.subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : (subgroup_local_id + 1) % _GLF_struct_replacement_5.subgroup_size))))))))), (_GLF_struct_replacement_39.workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_5.subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : (subgroup_local_id + 1) % _GLF_struct_replacement_5.subgroup_size)))))) + 0u : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) >> 0)), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false || (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, false, false))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, false, false))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, false, false))), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, false, false))), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))), false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec4(true && (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), false, true, true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0)) > injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, false)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, false)), true, false)), false, false)))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && true))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), _GLF_IDENTITY(true, (true) && true))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false, false))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, false)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, false)), true, false)), false, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, false)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, false)), true, false)), false, false))))))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(false, true), true))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(bvec2(bvec2(bvec3(bvec2(false, true), true))), true, false))), true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(bvec2(bvec2(bvec3(bvec2(false, true), true))), true, false))), true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false))))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true))))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true))))), true, true))), true, true)))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat2(0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))))))))), bool(bvec4((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && true))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && true))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && true))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && true))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))), _GLF_IDENTITY(true, ! (! (true))), false, false)))))), ! (! (_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, false)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, false)), true, false)), false, false)))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && true))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, true && ((true) && true))))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false, false)))))), ! (! (bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, false)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, false)), true, false)), false, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, false)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, false)), true, false)), false, false))), true, true)))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && true))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (true) && true))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (true) && true))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true))))))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec2((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && true))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (true) && true))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (true) && true))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true))))))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true))), true, false, false)))))))))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, false)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, false)), true, false)), false, false)))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && true))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && true))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false, false))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, false)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, false)), true, false)), false, false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && true))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && true))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && true))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false, true, true))))), bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && true))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && true))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true))))))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false, false)))))), ! (! (_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, true && (true))), false, false)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, false)), true, false)), false, false)))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec4(bvec3(bvec2(false, true), true), true))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) && true)))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && true))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))))), true, false, false)))))), ! (! (bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! (_GLF_IDENTITY(true, ! (! (true))))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, false)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, false)), true, false)), false, false)))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && true)), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && true)), false)))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))))))))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && true)), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && true)), false)))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))))))))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && true)), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && true)), false)))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))))))))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)), ! (! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && true)), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && true)), false)))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))))))))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && true)), bvec3(bvec4(bvec3(bvec2(false, true), _GLF_IDENTITY(true, (true) && true)), false)))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true))))))))))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))))))), bool(bvec4((! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, (true) && true))))), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false, false))))))))))))))))))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false), false, false)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false), false, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (virtual_gid), 0u | (~ (_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))))), (~ (virtual_gid)) - (198073u & _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) | (_GLF_IDENTITY(uint(virtual_gid), (false ? _GLF_FUZZED(subgroup_id) : uint(virtual_gid)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_local_id))), virtual_gid, virtual_gid))), (uint(virtual_gid)) | (_GLF_IDENTITY(uint(virtual_gid), (false ? _GLF_FUZZED(subgroup_id) : uint(virtual_gid)))))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) | (_GLF_IDENTITY(uint(virtual_gid), (false ? _GLF_FUZZED(subgroup_id) : uint(virtual_gid))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) | (_GLF_IDENTITY(uint(virtual_gid), (false ? _GLF_FUZZED(subgroup_id) : uint(virtual_gid))))), (_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) | (_GLF_IDENTITY(uint(virtual_gid), (false ? _GLF_FUZZED(subgroup_id) : uint(virtual_gid)))))) - 0u)) | (_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) | (_GLF_IDENTITY(uint(virtual_gid), (false ? _GLF_FUZZED(subgroup_id) : uint(virtual_gid)))))))), uint(_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) | (_GLF_IDENTITY(uint(virtual_gid), (false ? _GLF_FUZZED(subgroup_id) : uint(virtual_gid)))))), uint(_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) | (_GLF_IDENTITY(uint(virtual_gid), (false ? _GLF_FUZZED(subgroup_id) : uint(virtual_gid)))))))), uint(_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) | (_GLF_IDENTITY(uint(virtual_gid), (false ? _GLF_FUZZED(subgroup_id) : uint(virtual_gid)))))), uint(_GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) | (_GLF_IDENTITY(uint(virtual_gid), (false ? _GLF_FUZZED(subgroup_id) : uint(virtual_gid)))))))))), ~ (~ (~ (_GLF_IDENTITY(virtual_gid, uint(uvec3(_GLF_IDENTITY(virtual_gid, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ (virtual_gid)), 0u, 1u))))))), ~ (virtual_gid)))))], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY((2), (_GLF_IDENTITY((2), (_GLF_IDENTITY((2), int(ivec4((2), 0, 1, 1)))) << 0)) | ((2))) << 0));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 subgroupBarrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, min(read, _GLF_IDENTITY(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), (~ _GLF_IDENTITY((read), ((read)) - (1u ^ 1u))) / 1u))), 0u | (_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), (~ (read)) / 1u))))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
}
