#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, length(0.0))))))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++)))
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     else
      {
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 1u), (_GLF_IDENTITY(uvec2(1u, 1u), clamp(uvec2(1u, 1u), uvec2(1u, 1u), uvec2(1u, 1u)))) >> uvec2(0u, 0u)))), 1u, 1u)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-19.60))) : _GLF_FUZZED(determinant((true ? mat3(1685.5261, _GLF_IDENTITY(37.99, mix(float(37.99), float(_GLF_FUZZED(2.2)), bool(false))), -920.634, 2.9, 56.18, -8.2, 5.1, -6.3, -19.42) : mat3(-8.8, -84.66, -99.77, 95.71, -91.25, -2.8, -4.2, -272.701, 8.0)))))), clamp(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-19.60))) : _GLF_FUZZED(determinant((true ? mat3(1685.5261, _GLF_IDENTITY(37.99, mix(float(37.99), float(_GLF_FUZZED(2.2)), bool(false))), -920.634, 2.9, 56.18, -8.2, 5.1, -6.3, -19.42) : mat3(-8.8, -84.66, -99.77, 95.71, -91.25, -2.8, -4.2, -272.701, 8.0)))))), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-19.60))) : _GLF_FUZZED(determinant((true ? mat3(1685.5261, _GLF_IDENTITY(37.99, mix(float(37.99), float(_GLF_FUZZED(2.2)), bool(false))), -920.634, 2.9, 56.18, -8.2, 5.1, -6.3, -19.42) : mat3(-8.8, -84.66, -99.77, 95.71, -91.25, -2.8, -4.2, -272.701, 8.0)))))), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-19.60))) : _GLF_FUZZED(determinant((true ? mat3(1685.5261, _GLF_IDENTITY(37.99, mix(float(37.99), float(_GLF_FUZZED(2.2)), bool(false))), -920.634, 2.9, 56.18, -8.2, 5.1, -6.3, -19.42) : mat3(-8.8, -84.66, -99.77, 95.71, -91.25, -2.8, -4.2, -272.701, 8.0)))))))), float(mat3x2(0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7819.0046)), bool(false))), injectionSwitch.x), 0.0, 0.0))), 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))), (dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-5.9 + 546.890))), float(0.0), bool(true))), 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), clamp(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), (false ? _GLF_FUZZED(vec4(-9960.1897, 482.921, 3742.2831, 82.18)) : vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-774.397)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(_GLF_FUZZED(1137.0975)), bool(false))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, log(1.0), round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0)))))), log(1.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), (true ? float(mat4(1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, log(1.0), round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0)))))), log(1.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)) : _GLF_FUZZED(smoothstep(-8.8, -9004.1672, -6.5)))))), min(vec2(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, log(1.0), round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0)))))), log(1.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), (true ? float(mat4(1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, log(1.0), round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0)))))), log(1.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)) : _GLF_FUZZED(smoothstep(-8.8, -9004.1672, -6.5)))))), _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, log(1.0), round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0)))))), log(1.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), (true ? float(mat4(1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, log(1.0), round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0)))))), log(1.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)) : _GLF_FUZZED(smoothstep(-8.8, -9004.1672, -6.5)))))), vec2(1.0, 1.0) * (vec2(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, log(1.0), round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0)))))), log(1.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), (true ? float(mat4(1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, log(1.0), round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0)))))), log(1.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)) : _GLF_FUZZED(smoothstep(-8.8, -9004.1672, -6.5)))))))))), mix(vec2(_GLF_FUZZED(((0.9 - -2.7) + 51.04)), (vec2(0.0, 1.0))[1]), vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(4922.7584)), bvec2(true, false)))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(69.24))))), 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), min(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), vec4(mat2x3(vec4(0.0, 0.0, 1.0, 0.0), 1.0, 1.0))), vec4(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, cos(0.0), abs(0.0), 0.0)), float(vec3(float(mat3(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, cos(0.0), abs(0.0), 0.0)), 0.0, 1.0)))), 1.0, 0.0))))) + 0.0)) * (injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, (true) && true) ? 0.0 : _GLF_FUZZED(-19.60))) : _GLF_FUZZED(determinant(_GLF_IDENTITY((true ? mat3(1685.5261, _GLF_IDENTITY(37.99, mix(float(37.99), float(_GLF_FUZZED(2.2)), bool(false))), -920.634, 2.9, 56.18, -8.2, 5.1, -6.3, -19.42) : mat3(-8.8, -84.66, -99.77, 95.71, -91.25, -2.8, -4.2, -272.701, 8.0)), ((true ? mat3(1685.5261, _GLF_IDENTITY(37.99, mix(float(37.99), float(_GLF_FUZZED(2.2)), bool(false))), -920.634, 2.9, 56.18, -8.2, 5.1, -6.3, -19.42) : mat3(-8.8, -84.66, -99.77, 95.71, -91.25, -2.8, -4.2, -272.701, 8.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(mat3x2(0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7819.0046)), bool(false))), injectionSwitch.x), 0.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.9)), bool(false))))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4367.1688) : 1.0)), 1.0)), 0.0), vec2(0.0, _GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)))))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1712.5919) : 0.0)), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), (vec4(0.0, 0.0, 1.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))), (dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), max(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), mix(float(dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), float(_GLF_FUZZED(6.2)), bool(false))))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, cos(0.0), 1.0, 1.0, abs(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sin(abs(0.0)), 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), max(vec4(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, cos(0.0), 1.0, 1.0, abs(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sin(abs(0.0)), 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, cos(0.0), 1.0, 1.0, abs(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sin(abs(0.0)), 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))), (false ? _GLF_FUZZED(vec4(-9960.1897, 482.921, 3742.2831, 82.18)) : vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))), vec4(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 1.0, 0.0, 0.0, length(0.0)))), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-774.397)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(_GLF_FUZZED(1137.0975)), bool(false))), _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, log(1.0), round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(acosh(-7.2)) : 1.0)), 1.0)))), log(1.0), 0.0, 0.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x), 0.0, 1.0)))), mix(vec2(_GLF_FUZZED(((0.9 - -2.7) + 51.04)), _GLF_IDENTITY((vec2(0.0, 1.0)), min((vec2(0.0, 1.0)), (vec2(0.0, 1.0))))[1]), vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(4922.7584)), bvec2(true, false)))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-91.29) : 0.0)), 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), min(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(mat2x3(vec4(0.0, 0.0, 1.0, 0.0), 1.0, 1.0)), max(_GLF_IDENTITY(vec4(mat2x3(vec4(0.0, 0.0, 1.0, 0.0), 1.0, 1.0)), mix(vec4(_GLF_FUZZED(-667.132), _GLF_FUZZED((false ? 7.3 : -5030.4212)), _GLF_FUZZED(1483.4787), _GLF_FUZZED(219.294)), vec4((vec4(mat2x3(vec4(0.0, 0.0, 1.0, 0.0), 1.0, 1.0)))[0], (vec4(mat2x3(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0)))[1], _GLF_IDENTITY((vec4(mat2x3(vec4(0.0, 0.0, 1.0, 0.0), 1.0, 1.0)))[2], 0.0 + (_GLF_IDENTITY((vec4(mat2x3(vec4(0.0, 0.0, 1.0, 0.0), 1.0, 1.0)))[2], ((vec4(mat2x3(vec4(0.0, 0.0, 1.0, 0.0), 1.0, 1.0)))[2]) / 1.0))), (vec4(mat2x3(vec4(0.0, 0.0, 1.0, 0.0), 1.0, 1.0)))[3]), bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_IDENTITY(vec4(mat2x3(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), 1.0, 1.0)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(2.2, 1.2, 827.911, 0.9)) : vec4(mat2x3(vec4(0.0, 0.0, 1.0, 0.0), 1.0, 1.0)), (true ? _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(2.2, 1.2, 827.911, 0.9)) : vec4(mat2x3(vec4(0.0, 0.0, 1.0, 0.0), 1.0, 1.0)) : _GLF_FUZZED(vec4(-3.0, 545.048, -1920.6538, 72.83))))))))), vec4(0.0, 0.0, 1.0, 0.0))))) + 0.0)) * (injectionSwitch.x)) > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-699.984), _GLF_FUZZED(-5322.5208)), bvec2(false, false))), injectionSwitch)) : _GLF_FUZZED(vec2(6151.1805, -57.48)))).x, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), (_GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))) * 1.0)), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0))))) + 0.0)) * (injectionSwitch.x), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0))))) + 0.0)) * (injectionSwitch.x), (_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((vec3(24.75, -52.33, 107.571) * mat3(-454.219, -2.9, 72.16, -0.5, -32.45, 587.019, 627.341, 384.979, 7985.7580)).p)), bool(false)))), (vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0))))) + 0.0)) * (injectionSwitch.x)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), float(_GLF_FUZZED(2.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), (dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)), clamp(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), min(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)), clamp(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)), clamp(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY((vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0)), mix(vec4(((vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0)))[0], ((vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0)))[1], _GLF_FUZZED(-15.39), _GLF_FUZZED(-7034.8836)), vec4(_GLF_FUZZED(-5664.4097), _GLF_FUZZED(-3253.5688), ((vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0)))[2], ((vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0)))[3]), bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) + 0.0)) * (injectionSwitch.x), (_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sin(0.0), 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0)), 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0))))))), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY((vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0)), min((vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0)), (vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0))))))) + 0.0)) * (injectionSwitch.x)) / 1.0)))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-41.32)), float(1.0), bool(true))))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1783.8390) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), (_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(95.65)), vec2(_GLF_FUZZED(5895.3910), (vec2(0.0, 1.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0)))), (true ? dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(95.65)), vec2(_GLF_FUZZED(5895.3910), (vec2(0.0, 1.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(-70.46)))) + 0.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)) > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0))))) + 0.0)) * (injectionSwitch.x), clamp(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0))))) + 0.0)) * (injectionSwitch.x), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0))))) + 0.0)) * (injectionSwitch.x), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0))))) + 0.0)) * (injectionSwitch.x)))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * vec2(1.0, 1.0))))), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5483.8856)), bool(false))), 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(95.65)), vec2(_GLF_FUZZED(5895.3910), (vec2(0.0, 1.0))[1]), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, abs(exp(0.0)) * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)))))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0))))) + 0.0)) * (injectionSwitch.x)) > injectionSwitch.y)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 1.0, 0.0, 1.0))))), 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0))))) + 0.0)) * (injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-9.7)) : dot(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)))))), (dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), _GLF_IDENTITY(0.0, 0.0 + (0.0))), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(95.65)), vec2(_GLF_FUZZED(5895.3910), (vec2(0.0, 1.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) + _GLF_IDENTITY(log(vec4(1.0, 1.0, 1.0, 1.0)), clamp(log(vec4(1.0, 1.0, 1.0, 1.0)), log(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(log(vec4(1.0, 1.0, 1.0, 1.0)), mat4(1.0) * (log(vec4(1.0, 1.0, 1.0, 1.0))))))))) + 0.0)) * (injectionSwitch.x)) > injectionSwitch.y)))), true)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0))))) + 0.0)) * (injectionSwitch.x), clamp(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0))))) + 0.0)) * (injectionSwitch.x), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0))))) + 0.0)) * (injectionSwitch.x), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0))))) + 0.0)) * (injectionSwitch.x)))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * vec2(1.0, 1.0))))), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5483.8856)), bool(false))), 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(95.65)), vec2(_GLF_FUZZED(5895.3910), (vec2(0.0, 1.0))[1]), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, abs(exp(0.0)) * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)))))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0))))) + 0.0)) * (injectionSwitch.x)) > injectionSwitch.y)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 1.0, 0.0, 1.0))))), 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0))))) + 0.0)) * (injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-9.7)) : dot(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), clamp(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)))))), (dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), _GLF_IDENTITY(0.0, 0.0 + (0.0))), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(95.65)), vec2(_GLF_FUZZED(5895.3910), (vec2(0.0, 1.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) + _GLF_IDENTITY(log(vec4(1.0, 1.0, 1.0, 1.0)), clamp(log(vec4(1.0, 1.0, 1.0, 1.0)), log(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(log(vec4(1.0, 1.0, 1.0, 1.0)), mat4(1.0) * (log(vec4(1.0, 1.0, 1.0, 1.0))))))))) + 0.0)) * (injectionSwitch.x)) > injectionSwitch.y)))), true)))))))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), (_GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), (false ? _GLF_FUZZED(-170.757) : dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0))))) / 1.0), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), min(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))) + 0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), max(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), mix(float(_GLF_FUZZED(-7.3)), float(_GLF_IDENTITY(clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), max(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), (clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), max(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))) - 0.0)), bool(true))))), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(783.091)))), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), min(_GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, 0.0))), _GLF_IDENTITY(vec2(0.0, 1.0), _GLF_IDENTITY((vec2(0.0, 1.0)) * mat2(1.0), vec2(vec4((vec2(0.0, 1.0)) * mat2(1.0), 0.0, 1.0))))))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0))))) + 0.0)) * (injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, float(float(0.0))), 1.0)))), mix(vec4(_GLF_FUZZED(9.1), _GLF_FUZZED(2101.3226), _GLF_FUZZED(-9.1), _GLF_FUZZED(float(102971u))), vec4((vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, float(float(0.0))), 1.0)))))[0], (vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, float(float(0.0))), 1.0)))))[1], (vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, float(float(0.0))), 1.0)))))[2], (vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, float(float(0.0))), 1.0)))))[3]), bvec4(true, true, true, true))), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, tan(0.0) + (_GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(95.65)), vec2(_GLF_FUZZED(5895.3910), (vec2(0.0, 1.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (false ? _GLF_FUZZED(atan(vec2(6.7, -1905.2523), vec3(4.5, -712.333, -2749.1055).bb)) : _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), mix(vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(95.65)), vec2(_GLF_FUZZED(5895.3910), (vec2(0.0, 1.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) + log(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(vec4(733.434, 1328.3351, 72.10, -3.0)) : vec4(1.0, 1.0, 1.0, 1.0)))) / exp(vec4(0.0, 0.0, 0.0, 0.0))))))) + 0.0)) * (injectionSwitch.x)) > injectionSwitch.y)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0) : _GLF_FUZZED(-8.1)))))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0))), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0))))) + 0.0)) * (injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), _GLF_IDENTITY(vec2(0.0, 1.0), _GLF_IDENTITY(mix(vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(95.65)), vec2(_GLF_FUZZED(5895.3910), (vec2(0.0, 1.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (mix(vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(95.65)), vec2(_GLF_FUZZED(5895.3910), (vec2(0.0, 1.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) + vec2(0.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0))))) + _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1734.8254)), float(0.0), bool(true))))) * (injectionSwitch.x)) > injectionSwitch.y)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(592.870))), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0) : _GLF_FUZZED(-8.1)))))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0))), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY((vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0)), min((vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0)), (vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0))))))) + 0.0)) * _GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x)))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), min(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, 1.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.2)), float(1.0), bool(true)))) - 0.0), 0.0), _GLF_IDENTITY(vec2(0.0, 1.0), _GLF_IDENTITY(mix(vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(95.65)), vec2(_GLF_FUZZED(5895.3910), (vec2(0.0, 1.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (mix(vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(95.65)), vec2(_GLF_FUZZED(5895.3910), (vec2(0.0, 1.0))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) + vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - tan(0.0)))))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) + log(vec4(1.0, 1.0, 1.0, 1.0))))) + _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1734.8254)), float(0.0), bool(true))))) * (injectionSwitch.x)) > injectionSwitch.y)))))), true))))))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 & 1) | 1)); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         do
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 >> _GLF_IDENTITY(int(8), int(8))) << _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
    {
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(64.79)), bvec2(false, false))).x, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(64.79)), bvec2(false, false))).x : _GLF_FUZZED(-4757.6234))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)))), 0, 0, 1)))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = (94911 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = (((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) | 0)) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) ^ 0)); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) + 0))
                  {
                   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, clamp(0, 0, 0))); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                    }
                  }
                 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), true && (bool(bvec4(_GLF_DEAD(false), false, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))) || false)))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)))))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
                            {
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               barrier();
                              }
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                          }
                         else
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                          }
                        }
                       barrier();
                      }
                    }
                   barrier();
                  }
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
               else
                {
                }
               do
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              barrier();
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, true, false))));
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true))), ! (_GLF_IDENTITY(! (bool(false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (bool(false))), true && (bool(! (bool(false))))), ! (! (bool(! (bool(false))))))))))))));
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(-6.8)), clamp(float(_GLF_FUZZED(-6.8)), float(_GLF_FUZZED(-6.8)), float(_GLF_FUZZED(-6.8)))), bool(false))), 1.0, 0.0), vec3(length(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3((vec3(0.0, 0.0, 0.0))[0], _GLF_FUZZED(4.7), (vec3(0.0, 0.0, 0.0))[2]), vec3(_GLF_FUZZED(26.20), (vec3(0.0, 0.0, 0.0))[1], _GLF_FUZZED(vec2(-2.9, 6.1).y)), bvec3(false, true, false))), vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))), max(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3((vec3(0.0, 0.0, 0.0))[0], _GLF_FUZZED(4.7), (vec3(0.0, 0.0, 0.0))[2]), vec3(_GLF_FUZZED(26.20), (vec3(0.0, 0.0, 0.0))[1], _GLF_FUZZED(vec2(-2.9, 6.1).y)), bvec3(false, true, false))), vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3((vec3(0.0, 0.0, 0.0))[0], _GLF_FUZZED(4.7), (vec3(0.0, 0.0, 0.0))[2]), vec3(_GLF_FUZZED(26.20), (vec3(0.0, 0.0, 0.0))[1], _GLF_FUZZED(vec2(-2.9, 6.1).y)), bvec3(false, true, false))), vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))))), 1.0, 0.0))) * (injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(14.84)), float(injectionSwitch.y), bool(true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) * subgroup_size, (subgroup_id * subgroup_size) | 0u) + subgroup_local_id;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))) || false), true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))) && true))
  barrier();
 for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), bool(bool(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), true))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), true))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), true))))))))))) || false))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (! (_injected_loop_counter < 1)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), false))))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1734.5262, -9172.5772)) : injectionSwitch)).x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(uint(1), uint(1)), min(min(uint(1), uint(1)), min(uint(1), _GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), uint(1))))))), _GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, _GLF_IDENTITY(0 ^ (64), (0 ^ (64)) | (0 ^ (64))))), ~ (~ (~ (_GLF_IDENTITY(64, 0 ^ (64)))))))), 64, 64)), 4);
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false)), true && (bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), int(5))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1))), _GLF_IDENTITY(bool(bvec2(! (_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1))), false)), (bool(bvec2(! (_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1))), false))) && true)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.9))))) > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(0.0)), injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(false, bool(bool(false)))) && true)))), true, true))) || false))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5171.3739, 177.945)))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5.0, 5.4)) : injectionSwitch)).x > injectionSwitch.y)))))))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))));
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             barrier();
            }
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) | (_GLF_IDENTITY(read, min(_GLF_IDENTITY(read, uint(uvec2(read, 1u))), _GLF_IDENTITY(read, max(read, read)))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(read, (read) | _GLF_IDENTITY((_GLF_IDENTITY(read, min(_GLF_IDENTITY(read, uint(uvec2(read, 1u))), _GLF_IDENTITY(read, max(read, read))))), ((_GLF_IDENTITY(read, min(_GLF_IDENTITY(read, uint(uvec2(read, 1u))), _GLF_IDENTITY(read, max(read, read)))))) | 0u)), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(read, (read) | (_GLF_IDENTITY(read, min(_GLF_IDENTITY(read, _GLF_IDENTITY(uint(uvec2(read, 1u)), (uint(uvec2(read, 1u))) | 0u)), _GLF_IDENTITY(read, max(read, read)))))), 0u, 0u))) | 0u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (false ? _GLF_FUZZED((subgroup_id % subgroup_size)) : read))) | _GLF_IDENTITY((_GLF_IDENTITY(read, min(_GLF_IDENTITY(_GLF_IDENTITY(read, uint(uvec2(read, 1u))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(read, uint(uvec2(read, 1u))), (_GLF_IDENTITY(read, uint(uvec2(read, 1u)))) >> 0u))), _GLF_IDENTITY(read, max(read, read))))), ((_GLF_IDENTITY(read, min(_GLF_IDENTITY(read, uint(uvec2(read, 1u))), _GLF_IDENTITY(read, max(read, read)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(read, min(_GLF_IDENTITY(read, uint(uvec2(read, 1u))), _GLF_IDENTITY(read, max(read, read))))), min(_GLF_IDENTITY((_GLF_IDENTITY(read, min(_GLF_IDENTITY(read, uint(uvec2(read, 1u))), _GLF_IDENTITY(read, max(read, read))))), min((_GLF_IDENTITY(read, min(_GLF_IDENTITY(read, uint(uvec2(read, 1u))), _GLF_IDENTITY(read, max(read, read))))), (_GLF_IDENTITY(read, min(_GLF_IDENTITY(read, uint(uvec2(read, 1u))), _GLF_IDENTITY(read, max(read, read))))))), _GLF_IDENTITY((_GLF_IDENTITY(read, min(_GLF_IDENTITY(read, uint(uvec2(read, 1u))), _GLF_IDENTITY(read, max(read, read))))), 1u * ((_GLF_IDENTITY(read, min(_GLF_IDENTITY(read, uint(uvec2(read, 1u))), _GLF_IDENTITY(read, max(read, read)))))))))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(read, (read) | (_GLF_IDENTITY(read, min(_GLF_IDENTITY(read, uint(uvec2(read, _GLF_IDENTITY(1u, (1u) - 0u)))), _GLF_IDENTITY(read, max(read, read)))))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) | (_GLF_IDENTITY(read, min(_GLF_IDENTITY(read, _GLF_IDENTITY(uint(uvec2(read, 1u)), (uint(uvec2(read, 1u))) | 0u)), _GLF_IDENTITY(read, _GLF_IDENTITY(max(read, read), max(max(read, read), max(read, read)))))))), (_GLF_IDENTITY(read, (read) | (_GLF_IDENTITY(read, min(_GLF_IDENTITY(read, _GLF_IDENTITY(uint(uvec2(read, 1u)), (uint(uvec2(read, 1u))) | 0u)), _GLF_IDENTITY(read, max(read, read))))))) | 0u), 0u, 0u))) | 0u)))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
}
