#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uvec4 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z = subgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, determinant(mat2(0.0, 1.0, 0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (true && (_GLF_DEAD(false))), (! (true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))) || false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, determinant(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 0.0)), length(0.0), 0.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, determinant(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 0.0)), length(0.0), 0.0, 1.0)))))).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.9)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-74.54) : injectionSwitch.x))), bool(true))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-3.9, clamp(-3.9, -3.9, -3.9)))), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-74.54) : injectionSwitch.x))), bool(true))) > injectionSwitch.y) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.9)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-74.54) : injectionSwitch.x))), bool(true))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-3.9, clamp(-3.9, -3.9, -3.9)))), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-74.54) : injectionSwitch.x))), bool(true))) > injectionSwitch.y) && true)), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.9)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-74.54) : injectionSwitch.x))), bool(true))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-3.9, clamp(-3.9, -3.9, -3.9)))), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-74.54) : injectionSwitch.x))), bool(true))) > injectionSwitch.y) && true)), true, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), true, false)))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true)))))), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-958.640))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-958.640)))))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-958.640))))))), false || (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-958.640)))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) / 1u)) | (gl_WorkGroupID.x)), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x)))))), clamp(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), _GLF_IDENTITY((true ? _GLF_FUZZED(workgroup_size) : _GLF_FUZZED(num_workgroup)), (_GLF_IDENTITY((true ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(num_workgroup)), 0u | ((_GLF_IDENTITY(true ? _GLF_FUZZED(workgroup_size) : _GLF_FUZZED(num_workgroup), 0u + (true ? _GLF_FUZZED(workgroup_size) : _GLF_FUZZED(num_workgroup))))))) >> 0u)), 0u | (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(true ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) / _GLF_IDENTITY(1u, (1u) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) : _GLF_FUZZED(num_workgroup), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(true ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(max(workgroup_size, workgroup_size), (true ? max(workgroup_size, workgroup_size) : _GLF_FUZZED(subgroup_id))))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))))) / 1u)) : _GLF_FUZZED(num_workgroup), (true ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) / 1u)) : _GLF_FUZZED(num_workgroup)) >> 0u), 0u, 1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) << 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(uint(4u), uint(4u))))))), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) / 1u)) : _GLF_FUZZED(num_workgroup), ~ (~ _GLF_IDENTITY((true ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) / _GLF_IDENTITY(1u, ((((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (1u)))) : _GLF_FUZZED(num_workgroup)), max((true ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) / _GLF_IDENTITY(1u, ((((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (1u)))) : _GLF_FUZZED(num_workgroup)), (true ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) / _GLF_IDENTITY(1u, ((((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (1u)))) : _GLF_FUZZED(num_workgroup)))))), _GLF_IDENTITY((true ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) / 1u)) : _GLF_FUZZED(num_workgroup)) >> 0u, min((true ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) / 1u)) : _GLF_FUZZED(num_workgroup)) >> 0u, _GLF_IDENTITY((true ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) / 1u)) : _GLF_FUZZED(num_workgroup)) >> 0u, min(_GLF_IDENTITY((true ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) / _GLF_IDENTITY(1u, 1u * (1u)))) : _GLF_FUZZED(num_workgroup)) >> 0u, 0u ^ ((true ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) / 1u)) : _GLF_FUZZED(num_workgroup)) >> 0u)), (true ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) / 1u)) : _GLF_FUZZED(num_workgroup)) >> 0u))))), 0u, 1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(subgroup_id) : uint(4u))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) - uvec4(0u, 0u, 0u, 0u)))))))) : gl_WorkGroupID.x, _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), max(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), ~ (~ (_GLF_FUZZED(workgroup_size))))))), (_GLF_FUZZED(workgroup_size)) << 0u))), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), max(_GLF_FUZZED(workgroup_size), _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) << 0u))))) : _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : gl_WorkGroupID.x) | (_GLF_IDENTITY(false, bool(bvec3(false, true, false))) ? _GLF_FUZZED(workgroup_size) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(workgroup_size) : gl_WorkGroupID.x) | (_GLF_IDENTITY(false, bool(bvec3(false, true, false))) ? _GLF_FUZZED(workgroup_size) : gl_WorkGroupID.x)) << 0u)), _GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) : gl_WorkGroupID.x))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) | (_GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) / 1u))) | (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x)))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x)))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x))))))) ^ 0u, uint(uint((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x))))))) ^ 0u)))))), clamp(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (true ? _GLF_FUZZED(workgroup_size) : _GLF_FUZZED(num_workgroup))), 0u | (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(true ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) / 1u)) : _GLF_FUZZED(num_workgroup), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(true ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) / 1u)) : _GLF_FUZZED(num_workgroup), (true ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) / _GLF_IDENTITY(1u, (1u) + 0u))) : _GLF_FUZZED(num_workgroup)) >> 0u), 0u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (uvec4(_GLF_IDENTITY(true ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))), 0u | ((_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))))) / 1u)) : _GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(true ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) / 1u)) : _GLF_FUZZED(num_workgroup), 0u ^ (_GLF_IDENTITY(true ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(max(workgroup_size, workgroup_size), 0u ^ (max(workgroup_size, workgroup_size))))) / 1u)) : _GLF_FUZZED(num_workgroup), (true ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) / 1u)) : _GLF_FUZZED(num_workgroup)) << 0u)))) >> 0u), 0u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) - uvec4(0u, 0u, 0u, 0u)))))))) : gl_WorkGroupID.x, _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), max(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))), _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), 0u | (_GLF_FUZZED(workgroup_size)))) * 1u)) << 0u))), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), max(_GLF_FUZZED(workgroup_size), _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) << 0u))))) : _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : gl_WorkGroupID.x) | (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))))) ? _GLF_FUZZED(workgroup_size) : gl_WorkGroupID.x), ((false ? _GLF_FUZZED(workgroup_size) : gl_WorkGroupID.x) | (_GLF_IDENTITY(false, bool(bvec3(false, true, false))) ? _GLF_FUZZED(workgroup_size) : gl_WorkGroupID.x)) << 0u)), _GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) : gl_WorkGroupID.x)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.w = workgroup_base;
 uint subgroup_base = GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.z * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(! (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(! (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), _GLF_IDENTITY(true, (true) && true) && (bool(_GLF_IDENTITY(bvec3(! (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(! (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))), true && (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), true && (bool(_GLF_IDENTITY(bvec3(! (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(! (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-323.124)), bvec2(true, false)))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true))))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_IDENTITY(true, (true) && true))), false || (bool(bvec3(false, true, true))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true))))), false), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_IDENTITY(true, true && (true)))), _GLF_IDENTITY(false || (bool(bvec3(false, true, true))), true && (false || (bool(bvec3(false, true, true))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true))))), false), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) || false)), true && ((! (false)))))), ! (! (bool(bool(_GLF_IDENTITY((! (false)), true && ((! (false)))))))))))))), _GLF_IDENTITY(true && (false), bool(bvec4(_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), bool(bool(! (true && (false))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0))))))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true, true)))))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 226.582)), _GLF_FUZZED(-6330.5543)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 226.582)), _GLF_FUZZED(-6330.5543)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), false, true, false)), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 226.582)), _GLF_FUZZED(-6330.5543)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), false, true, false))) && true))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.w + _GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.w + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) ^ 0u)) << 0u))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(floatBitsToUint(_GLF_IDENTITY(0.6, 0.0 + (0.6))), (floatBitsToUint(_GLF_IDENTITY(0.6, 0.0 + (0.6)))) | (floatBitsToUint(_GLF_IDENTITY(0.6, 0.0 + (0.6)))))) : (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(floatBitsToUint(0.6)) : (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size, min(false ? _GLF_FUZZED(floatBitsToUint(0.6)) : (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))), (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))))) ^ (0 >> _GLF_IDENTITY(int(0), int(0))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) | _GLF_IDENTITY((1u ^ 1u), (_GLF_IDENTITY((1u ^ 1u), max((1u ^ 1u), (1u ^ 1u)))) | 0u)), false ? _GLF_FUZZED(floatBitsToUint(0.6)) : (subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (~ (1)) ^ (0 >> _GLF_IDENTITY(int(8), int(8)))), (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), _GLF_IDENTITY(~ (1), max(~ (1), ~ (1)))))) * 1)))) % subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(floatBitsToUint(0.6)) : (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size, min(false ? _GLF_FUZZED(floatBitsToUint(0.6)) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), 0 ^ (~ (1))), min(~ (1), ~ (1))))), (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))))) ^ (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (~ (int(0)))))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), 0 ^ (~ (1))), min(~ (1), ~ (1))))), (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))))) ^ (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (~ (int(0)))))))), ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), 0 ^ (~ (1))), min(~ (1), ~ (1))))), (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))))) ^ (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (~ (int(0))))))))) | ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), 0 ^ (~ (1))), min(~ (1), ~ (1))))), (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))))) ^ (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), ~ (~ (int(0)))))))))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) | _GLF_IDENTITY((1u ^ 1u), (_GLF_IDENTITY((_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) / 1u)), max((1u ^ 1u), (1u ^ 1u)))) | 0u)), false ? _GLF_FUZZED(floatBitsToUint(0.6)) : (subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY((_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), _GLF_IDENTITY(~ (1), max(~ (1), ~ (1)))))), max((_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), _GLF_IDENTITY(~ (1), max(~ (1), ~ (1)))))), (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), _GLF_IDENTITY(~ (1), max(~ (1), ~ (1)))))))) * 1)))) % subgroup_size)), max(_GLF_IDENTITY(false ? _GLF_FUZZED(floatBitsToUint(0.6)) : (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size, min(false ? _GLF_FUZZED(floatBitsToUint(0.6)) : (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) - 0), ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))))) ^ (0 >> _GLF_IDENTITY(int(0), int(0))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) | _GLF_IDENTITY((1u ^ 1u), (_GLF_IDENTITY((1u ^ 1u), max((1u ^ 1u), (1u ^ 1u)))) | 0u)), false ? _GLF_FUZZED(floatBitsToUint(0.6)) : (subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-20211) : 1))), (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), _GLF_IDENTITY(~ (1), max(~ (1), ~ (1)))))) * 1)))) % subgroup_size)), _GLF_IDENTITY(false ? _GLF_FUZZED(floatBitsToUint(0.6)) : (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size, min(false ? _GLF_FUZZED(floatBitsToUint(0.6)) : (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))), (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))))) ^ _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), max(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), (true ? (0 >> _GLF_IDENTITY(int(0), int(0))) : _GLF_FUZZED(56825))), (0 >> _GLF_IDENTITY(int(0), int(0))))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) | _GLF_IDENTITY((1u ^ 1u), (_GLF_IDENTITY((1u ^ 1u), max((1u ^ 1u), (1u ^ 1u)))) | 0u)), false ? _GLF_FUZZED(floatBitsToUint(0.6)) : (subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), _GLF_IDENTITY(~ (1), max(~ (1), ~ (1)))))) * 1)))) % subgroup_size))))) | (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(floatBitsToUint(0.6)) : (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), clamp(_GLF_IDENTITY(~ (~ (1)), 0 ^ (~ (~ (1)))), ~ (~ (1)), ~ (~ (1)))))) % subgroup_size, min(false ? _GLF_FUZZED(floatBitsToUint(0.6)) : (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))), (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))))) ^ (0 >> _GLF_IDENTITY(int(0), int(0))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) | _GLF_IDENTITY((1u ^ 1u), (_GLF_IDENTITY((1u ^ 1u), max((1u ^ 1u), (_GLF_IDENTITY(1u, 0u ^ (1u)) ^ _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(191763u))))))) | 0u)), false ? _GLF_FUZZED(floatBitsToUint(0.6)) : (subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), _GLF_IDENTITY(_GLF_IDENTITY(~ (1), (~ (1)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), max(~ (1), ~ _GLF_IDENTITY((1), max((1), (1)))))))) * 1)))) % subgroup_size)), ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(floatBitsToUint(0.6)) : (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size, min(false ? _GLF_FUZZED(floatBitsToUint(0.6)) : (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))), (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))))) ^ (0 >> _GLF_IDENTITY(int(0), int(0))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), uint(uint(_GLF_IDENTITY((subgroup_size), uint(uvec4(_GLF_IDENTITY((subgroup_size), 0u ^ ((subgroup_size))), 0u, 1u, 0u)))))), clamp((subgroup_size), (subgroup_size), (subgroup_size))) | _GLF_IDENTITY((1u ^ 1u), (_GLF_IDENTITY((1u ^ 1u), max((1u ^ 1u), (1u ^ 1u)))) | 0u)), false ? _GLF_FUZZED(floatBitsToUint(0.6)) : (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), _GLF_IDENTITY(~ (1), max(~ (1), ~ (1)))))) * 1)), (~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), _GLF_IDENTITY(~ (1), max(~ (1), ~ (1)))))) * 1))) ^ 0))) % subgroup_size))))))), false ? _GLF_FUZZED(floatBitsToUint(0.6)) : (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size, _GLF_IDENTITY(false ? _GLF_FUZZED(floatBitsToUint(0.6)) : (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)), ~ _GLF_IDENTITY((~ (1)), _GLF_IDENTITY(((~ (1))) - (0 << _GLF_IDENTITY(int(5), int(5))), (((~ (1))) - (0 << _GLF_IDENTITY(int(5), int(5)))) >> 0)))) % subgroup_size, max(false ? _GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(0.6)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u) + (_GLF_FUZZED(floatBitsToUint(0.6)))) : (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1)), min(_GLF_IDENTITY(1, min(1, 1)), 1)), ~ (~ _GLF_IDENTITY((1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((1), (false ? _GLF_FUZZED(86592) : (1))), (0 >> _GLF_IDENTITY(int(2), int(2)))), ivec2(ivec2(_GLF_IDENTITY(ivec2((1), (0 >> _GLF_IDENTITY(int(2), int(2)))), max(ivec2((1), (0 >> _GLF_IDENTITY(int(2), int(2)))), ivec2((1), (0 >> _GLF_IDENTITY(int(2), int(2)))))))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((1), (false ? _GLF_FUZZED(86592) : (1))), (0 >> _GLF_IDENTITY(int(2), int(2)))), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(_GLF_IDENTITY((1), (false ? _GLF_FUZZED(86592) : (1))), (0 >> _GLF_IDENTITY(int(2), int(2)))), max(ivec2(_GLF_IDENTITY((1), (false ? _GLF_FUZZED(86592) : (1))), (0 >> _GLF_IDENTITY(int(2), int(2)))), ivec2(_GLF_IDENTITY((1), (false ? _GLF_FUZZED(86592) : (1))), (0 >> _GLF_IDENTITY(int(2), int(2)))))))), ivec2(ivec2(ivec2((1), (0 >> _GLF_IDENTITY(int(2), int(2))))))))) >> 0))))) % subgroup_size, false ? _GLF_FUZZED(floatBitsToUint(_GLF_IDENTITY(0.6, max(0.6, 0.6)))) : (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)), ~ (~ (1))), max(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)), ~ (~ (1))), subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)), ~ (~ (1)))))) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(floatBitsToUint(0.6)) : (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size, clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(floatBitsToUint(0.6)) : (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size, min(false ? _GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(0.6)), clamp(_GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(0.6)), ~ (~ (_GLF_FUZZED(floatBitsToUint(0.6))))), _GLF_FUZZED(floatBitsToUint(0.6)), _GLF_FUZZED(floatBitsToUint(0.6)))) : (subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) | 0)), 1 * (~ (1)))))) % subgroup_size, _GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(floatBitsToUint(0.6)) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1)))))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))))) | (1))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))))) | (1))))), int(ivec2(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, max(0, 0)), 0, 0, 0))))) | (1))))), 0))))))), ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1))))))) | (0u ^ 0u))) ^ 0u) % subgroup_size)), false ? _GLF_FUZZED(floatBitsToUint(0.6)) : _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), min((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))), (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))))) | 0u) % subgroup_size, false ? _GLF_FUZZED(floatBitsToUint(0.6)) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))), max(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))), subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))), ~ (~ (_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), max(~ ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))))), (~ ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))))) << 0u)))))))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))))) - 0u))), (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.w + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)) + (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u, (0u) / 1u) ^ (subgroup_local_id + 1))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)), subgroup_local_id))) << 0u) + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), (subgroup_local_id + 1), (subgroup_local_id + 1))), (subgroup_local_id + 1), (subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY((true ? (subgroup_local_id + 1) : _GLF_FUZZED(packSnorm2x16(injectionSwitch))), uint(uvec3((true ? (subgroup_local_id + 1) : _GLF_FUZZED(packSnorm2x16(injectionSwitch))), 0u, 0u)))), (subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)))), (subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))), _GLF_IDENTITY(min(clamp(_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))), (subgroup_local_id + 1), (subgroup_local_id + 1)), clamp(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * (1u | 1u)) + 1)), 0u ^ (clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))))), (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), (subgroup_local_id + 1))), _GLF_IDENTITY(0u | (min(clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))) << 0u) + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))), (subgroup_local_id + 1), (subgroup_local_id + 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))), min(_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))), _GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))))), (subgroup_local_id + 1), (subgroup_local_id + 1)))), (0u | (min(clamp(_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u), (subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-38271) : _GLF_IDENTITY(1, (1) >> 0)))))), (subgroup_local_id + 1), (subgroup_local_id + 1)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), (subgroup_local_id + 1))), (subgroup_local_id + 1), (subgroup_local_id + 1))))) / (1u & 1u))))))))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), min(subgroup_size, subgroup_size)))) << 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))))))))
  barrier();
 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.x = next_virtual_gid;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), ! (! ((_GLF_DEAD(false))))) || false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(((- 60.94) * 135.905))), vec2(_GLF_FUZZED(float(172145u)), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.x], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (false ? _GLF_FUZZED(41039) : _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 1 * (1))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 1 * (1))), 0 + (~ (_GLF_IDENTITY(1, 1 * (1))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1, 1 * (1))), (~ (_GLF_IDENTITY(1, 1 * (1)))) / 1))))))), min(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, 1 * (1)))), 0, 0)), (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(1 * (1), int(_GLF_IDENTITY(int(1 * (1)), (int(1 * (1))) * 1)))), min(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (1) : _GLF_FUZZED(-62156)))))), 0, 0))) - 0))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) ^ 0), 2), (atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))), ((_GLF_IDENTITY(64, min(64, 64)))) | ((_GLF_IDENTITY(64, min(64, 64))))) ^ 0), 2)) << 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-13.73))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.y = read, ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.y = read)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))), true, true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(virtual_gid, 1u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))), 1u)), (_GLF_IDENTITY(uint(uvec4(virtual_gid, 1u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))), 1u)), clamp(uint(uvec4(virtual_gid, 1u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))), 1u)), uint(uvec4(virtual_gid, 1u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))), 1u)), uint(uvec4(virtual_gid, 1u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))), 1u))))) | (uint(uvec4(virtual_gid, 1u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))), 1u)))), (uint(uvec4(virtual_gid, 1u, 0u, 1u))) ^ 0u))], GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_14next_virtual_gidreadsubgroup_idworkgroup_base.y, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4) - int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? (4) - int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(67106))), max(_GLF_IDENTITY((4) - int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? (4) - int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(67106))), _GLF_IDENTITY((4) - int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? (4) - int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(67106))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4) - int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? (4) - int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(67106))), max(_GLF_IDENTITY((4) - int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? (4) - int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(67106))), _GLF_IDENTITY((4) - int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? (4) - int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(67106))))), (_GLF_IDENTITY(_GLF_IDENTITY((4) - int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? (4) - int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(67106))), max(_GLF_IDENTITY((4) - int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? (4) - int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(67106))), _GLF_IDENTITY((4) - int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? (4) - int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(67106)))))) | (_GLF_IDENTITY(_GLF_IDENTITY((4) - int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? (4) - int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(67106))), max(_GLF_IDENTITY((4) - int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? (4) - int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(67106))), _GLF_IDENTITY((4) - int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? (4) - int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(67106))))))), _GLF_IDENTITY(_GLF_IDENTITY((4) - int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? (4) - int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(67106))), max(_GLF_IDENTITY((4) - int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? (4) - int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(67106))), _GLF_IDENTITY((4) - int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? (4) - int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(67106)))))))), _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, ~ (~ (64))), 64))), clamp(_GLF_IDENTITY((64), (_GLF_IDENTITY((64), min(_GLF_IDENTITY((64), ((64)) >> (0 ^ 0)), (64)))) - 0), _GLF_IDENTITY((64), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((64), ((64)) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY((64), ((64)) >> 0), min(_GLF_IDENTITY((64), ((_GLF_IDENTITY(64, (64) / 1))) >> 0), _GLF_IDENTITY((64), ((64)) >> 0)))) << 0)))), (64))) << 0), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))) && _GLF_IDENTITY(true, (true) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.4), _GLF_FUZZED(99.80)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4547.2240)), vec2(_GLF_FUZZED(vec4(0.2, -11.20, -451.575, -8351.8556).y), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))) || false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))) || false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
