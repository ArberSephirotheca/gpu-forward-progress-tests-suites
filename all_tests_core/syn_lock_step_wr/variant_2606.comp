#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_27 {
 uvec3 _f0;
 mat4 _f1;
 vec2 _f2;
 mat4 _f3;
 bvec3 _f4;
 mat2x4 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_26 {
 bvec2 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_25 {
 mat4 _f0;
 bool _f1;
 vec2 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_28 {
 _GLF_struct_25 _f0;
 _GLF_struct_26 _f1;
 _GLF_struct_27 _f2;
 mat3x2 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_23 {
 mat4x3 _f0;
 mat4x2 _f1;
 float _f2;
 mat2 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_22 {
 int _f0;
 uvec3 _f1;
 mat3 _f2;
 float _f3;
 mat2 _f4;
} ;

struct _GLF_struct_24 {
 _GLF_struct_22 _f0;
 mat3 _f1;
 ivec2 _f2;
 ivec2 _f3;
 uint read;
 uvec3 _f4;
 _GLF_struct_23 _f5;
} ;

struct _GLF_struct_20 {
 bvec4 _f0;
 uint _f1;
} ;

struct _GLF_struct_19 {
 vec3 _f0;
 float _f1;
} ;

struct _GLF_struct_18 {
 bvec4 _f0;
} ;

struct _GLF_struct_17 {
 uint _f0;
 int _f1;
} ;

struct _GLF_struct_21 {
 mat4 _f0;
 vec2 _f1;
 _GLF_struct_17 _f2;
 _GLF_struct_18 _f3;
 _GLF_struct_19 _f4;
 _GLF_struct_20 _f5;
} ;

struct _GLF_struct_29 {
 mat3 _f0;
 _GLF_struct_21 _f1;
 _GLF_struct_24 _f2;
 _GLF_struct_28 _f3;
} ;

struct _GLF_struct_15 {
 vec4 _f0;
 vec2 _f1;
 int _f2;
 bool _f3;
} ;

struct _GLF_struct_13 {
 bvec3 _f0;
 float _f1;
} ;

struct _GLF_struct_12 {
 mat4 _f0;
 bvec3 _f1;
 vec3 _f2;
 bvec2 _f3;
 vec2 _f4;
 bvec3 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_14 {
 vec4 _f0;
 mat3 _f1;
 ivec3 _f2;
 _GLF_struct_12 _f3;
 _GLF_struct_13 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_10 {
 mat4x2 _f0;
 mat3x4 _f1;
 ivec2 _f2;
 bvec2 _f3;
 mat3x2 _f4;
 mat3x4 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_9 {
 uvec4 _f0;
 mat2 _f1;
 vec3 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_8 {
 bool _f0;
 vec3 _f1;
 uvec2 _f2;
 ivec3 _f3;
 mat4x3 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_11 {
 _GLF_struct_8 _f0;
 uint _f1;
 vec3 _f2;
 _GLF_struct_9 _f3;
 _GLF_struct_10 _f4;
} ;

struct _GLF_struct_6 {
 mat4 _f0;
 mat2x3 _f1;
 bvec4 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_5 {
 vec4 _f0;
 bvec4 _f1;
 mat4x2 _f2;
 ivec4 _f3;
 int _f4;
 vec4 _f5;
 float _f6;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
} ;

struct _GLF_struct_3 {
 uvec2 _f0;
 mat4x3 _f1;
 ivec4 _f2;
 float _f3;
 uvec4 _f4;
 mat4x3 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
} ;

struct _GLF_struct_1 {
 ivec3 _f0;
 mat4x2 _f1;
 ivec2 _f2;
 vec2 _f3;
 vec4 _f4;
 int _f5;
} ;

struct _GLF_struct_0 {
 bool _f0;
 mat4x2 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_16 {
 _GLF_struct_2 _f0;
 mat2x4 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_11 _f4;
 _GLF_struct_14 _f5;
 _GLF_struct_15 _f6;
 uint subgroup_size;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(902.701), _GLF_FUZZED(9.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))[0], injectionSwitch[1])).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))) && true), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))) && true)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))), false)), (bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))), false))) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0)))))), false, false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_2(_GLF_struct_0(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (! (true))), bool(bvec2((! (! (true))), true))) || false, ((! (! (true))) || false) || false), bool(bvec3(_GLF_IDENTITY((! (! (true))) || false, true && ((_GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), ! (! (! (! _GLF_IDENTITY((true), true && ((true)))))))))) || false)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), true))))))), mat4x2(1.0), mat3x4(1.0)), _GLF_struct_1(ivec3(_GLF_IDENTITY(1, (1) - (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), int(3)), max(0 << _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> (0 | 0)) << _GLF_IDENTITY(int(3), int(3)), int(_GLF_IDENTITY(ivec3(0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(int(int(3))), 0 ^ (_GLF_IDENTITY(int(int(int(3))), ~ (~ (int(int(int(3)))))))))), 1, 0), ivec3(ivec4(ivec3(0 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, ~ (~ (3))))), 1, 0), 0)))))))))), mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), ivec2(1), _GLF_IDENTITY(vec2(1.0), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0))) * round(length(normalize(vec2(1.0, 1.0))))))) ? _GLF_FUZZED(injectionSwitch) : vec2(1.0))), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(vec4(vec4(1.0))), mix(vec4(_GLF_FUZZED((9.5 / 25.14)), (vec4(vec4(vec4(1.0))))[1], (vec4(vec4(vec4(1.0))))[2], _GLF_FUZZED(7.5)), vec4((vec4(vec4(vec4(1.0))))[_GLF_IDENTITY(0, (0) | (0))], _GLF_IDENTITY(_GLF_FUZZED(99.90), float(_GLF_IDENTITY(mat4(_GLF_FUZZED(99.90), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat4(_GLF_FUZZED(99.90), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), mat4(1.0) * (mat4(_GLF_FUZZED(99.90), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(mat4(-8001.5646, -7.1, 322.458, -6.7, -7.1, 8.5, -9.0, 6.3, 959.928, -7924.4777, 76.35, 7376.9860, 3778.3439, 5984.6693, 5.6, 8709.4735)))))), _GLF_FUZZED((+ -951.597)), (vec4(vec4(vec4(1.0))))[3]), bvec4(true, _GLF_IDENTITY(false, bool(bvec2(false, true))), false, true))), (vec4(vec4(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0))))) * _GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(-12.31, 7.8, -818.103, -47.58, -4.5, -931.906, 6.6, 7.3, 9.3, -3.1, 80.73, 855.328, -434.646, 255.166, -6490.9903, -7.3)) : mat4(1.0)))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1)), mat2x4(1.0), _GLF_struct_4(_GLF_struct_3(uvec2(1u), mat4x3(1.0), ivec4(1), 1.0, uvec4(1u), mat4x3(1.0), bvec4(true))), _GLF_struct_7(_GLF_struct_5(_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) ? vec4(1.0) : _GLF_FUZZED(vec4(446.309, 2.6, 8691.0492, 404.108)))), bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), true))), (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, _GLF_IDENTITY(true, true && (true))))))), true)))) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), true))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (_GLF_IDENTITY(bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false)))))) && true))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))))), true)))), ! (! ((_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true))))))) && true)))) && _GLF_IDENTITY(true, true && (true))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))))), true))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-87.32)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, true))))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), float(_GLF_FUZZED(-87.32)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, true))))), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-87.32)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), true, false, true))))), true))), bvec3(bvec3(bvec3(bvec3(bvec3(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-87.32)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-87.32)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false, true))))), true)))))), true))))))) && true)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && true))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true)))) && true)))) && true)), false || ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && true))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true)))) && true)))) && true, ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(false))), bool(false))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true)))) && true)))) && true) || false)))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat2((injectionSwitch) * mat2(1.0), 1.0, 0.0)))).y)), true), true)))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, _GLF_IDENTITY(false, bool(bool(false))), true))))), true)))) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))), ((injectionSwitch.x < injectionSwitch.y)) && true)), true))), (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && true))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true)))) && true)))) && true))))), false)))))))))), mat4x2(1.0), ivec4(1), 1, vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), clamp(max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), clamp(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(-982.568)), float((1.0)), bool(true))) + 0.0)), float(mat2(max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), 1.0, 1.0, 0.0))), _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), max(max(1.0, _GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))), max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))), max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))))) * 1.0), 1.0)), 0.0 + (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), clamp(max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), clamp(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), float(mat2(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), min(_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), min(max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))), max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))), 1.0, 1.0, 0.0))), _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), max(max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))), max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))), max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))))) * 1.0), 1.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, abs(0.0) + (_GLF_IDENTITY((1.0) + 0.0, (false ? _GLF_FUZZED(-3.6) : (1.0) + 0.0)))))))) * _GLF_IDENTITY(1.0, (1.0) * 1.0)), 1.0)), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0), (_GLF_IDENTITY(true, ! (! (true))) ? mat4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))), max((_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), (1.0) + 0.0)))), (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))))) * _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED(-9826.1892)), bool(false)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(2.7, -8.2).y)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3989.3085) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4760.8134) : 1.0))))), bool(_GLF_IDENTITY(true, ! (! (true)))))))), 0.0, 1.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))).x), 1.0, 1.0) : _GLF_FUZZED((_GLF_IDENTITY(777.523 - mat4(-4324.1398, 0.0, -3622.0706, -7.0, -2.6, 3255.5841, -0.7, 7111.5137, -2.2, -57.66, 58.94, 6.6, 5123.5342, _GLF_IDENTITY(0.2, (0.2) / 1.0), 4091.4415, _GLF_IDENTITY(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), clamp(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), _GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), _GLF_IDENTITY(_GLF_IDENTITY(-4.4, clamp(-4.4, _GLF_IDENTITY(-4.4, clamp(-4.4, _GLF_IDENTITY(-4.4, (false ? _GLF_FUZZED(958.028) : _GLF_IDENTITY(-4.4, (-4.4) - 0.0))), -4.4)), -4.4)), _GLF_IDENTITY((_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4))), float(mat3((_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4))), 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), exp(0.0), 0.0, 1.0, 0.0, 1.0))) + 0.0)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(mat4(-2.0, 91.51, -4.3, _GLF_IDENTITY(-7.3, clamp(-7.3, -7.3, -7.3)), 7.6, -2.3, 2.9, 9.3, 7.8, 9784.3197, -54.53, -6.5, 0.8, -7927.5703, 5.1, -3.6)) : 777.523 - mat4(-4324.1398, 0.0, -3622.0706, -7.0, -2.6, 3255.5841, -0.7, 7111.5137, -2.2, _GLF_IDENTITY(-57.66, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2139.3874) : _GLF_IDENTITY(-57.66, (-57.66) / 1.0))), 58.94, 6.6, 5123.5342, 0.2, 4091.4415, _GLF_IDENTITY(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), clamp(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), _GLF_IDENTITY(-4.4, _GLF_IDENTITY(clamp(-4.4, -4.4, -4.4), abs(0.0) + (clamp(-4.4, -4.4, -4.4)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), (_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4))) + 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), (_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4))) + 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), (_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4))) + 0.0)) + 0.0), 0.0, cos(0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0), (false ? _GLF_FUZZED(mat3x2(51.33, -1.6, -5016.3701, -6.3, -845.088, 0.8)) : mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), (_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4))) + 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), (_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4))) + 0.0)) + 0.0), 0.0, cos(0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0)))), (true ? float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), (_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4))) + 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), (_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4))) + 0.0)) + 0.0), 0.0, cos(0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0), (false ? _GLF_FUZZED(mat3x2(51.33, -1.6, -5016.3701, -6.3, -845.088, 0.8)) : mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), (_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4))) + 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), (_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4))) + 0.0)) + 0.0), 0.0, cos(0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0)))) : _GLF_FUZZED(-9.7))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat4(0.0, 2.7, _GLF_IDENTITY(-3.7, max(-3.7, _GLF_IDENTITY(-3.7, float(mat2x3(-3.7, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), -3363.1723, 70.73, -365.799, -58.18, -654.246, 471.697, -7.8, 6.1, -3.0, -9.6, -86.42, -1.6, _GLF_IDENTITY(1.6, 1.0 * (1.6)))) : false ? _GLF_FUZZED(mat4(-2.0, 91.51, -4.3, -7.3, 7.6, -2.3, 2.9, _GLF_IDENTITY(9.3, _GLF_IDENTITY(float(mat2x3(9.3, 0.0, 0.0, 0.0, log(1.0), 1.0)), float(mat4(float(mat2x3(9.3, 0.0, 0.0, 0.0, log(1.0), 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0)))), 7.8, 9784.3197, -54.53, -6.5, 0.8, -7927.5703, 5.1, -3.6)) : _GLF_IDENTITY(777.523 - mat4(-4324.1398, 0.0, -3622.0706, -7.0, -2.6, 3255.5841, -0.7, _GLF_IDENTITY(7111.5137, abs(length(vec4(0.0, 0.0, 0.0, 0.0))) + (_GLF_IDENTITY(7111.5137, mix(float(7111.5137), float(_GLF_FUZZED(-0.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), -2.2, -57.66, 58.94, 6.6, 5123.5342, 0.2, 4091.4415, _GLF_IDENTITY(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), _GLF_IDENTITY(-4.4, clamp(-4.4, _GLF_IDENTITY(-4.4, mix(float(-4.4), float(_GLF_FUZZED(1.8)), bool(false))), -4.4)), _GLF_IDENTITY(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), (_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4))) + 0.0)), min(clamp(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), _GLF_IDENTITY(-4.4, clamp(-4.4, _GLF_IDENTITY(-4.4, mix(float(-4.4), float(_GLF_FUZZED(1.8)), bool(false))), -4.4)), _GLF_IDENTITY(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), (_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4))) + 0.0)), clamp(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), _GLF_IDENTITY(-4.4, clamp(-4.4, _GLF_IDENTITY(-4.4, mix(float(-4.4), float(_GLF_FUZZED(1.8)), bool(false))), -4.4)), _GLF_IDENTITY(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), (_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4))) + 0.0)))))), (true ? _GLF_IDENTITY(777.523 - mat4(-4324.1398, 0.0, -3622.0706, -7.0, -2.6, 3255.5841, -0.7, _GLF_IDENTITY(7111.5137, abs(length(vec4(0.0, 0.0, 0.0, 0.0))) + (_GLF_IDENTITY(7111.5137, mix(float(7111.5137), float(_GLF_FUZZED(-0.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), -2.2, -57.66, 58.94, 6.6, 5123.5342, 0.2, 4091.4415, _GLF_IDENTITY(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), _GLF_IDENTITY(-4.4, clamp(-4.4, _GLF_IDENTITY(-4.4, mix(float(-4.4), float(_GLF_FUZZED(1.8)), bool(false))), -4.4)), _GLF_IDENTITY(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), (_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4))) + 0.0)), min(clamp(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), _GLF_IDENTITY(-4.4, clamp(-4.4, _GLF_IDENTITY(-4.4, mix(float(-4.4), float(_GLF_FUZZED(1.8)), bool(false))), -4.4)), _GLF_IDENTITY(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), (_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4))) + 0.0)), clamp(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), _GLF_IDENTITY(-4.4, clamp(-4.4, _GLF_IDENTITY(-4.4, mix(float(-4.4), float(_GLF_FUZZED(1.8)), bool(false))), -4.4)), _GLF_IDENTITY(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), (_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4))) + 0.0)))))), (false ? _GLF_FUZZED(mat4(-519.386, 57.09, -59.89, 8086.7297, 8760.6859, 64.07, -3.6, 1.0, -60.97, -178.516, -4.3, -41.32, 9.4, 22.59, 10.66, -7344.6398)) : 777.523 - mat4(-4324.1398, 0.0, -3622.0706, -7.0, -2.6, 3255.5841, -0.7, _GLF_IDENTITY(7111.5137, _GLF_IDENTITY(abs(length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0 * (abs(length(vec4(0.0, 0.0, 0.0, 0.0))))) + (_GLF_IDENTITY(7111.5137, mix(float(7111.5137), float(_GLF_FUZZED(-0.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), -2.2, -57.66, 58.94, 6.6, 5123.5342, 0.2, 4091.4415, _GLF_IDENTITY(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), _GLF_IDENTITY(-4.4, clamp(-4.4, _GLF_IDENTITY(-4.4, mix(float(-4.4), float(_GLF_FUZZED(1.8)), bool(false))), -4.4)), _GLF_IDENTITY(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), (_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4))) + 0.0)), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), _GLF_IDENTITY(-4.4, clamp(-4.4, _GLF_IDENTITY(-4.4, mix(float(-4.4), float(_GLF_FUZZED(1.8)), bool(false))), -4.4)), _GLF_IDENTITY(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), (_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4))) + 0.0)), _GLF_IDENTITY(float(float(clamp(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), _GLF_IDENTITY(-4.4, clamp(-4.4, _GLF_IDENTITY(-4.4, mix(float(-4.4), float(_GLF_FUZZED(1.8)), bool(false))), -4.4)), _GLF_IDENTITY(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), (_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4))) + 0.0)))), float(mat3x2(float(float(clamp(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), _GLF_IDENTITY(-4.4, clamp(-4.4, _GLF_IDENTITY(-4.4, mix(float(-4.4), float(_GLF_FUZZED(1.8)), bool(false))), -4.4)), _GLF_IDENTITY(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), (_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4))) + 0.0)))), 0.0, 1.0, 1.0, 0.0, 0.0))))) - 0.0), min(clamp(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), _GLF_IDENTITY(-4.4, clamp(-4.4, _GLF_IDENTITY(-4.4, mix(float(-4.4), float(_GLF_FUZZED(1.8)), bool(false))), -4.4)), _GLF_IDENTITY(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), (_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4))) + 0.0)), clamp(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), _GLF_IDENTITY(-4.4, clamp(-4.4, _GLF_IDENTITY(-4.4, mix(float(-4.4), float(_GLF_FUZZED(1.8)), bool(false))), -4.4)), _GLF_IDENTITY(_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4)), (_GLF_IDENTITY(-4.4, clamp(-4.4, -4.4, -4.4))) + 0.0)))))))) : _GLF_FUZZED(mat4(-2.2, 5.8, 62.99, 4.4, 1016.2315, 72.93, -5902.1332, 64.19, -8.2, -84.11, -10.17, -217.857, -6827.2812, -9.9, 4970.8553, -2.0))))))))))))), (true ? float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-13.16))), (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))) * 1.0), 1.0)), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), float(vec3(clamp(0.0, 0.0, 0.0), 1.0, 1.0)))), 0.0))) - _GLF_IDENTITY(0.0, (0.0) + 0.0)), cos(0.0) * (0.0)), 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / cos(0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0), (true ? _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-674.357)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(1.0, (1.0) + 0.0))), mix(float(_GLF_FUZZED(36.96)), float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-674.357)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(1.0, (1.0) + 0.0)))), bool(true)))) * 1.0), 1.0)), 0.0, 1.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.5) : 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0), (true ? mat4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-674.357)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (1.0) + 0.0)))) * 1.0), 1.0)), 0.0, 1.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0) : _GLF_FUZZED(mat4(81.77, -0.0, -5.1, 4769.7702, 2.4, 851.270, 7.1, -14.13, 8.7, 42.63, -0.5, -1953.8751, 6955.7689, -7.1, 3.6, 6608.9076)))) : _GLF_FUZZED((777.523 - mat4(_GLF_IDENTITY(-4324.1398, max(_GLF_IDENTITY(-4324.1398, (true ? -4324.1398 : _GLF_FUZZED(5313.1387))), -4324.1398)), 0.0, -3622.0706, -7.0, -2.6, 3255.5841, -0.7, 7111.5137, -2.2, -57.66, 58.94, 6.6, 5123.5342, 0.2, 4091.4415, -4.4)))))) : _GLF_FUZZED(-13.24)))) : _GLF_FUZZED(-33.84), min(true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0) : _GLF_FUZZED(-33.84), _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, mix(float(_GLF_FUZZED(-9.0)), float(_GLF_IDENTITY((1.0) + 0.0, clamp((1.0) + 0.0, (1.0) + 0.0, _GLF_IDENTITY((1.0) + 0.0, ((1.0) + 0.0) - 0.0)))), bool(true)))), max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0 + (1.0), clamp(0.0 + (1.0), _GLF_IDENTITY(0.0 + (1.0), (true ? 0.0 + (1.0) : _GLF_IDENTITY(_GLF_FUZZED(-6.5), max(_GLF_FUZZED(-6.5), _GLF_FUZZED(-6.5))))), 0.0 + (1.0)))))) : _GLF_FUZZED(-33.84), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-793.863, max(-793.863, -793.863)))), float(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))) : _GLF_FUZZED(-33.84), min(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, 0.0 + ((1.0) + 0.0))), max(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)) * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, 0.0 + (1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, 0.0 + ((1.0) + 0.0))), max(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)) * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, 0.0 + (1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, 0.0 + ((1.0) + 0.0))), max(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)) * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, 0.0 + (1.0)))))) : _GLF_FUZZED(-33.84), true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))) : _GLF_FUZZED(-33.84)))), _GLF_IDENTITY(bool(true), (bool(true)) && true)))))))), 1.0), _GLF_struct_6(mat4(1.0), mat2x3(1.0), bvec4(true), mat3(1.0))), _GLF_struct_11(_GLF_struct_8(true, vec3(1.0), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), (true ? _GLF_IDENTITY(1u, (1u) / 1u) : _GLF_FUZZED(75471u)))), ivec3(1), mat4x3(1.0), uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), (_GLF_IDENTITY(~ (~ (1u)), uint(uvec3(~ (~ (1u)), 0u, 0u)))) << 0u)))), 1u, vec3(1.0), _GLF_struct_9(uvec4(1u), mat2(1.0), vec3(1.0), mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_struct_10(mat4x2(1.0), mat3x4(1.0), _GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), (ivec2(1)) | (ivec2(1)))) / ivec2(1, 1)), _GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, ! (! (true)))), true))), mat3x2(1.0), mat3x4(1.0), bvec2(true))), _GLF_struct_14(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat3(1.0), _GLF_IDENTITY(ivec3(1), (true ? ivec3(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(~ (~ (~ (1))), (_GLF_IDENTITY(~ (~ (~ (1))), max(~ (~ (~ (1))), ~ (~ (~ (1)))))) | (~ (~ (~ (1))))))))) : _GLF_FUZZED(ivec3(97379, -42125, -23478)))), _GLF_struct_12(mat4(1.0), bvec3(true), vec3(1.0), bvec2(true), vec2(1.0), bvec3(true), ivec2(1)), _GLF_struct_13(bvec3(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))))))), 1.0), bvec4(true)), _GLF_struct_15(_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))), vec2(1.0), 1, true), gl_SubgroupSize);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false)), false || (bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) / vec2(1.0, 1.0)), injectionSwitch)).y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-64.55)), float(injectionSwitch.y), bool(true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4799.1192))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x) + 0.0) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec3(420.218, -7.1, -2.0)[1]) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, (1.0) - sin(0.0)), 0.0, sqrt(cos(0.0))))), injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-78.95)), vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).y)), false, true)))) || _GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((+ (- -9.6))), _GLF_FUZZED(-2.2)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-83.81)), vec2(_GLF_FUZZED(3635.1204), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), (float(float(injectionSwitch.y))) / sqrt(1.0)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), (false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, _GLF_IDENTITY(false || ((_GLF_IDENTITY(false, (false) && true)) || false), (false || ((_GLF_IDENTITY(false, (false) && true)) || false)) || false))) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0)))))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-94.34)), vec2(_GLF_FUZZED(-2320.6842), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true, true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) || false))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), ((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))) && true))) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-782.907)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))), true, false, true)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))) && _GLF_IDENTITY(true, bool(bool(true)))))
                barrier();
               barrier();
              }
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_16.subgroup_size, max(_GLF_struct_replacement_16.subgroup_size, _GLF_struct_replacement_16.subgroup_size));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.9)), float(injectionSwitch.y), bool(true)))) / 1.0)))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + 0.0, ((injectionSwitch.x) + 0.0) + 0.0)) < injectionSwitch.y))))), false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(tan(vec2(0.0, 0.0)))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base), 0u | (min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base)))) + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_16.subgroup_size), uint(_GLF_IDENTITY(uvec2(((subgroup_local_id + 1) % _GLF_struct_replacement_16.subgroup_size), 0u), (uvec2(((subgroup_local_id + 1) % _GLF_struct_replacement_16.subgroup_size), 0u)) - uvec2(0u, 0u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), workgroup_base)))) + subgroup_base + ((subgroup_local_id + 1) % _GLF_struct_replacement_16.subgroup_size), max(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base)) + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), subgroup_local_id)) + 1) % _GLF_IDENTITY(_GLF_struct_replacement_16.subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_struct_replacement_16.subgroup_size), (~ (_GLF_struct_replacement_16.subgroup_size)) - 0u), (_GLF_IDENTITY(~ (_GLF_struct_replacement_16.subgroup_size), (~ (_GLF_struct_replacement_16.subgroup_size)) - 0u)) * 1u)))), _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) : _GLF_FUZZED(subgroup_local_id))))), workgroup_base)), workgroup_base)) + subgroup_base + ((subgroup_local_id + 1) % _GLF_struct_replacement_16.subgroup_size))) : _GLF_FUZZED(subgroup_id)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.6), _GLF_FUZZED(6167.2764)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(8.1, -3835.2313)))) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8575.2805, 6568.2165)))))))[1]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, 1.0, log(1.0)), (vec3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, 1.0, log(1.0))) / vec3(1.0, 1.0, 1.0)))))) < injectionSwitch.y))))).y) + 0.0)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))) || false), true, false, true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))) || false), true, false, true))))), (injectionSwitch.x > injectionSwitch.y))), false, false, false)), true && (bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))), true && (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))))), ! (! (false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false, false, false)))))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 _GLF_struct_29 _GLF_struct_replacement_29 = _GLF_struct_29(mat3(1.0), _GLF_struct_21(mat4(1.0), vec2(1.0), _GLF_struct_17(1u, 1), _GLF_struct_18(bvec4(true)), _GLF_struct_19(vec3(1.0), 1.0), _GLF_struct_20(bvec4(true), 1u)), _GLF_struct_24(_GLF_struct_22(1, uvec3(1u), mat3(1.0), 1.0, mat2(1.0)), _GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(mat3(_GLF_IDENTITY(6.3, (false ? _GLF_FUZZED(_GLF_IDENTITY(-2778.4529, mix(float(-2778.4529), float(_GLF_FUZZED(-3776.5029)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) : _GLF_IDENTITY(6.3, clamp(6.3, 6.3, 6.3)))), 416.794, -699.475, 22.81, _GLF_IDENTITY(4258.6480, mix(float(_GLF_IDENTITY(_GLF_FUZZED(488.914), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(488.914), clamp(_GLF_FUZZED(488.914), _GLF_FUZZED(488.914), _GLF_IDENTITY(_GLF_FUZZED(488.914), (false ? _GLF_FUZZED(3395.3679) : _GLF_FUZZED(488.914))))), 1.0, 0.0, 1.0)))), float(4258.6480), bool(_GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(2736.6773, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2736.6773, (2736.6773) - 0.0), mix(float(_GLF_FUZZED(1733.9632)), float(_GLF_IDENTITY(2736.6773, (2736.6773) - 0.0)), bool(true))), 1.0 * (2736.6773)))), 1.3, 1358.6339, -6.4)) : mat3(1.0))), _GLF_IDENTITY(ivec2(1), clamp(_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((ivec2(1)) | (_GLF_IDENTITY(ivec2(1), (ivec2(1)) | (ivec2(1)))), max((ivec2(1)) | (_GLF_IDENTITY(ivec2(1), (ivec2(1)) | (ivec2(1)))), (ivec2(1)) | (_GLF_IDENTITY(ivec2(1), (ivec2(1)) | (ivec2(1))))))), ivec2(1), ivec2(1))), ivec2(1), atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) * (uvec3(0u, 0u, 0u) | _GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(1u, (1u) + 0u), 1u, 1u, 1u)), _GLF_IDENTITY(0u, (0u) - 0u) ^ (uint(uvec4(_GLF_IDENTITY(1u, (1u) + 0u), 1u, 1u, 1u))))), 1u), ~ (~ (uvec3(1u, 1u, 1u))))))) / uvec3(1u, 1u, 1u)), _GLF_struct_23(mat4x3(1.0), mat4x2(1.0), 1.0, mat2(1.0), mat4(1.0))), _GLF_struct_28(_GLF_struct_25(mat4(1.0), true, vec2(1.0), bvec4(true)), _GLF_struct_26(bvec2(true), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 0.0, abs(0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(-6.0, max(-6.0, -6.0)))), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true)), mix(float(_GLF_FUZZED(-94.45)), float(mix(float(_GLF_FUZZED(_GLF_IDENTITY(-6.0, max(-6.0, -6.0)))), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true))), bool(true)))))))), clamp(vec4(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 0.0, abs(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.0)), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true))))))), vec4(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0, 0.0, abs(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.0)), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true))))))), vec4(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, abs(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.0)), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true)))))))))), _GLF_struct_27(_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u))), mat4(1.0), vec2(1.0), mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bvec3(true), mat2x4(1.0), ivec4(1)), mat3x2(_GLF_IDENTITY(1.0, (1.0) + 0.0)), mat3x2(1.0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (! (_GLF_IDENTITY(false || ((false)), bool(bvec4(false || ((false)), true, false, false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), false), true, _GLF_IDENTITY(true, (true) && true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), false)))))), true, _GLF_IDENTITY(false, (false) || false))))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), false), true, _GLF_IDENTITY(true, (true) && true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), false)))))), true, _GLF_IDENTITY(false, (false) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), true, true)))))))), true, true)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), true, true)))))))), true, true)), false), bvec3(bvec3(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), true, true)))))))), true, true)), false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), true, true)))))))), true, true)), false), bvec3(bvec3(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), true, true)))))))), true, true)), false))))))))), false)))), true, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), true, true)))))))), true, true)), false)))), true, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), false)), true, true)))))))), true, true)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), false)), true, true)))))))), true, true)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), false)), true, true)))))))), true, true)), false))), true))))))), true, false)))))))))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))) || false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_struct_replacement_29._f2.read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bool(false)))) || false), ! (! (((_GLF_IDENTITY(false, bool(bool(false)))) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
