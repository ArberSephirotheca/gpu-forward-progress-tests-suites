#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) || false), false)), bool(bool(bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))))))) && true)), false, true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, false || (true)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), bool(bvec4(bool(bvec4(true, true, false, true)), false, true, false)))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atan(vec2(0.8, -4.0))))).x, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atan(vec2(0.8, -4.0))))).x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atan(vec2(0.8, -4.0))))).x)) > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((max(vec4(-6332.8797, 69.29, -25.59, 480.714), vec4(8185.0543, 63.95, -9852.5891, 2.5)) * mat2x4(3.6, 4562.2699, 11.85, 9997.0568, -1.4, -5.8, -1449.4156, 0.9))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y))))) && true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atan(vec2(0.8, -4.0))))).x, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atan(vec2(0.8, -4.0))))).x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atan(vec2(0.8, -4.0))))).x)) > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((max(vec4(-6332.8797, 69.29, -25.59, 480.714), vec4(8185.0543, 63.95, -9852.5891, 2.5)) * mat2x4(3.6, 4562.2699, 11.85, 9997.0568, -1.4, -5.8, -1449.4156, 0.9))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y))))) && true))), true, false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, ! (! ((bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))) && true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-747.712) : injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), (! (_GLF_DEAD(false))) && true)), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), (! (_GLF_DEAD(false))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), (! (_GLF_DEAD(false))) && true)), ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), (! (_GLF_DEAD(false))) && true))) || false)))), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * workgroup_id)), workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))))), _GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, _GLF_IDENTITY(min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u)))), (min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u))))) | 0u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u)))))))), (uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u))))))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u))))))), max(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u))))))), _GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u))))))))))))))) / 1u), _GLF_IDENTITY(uint(4u), 0u ^ _GLF_IDENTITY((uint(4u)), uint(_GLF_IDENTITY(uvec4((uint(4u)), 1u, 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), ~ (~ (_GLF_IDENTITY(uvec4((uint(4u)), 1u, 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), clamp(uvec4((uint(4u)), 1u, 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), uvec4((uint(4u)), 1u, 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), uvec4((uint(4u)), 1u, 0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))))))))), 1u * _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(uvec3(14007u, 62487u, 56939u).x))), 0u, 0u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u)))))))), (uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u))))))))) | (uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u))))))))))) / 1u, ((_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u)))))))), (uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u))))))))) | (uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u))))))))))) / 1u) << 0u)), (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uint(uint(2u)))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u)))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u)))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (4u) | (_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(num_workgroup))))), max(4u, _GLF_IDENTITY(_GLF_IDENTITY(4u, (4u) + 0u), min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u))))))))) | (uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(_GLF_IDENTITY(4u, (4u) - 0u), 0u, 0u, 0u))))))))))) / 1u))), _GLF_IDENTITY(uint(4u), 0u ^ (uint(_GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u))))))), ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(uvec3(14007u, 62487u, 56939u).x))), 0u, 0u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u)))))))), (uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u))))))))) | (uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u))))))))))) / 1u, ((_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u)))))))), (uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u))))))))) | (uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u))))))))))) / 1u) << 0u)), (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uint(uint(2u)))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u)))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u)))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, (4u) | (_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(num_workgroup))))), max(4u, _GLF_IDENTITY(_GLF_IDENTITY(4u, (4u) + 0u), min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u))))))))) | (uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(_GLF_IDENTITY(4u, (4u) - 0u), 0u, 0u, 0u))))))))))) / 1u))), _GLF_IDENTITY(uint(4u), 0u ^ (uint(_GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, max(4u, 4u)), 4u)))))))) / 1u))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(_GLF_IDENTITY(4u, ~ (~ (4u))), min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(4u, (4u) >> 0u), 0u, 1u, 0u)), (true ? uint(uvec4(_GLF_IDENTITY(4u, (4u) >> 0u), 0u, 1u, 0u)) : _GLF_FUZZED(subgroup_local_id)))), uint(uvec4(4u, 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (4u) - 0u)) | (4u)), uint(uvec4(4u, _GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u)))) | (_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u)))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(4u, (4u) >> 0u), 0u, 1u, 0u)), (true ? uint(uvec4(_GLF_IDENTITY(4u, (4u) >> 0u), 0u, 1u, 0u)) : _GLF_FUZZED(subgroup_local_id)))), uint(uvec4(4u, 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (4u) - 0u)) | (4u)), uint(uvec4(4u, _GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u)))) | (_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u)))))))))), 0u | (uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(4u, (4u) >> 0u), 0u, 1u, 0u)), (true ? uint(uvec4(_GLF_IDENTITY(4u, (4u) >> 0u), 0u, 1u, 0u)) : _GLF_FUZZED(subgroup_local_id)))), uint(uvec4(4u, 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (4u) - 0u)) | (4u)), uint(uvec4(4u, _GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u)))) | (_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u))))))))))))), (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(4u, (4u) >> 0u), 0u, 1u, 0u)), (true ? uint(uvec4(_GLF_IDENTITY(4u, (4u) >> 0u), 0u, 1u, 0u)) : _GLF_FUZZED(subgroup_local_id)))), uint(uvec4(4u, 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (4u) - 0u)) | (4u)), uint(uvec4(4u, _GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u)))) | (_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u)))))))))), 0u | (uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(4u, (4u) >> 0u), 0u, 1u, 0u)), (true ? uint(uvec4(_GLF_IDENTITY(4u, (4u) >> 0u), 0u, 1u, 0u)) : _GLF_FUZZED(subgroup_local_id)))), uint(uvec4(4u, 0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (4u) - 0u)) | (4u)), uint(uvec4(4u, _GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u)))) | (_GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u)))))))))))))) ^ 0u))), (uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(_GLF_IDENTITY(4u, 0u | (_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED((subgroup_local_id | subgroup_id)))))), uint(uvec4(4u, 0u, 0u, 0u))))))))) | (uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(_GLF_IDENTITY(4u, ~ (_GLF_IDENTITY(~ (4u), max(~ (4u), _GLF_IDENTITY(~ (4u), min(~ (4u), ~ (4u))))))), min(_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)), _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u))))))))))) / 1u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u))))), min((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u)))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, ~ (~ (4u))), max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u))))))))) | (uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uvec4(4u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(4u, 0u, 0u, 0u))))))))))))) / 1u, (0u | 0u) | ((_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u)))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, ~ (~ (4u))), max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u))))))))) | (uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(_GLF_IDENTITY(uvec4(4u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(4u, 0u, 0u, 0u))))))))))))) / 1u))), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u))))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u)))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u)))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u)))))))), 0u | (uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u))))))))))) | (uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u))))))))))) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u ^ (uint(4u))), uint(uint(_GLF_IDENTITY(uint(4u), 0u ^ (uint(4u))))))))))) | ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u))))))), 0u | (_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (4u) - 0u)) << 0u), uint(uvec4(4u, 0u, 0u, 0u))))))))), _GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u)))))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u)))))))), (uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, min(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(atomicExchange(subgroup_local_id, subgroup_size)) : 4u)), _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u))))))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(atomicOr(subgroup_size, workgroup_size)) : 4u)), clamp(4u, 4u, 4u)), max(4u, _GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, uint(uvec4(4u, 0u, 0u, 0u))))))))))) / 1u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(0u, (0u) | (0u)) ^ (uint(4u))))))) | (clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), ~ (~ (workgroup_size * workgroup_id))), workgroup_size * workgroup_id)), workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)), workgroup_size * workgroup_id))))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(87657) : 0)), 0))], min(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(0, int(ivec4(0, 1, 1, 0)))])), injectionSwitch[1])).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), _GLF_IDENTITY(transpose(transpose(mat2(injectionSwitch, 1.0, 0.0))), mat2(mat4x2(_GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(1.0) * (mat2(injectionSwitch, 1.0, 0.0))))), transpose(_GLF_IDENTITY(transpose(transpose(transpose(mat2(injectionSwitch, 1.0, 0.0)))), mat2(mat4(transpose(transpose(transpose(mat2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8917.0987)), bool(false))), 1.0, 1.0, 0.0, 1.0, abs(0.0), 1.0, sqrt(0.0), exp(0.0), length(abs(vec3(0.0, 0.0, 0.0))), sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0)), float(mat3x2(float(mat4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8917.0987)), bool(false))), 1.0, 1.0, 0.0, 1.0, abs(0.0), 1.0, sqrt(0.0), exp(0.0), length(abs(vec3(0.0, 0.0, 0.0))), sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0)))))))))))))))))), clamp(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), transpose(transpose(mat2(injectionSwitch, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), transpose(transpose(mat2(injectionSwitch, 1.0, 0.0))))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((8898.1013 / (915.351))), _GLF_FUZZED(-5.1)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, length(vec2(0.0, 0.0)), 1.0, sqrt(1.0), cos(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))).y))))), 1.0, 0.0)))))))), vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) + 0)], (false ? _GLF_FUZZED(64.61) : injectionSwitch[_GLF_IDENTITY(0, (0) + 0)])), injectionSwitch[0])), injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(-181.028))))).x)), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6629.7270)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0))), max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0))))).x, (true ? injectionSwitch.x : _GLF_FUZZED(157.821))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, log(1.0), abs(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, length(0.0), 0.0, 1.0, 1.0))).y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / 1u) ^ 0u), (workgroup_base) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) / 1u, (_GLF_IDENTITY((workgroup_base) / 1u, ~ (~ ((workgroup_base) / 1u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u)) / 1u, ((workgroup_base) / _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (1u) / 1u))))) ^ 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) / 1u, (_GLF_IDENTITY((workgroup_base) / 1u, ~ (~ ((workgroup_base) / 1u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u)) / 1u, ((workgroup_base) / _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (1u) / 1u))))) ^ 0u))), max(_GLF_IDENTITY((workgroup_base) / 1u, (_GLF_IDENTITY((workgroup_base) / 1u, ~ (~ ((workgroup_base) / 1u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u)) / 1u, ((workgroup_base) / _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (1u) / 1u))))) ^ 0u))), _GLF_IDENTITY((workgroup_base) / 1u, (_GLF_IDENTITY((workgroup_base) / 1u, ~ (~ ((workgroup_base) / 1u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u)) / 1u, ((workgroup_base) / _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (1u) / 1u))))) ^ 0u))))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) / 1u, (_GLF_IDENTITY((workgroup_base) / 1u, ~ (~ ((workgroup_base) / 1u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u)) / 1u, ((workgroup_base) / _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (1u) / 1u))))) ^ 0u))), (_GLF_IDENTITY((workgroup_base) / 1u, (_GLF_IDENTITY((workgroup_base) / 1u, ~ (~ ((workgroup_base) / 1u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u)) / 1u, ((workgroup_base) / _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (1u) / 1u))))) ^ 0u)))) | (_GLF_IDENTITY((workgroup_base) / 1u, (_GLF_IDENTITY((workgroup_base) / 1u, ~ (~ ((workgroup_base) / 1u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u)) / 1u, ((workgroup_base) / _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (1u) / 1u))))) ^ 0u))))), _GLF_IDENTITY((workgroup_base) / 1u, (_GLF_IDENTITY((workgroup_base) / 1u, ~ (~ ((workgroup_base) / 1u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u)) / 1u, ((workgroup_base) / _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (1u) / 1u))))) ^ 0u)))))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, (_GLF_IDENTITY((workgroup_base) / 1u, ~ (~ ((workgroup_base) / 1u)))) | (_GLF_IDENTITY((workgroup_base) / 1u, ((workgroup_base) / 1u) ^ 0u))))) ^ 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, max(1u, 1u)))), 1u * ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 0u)), (_GLF_IDENTITY(uint(uvec2(1u, 0u)), (_GLF_IDENTITY(uint(uvec2(1u, 0u)), uint(uvec2(_GLF_IDENTITY(uint(uvec2(1u, 0u)), 0u | (uint(uvec2(1u, 0u)))), 0u)))) / 1u)) | (uint(uvec2(1u, 0u))))))), 1u * ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), (workgroup_base) / 1u)), 1u * _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) << 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) << 0u))))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) << 0u))), (((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) >> 0u)) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), _GLF_IDENTITY(1u, ~ (~ (1u))) * ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), _GLF_IDENTITY(1u, ~ (~ (1u))) * ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), _GLF_IDENTITY(1u, ~ (~ (1u))) * ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))))) >> 0u))))) >> _GLF_IDENTITY(0u, (0u) | (0u)))) | 0u), ~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), 1u * ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), _GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) / 1u)), 1u * ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), uint(uvec4(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, clamp((workgroup_base) / 1u, (workgroup_base) / 1u, _GLF_IDENTITY((workgroup_base) / 1u, min((workgroup_base) / 1u, (workgroup_base) / 1u)))))), ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, clamp((workgroup_base) / 1u, (workgroup_base) / 1u, _GLF_IDENTITY((workgroup_base) / 1u, min((workgroup_base) / 1u, (workgroup_base) / 1u))))))) / 1u)))), 1u, 1u, 1u))))))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | 0u)), clamp((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | 0u)), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | 0u)), ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | 0u))) | ((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, (_GLF_IDENTITY((workgroup_base) / 1u, ~ (~ ((workgroup_base) / 1u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u)) / 1u, ((workgroup_base) / _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (1u) / 1u))))) ^ 0u)))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, (_GLF_IDENTITY((workgroup_base) / 1u, ~ (~ ((workgroup_base) / 1u)))) | (_GLF_IDENTITY((workgroup_base) / 1u, ((workgroup_base) / 1u) ^ 0u))))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, (_GLF_IDENTITY((workgroup_base) / 1u, ~ (~ ((workgroup_base) / 1u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u)) / 1u, ((workgroup_base) / _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (1u) / 1u))))) ^ 0u)))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, (_GLF_IDENTITY((workgroup_base) / 1u, ~ (~ ((workgroup_base) / 1u)))) | (_GLF_IDENTITY((workgroup_base) / 1u, ((workgroup_base) / 1u) ^ 0u))))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, (_GLF_IDENTITY((workgroup_base) / 1u, ~ (~ ((workgroup_base) / 1u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u)) / 1u, ((workgroup_base) / _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (1u) / 1u))))) ^ 0u)))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, (_GLF_IDENTITY((workgroup_base) / 1u, ~ (~ ((workgroup_base) / 1u)))) | (_GLF_IDENTITY((workgroup_base) / 1u, ((workgroup_base) / 1u) ^ 0u))))) ^ 0u)) << 0u)) >> 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, max(1u, 1u)))), 1u * ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), (workgroup_base) / 1u))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 0u)), (_GLF_IDENTITY(uint(uvec2(1u, 0u)), (_GLF_IDENTITY(uint(uvec2(1u, 0u)), uint(uvec2(_GLF_IDENTITY(uint(uvec2(1u, 0u)), 0u | (uint(uvec2(1u, 0u)))), 0u)))) / 1u)) | (uint(uvec2(1u, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 0u)), (_GLF_IDENTITY(uint(uvec2(1u, 0u)), (_GLF_IDENTITY(uint(uvec2(1u, 0u)), uint(uvec2(_GLF_IDENTITY(uint(uvec2(1u, 0u)), 0u | (uint(uvec2(1u, 0u)))), 0u)))) / 1u)) | (uint(uvec2(1u, 0u)))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 0u)), (_GLF_IDENTITY(uint(uvec2(1u, 0u)), (_GLF_IDENTITY(uint(uvec2(1u, 0u)), uint(uvec2(_GLF_IDENTITY(uint(uvec2(1u, 0u)), 0u | (uint(uvec2(1u, 0u)))), 0u)))) / 1u)) | (uint(uvec2(1u, 0u)))))), uint(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 0u)), (_GLF_IDENTITY(uint(uvec2(1u, 0u)), (_GLF_IDENTITY(uint(uvec2(1u, 0u)), uint(uvec2(_GLF_IDENTITY(uint(uvec2(1u, 0u)), 0u | (uint(uvec2(1u, 0u)))), 0u)))) / 1u)) | (uint(uvec2(1u, 0u)))))))))))) >> 0u)), 1u * ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), _GLF_IDENTITY(1u * _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) << 0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) << 0u))), (((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) << 0u)))) >> 0u)) | 0u), uint(uint(_GLF_IDENTITY(1u * _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) << 0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) << 0u))), (((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) << 0u)))) >> 0u)) | 0u), uint(uvec3(1u * _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) << 0u))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) << 0u))), (((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)) << 0u)))) >> 0u)) | 0u), 1u, 1u)))))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), _GLF_IDENTITY(1u, ~ (~ (1u))) * ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))))) >> 0u)) | 0u), ~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ((10017u & 0u) >> _GLF_IDENTITY(uint(3u), uint(3u))) + (workgroup_base))) / 1u)), 1u * ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), max((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))), 1u * ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), uint(uvec4(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), 1u * ((_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))))), 1u, 1u, 1u))))))) | (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | 0u))) ^ 0u)) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0), vec4(mat4(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), max(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), 0.0, 0.0, 1.0, 1.0)))), max(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0), vec4(mat4(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), max(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), 0.0, 0.0, 1.0, 1.0)))), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0), vec4(mat4(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), max(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), 0.0, 0.0, 1.0, 1.0))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0), vec4(mat4(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0), vec4(mat4(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0)))))), max(min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0), vec4(mat4(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0), vec4(mat4(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0)))))), min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0), vec4(mat4(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0), vec4(mat4(vec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0))))))))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))), ((_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), subgroup_id)))) >> 0u))) * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u), max(uvec3(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, 0u), max(uvec3(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(197739u) : _GLF_IDENTITY(0u, ~ (~ (0u)))))), uvec3(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u))) | 0u), 0u))))))));
 do
  {
   atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), min(~ (~ (4)), _GLF_IDENTITY(~ (~ (4)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(38939) : ~ (~ (4))))))), (false ? _GLF_FUZZED(-48982) : _GLF_IDENTITY(4, ~ (~ (4))))), _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, (4) * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2)))) | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), int(int((1 << _GLF_IDENTITY(int(2), int(2)))))), (1 << _GLF_IDENTITY(int(2), int(2))))))) >> _GLF_IDENTITY(int(2), int(2)))), 4), clamp(clamp(4, _GLF_IDENTITY(4, (4) * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2)))) | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), int(int((1 << _GLF_IDENTITY(int(2), int(2)))))), (1 << _GLF_IDENTITY(int(2), int(2))))))) >> _GLF_IDENTITY(int(2), int(2)))), 4), _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, (4) * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2)))) | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), int(int((1 << _GLF_IDENTITY(int(2), int(2)))))), (1 << _GLF_IDENTITY(int(2), int(2))))))) >> _GLF_IDENTITY(int(2), int(2)))), 4), (clamp(4, _GLF_IDENTITY(4, (4) * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2)))) | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), int(int((1 << _GLF_IDENTITY(int(2), int(2)))))), (1 << _GLF_IDENTITY(int(2), int(2))))))) >> _GLF_IDENTITY(int(2), int(2)))), 4)) | 0), clamp(4, _GLF_IDENTITY(4, (4) * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(2), int(2)))) | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), int(int((1 << _GLF_IDENTITY(int(2), int(2)))))), (1 << _GLF_IDENTITY(int(2), int(2))))))) >> _GLF_IDENTITY(int(2), int(2)))), 4))))) + 0), 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) - 0), 4)), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 do
  {
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (4) << 0), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2((injectionSwitch) * mat2(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0), (mat3x2((injectionSwitch) * mat2(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat3x2((injectionSwitch) * mat2(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0), (mat3x2((injectionSwitch) * mat2(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / vec2(1.0, 1.0))), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))) * mat2(1.0))))), clamp((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-448.368)))), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)))) - vec2(0.0, 0.0))))).y) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2((injectionSwitch) * mat2(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0), (mat3x2((injectionSwitch) * mat2(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat3x2((injectionSwitch) * mat2(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0), (mat3x2((injectionSwitch) * mat2(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) / vec2(1.0, 1.0))), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))) * mat2(1.0))))), clamp((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-448.368)))), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)))) - vec2(0.0, 0.0))))).y) || false)))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0, 0.0 + ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0)))), float(_GLF_FUZZED((928.539 * -2106.6079))), bool(false))) > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6641.4018), ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, max(1, 1))]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-3520.5431)), bvec2(true, false))), clamp((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(-8909.6282), ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], mix(float(_GLF_FUZZED(985.381)), float(((injectionSwitch) * mat2(1.0))[0]), bool(true))), (false ? _GLF_FUZZED(-1.3) : _GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], mix(float(_GLF_FUZZED(985.381)), float(((injectionSwitch) * mat2(1.0))[0]), bool(true))))), _GLF_IDENTITY(_GLF_FUZZED(9692.2546), min(_GLF_FUZZED(9692.2546), _GLF_IDENTITY(_GLF_FUZZED(9692.2546), (_GLF_IDENTITY(_GLF_FUZZED(9692.2546), clamp(_GLF_FUZZED(9692.2546), _GLF_FUZZED(9692.2546), _GLF_FUZZED(9692.2546)))) * 1.0)))), bvec2(true, false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).y) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.5)), float(injectionSwitch.y), bool(true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.5)), bvec2(true, false))).y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.5)), bvec2(true, false))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.5)), bvec2(true, false))).y))))))))))
  barrier();
}
