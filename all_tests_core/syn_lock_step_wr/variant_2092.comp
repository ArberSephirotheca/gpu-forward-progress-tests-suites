#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_32 {
 vec4 _f0;
 vec4 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_33 {
 mat4 _f0;
 _GLF_struct_32 _f1;
} ;

struct _GLF_struct_30 {
 bool _f0;
 bvec2 _f1;
 float _f2;
 mat4x3 _f3;
 uvec3 _f4;
 bvec3 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_29 {
 bool _f0;
 uvec4 _f1;
 mat2 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_28 {
 vec2 _f0;
 ivec3 _f1;
 uvec2 _f2;
 uint _f3;
 ivec2 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_31 {
 _GLF_struct_28 _f0;
 bvec3 _f1;
 bool _f2;
 _GLF_struct_29 _f3;
 _GLF_struct_30 _f4;
} ;

struct _GLF_struct_34 {
 _GLF_struct_31 _f0;
 uint workgroup_base;
 mat2 _f1;
 _GLF_struct_33 _f2;
 int _f3;
} ;

struct _GLF_struct_25 {
 bvec2 _f0;
 ivec4 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_24 {
 mat4x3 _f0;
} ;

struct _GLF_struct_26 {
 _GLF_struct_24 _f0;
 _GLF_struct_25 _f1;
 mat4x3 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_22 {
 vec3 _f0;
} ;

struct _GLF_struct_21 {
 mat3x2 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_20 {
 bvec4 _f0;
 ivec3 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_19 {
 mat2 _f0;
 bvec2 _f1;
 mat2 _f2;
 uint _f3;
 mat3x2 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_18 {
 int _f0;
 uvec4 _f1;
 mat2 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_23 {
 _GLF_struct_18 _f0;
 _GLF_struct_19 _f1;
 _GLF_struct_20 _f2;
 bvec2 _f3;
 bvec2 _f4;
 _GLF_struct_21 _f5;
 _GLF_struct_22 _f6;
} ;

struct _GLF_struct_27 {
 mat4x2 _f0;
 _GLF_struct_23 _f1;
 _GLF_struct_26 _f2;
 uint next_virtual_gid;
} ;

struct _GLF_struct_16 {
 mat3x4 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_17 {
 _GLF_struct_16 _f0;
 uint num_workgroup;
} ;

struct _GLF_struct_13 {
 float _f0;
} ;

struct _GLF_struct_12 {
 mat3 _f0;
 bool _f1;
 ivec3 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_10 {
 ivec2 _f0;
 mat2x4 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_9 {
 mat4x2 _f0;
 mat4x3 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_8 {
 mat2x4 _f0;
 mat4x2 _f1;
 vec3 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_7 {
 ivec2 _f0;
 uint _f1;
} ;

struct _GLF_struct_6 {
 bvec3 _f0;
 bool _f1;
 bvec4 _f2;
 mat3 _f3;
 int _f4;
 mat3x4 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_11 {
 uvec3 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
 uint _f3;
 _GLF_struct_8 _f4;
 _GLF_struct_9 _f5;
 _GLF_struct_10 _f6;
} ;

struct _GLF_struct_4 {
 float _f0;
 mat4x2 _f1;
 int _f2;
 vec2 _f3;
 uvec4 _f4;
 mat3x2 _f5;
 uint _f6;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
 uint _f1;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 mat2x3 _f1;
 _GLF_struct_4 _f2;
 ivec3 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_15 {
 uvec3 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_11 _f2;
 uint read;
 _GLF_struct_14 _f3;
} ;

struct _GLF_struct_0 {
 mat2 _f0;
 uint subgroup_size;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
 mat3 _f1;
 _GLF_struct_1 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(ivec2(1), mat3(1.0), _GLF_struct_1(_GLF_struct_0(mat2(1.0), gl_SubgroupSize)));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_16(mat3x4(1.0), mat2x3(1.0)), gl_NumWorkGroups.x);
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_34 _GLF_struct_replacement_34 = _GLF_struct_34(_GLF_struct_31(_GLF_struct_28(vec2(1.0), ivec3(1), uvec2(1u), 1u, ivec2(1), uvec3(1u)), bvec3(true), true, _GLF_struct_29(true, uvec4(1u), mat2(1.0), ivec3(1)), _GLF_struct_30(true, bvec2(true), 1.0, mat4x3(1.0), uvec3(1u), bvec3(true), ivec2(1))), workgroup_size * workgroup_id, mat2(1.0), _GLF_struct_33(mat4(1.0), _GLF_struct_32(vec4(1.0), vec4(1.0), vec4(1.0))), 1);
 uint virtual_gid = _GLF_struct_replacement_34.workgroup_base + subgroup_id * _GLF_struct_replacement_2._f2._f0.subgroup_size + subgroup_local_id;
 _GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(mat4x2(1.0), _GLF_struct_23(_GLF_struct_18(1, uvec4(1u), mat2(1.0), mat3(1.0)), _GLF_struct_19(mat2(1.0), bvec2(true), mat2(1.0), 1u, mat3x2(1.0), mat4x2(1.0)), _GLF_struct_20(bvec4(true), ivec3(1), mat4(1.0)), bvec2(true), bvec2(true), _GLF_struct_21(mat3x2(1.0), bvec2(true)), _GLF_struct_22(vec3(1.0))), _GLF_struct_26(_GLF_struct_24(mat4x3(1.0)), _GLF_struct_25(bvec2(true), ivec4(1), uvec2(1u)), mat4x3(1.0), mat2(1.0)), _GLF_struct_replacement_34.workgroup_base + subgroup_id * _GLF_struct_replacement_2._f2._f0.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_2._f2._f0.subgroup_size));
 atomicStore(buf[_GLF_struct_replacement_27.next_virtual_gid], uint(1), 4, 64, 4);
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(uvec3(1u), _GLF_struct_5(_GLF_struct_3(ivec2(1), 1u), mat2x3(1.0), _GLF_struct_4(1.0, mat4x2(1.0), 1, vec2(1.0), uvec4(1u), mat3x2(1.0), 1u), ivec3(1), uvec3(1u)), _GLF_struct_11(uvec3(1u), _GLF_struct_6(bvec3(true), true, bvec4(true), mat3(1.0), 1, mat3x4(1.0), ivec3(1)), _GLF_struct_7(ivec2(1), 1u), 1u, _GLF_struct_8(mat2x4(1.0), mat4x2(1.0), vec3(1.0), ivec4(1)), _GLF_struct_9(mat4x2(1.0), mat4x3(1.0), vec2(1.0)), _GLF_struct_10(ivec2(1), mat2x4(1.0), uvec2(1u))), atomicLoad(buf[virtual_gid], 4, 64, 0), _GLF_struct_14(_GLF_struct_12(mat3(1.0), true, ivec3(1), mat3x2(1.0)), _GLF_struct_13(1.0), ivec3(1)));
 atomicStore(checker[virtual_gid], _GLF_struct_replacement_15.read, 4, 64, 4);
}
