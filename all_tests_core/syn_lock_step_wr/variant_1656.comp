#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), false, true, false))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), true)), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, bool(bool(true)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), true)), false)))))), false))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), true && (false))) && true)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x), min((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x))) - 0.0) > injectionSwitch.y)))))) && _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))));
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y))))))
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       else
        {
        }
      }
    }
   else
    {
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) ^ 0u), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - _GLF_IDENTITY(0u, 0u + (0u))), max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(110299u) : subgroup_id)))), subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(110299u) : subgroup_id)))), subgroup_id)) * subgroup_size) << 0u) + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - _GLF_IDENTITY(0u, 0u + (0u))), max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(110299u) : subgroup_id)))), subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(110299u) : subgroup_id)))), subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) << 0u) + ((subgroup_local_id + 1) % subgroup_size)) - (0u << _GLF_IDENTITY(uint(6u), uint(6u))));
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 0.0, tan(0.0), 1.0, 0.0, abs(1.0), _GLF_IDENTITY(exp(0.0), float(vec4(exp(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(sin(0.0))))), 0.0, 1.0, 0.0)), clamp(vec2(mat3x4(injectionSwitch, 1.0, 0.0, tan(0.0), 1.0, 0.0, abs(1.0), exp(0.0), 0.0, 1.0, 0.0)), vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.3)), bool(false)))) / 1.0), 1.0)), 0.0, tan(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, 0.0, abs(1.0), exp(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 0.0, tan(0.0), 1.0, 0.0, abs(1.0), exp(0.0), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), clamp(vec2(mat3x4(injectionSwitch, 1.0, 0.0, tan(0.0), 1.0, 0.0, abs(1.0), exp(0.0), 0.0, 1.0, 0.0)), vec2(mat3x4(injectionSwitch, 1.0, 0.0, tan(0.0), 1.0, 0.0, abs(1.0), exp(0.0), 0.0, 1.0, 0.0)), vec2(mat3x4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (0.0) - determinant(mat4(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0))), tan(0.0), 1.0, 0.0, abs(1.0), exp(0.0), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0) : _GLF_FUZZED(-46.12))), 1.0, 0.0))))))).x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) ? next_virtual_gid : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((~ subgroup_size)), ~ (~ (_GLF_FUZZED((~ subgroup_size))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((~ subgroup_size)), ~ (~ (_GLF_FUZZED((~ subgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((~ subgroup_size)), ~ (~ (_GLF_FUZZED((~ subgroup_size))))), (_GLF_IDENTITY(_GLF_FUZZED((~ subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED((~ subgroup_size)), (_GLF_IDENTITY(_GLF_FUZZED((~ subgroup_size)), uint(uint(_GLF_FUZZED((~ subgroup_size)))))) ^ 0u))))) | 0u)) ^ 0u), _GLF_IDENTITY(_GLF_FUZZED((~ subgroup_size)), ~ (~ (_GLF_FUZZED((~ subgroup_size))))))), uint(uvec4(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))) : _GLF_FUZZED((workgroup_size ++)))), max(~ subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, ~ (~ (~ subgroup_size))), uint(uvec2(~ subgroup_size, (1u & 1u))))))), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) >> 0u) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, max(~ subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), (_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))) | 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), (_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))) | 0u))) ^ 0u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, max(~ subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), (_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))) | 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), (_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))) | 0u))) ^ 0u))))), (_GLF_IDENTITY(~ subgroup_size, max(~ subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), (_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))) | 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), (_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))) | 0u))) ^ 0u)))))) ^ 0u), _GLF_IDENTITY(~ subgroup_size, max(~ subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), (_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))) | 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), (_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))) | 0u))) ^ 0u)))))))), 0u | ((_GLF_IDENTITY(~ _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), _GLF_IDENTITY(max(~ subgroup_size, _GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (_GLF_IDENTITY(1u & 1u, max(1u & 1u, 1u & 1u))))))), max(max(~ subgroup_size, _GLF_IDENTITY(~ _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), uint(uvec2(~ subgroup_size, (1u & 1u))))), max(~ subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, (~ subgroup_size) - 0u), uint(uvec2(~ subgroup_size, (1u & 1u)))))))))))), max((false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) >> 0u) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, max(~ subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), (_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))) | 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), (_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))) | 0u))) ^ 0u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, max(~ subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), (_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))) | 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), (_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))) | 0u))) ^ 0u))))), (_GLF_IDENTITY(~ subgroup_size, max(~ subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), (_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))) | 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), (_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))) | 0u))) ^ 0u)))))) ^ 0u), _GLF_IDENTITY(~ subgroup_size, max(~ subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), (_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))) | 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), (_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))) | 0u))) ^ 0u)))))))), 0u | ((_GLF_IDENTITY(~ _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), _GLF_IDENTITY(max(~ subgroup_size, _GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (_GLF_IDENTITY(1u & 1u, max(1u & 1u, 1u & 1u))))))), max(max(~ subgroup_size, _GLF_IDENTITY(~ _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), uint(uvec2(~ subgroup_size, (1u & 1u))))), max(~ subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, (~ subgroup_size) - 0u), uint(uvec2(~ subgroup_size, (1u & 1u)))))))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) >> 0u) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, max(~ subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), (_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))) | 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), (_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))) | 0u))) ^ 0u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, max(~ subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), (_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))) | 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), (_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))) | 0u))) ^ 0u))))), (_GLF_IDENTITY(~ subgroup_size, max(~ subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), (_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))) | 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), (_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))) | 0u))) ^ 0u)))))) ^ 0u), _GLF_IDENTITY(~ subgroup_size, max(~ subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), (_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))) | 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), (_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))) | 0u))) ^ 0u)))))))), 0u | ((_GLF_IDENTITY(~ _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), _GLF_IDENTITY(max(~ subgroup_size, _GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (_GLF_IDENTITY(1u & 1u, max(1u & 1u, 1u & 1u))))))), max(max(~ subgroup_size, _GLF_IDENTITY(~ _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), uint(uvec2(~ subgroup_size, (1u & 1u))))), max(~ subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, (~ subgroup_size) - 0u), uint(uvec2(~ subgroup_size, (1u & 1u)))))))))))))))), 1u, 0u, 1u))), ~ (~ (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) || false)), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) || false)) ? next_virtual_gid : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((~ subgroup_size), ((~ subgroup_size)) - 0u)), ~ (~ (_GLF_FUZZED((~ subgroup_size))))), max(_GLF_IDENTITY(_GLF_FUZZED((~ subgroup_size)), ~ (~ (_GLF_FUZZED((~ subgroup_size))))), _GLF_IDENTITY(_GLF_FUZZED((~ subgroup_size)), ~ (~ (_GLF_FUZZED((~ subgroup_size))))))), uint(uvec4(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, max(~ _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) | 0u), _GLF_IDENTITY(~ subgroup_size, _GLF_IDENTITY(uint(uvec2(~ subgroup_size, (1u & 1u))), min(_GLF_IDENTITY(uint(uvec2(~ subgroup_size, (1u & 1u))), 1u * (uint(uvec2(~ subgroup_size, (1u & 1u))))), _GLF_IDENTITY(uint(uvec2(~ subgroup_size, (1u & 1u))), uint(uvec2(uint(uvec2(~ subgroup_size, (1u & 1u))), 0u)))))))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(~ subgroup_size, max(~ subgroup_size, _GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(~ subgroup_size, max(~ subgroup_size, _GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))))), ~ (~ (0u | (_GLF_IDENTITY(~ subgroup_size, max(~ subgroup_size, _GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))))))))) | (_GLF_IDENTITY(0u | (_GLF_IDENTITY(~ subgroup_size, max(~ subgroup_size, _GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))))), (0u | (_GLF_IDENTITY(~ subgroup_size, max(~ subgroup_size, _GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))))))) - 0u))))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((_GLF_IDENTITY(~ subgroup_size, max(~ subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, (~ subgroup_size) * 1u), (true ? _GLF_IDENTITY(~ subgroup_size, _GLF_IDENTITY((~ subgroup_size) << 0u, 0u | (_GLF_IDENTITY((~ subgroup_size) << 0u, max((~ subgroup_size) << 0u, (~ subgroup_size) << 0u))))) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(uint(uvec2(~ subgroup_size, (1u & 1u))), ~ (~ (uint(uvec2(~ subgroup_size, (1u & 1u)))))))))), 0u | ((_GLF_IDENTITY(~ subgroup_size, max(~ subgroup_size, _GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))))))))))), 1u, 0u, 1u))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) ? next_virtual_gid : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((~ subgroup_size), ~ (_GLF_IDENTITY(~ ((~ subgroup_size)), (~ ((~ subgroup_size))) | 0u)))), ~ (~ (_GLF_FUZZED((~ subgroup_size))))), max(_GLF_IDENTITY(_GLF_FUZZED((~ subgroup_size)), ~ (~ (_GLF_FUZZED((~ subgroup_size))))), _GLF_IDENTITY(_GLF_FUZZED((~ subgroup_size)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_FUZZED((~ subgroup_size))), (~ (_GLF_FUZZED((~ subgroup_size)))) - 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_FUZZED((~ subgroup_size))), (~ (_GLF_FUZZED((~ subgroup_size)))) - 0u)), min((_GLF_IDENTITY(~ (_GLF_FUZZED((~ subgroup_size))), (~ (_GLF_FUZZED((~ subgroup_size)))) - 0u)), (_GLF_IDENTITY(~ (_GLF_FUZZED((~ subgroup_size))), (~ (_GLF_FUZZED((~ subgroup_size)))) - 0u))))) - 0u)))), uint(uvec4(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(~ subgroup_size, max(_GLF_IDENTITY(~ subgroup_size, clamp(~ subgroup_size, ~ subgroup_size, ~ subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))), ~ (~ (_GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))))))))), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((_GLF_IDENTITY(~ subgroup_size, max(~ subgroup_size, _GLF_IDENTITY(~ subgroup_size, _GLF_IDENTITY(uint(uvec2(~ subgroup_size, (1u & 1u))), (uint(uvec2(~ subgroup_size, (1u & 1u)))) << 0u))))), 0u | ((_GLF_IDENTITY(~ subgroup_size, max(~ subgroup_size, _GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u)))))))))))), 1u, 0u, 1u)))) | (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true), (injectionSwitch.x < injectionSwitch.y) || false))) ? next_virtual_gid : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((~ subgroup_size)), ~ (~ (_GLF_FUZZED((~ subgroup_size))))), max(_GLF_IDENTITY(_GLF_FUZZED((~ subgroup_size)), ~ (~ (_GLF_FUZZED((~ subgroup_size))))), _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(~ subgroup_size, (false ? _GLF_FUZZED(164214u) : ~ subgroup_size)))), ~ (~ (_GLF_FUZZED((~ subgroup_size))))))), uint(uvec4(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(~ subgroup_size, max(~ _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), _GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((_GLF_IDENTITY(~ subgroup_size, max(~ subgroup_size, _GLF_IDENTITY(~ subgroup_size, uint(uvec2(~ subgroup_size, (1u & 1u))))))), 0u | ((_GLF_IDENTITY(~ subgroup_size, max(~ subgroup_size, _GLF_IDENTITY(~ subgroup_size, _GLF_IDENTITY(uint(uvec2(~ subgroup_size, (1u & 1u))), min(uint(uvec2(~ subgroup_size, (1u & 1u))), uint(uvec2(~ subgroup_size, (1u & 1u)))))))))))))), 1u, _GLF_IDENTITY(0u, 0u + (0u)), 1u))))))))))], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, max(4, 4)))), (4) << (0 << _GLF_IDENTITY(int(0), int(0)))), _GLF_IDENTITY(64, 0 | (64)), 4);
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) >> 0), _GLF_IDENTITY(0 + (64), min(0 + (64), 0 + (64)))), 0);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (! (! (_GLF_WRAPPED_IF_FALSE(false))))))) || false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (! (! (_GLF_WRAPPED_IF_FALSE(false))))))) || false))), true && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (! (! (_GLF_WRAPPED_IF_FALSE(false))))))) || false)))))), (bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (! (! (_GLF_WRAPPED_IF_FALSE(false))))))) || false))), true && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (! (! (_GLF_WRAPPED_IF_FALSE(false))))))) || false))))))) && true))), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), (! (_GLF_WRAPPED_IF_FALSE(false))) && true)) || false), ! (! (! (_GLF_WRAPPED_IF_FALSE(false)))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false)))), ! (! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))))) && _GLF_IDENTITY(true, bool(bool(true))))))))), bool(bvec3(bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false)))), ! (! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ! (! ((! (_GLF_WRAPPED_IF_FALSE(false))))))) && _GLF_IDENTITY(true, bool(bool(true))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (! (! (_GLF_WRAPPED_IF_FALSE(false)))))), false, false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (! (! (_GLF_WRAPPED_IF_FALSE(false)))))), false, false, false)), false, false, true)), (_GLF_IDENTITY(bool(bvec4(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (! (! (_GLF_WRAPPED_IF_FALSE(false)))))), false, false, false)), false, false, true)), bool(bvec4(bool(bvec4(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (! (! (_GLF_WRAPPED_IF_FALSE(false)))))), false, false, false)), false, false, true)), false, true, false)))) || false)))))) || false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, false || (false)))), true, true))), false || _GLF_IDENTITY((bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((bool(bool(false))), ! (! (_GLF_IDENTITY((bool(bool(false))), true && ((bool(bool(false)))))))))))), true)), true))))))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                barrier();
               if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7201.7955)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(false, false || (false))))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7201.7955)), float(injectionSwitch.x), bool(true))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7201.7955)), float(injectionSwitch.x), bool(true))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7201.7955)), float(injectionSwitch.x), bool(true)))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7201.7955)), float(injectionSwitch.x), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7201.7955)), float(injectionSwitch.x), bool(true))))))) > injectionSwitch.y)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-84.33), _GLF_FUZZED(-28.57)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), _GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0), mix(vec2(_GLF_FUZZED(88.91), ((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0))[1]), vec2(((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0))[0], _GLF_FUZZED(2.0)), bvec2(true, false))))).y)), true), false))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))))), false)))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true))))) && _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7201.7955)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))), true)))), false))), false))))), true && ((bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7201.7955)), float(injectionSwitch.x), bool(true))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))), (true ? float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 1.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(-45.46)))))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))), false))), false))))))))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, min(0, 0))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(621.458) : injectionSwitch.y))))))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ! (! ((! (false))))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))), true && (! (! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))))))
                          barrier();
                         barrier();
                        }
                      }
                    }
                   else
                    {
                     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), min(_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (0)), max(0, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, min(0, 0))))))), _GLF_IDENTITY(0, (0) << 0))), 1)), 0 | (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0))))))), min(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) | (0))))) << 0))), 1)), (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0))))))), min(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) | (0))))) << 0))), 1))) | (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0))))))), min(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) | (0))))) << 0))), 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) << (0 << _GLF_IDENTITY(int(6), int(6)))), (0) << _GLF_IDENTITY(0, min(0, 0))))))), int(ivec3(max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), min(_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (0)), max(0, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, min(0, 0))))))), _GLF_IDENTITY(0, (0) << 0))), 1)), 0 | (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0))))))), min(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) | (0))))) << 0))), 1)), (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0))))))), min(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) | (0))))) << 0))), 1))) | (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0))))))), min(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) | (0))))) << 0))), 1))))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) << (0 << _GLF_IDENTITY(int(6), int(6)))), (0) << _GLF_IDENTITY(0, min(0, 0))))))), 0, 1))), (max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (_GLF_IDENTITY(0, (0) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), min(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, (0) << 0))))), min(_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (0)), max(0, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), ~ (~ (min(0, 0))))))), _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, min(0, 0))))), (1 & 1) * ((_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, min(0, 0))))))) << 0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (_GLF_IDENTITY(0, (0) << 0)) | 0))), 1)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0))))))), max(_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), min((int(2)), (int(2)))) | 0)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0))))))), _GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) | 0))))))))), min(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) | (0))), min((false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) : _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) >> 0), 0))))), _GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) | (0))), clamp((false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) | (0))), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) : _GLF_IDENTITY(0, (0) | (0))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) | 0) : _GLF_IDENTITY(0, (0) | (0)), max(false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) | 0) : _GLF_IDENTITY(0, (0) | (0)), false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) | 0) : _GLF_IDENTITY(0, (0) | (0))))), ~ (~ ((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) | 0) : _GLF_IDENTITY(0, (0) | (0)), max(false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) | 0) : _GLF_IDENTITY(0, (0) | (0)), false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) | 0) : _GLF_IDENTITY(0, (0) | (0)))))))))))))) << 0))), 1)), (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0))))))), max(_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(2)), min((int(2)), (int(2)))) | 0)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0))))))), _GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, min(2, 2)))) | 0))))))))), min(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) | (0))), min((false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) : _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) >> 0), 0))))), _GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) | (0))), clamp((false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) | (0))), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) : _GLF_IDENTITY(0, (0) | (0))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) | 0) : _GLF_IDENTITY(0, (0) | (0)), max(false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) | 0) : _GLF_IDENTITY(0, (0) | (0)), false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) | 0) : _GLF_IDENTITY(0, (0) | (0))))), ~ (~ ((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) | 0) : _GLF_IDENTITY(0, (0) | (0)), max(false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) | 0) : _GLF_IDENTITY(0, (0) | (0)), false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) | 0) : _GLF_IDENTITY(0, (0) | (0)))))))))))))) << 0))), 1))) - 0), (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 ^ (2))), (int(2)) - 0)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(int(2), (int(2)) - 0)), min((_GLF_IDENTITY(int(2), (int(2)) - 0)), (_GLF_IDENTITY(int(2), (int(2)) - _GLF_IDENTITY(0, (0) - 0)))))))) | 0)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | 0))))))), min(_GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) | (0))))) << 0))), 1))) | (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), ((0)) | ((0))), (0), _GLF_IDENTITY(_GLF_IDENTITY((0), 1 * (_GLF_IDENTITY((0), ((0)) ^ 0))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((0), 1 * (_GLF_IDENTITY((0), ((0)) ^ 0))), (_GLF_IDENTITY((0), 1 * (_GLF_IDENTITY((0), ((0)) ^ 0)))) | 0))))) << _GLF_IDENTITY(0, _GLF_IDENTITY((0) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2))))), _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), min(~ (2), ~ (2))))), 2))), (int(2)) | 0)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, 0))))))))), int(int((0) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2))))), _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), min(~ (2), ~ (2))))), 2))), (int(2)) | 0)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, 0)))))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))), 0, 0)), (0) << 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(0, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))))))) << 0))), 1), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), ((0)) | ((0))), (0), _GLF_IDENTITY(_GLF_IDENTITY((0), 1 * (_GLF_IDENTITY((0), ((0)) ^ 0))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((0), 1 * (_GLF_IDENTITY((0), ((0)) ^ 0))), (_GLF_IDENTITY((0), 1 * (_GLF_IDENTITY((0), ((0)) ^ 0)))) | 0))))) << _GLF_IDENTITY(0, _GLF_IDENTITY((0) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2))))), _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), min(~ (2), ~ (2))))), 2))), (int(2)) | 0)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, 0))))))))), int(int((0) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2))))), _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), min(~ (2), ~ (2))))), 2))), (int(2)) | 0)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, 0)))))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))), 0, 0)), (0) << 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(0, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))))))) << 0))), 1), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), ((0)) | ((0))), (0), _GLF_IDENTITY(_GLF_IDENTITY((0), 1 * (_GLF_IDENTITY((0), ((0)) ^ 0))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((0), 1 * (_GLF_IDENTITY((0), ((0)) ^ 0))), (_GLF_IDENTITY((0), 1 * (_GLF_IDENTITY((0), ((0)) ^ 0)))) | 0))))) << _GLF_IDENTITY(0, _GLF_IDENTITY((0) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2))))), _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), min(~ (2), ~ (2))))), 2))), (int(2)) | 0)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, 0))))))))), int(int((0) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2))))), _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), min(~ (2), ~ (2))))), 2))), (int(2)) | 0)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, 0)))))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))), 0, 0)), (0) << 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(0, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))))))) << 0))), 1), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), ((0)) | ((0))), (0), _GLF_IDENTITY(_GLF_IDENTITY((0), 1 * (_GLF_IDENTITY((0), ((0)) ^ 0))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((0), 1 * (_GLF_IDENTITY((0), ((0)) ^ 0))), (_GLF_IDENTITY((0), 1 * (_GLF_IDENTITY((0), ((0)) ^ 0)))) | 0))))) << _GLF_IDENTITY(0, _GLF_IDENTITY((0) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2))))), _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), min(~ (2), ~ (2))))), 2))), (int(2)) | 0)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, 0))))))))), int(int((0) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2))))), _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), min(~ (2), ~ (2))))), 2))), (int(2)) | 0)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, 0)))))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))), 0, 0)), (0) << 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(0, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))))))) << 0))), 1), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), ((0)) | ((0))), (0), _GLF_IDENTITY(_GLF_IDENTITY((0), 1 * (_GLF_IDENTITY((0), ((0)) ^ 0))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((0), 1 * (_GLF_IDENTITY((0), ((0)) ^ 0))), (_GLF_IDENTITY((0), 1 * (_GLF_IDENTITY((0), ((0)) ^ 0)))) | 0))))) << _GLF_IDENTITY(0, _GLF_IDENTITY((0) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2))))), _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), min(~ (2), ~ (2))))), 2))), (int(2)) | 0)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, 0))))))))), int(int((0) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2))))), _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), min(~ (2), ~ (2))))), 2))), (int(2)) | 0)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, 0)))))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))), 0, 0)), (0) << 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(0, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))))))) << 0))), 1), min(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), ((0)) | ((0))), (0), _GLF_IDENTITY(_GLF_IDENTITY((0), 1 * (_GLF_IDENTITY((0), ((0)) ^ 0))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((0), 1 * (_GLF_IDENTITY((0), ((0)) ^ 0))), (_GLF_IDENTITY((0), 1 * (_GLF_IDENTITY((0), ((0)) ^ 0)))) | 0))))) << _GLF_IDENTITY(0, _GLF_IDENTITY((0) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2))))), _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), min(~ (2), ~ (2))))), 2))), (int(2)) | 0)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, 0))))))))), int(int((0) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2))))), _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), min(~ (2), ~ (2))))), 2))), (int(2)) | 0)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, 0)))))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))), 0, 0)), (0) << 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(0, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))))))) << 0))), 1), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), ((0)) | ((0))), (0), _GLF_IDENTITY(_GLF_IDENTITY((0), 1 * (_GLF_IDENTITY((0), ((0)) ^ 0))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((0), 1 * (_GLF_IDENTITY((0), ((0)) ^ 0))), (_GLF_IDENTITY((0), 1 * (_GLF_IDENTITY((0), ((0)) ^ 0)))) | 0))))) << _GLF_IDENTITY(0, _GLF_IDENTITY((0) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2))))), _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), min(~ (2), ~ (2))))), 2))), (int(2)) | 0)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, 0))))))))), int(int((0) - (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), max(~ (2), ~ (2))))), _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), min(~ (2), ~ (2))))), 2))), (int(2)) | 0)), 0 ^ (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, 0)))))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter))), 0, 0)), (0) << 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(0, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))))))) << 0))), 1)))) | ivec2(0, 0)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) << _GLF_IDENTITY((_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(int(0))), 0)) << _GLF_IDENTITY(int(6), int(6))), min(_GLF_IDENTITY((_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(int(0))), 0)) << _GLF_IDENTITY(int(6), int(6))), ((_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(int(0))), 0)) << _GLF_IDENTITY(int(6), int(6)))) | ((_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(int(0))), 0)) << _GLF_IDENTITY(int(6), int(6))))), (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(int(0))), 0)) << _GLF_IDENTITY(int(6), int(6)))))), (0) << _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (~ (0)))))), 0)))))))) / 1))); _injected_loop_counter --)
                      {
                       barrier();
                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                        barrier();
                      }
                    }
                  }
                 do
                  {
                   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (_GLF_DEAD(false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (_GLF_DEAD(false))), false)))))))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     do
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false))))))))
                        barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                   else
                    {
                    }
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         barrier();
                        }
                      }
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
           else
            {
            }
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
  }
 do
  {
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, max(_GLF_IDENTITY(read, ~ (~ (read))), read)), 4, 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4((true), false, false, false))) || false) ? injectionSwitch.y : _GLF_FUZZED(-1.3)))))));
}
