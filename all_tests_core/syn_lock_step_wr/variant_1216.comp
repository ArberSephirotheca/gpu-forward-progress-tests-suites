#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_size;
 uvec4 GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_12subgroup_idsubgroup_local_idworkgroup_baseworkgroup_id;
 uvec2 GLF_merged2_0_1_4_1_1_11readsubgroup_id;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_baseworkgroup_size;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) / 1.0)) / 1.0)))))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))));
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uvec4 GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnext_virtual_gidnum_workgroup;
 uvec4 GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base;
 uvec2 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id;
 for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnext_virtual_gidnum_workgroup.xy = GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id, (GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnext_virtual_gidnum_workgroup.xy = GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id) * uvec2(1u, 1u));
  }
 uvec2 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy = GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
        {
        }
       else
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, determinant(mat2(0.0, 1.0, 0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3513.3331) : injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(67.48))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))));
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, 0 | (0))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << (0 >> _GLF_IDENTITY(int(4), int(4)))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) > 0); _injected_loop_counter --)
            {
             barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                barrier();
               barrier();
              }
            }
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   barrier();
  }
 uvec4 GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_12subgroup_idsubgroup_local_idworkgroup_baseworkgroup_id.x = subgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   GLF_merged2_0_1_4_1_1_11readsubgroup_id.y = _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_12subgroup_idsubgroup_local_idworkgroup_baseworkgroup_id.x, (GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_12subgroup_idsubgroup_local_idworkgroup_baseworkgroup_id.x) / (1u & 1u));
  }
 else
  {
  }
 GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnext_virtual_gidnum_workgroup.xy.x = GLF_merged2_0_1_4_1_1_11readsubgroup_id.y;
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) && true))), bool(bvec4((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), true && (! (true)))) && true))), false, false, true)))), false || (! (_GLF_IDENTITY((false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) && true))), bool(bvec4(_GLF_IDENTITY((false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) && true))), false || ((false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), true && (! (true)))) && true, ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bool(true)))), true && (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), ! (! (! (true))))))))) && true)))))))), false, false, true)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch)))).x)) > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch)))).x)) > injectionSwitch.y))))))))))
      {
      }
     else
      {
       barrier();
      }
    }
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY((_GLF_IDENTITY(int(7), clamp(int(_GLF_IDENTITY(7, (7) - 0)), int(7), int(7)))) ^ (0 << _GLF_IDENTITY(int(5), int(5))), (false ? _GLF_FUZZED(ivec2(-91804, 67270)[0]) : (_GLF_IDENTITY(int(7), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(7, clamp(7, 7, _GLF_IDENTITY(7, (7) - 0))), (7) - 0)), _GLF_IDENTITY(int(7), (int(7)) | (_GLF_IDENTITY(int(7), int(ivec2(int(7), 0))))), int(7)))) ^ (0 << _GLF_IDENTITY(int(5), int(5))))))))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               barrier();
              }
            }
          }
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           else
            {
            }
          }
        }
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
        {
         barrier();
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_size.y = subgroup_size;
 GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x = _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_size.y, (GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_size.y) - uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0) != _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - 0))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (_GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), ! (! (_GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true)))))))) && true))))) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true)))))))))))) && (false))), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, true))))))))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), int(ivec4(int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 1, 0))); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 & -52846), ((0 & -52846)) >> 0)), (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 & -52846), ((0 & -52846)) >> 0))) || false), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0) & -52846), _GLF_IDENTITY(((0 & _GLF_IDENTITY(-52846, (-52846) ^ 0))) >> 0, (_GLF_IDENTITY(((0 & _GLF_IDENTITY(-52846, (-52846) ^ 0))) >> 0, max(((0 & _GLF_IDENTITY(-52846, (-52846) ^ 0))) >> 0, ((0 & _GLF_IDENTITY(-52846, (-52846) ^ 0))) >> 0))) ^ 0))), true))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))) || false)))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_12subgroup_idsubgroup_local_idworkgroup_baseworkgroup_id.y = _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id));
 do
  {
   GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y = GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_12subgroup_idsubgroup_local_idworkgroup_baseworkgroup_id.y;
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))).y))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
    barrier();
   _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size.z = GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size.z = GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size.z = GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y, (GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size.z = GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnext_virtual_gidnum_workgroup.xy.y) / 1u)))) + 0u);
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u), (false ? _GLF_FUZZED(1383u) : gl_NumWorkGroups.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | _GLF_IDENTITY((gl_NumWorkGroups), max(_GLF_IDENTITY((gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(193407u, 150773u, 179993u)) : (gl_NumWorkGroups))), (gl_NumWorkGroups)))))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))))) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)), 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(139579u, 68918u, 187843u)) : _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)))))))))).x, (gl_NumWorkGroups.x) - 0u), gl_NumWorkGroups.x, gl_NumWorkGroups.x));
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_baseworkgroup_size.y = num_workgroup;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
  }
 else
  {
  }
 GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnext_virtual_gidnum_workgroup.w = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_baseworkgroup_size, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_baseworkgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_baseworkgroup_size, uvec4(1u, 1u, 1u, 1u) * (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_baseworkgroup_size)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) / uvec4(1u, 1u, 1u, 1u)) ^ (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_baseworkgroup_size))) - (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(3u), uvec4(3u)))), GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_baseworkgroup_size)).y;
 GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size.x = GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnext_virtual_gidnum_workgroup.w;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))) || false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true)))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / abs(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))) > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / abs(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / abs(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / abs(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / abs(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / abs(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / abs(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))), float(_GLF_FUZZED(-7.2)), bool(false))))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), (bool((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), (injectionSwitch.x) + 0.0)) / abs(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))) > injectionSwitch.y))) && true))))));
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_baseworkgroup_size.w = workgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.w = GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_baseworkgroup_size.w;
 GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size.w = GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.w;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
          {
           barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), (bool(false)) && true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)), bool(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)))))))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))) || false), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(bool(bool((injectionSwitch.x > injectionSwitch.y))), false, true, false)), ! (! (bool(bvec4(bool(bool((injectionSwitch.x > injectionSwitch.y))), false, true, false))))))))));
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(_injected_loop_counter))))))); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --)))) >> 0))
                {
                 barrier();
                }
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               do
                {
                 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(83911))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-32.76))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-32.76))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-32.76))), false), bvec2(bvec4(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-32.76))), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-32.76))), false), bvec2(bvec4(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-32.76))), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true)))))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((-27101 , -6.6)))) < injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((-27101 , -6.6)))) < injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((-27101 , -6.6)))) < injectionSwitch.y))) || false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! _GLF_IDENTITY((bool(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-8922.9137, -65.74, 15.07, 1101.1795, 8.8, 3889.8464)) : mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0))))) < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! ((bool(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-8922.9137, -65.74, 15.07, 1101.1795, 8.8, 3889.8464)) : mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0))))) < injectionSwitch.y)), true)))), (! ((bool(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-8922.9137, -65.74, 15.07, 1101.1795, 8.8, 3889.8464)) : mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 0.0))))) < injectionSwitch.y)), true))))) && true))))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), true)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, min(injectionSwitch.y, injectionSwitch.y))) - length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3((vec3(0.0, 0.0, 0.0))[0], (vec3(0.0, 0.0, 0.0))[1], _GLF_IDENTITY((vec3(0.0, 0.0, 0.0))[2], ((vec3(0.0, 0.0, 0.0))[2]) - 0.0)), vec3(_GLF_FUZZED(-3.0), _GLF_FUZZED(-874.015), _GLF_FUZZED(-9.7)), bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), true)), ! (! (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - length(vec3(0.0, 0.0, 0.0))))), true)), ! (! (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - length(vec3(0.0, 0.0, 0.0))))), true)), ! (! (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - length(vec3(0.0, 0.0, 0.0))))), true)), ! (! (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - length(vec3(0.0, 0.0, 0.0))))), true)), ! (! (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - length(vec3(0.0, 0.0, 0.0))))), true)), ! (! (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - length(vec3(0.0, 0.0, 0.0))))), true)), ! (! (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, false, true)))) || false) && true)))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.7)))))));
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(72045))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(90.72))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(90.72))), mix(float(_GLF_FUZZED(6.1)), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(90.72)))), bool(true)))) * 1.0)), bool(true))), (injectionSwitch.x) * _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2851.4308)))))))) > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0), (true ? mat3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED((-492.232 / mat3(4.1, 7.6, 53.48, 396.741, 6.1, -641.921, 297.409, 9.0, -81.27)))))), min(vec2(_GLF_IDENTITY(mat3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0), (true ? mat3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED((-492.232 / mat3(4.1, 7.6, 53.48, 396.741, 6.1, -641.921, 297.409, 9.0, -81.27)))))), vec2(_GLF_IDENTITY(mat3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0), (true ? mat3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED((-492.232 / mat3(4.1, 7.6, 53.48, 396.741, 6.1, -641.921, 297.409, 9.0, -81.27))))))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)), injectionSwitch)).y))))))))
          barrier();
         barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x > injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
             barrier();
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))) > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), bool(bvec2(_GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bool(bool(bool(false))), ! (! (bool(bool(bool(false)))))))), false)))), false, true)))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
              {
              }
             else
              {
               barrier();
              }
            }
           barrier();
          }
        }
       else
        {
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.5)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_12subgroup_idsubgroup_local_idworkgroup_baseworkgroup_id.w = workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), false, true, true))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.y = GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_12subgroup_idsubgroup_local_idworkgroup_baseworkgroup_id.w;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
  }
 uint workgroup_base = GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size.w * GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.y;
 GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_12subgroup_idsubgroup_local_idworkgroup_baseworkgroup_id.z = workgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), false, true))))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.z = GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_12subgroup_idsubgroup_local_idworkgroup_baseworkgroup_id.z;
  }
 uint subgroup_base = GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnext_virtual_gidnum_workgroup.xy.x * GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x;
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_baseworkgroup_size.z = _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (subgroup_base));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.w = GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_baseworkgroup_size.z;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false))) && true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 else
  {
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size) | (GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size), min((GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size), (GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size))), uvec4(0u, 0u, 0u, 0u) ^ ((GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size))) | _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size), ((GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size)) | ((GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size), (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size), ~ (~ ((GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size))))) >> (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(7u), uvec4(7u)))) | (GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size), max((GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size) | (GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size), (GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size) | (GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size)))), (true ? _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size) - uvec4(0u, 0u, 0u, 0u))) + (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u))))) : _GLF_FUZZED(GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnext_virtual_gidnum_workgroup))))))) | uvec4(0u, 0u, 0u, 0u)).z + GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.w + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size, _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) + (GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) + (GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size), (_GLF_IDENTITY(true, false || (true)) ? uvec4(0u, 0u, 0u, 0u) + (GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size) : _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_baseworkgroup_size))), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) + (GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size), (true ? uvec4(0u, 0u, 0u, 0u) + (GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size) : _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_baseworkgroup_size)))) ^ uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) + _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size), ((GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size)) / uvec4(1u, 1u, 1u, 1u)), _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u) + (GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size)), ~ (_GLF_IDENTITY(~ ((uvec4(0u, 0u, 0u, 0u) + (GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size))), ~ (~ (~ (_GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u) + (GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size)), ~ (~ ((uvec4(0u, 0u, 0u, 0u) + (GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size))))))))))) * uvec4(1u, 1u, 1u, 1u)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), clamp(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u))) + (GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size)))).z;
 do
  {
   GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.y = virtual_gid;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x = GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.y;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.z + GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.w + _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size.z + 1), 0u | ((GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size.z + 1))) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x), (_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size.z + _GLF_IDENTITY(1, (1) * 1)), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size, (GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size) | (GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size)).z + 1), (true ? _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size.z + 1), (0u | 0u) + ((GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size.z + _GLF_IDENTITY(1, int(int(1)))))) : _GLF_FUZZED(workgroup_base))))) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x), ((_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size.z + _GLF_IDENTITY(1, (1) * 1)), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size, (GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size) | (GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size)).z + 1), (true ? _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size.z + 1), (0u | 0u) + ((GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size.z + _GLF_IDENTITY(1, int(int(1)))))) : _GLF_FUZZED(workgroup_base))))) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)) / 1u)) - 0u), uint(uint(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.z + GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.w + _GLF_IDENTITY((_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size.z + 1), 0u | ((GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size.z + 1))) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x), (_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size.z + _GLF_IDENTITY(1, (1) * 1)), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size, (GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size) | (GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size)).z + 1), (true ? _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size.z + 1), (0u | 0u) + ((GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size.z + _GLF_IDENTITY(1, int(int(1)))))) : _GLF_FUZZED(workgroup_base))))) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x), ((_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size.z + _GLF_IDENTITY(1, (1) * 1)), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size, (GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size) | (GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size)).z + 1), (true ? _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size.z + 1), (0u | 0u) + ((GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size.z + _GLF_IDENTITY(1, int(int(1)))))) : _GLF_FUZZED(workgroup_base))))) % GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size.x)) / 1u)) - 0u))));
 GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_size.x = next_virtual_gid;
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_baseworkgroup_size.x = GLF_merged2_0_1_16_1_1_13next_virtual_gidsubgroup_size.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnext_virtual_gidnum_workgroup.z = GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_baseworkgroup_size.x;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), true && (! (_GLF_IDENTITY(true, (true) || false)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   atomicStore(buf[GLF_merged3_0_2_53_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_idnext_virtual_gidnum_workgroup.z], uint(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED((75465 ^ -85950))))), 4, 64, 4);
  }
 else
  {
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x, min(_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy, clamp(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy, _GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy, (_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy, (true ? GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy : _GLF_FUZZED(uvec2(3u, 48076u))))) | (GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy)), GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy)).x, _GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy, max(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy, GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy)).x)), clamp(_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x, min(_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x, (_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x, min(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x, _GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x, (GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x) | 0u)))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base, max(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base, GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base)).xy.x, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x)))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x, min(_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy, (_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy, (GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy) ^ uvec2(0u, 0u))) | (uvec2(0u, 0u) & uvec2(52613u, 117430u))).x, GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base, (_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base, (GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base) | (GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base))) | uvec4(0u, 0u, 0u, 0u)), clamp(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base, GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base, GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base))) - uvec4(0u, 0u, 0u, 0u)).xy.x, min(_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy, (GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy) | (_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy, (_GLF_IDENTITY(true, false || (true)) ? GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy : _GLF_FUZZED((+ uvec2(167142u, 65003u))))))).x, GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy, (_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy, max(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy, GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy))) ^ uvec2(0u, 0u)).x, _GLF_IDENTITY(min(_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base, max(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base, GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base)).xy.x, GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x), _GLF_IDENTITY(min(min(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x, GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x), min(_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy, (_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base, min(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base, GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base)).xy) / uvec2(1u, 1u)).x, GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x)), _GLF_IDENTITY((min(min(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x, _GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x, (_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x, min(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x, GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x))) ^ 0u)), min(_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy, (GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy) / uvec2(1u, 1u)).x, _GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x, (_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x, (GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x) ^ 0u)) << 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_14subgroup_sizevirtual_gidworkgroup_baseworkgroup_size[2]) : (min(min(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x, _GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x, (GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x) | (GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x))), _GLF_IDENTITY(min(_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy, (GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy) / uvec2(1u, 1u)).x, GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x), (min(_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy, _GLF_IDENTITY((GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy) / uvec2(1u, 1u), uvec2(1u, 1u) * (_GLF_IDENTITY((GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy) / uvec2(1u, 1u), ((GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy) / uvec2(1u, 1u)) | uvec2(0u, 0u))))).x, GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x)) << 0u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x, (GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x) ^ 0u), min(_GLF_IDENTITY(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base, min(GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base, GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base)).xy.x, GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x))))], _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) / 1))), 4, 4)), 64, _GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), (_GLF_IDENTITY(2, ~ (~ (2)))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), clamp(_GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY(2, ~ (~ (2))))))));
 GLF_merged2_0_1_4_1_1_11readsubgroup_id.x = read;
 do
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(1, ~ (~ (1))) | _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-8775, (-8775) / 1)) : 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.z = GLF_merged2_0_1_4_1_1_11readsubgroup_id.x;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((vec4(46.60, 4.7, -6.0, 66.17)).a), _GLF_FUZZED(-163.605)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, 1 * (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false))))
      barrier();
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, true, true))))))))) || false), (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) || _GLF_IDENTITY(false, (false) && true)), ((! (false))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))) || false, ! (! (_GLF_IDENTITY(((! (false))) || false, true && (((! (false))) || _GLF_IDENTITY(false, (false) && true))))))), bool(bvec4(_GLF_IDENTITY((! (false)), ((! (false))) || false), true, true, true))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, true)), bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, false, true)), (bool(bvec4(true, false, false, true))) || false))))), _GLF_IDENTITY(false, (false) || false), false))))))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(2.5), (injectionSwitch)[1]), bvec2(false, true))).x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > injectionSwitch.y))), false || (bool(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.6)), vec2(_GLF_FUZZED(2.5), (injectionSwitch)[1]), bvec2(false, true))).x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > injectionSwitch.y)))))))))), _GLF_IDENTITY(true, false || (true)), true)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))))
            {
            }
           else
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, float(mat4(injectionSwitch.x, exp(_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), float(mat2x4(length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) + vec2(0.0, 0.0)).x), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(9486.2214, -6300.2255, 8.5, 27.44)) : vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), float(_GLF_IDENTITY(mat4(false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, tan(0.0), 1.0), mat4(1.0) * (mat4(false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, tan(0.0), 1.0)))))))), clamp(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-77.96) : 1.0)), 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-896.789))), 1.0, length(0.0), 1.0), _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-896.789))), 1.0, length(0.0), 1.0)), (true ? _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-896.789))), 1.0, length(0.0), 1.0)), (false ? _GLF_FUZZED(vec4(-38.34, 627.485, 61.38, -1263.6912)) : mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-896.789))), 1.0, length(0.0), 1.0)))) : _GLF_FUZZED(vec4(5.1, 0.4, 37.46, -252.673))))), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), (false ? _GLF_FUZZED(-801.939) : _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), clamp(dot(vec4(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), dot(vec4(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), (true ? _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), max(dot(vec4(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), dot(vec4(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)))) : _GLF_FUZZED(-7015.9700)))))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), (false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)))), float(mat3x2(_GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), (false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, log(round(length(normalize(vec2(1.0, 1.0))))), 0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, _GLF_IDENTITY(length(0.0), 0.0 + (length(0.0))), 1.0), vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-98.56)), float(0.0), bool(true))), abs(1.0), 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), _GLF_IDENTITY(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), _GLF_IDENTITY(0.0, (0.0) / exp(0.0))), (vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), _GLF_IDENTITY(0.0, (0.0) / exp(0.0)))) + abs(vec4(0.0, 0.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0))))), clamp(_GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), 0.0, abs(1.0), 0.0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), min(false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), _GLF_IDENTITY(false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), clamp(false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)))))))), min(_GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), 0.0, abs(1.0), 0.0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), min(false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), _GLF_IDENTITY(false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), clamp(false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), 0.0, abs(1.0), 0.0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), min(false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), _GLF_IDENTITY(false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), clamp(false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)))))))), float(mat3x4(_GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), 0.0, abs(1.0), 0.0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), min(false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), _GLF_IDENTITY(false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), clamp(false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)))))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), _GLF_IDENTITY(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0), (_GLF_IDENTITY(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0), clamp(_GLF_IDENTITY(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(-63.90)))), mix(vec4(_GLF_FUZZED(376.002), (vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0))[1], (vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0), vec2(sqrt(1.0), 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0), vec2(sqrt(1.0), 1.0)))), abs(1.0), 0.0))[2], (vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0))[3]), vec4((vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0))[0], _GLF_FUZZED(6.8), _GLF_FUZZED(-37.31), _GLF_FUZZED(_GLF_IDENTITY(-79.40, clamp(-79.40, -79.40, -79.40)))), bvec4(true, false, false, false))), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0)))), 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0), 0.0)), (false ? _GLF_FUZZED(279.407) : _GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0), 0.0)), mix(float(_GLF_FUZZED(3.9)), float(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0), 0.0))), bool(true))))), (false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(836.505)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 1.0, 0.0)))), (true ? float(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 1.0, 0.0)))) : _GLF_FUZZED(9410.8851))), bool(true))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])).x), 0.0, abs(1.0), 0.0))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), _GLF_IDENTITY(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-8.7)), bool(false))), abs(1.0), 0.0), (false ? _GLF_FUZZED(vec4(-50.00, 9.0, -2990.5716, -7548.9052)) : vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-801.939, mix(float(_GLF_FUZZED((false ? 969.059 : 5003.0966))), float(-801.939), bool(true)))) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0))))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), clamp(_GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), mix(float(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0))), float(_GLF_FUZZED(7658.9972)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), (dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0))) - 0.0), dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)))), (false ? _GLF_FUZZED(-801.939) : _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), mix(float(_GLF_FUZZED(189.427)), float(_GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), clamp(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), float(mat3(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), min(_GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), mix(float(_GLF_FUZZED(189.427)), float(_GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), clamp(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), float(mat3(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), mix(float(_GLF_FUZZED(189.427)), float(_GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), clamp(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), float(mat3(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))) - 0.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), (false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)))), clamp(_GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), (false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), (false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), (false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)))), min(_GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), (false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), (false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)))), clamp(_GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), (false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), (false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)), (false ? _GLF_FUZZED(-801.939) : dot(vec4(1.0, 1.0, length(0.0), 1.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0))))))))))))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, length(vec4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-67.32)), bool(false))))), dot(vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0), mat3(mat3(mat3(1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0)))))), 0.0))), 0.0, _GLF_IDENTITY(log(1.0), 1.0 * (log(1.0))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), 1.0, 1.0))))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, mix(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - abs(vec2(0.0, 0.0)))) + vec2(0.0, 0.0)).y), float(_GLF_FUZZED(vec4(719.588, _GLF_IDENTITY(277.188, (277.188) * 1.0), 6.1, 6.2).t)), bool(false))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-22.13, mix(float(_GLF_FUZZED(-3.5)), float(-22.13), bool(true))))), float(injectionSwitch.y), bool(true)))))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false)))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size.y = GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.z;
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) && true)), ! (! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bvec2(true, false)))))) && true)))))), bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), (_GLF_IDENTITY(true, bool(bvec2(true, false)))) && true)), ! (! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), true)))))) && true))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       subgroupBarrier();
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) || false)))
        barrier();
      }
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, cos(0.0)))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6353.1034), _GLF_FUZZED(-3.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (_GLF_IDENTITY(0 ^ 1, (0 ^ 1) >> 0)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) && true); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 else
  {
   atomicStore(checker[GLF_merged3_0_2_48_2_1_4_3_1_13GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idreadsubgroup_base.xy.x], _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size.y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size, uvec4(1u, 1u, 1u, 1u) * (GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size))) << uvec4(0u, 0u, 0u, 0u))) | uvec4(0u, 0u, 0u, 0u))) | (GLF_merged4_0_1_13_1_1_4_2_1_17_3_1_14num_workgroupreadsubgroup_local_idworkgroup_size)).y) - 0u), 4, _GLF_IDENTITY(64, (64) | _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), clamp(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (_GLF_IDENTITY(0, ~ (~ (0)))) * 1), _GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), int(ivec3(_GLF_IDENTITY(0, ~ (~ (0))), 0, 1)))))))), 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))) || false))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) ^ (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) + 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) || false) || false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))) && true))))
    barrier();
   barrier();
  }
}
