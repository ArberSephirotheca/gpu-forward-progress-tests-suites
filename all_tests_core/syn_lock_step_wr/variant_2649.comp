#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))))), true, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, false))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * abs(vec2(1.0, 1.0))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)), (bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), (_GLF_IDENTITY(bool(bvec2(! (false), true)), ! (! (bool(bvec2(! (false), true)))))) || false))), ! (! ((! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), false, false))) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 1.0, 0.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 1.0, 0.0, 1.0, 0.0, 1.0)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u)), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u), (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), uint(uint(~ (gl_WorkGroupID.x))))) / 1u))), uint(uvec3(gl_WorkGroupID.x, 0u, 1u)))))) >> 0u)), ~ (gl_WorkGroupID.x)))) ^ _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u))))))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_WorkGroupID.x, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), _GLF_IDENTITY(clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)), (clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x))) >> (0u ^ 0u)))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), injectionSwitch.y)))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u), (0u | 1u), 0u, 1u), uvec4(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u, 0u) | _GLF_IDENTITY((uvec4(_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u), (_GLF_IDENTITY(0u, 0u ^ (0u)) | 1u), 0u, 1u)), ((uvec4(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID.x), ~ (~ (~ (gl_WorkGroupID.x)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))), clamp(~ (gl_WorkGroupID.x), ~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))).x), ~ (gl_WorkGroupID.x)))) ^ 0u), (_GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), ((0u)) * 1u)) | 1u), 0u, 1u))) << uvec4(0u, 0u, 0u, 0u)))))), 0u + (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), _GLF_IDENTITY(clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)), (clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x))) >> (0u ^ 0u)))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), injectionSwitch.y)))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u), (0u | 1u), 0u, 1u), uvec4(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u, 0u) | _GLF_IDENTITY((uvec4(_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u), (_GLF_IDENTITY(0u, 0u ^ (0u)) | 1u), 0u, 1u)), ((uvec4(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID.x), ~ (~ (~ (gl_WorkGroupID.x)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))), clamp(~ (gl_WorkGroupID.x), ~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))).x), ~ (gl_WorkGroupID.x)))) ^ 0u), (_GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), ((0u)) * 1u)) | 1u), 0u, 1u))) << uvec4(0u, 0u, 0u, 0u)))))), min(false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), _GLF_IDENTITY(clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)), (clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x))) >> (0u ^ 0u)))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), injectionSwitch.y)))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u), (0u | 1u), 0u, 1u), uvec4(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u, 0u) | _GLF_IDENTITY((uvec4(_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u), (_GLF_IDENTITY(0u, 0u ^ (0u)) | 1u), 0u, 1u)), ((uvec4(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID.x), ~ (~ (~ (gl_WorkGroupID.x)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))), clamp(~ (gl_WorkGroupID.x), ~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))).x), ~ (gl_WorkGroupID.x)))) ^ 0u), (_GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), ((0u)) * 1u)) | 1u), 0u, 1u))) << uvec4(0u, 0u, 0u, 0u)))))), false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), _GLF_IDENTITY(clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)), (clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x))) >> (0u ^ 0u)))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), injectionSwitch.y)))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u), (0u | 1u), 0u, 1u), uvec4(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u, 0u) | _GLF_IDENTITY((uvec4(_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u), (_GLF_IDENTITY(0u, 0u ^ (0u)) | 1u), 0u, 1u)), ((uvec4(_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID.x), ~ (~ (~ (gl_WorkGroupID.x)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))), clamp(~ (gl_WorkGroupID.x), ~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))).x), ~ (gl_WorkGroupID.x)))) ^ 0u), (_GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), ((0u)) * 1u)) | 1u), 0u, 1u))) << uvec4(0u, 0u, 0u, 0u)))))))))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u, 0u), (uvec4((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u, min((_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u, ((_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u) | ((_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u)))))), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u)))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u)), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ _GLF_IDENTITY((gl_WorkGroupID.x), (_GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) >> 0u)) >> 0u), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x)))) ^ 0u)), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupID.x, 0u), (uvec2(gl_WorkGroupID.x, 0u)) / uvec2(1u, 1u))))) << 0u))))) ^ 0u)))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u)), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) : (_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u)), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u)))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u)), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))) ^ 0u)))))))), min((_GLF_IDENTITY(gl_WorkGroupID.x, ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u)), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u)))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u)), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))) ^ 0u)))))))), (_GLF_IDENTITY(gl_WorkGroupID.x, ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u)), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u)))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u)), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))) ^ 0u)))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u)), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(39901u, 76660u, 16974u)) : gl_WorkGroupID))) - uvec3(0u, 0u, 0u)), gl_WorkGroupID)).x)))) ^ 0u)))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u)), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u))))))), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), _GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), min(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u)))) ^ 0u)), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u)))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u)), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x))), max(_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x))), _GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))))))) ^ 0u))))))), _GLF_IDENTITY(gl_WorkGroupID.x, ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u)), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x))), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u)))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID.x), (~ (gl_WorkGroupID.x)) << 0u), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u)), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), ~ (~ (~ (gl_WorkGroupID.x))))) ^ 0u), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u))))))), _GLF_IDENTITY(gl_WorkGroupID.x, ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), (uvec3(uvec4(gl_WorkGroupID, 0u))) | uvec3(0u, 0u, 0u))).x), ~ (gl_WorkGroupID.x)))) ^ 0u)), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (_GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupID.x))), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ 0u)))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ _GLF_IDENTITY((gl_WorkGroupID.x), clamp((gl_WorkGroupID.x), _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) / 1u), _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << 0u)))))) ^ 0u)), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(~ (gl_WorkGroupID.x), (_GLF_IDENTITY(~ (gl_WorkGroupID.x), clamp(~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x), ~ (gl_WorkGroupID.x)))) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))))))))))))) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.1))), injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u)))), (workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), clamp(uint(0u), uint(0u), uint(0u)))))), (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u))))) >> (0u & 94926u))) / 1u), min(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x), _GLF_IDENTITY(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0)), min(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-20.19) : _GLF_IDENTITY(1.0, float(float(1.0))))), 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0)), float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0)))))), clamp(uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x), _GLF_IDENTITY(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0)), min(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-20.19) : _GLF_IDENTITY(1.0, float(float(1.0))))), 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0)), float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0)))))), uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x), _GLF_IDENTITY(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0)), min(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-20.19) : _GLF_IDENTITY(1.0, float(float(1.0))))), 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0)), float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0)))))), uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x), _GLF_IDENTITY(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0)), min(float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-20.19) : _GLF_IDENTITY(1.0, float(float(1.0))))), 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0)), float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0)))))))) << _GLF_IDENTITY(uint(0u), uint(0u)))), 1u * _GLF_IDENTITY((workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_IDENTITY(true, false || (true))))) ? 0u : _GLF_FUZZED(clamp(workgroup_size, 146326u, subgroup_local_id))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), max(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), (_GLF_IDENTITY(uint(0u), max(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) << 0u)))) - 0u))))), ~ (~ ((workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_IDENTITY(true, false || (true))))) ? 0u : _GLF_FUZZED(clamp(workgroup_size, 146326u, subgroup_local_id))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), max(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) << 0u))), (_GLF_IDENTITY(uint(0u), max(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) << 0u)))) - 0u)))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || false)))), true && (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || false)))), true && (_GLF_IDENTITY(false, (false) || false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || false)))), true && (_GLF_IDENTITY(false, (false) || false))))))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), false, false, false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), false, false, false)))))))), (false) || false)) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) || false))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), false || ((_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), bool(bvec4(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false, true, true)))), false || ((_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))))))))) && (false)), false)), (bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), ! (! (_GLF_IDENTITY(false, (false) || false)))))), false))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) || false))))) || (true))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) || false))))) || (true))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) || false))))) || (true))), true)), bvec2(bvec2(bvec2(bvec2((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) || false))))) || (true))), true)))))))))) && (false)), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (false))))) || false), false))) && true), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))) && (false)), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (false))))) || false), false))) && true))))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_size))) + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), min(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) >> 0u), (_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (workgroup_base) << 0u))))) * _GLF_IDENTITY(1u, min(1u, 1u))))))) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), clamp(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 0 ^ (1)), _GLF_IDENTITY(1, 0 ^ (1))))), 4, 64, _GLF_IDENTITY(4, (4) + _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (0) >> 0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec2(bool(bvec2(_GLF_DEAD(false), false)), false))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bool(_GLF_DEAD(false)))), false)), false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * sqrt(1.0))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8417.4890)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], (0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-82453) : _GLF_IDENTITY(64, (64) - 0), (_GLF_IDENTITY(false ? _GLF_FUZZED(-82453) : _GLF_IDENTITY(64, (64) - 0), 0 | (false ? _GLF_FUZZED(-82453) : _GLF_IDENTITY(64, (64) - 0)))) | (0 | 0)))), clamp(64, 64, _GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, (64) >> 0)))))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) >> (89944 & 0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && true, ((_GLF_DEAD(false)) && true) || false), _GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && true, ((_GLF_DEAD(false)) && true) || false), false, false)))), ! (! (bool(bool(bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && true, ((_GLF_DEAD(false)) && true) || false), false, false)))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && true, ((_GLF_DEAD(false)) && true) || false), _GLF_IDENTITY(false, (false) && true), false)), _GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && true, (_GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! (! (! ((_GLF_DEAD(false)))))))) && true) || false), false, false)))), ! (! (bool(bool(bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && true, ((_GLF_DEAD(false)) && true) || false), false, false)))))))))))))) && true)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true)))))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, 1 * (_GLF_IDENTITY(64, clamp(64, 64, 64)))), 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0), vec4(0.0, 0.0, sqrt(0.0), 1.0)), dot(vec4(1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0), vec4(0.0, 0.0, sqrt(0.0), 1.0))), 0.0, _GLF_IDENTITY(dot(vec3(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, log(1.0)), vec3(0.0, 1.0, 0.0)), dot(vec3(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, log(1.0)), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, exp(0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0), vec4(0.0, 0.0, sqrt(0.0), 1.0)), dot(vec4(1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0), vec4(0.0, 0.0, sqrt(0.0), 1.0))), 0.0, _GLF_IDENTITY(dot(vec3(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, log(1.0)), vec3(0.0, 1.0, 0.0)), dot(vec3(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, log(1.0)), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, exp(0.0)) : _GLF_FUZZED(mat3x4(mat3(8876.9899, 2.3, 510.253, -36.57, -511.257, -66.74, -980.752, 37.84, 1428.9274)))))), (vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0), vec4(0.0, 0.0, sqrt(0.0), 1.0)), dot(vec4(1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0), vec4(0.0, 0.0, sqrt(0.0), 1.0))), 0.0, _GLF_IDENTITY(dot(vec3(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, log(1.0)), vec3(0.0, 1.0, 0.0)), dot(vec3(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, log(1.0)), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, exp(0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0), vec4(0.0, 0.0, sqrt(0.0), 1.0)), dot(vec4(1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0), vec4(0.0, 0.0, sqrt(0.0), 1.0))), 0.0, _GLF_IDENTITY(dot(vec3(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, log(1.0)), vec3(0.0, 1.0, 0.0)), dot(vec3(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, log(1.0)), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 1.0), vec2(0.0, 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, exp(0.0)) : _GLF_FUZZED(mat3x4(mat3(8876.9899, 2.3, 510.253, -36.57, -511.257, -66.74, -980.752, 37.84, 1428.9274))))))) * vec2(1.0, 1.0))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), mat2(1.0) * ((injectionSwitch) - vec2(0.0, 0.0)))))))).y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(6464.5395, -5967.7306)) : _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-3522.3321, float(vec4(-3522.3321, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_FUZZED(-7.1)), vec2(((injectionSwitch) - vec2(0.0, 0.0))[0], (_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), 0.0, 0.0, 0.0, sin(0.0), sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), max(vec2(mat4(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), 0.0, 0.0, 0.0, sin(0.0), sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), vec2(mat4(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), 0.0, 0.0, 0.0, sin(0.0), sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))) - vec2(0.0, 0.0))[1]), bvec2(true, true)))))))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))).y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, sqrt(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), 1.0, sqrt(1.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((+ -71.93))), float(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), bool(true))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat2(1.0, 0.0, 0.0, sqrt(1.0)))), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat2(1.0, 0.0, 0.0, sqrt(1.0)))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat2(1.0, 0.0, 0.0, sqrt(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat2(1.0, 0.0, 0.0, sqrt(1.0)))), (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat2(1.0, 0.0, 0.0, sqrt(1.0)))) : _GLF_FUZZED(-2.4))))))) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, sqrt(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0, sqrt(1.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, determinant(mat4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(1.0, float(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), exp(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), tan(0.0)))), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))), (vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, sqrt(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), 1.0, sqrt(1.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, determinant(mat4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(1.0, float(vec4(1.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), exp(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), tan(0.0)))), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))))))) * mat2(1.0))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(max(trunc(-7767.1685), -5.0)))), sqrt(1.0)))))) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, 1))))])))).x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0)))) / vec2(1.0, 1.0)), injectionSwitch))[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), float(mat3((injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))) * 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7.5, 8.1)))).y, max(injectionSwitch.y, injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
