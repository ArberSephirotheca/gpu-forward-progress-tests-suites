#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), false, true, true)), (bool(bvec4((! (false)), false, true, true))) && true)), _GLF_IDENTITY(bool(bvec3((! (false)), false, false)), (bool(bvec3((! (false)), false, false))) || false)), false, true))))))), ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_IDENTITY(false, bool(bvec2(false, true)))))), false, true))))))), ! (! (false))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, float(vec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, 0.0, 1.0)))) + 0.0) > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))) && true), false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), false), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), false), true)), false))), true, true)))))), true, true, true)), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y)), false))), true, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), false))), true, true, _GLF_IDENTITY(true, ! (! (true)))))), false, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), vec2(mat2((injectionSwitch), 0.0, sqrt(1.0))))))).x > injectionSwitch.y)), false))), true, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))), false))), ! (! (! (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))), false))))))))), true, true, true))), false, true))), ! (! (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), false, true)))))), (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))), _GLF_IDENTITY(bool(bvec2(! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))), false)), bool(bvec4(bool(bvec2(! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))), false)), false, true, false))))) && true))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1], min((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1], (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]))), vec2(_GLF_FUZZED(-8.2), _GLF_FUZZED(-9.4)), bvec2(false, false))).x > injectionSwitch.y)), false))), true, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.2)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)))) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-354.754, 3.3)))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) * mat2(1.0), vec2(mat3((mat2(1.0) * (injectionSwitch)) * mat2(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 1.0))))).x > injectionSwitch.y)), false))), true, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), false, true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), false, true))), ! (! (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), false, true)))))), (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))))) && true)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), false, true))), ! (! (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), false, true)))))), (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), false, true))), ! (! (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), false, true)))))), (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))))) && true))))), true)))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), _GLF_IDENTITY(bool(bvec3((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), false, true)), false || (bool(bvec3((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), false, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), false, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), false, true))), ! (! (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), false, true)))))), (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), bool(bvec3(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), false))))))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), false))))))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), bool(bvec4((bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), false))))))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false))), true, true, true))), true, true, false)))) || false), false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))))) && true))))), false, false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), 0u | (_GLF_IDENTITY(0u, 0u | (0u)))), min(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u))) / 1u))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(bvec3(false, true, false))))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(bvec3(false, true, false))))))))))), false || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(bvec3(false, true, false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(bvec3(false, true, false)))))))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_IDENTITY(false, (false) || false))), bool(bool(bool(bvec3(false, true, false))))))))))))), ! (! (false)))), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + log(vec2(1.0, 1.0))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(82.57, 0.5)) : injectionSwitch)), injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0), _GLF_IDENTITY(0.0 + (injectionSwitch[1]), (0.0 + (injectionSwitch[_GLF_IDENTITY(1, min(1, 1))])) + 0.0)))).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))))) && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0), transpose(transpose(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(5.3), min(_GLF_FUZZED(5.3), _GLF_IDENTITY(_GLF_FUZZED(5.3), max(_GLF_IDENTITY(_GLF_FUZZED(5.3), clamp(_GLF_FUZZED(5.3), _GLF_FUZZED(5.3), _GLF_FUZZED(5.3))), _GLF_FUZZED(5.3))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(5.3), min(_GLF_FUZZED(5.3), _GLF_IDENTITY(_GLF_FUZZED(5.3), max(_GLF_IDENTITY(_GLF_FUZZED(5.3), clamp(_GLF_FUZZED(5.3), _GLF_FUZZED(5.3), _GLF_FUZZED(5.3))), _GLF_FUZZED(5.3))))), clamp(_GLF_IDENTITY(_GLF_FUZZED(5.3), min(_GLF_FUZZED(5.3), _GLF_IDENTITY(_GLF_FUZZED(5.3), max(_GLF_IDENTITY(_GLF_FUZZED(5.3), clamp(_GLF_FUZZED(5.3), _GLF_FUZZED(5.3), _GLF_FUZZED(5.3))), _GLF_FUZZED(5.3))))), _GLF_IDENTITY(_GLF_FUZZED(5.3), min(_GLF_FUZZED(5.3), _GLF_IDENTITY(_GLF_FUZZED(5.3), max(_GLF_IDENTITY(_GLF_FUZZED(5.3), clamp(_GLF_FUZZED(5.3), _GLF_FUZZED(5.3), _GLF_FUZZED(5.3))), _GLF_FUZZED(5.3))))), _GLF_IDENTITY(_GLF_FUZZED(5.3), min(_GLF_FUZZED(5.3), _GLF_IDENTITY(_GLF_FUZZED(5.3), max(_GLF_IDENTITY(_GLF_FUZZED(5.3), clamp(_GLF_FUZZED(5.3), _GLF_FUZZED(5.3), _GLF_FUZZED(5.3))), _GLF_FUZZED(5.3))))))), _GLF_IDENTITY(_GLF_FUZZED(5.3), min(_GLF_FUZZED(5.3), _GLF_IDENTITY(_GLF_FUZZED(5.3), max(_GLF_IDENTITY(_GLF_FUZZED(5.3), clamp(_GLF_FUZZED(5.3), _GLF_FUZZED(5.3), _GLF_FUZZED(5.3))), _GLF_FUZZED(5.3))))), _GLF_IDENTITY(_GLF_FUZZED(5.3), min(_GLF_FUZZED(5.3), _GLF_IDENTITY(_GLF_FUZZED(5.3), max(_GLF_IDENTITY(_GLF_FUZZED(5.3), clamp(_GLF_FUZZED(5.3), _GLF_FUZZED(5.3), _GLF_FUZZED(5.3))), _GLF_FUZZED(5.3))))))) : 0.0)), 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)))))).y))), false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0))).y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), abs(1.0), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-83.62)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))))) && ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0), transpose(transpose(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(5.3, clamp(5.3, _GLF_IDENTITY(5.3, (_GLF_IDENTITY(5.3, (false ? _GLF_FUZZED(_GLF_IDENTITY(-1563.7671, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(-1563.7671, (true ? -1563.7671 : _GLF_FUZZED(-42.71))) : _GLF_FUZZED(1646.1591)))) : 5.3))) / 1.0), 5.3))), min(_GLF_FUZZED(5.3), _GLF_IDENTITY(_GLF_FUZZED(5.3), max(_GLF_IDENTITY(_GLF_FUZZED(5.3), clamp(_GLF_FUZZED(5.3), _GLF_FUZZED(5.3), _GLF_FUZZED(5.3))), _GLF_FUZZED(5.3))))) : 0.0)), 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)))))).y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0))).y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), abs(1.0), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-83.62)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))))) && ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0), transpose(transpose(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(5.3, clamp(5.3, _GLF_IDENTITY(5.3, (_GLF_IDENTITY(5.3, (false ? _GLF_FUZZED(_GLF_IDENTITY(-1563.7671, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(-1563.7671, (true ? -1563.7671 : _GLF_FUZZED(-42.71))) : _GLF_FUZZED(1646.1591)))) : 5.3))) / 1.0), 5.3))), min(_GLF_FUZZED(5.3), _GLF_IDENTITY(_GLF_FUZZED(5.3), max(_GLF_IDENTITY(_GLF_FUZZED(5.3), clamp(_GLF_FUZZED(5.3), _GLF_FUZZED(5.3), _GLF_FUZZED(5.3))), _GLF_FUZZED(5.3))))) : 0.0)), 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)))))).y))))), bool(bvec2(! ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0))).y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), abs(1.0), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-83.62)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))))) && ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0), transpose(transpose(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(5.3, clamp(5.3, _GLF_IDENTITY(5.3, (_GLF_IDENTITY(5.3, (false ? _GLF_FUZZED(_GLF_IDENTITY(-1563.7671, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(-1563.7671, (true ? -1563.7671 : _GLF_FUZZED(-42.71))) : _GLF_FUZZED(1646.1591)))) : 5.3))) / 1.0), 5.3))), min(_GLF_FUZZED(5.3), _GLF_IDENTITY(_GLF_FUZZED(5.3), max(_GLF_IDENTITY(_GLF_FUZZED(5.3), clamp(_GLF_FUZZED(5.3), _GLF_FUZZED(5.3), _GLF_FUZZED(5.3))), _GLF_FUZZED(5.3))))) : 0.0)), 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)))))).y))))), true)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (39050u & 0u) | (subgroup_base)), (subgroup_base) ^ 0u)) | (subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u)), ((_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) ^ 0u, min(_GLF_IDENTITY((subgroup_base) ^ 0u, ~ (~ ((subgroup_base) ^ 0u))), (subgroup_base) ^ 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0))), injectionSwitch)).x))))))), max((_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1u))), (_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u))) << (0u | 0u)) | (_GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))))))) ^ 0u)), ((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u))) << (0u | 0u)) | (_GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))))))) ^ 0u))) / 1u)) >> 0u))) | (subgroup_base))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (39050u & 0u) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) << (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))), (subgroup_base) ^ 0u)) | (subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), min(~ (subgroup_base), _GLF_IDENTITY(~ (subgroup_base), max(~ (subgroup_base), _GLF_IDENTITY(~ (subgroup_base), 0u ^ (~ (subgroup_base))))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), max((_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), ((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u)) | (_GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))))))) ^ 0u))) >> 0u))) | (subgroup_base))) << 0u)) << 0u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1))) : _GLF_FUZZED(subgroup_local_id))))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (0 << _GLF_IDENTITY(int(3), int(3)))), ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (_GLF_IDENTITY(0, ~ (~ (0))) | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (_GLF_IDENTITY(1, ~ (~ (1)))), (0 | (_GLF_IDENTITY(1, ~ (~ (1))))) - 0)), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), 0 ^ ((_GLF_IDENTITY(1, ~ (~ (1))))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(0), int(0)))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) * 1), 0)) | (_GLF_IDENTITY(1, ~ (~ (1))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), ((_GLF_IDENTITY(1, ~ (~ (1))))) - (0 << _GLF_IDENTITY(int(1), int(1))))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (_GLF_IDENTITY(0 | 0, (true ? 0 | 0 : _GLF_FUZZED(-68664)))) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), ~ (~ (1))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), ~ (~ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))))))), clamp((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (0 ^ 0) ^ (1)), ~ (~ (1))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, 0 | (1)))), ~ (~ (1))))))))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), 0))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1)))))))))) / 1))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) | (1))))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 | 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (false ? _GLF_FUZZED(10206) : _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), (0 ^ 0) + (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))), 0 | (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))))), (0 | 0) ^ (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))))))))))))), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) / 1)))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) - 0)), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(4, 1))), (_GLF_IDENTITY(4, int(ivec2(4, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))))))) | (_GLF_IDENTITY(4, int(ivec2(4, 1)))))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec2(4, _GLF_IDENTITY(1, (1) | (1)))))), ((_GLF_IDENTITY(4, int(ivec2(4, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))))))))) | ((_GLF_IDENTITY(4, int(ivec2(4, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (1 ^ 1) ^ (_GLF_IDENTITY(1, (1) | (1)))))))))) / 1), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec2(4, _GLF_IDENTITY(1, (1) | (1)))))), ((_GLF_IDENTITY(4, int(ivec2(4, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))))))))) | ((_GLF_IDENTITY(4, int(ivec2(4, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (1 ^ 1) ^ (_GLF_IDENTITY(1, (1) | (1)))))))))) / 1), (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, int(ivec2(4, _GLF_IDENTITY(1, (1) | (1)))))), ((_GLF_IDENTITY(4, int(ivec2(4, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), max((1), (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))))))))))) | ((_GLF_IDENTITY(4, int(ivec2(4, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (1 ^ 1) ^ (_GLF_IDENTITY(1, (1) | (1)))))))))) / 1)) << 0))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2);
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y)) || (true)) && (bool(false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))), true, true, true)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! (_GLF_IDENTITY((true) && true, ((true) && true) || false))))) && (bool(false))))), bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(-5781.4890))))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(-7.7, 763.856, 61.78, -3344.2078)) : mat2(injectionSwitch.y, 1.0, 0.0, 0.0)))), (float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(-7.7, 763.856, 61.78, -3344.2078)) : mat2(injectionSwitch.y, 1.0, 0.0, 0.0))))) / 1.0))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))) || (_GLF_DEAD(false)))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))))) || (_GLF_DEAD(false))))))), true, false, false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), false, true), bvec3(bvec3(bvec3(false, false, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-2123.2657 - vec3(49.08, -15.27, -5.9).z)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.2)), bvec2(true, false))).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(1.0, sin(0.0), 0.0, 0.0, 1.0, 1.0, sin(0.0), abs(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(1.0))), 0.0))).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
}
