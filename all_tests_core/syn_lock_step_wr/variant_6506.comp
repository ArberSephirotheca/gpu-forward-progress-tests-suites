#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 uvec2 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_5 {
 float _f0;
 vec3 _f1;
 _GLF_struct_4 _f2;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 mat3 _f1;
 mat4x3 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 mat2 _f1;
 bvec2 _f2;
 uvec4 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 mat2x4 _f1;
 vec4 _f2;
 _GLF_struct_1 _f3;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 mat3 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 uint subgroup_size;
 _GLF_struct_5 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((3062.2364 - unpackUnorm2x16(subgroup_id))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(mat2x4(1.0), mat3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(9722.3975, (9722.3975) / 1.0))))), _GLF_struct_2(_GLF_struct_0(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec4(bvec3(bvec2(true), false), false)))))))), mat2(1.0), bvec2(true), uvec4(1u), mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, (true ? (1.0) + 0.0 : _GLF_FUZZED(147.016)))))), mat2x4(1.0), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(min(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)), (_GLF_IDENTITY(true ? (vec4(1.0)) : _GLF_FUZZED(sign(vec4(_GLF_IDENTITY(-54.78, max(_GLF_IDENTITY(-54.78, cos(0.0) * (-54.78)), -54.78)), 79.13, -5004.1055, 2.7))), min(true ? (vec4(1.0)) : _GLF_FUZZED(sign(vec4(_GLF_IDENTITY(_GLF_IDENTITY(-54.78, (-54.78) - 0.0), max(-54.78, -54.78)), 79.13, -5004.1055, 2.7))), true ? (vec4(1.0)) : _GLF_FUZZED(sign(vec4(_GLF_IDENTITY(-54.78, max(-54.78, -54.78)), 79.13, -5004.1055, 2.7))))))) + vec4(0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)), vec4(_GLF_IDENTITY(mat2((vec4(1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2((vec4(1.0))), (_GLF_IDENTITY(mat2((vec4(1.0))), transpose(transpose(mat2((vec4(1.0))))))) / mat2(1.0, 1.0, 1.0, 1.0)), transpose(transpose(mat2((vec4(1.0))))))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (vec4(1.0)) : _GLF_FUZZED(sign(vec4(_GLF_IDENTITY(-54.78, max(-54.78, -54.78)), 79.13, -5004.1055, 2.7))))) + vec4(0.0, 0.0, 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)), (_GLF_IDENTITY(true ? (vec4(1.0)) : _GLF_FUZZED(sign(vec4(_GLF_IDENTITY(-54.78, max(_GLF_IDENTITY(-54.78, cos(0.0) * (-54.78)), -54.78)), 79.13, -5004.1055, 2.7))), min(true ? (vec4(1.0)) : _GLF_FUZZED(sign(vec4(_GLF_IDENTITY(_GLF_IDENTITY(-54.78, (-54.78) - 0.0), max(-54.78, -54.78)), 79.13, -5004.1055, 2.7))), true ? (vec4(1.0)) : _GLF_FUZZED(sign(vec4(_GLF_IDENTITY(-54.78, max(-54.78, -54.78)), 79.13, -5004.1055, 2.7))))))) + vec4(0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)), vec4(_GLF_IDENTITY(mat2((vec4(1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2((vec4(1.0))), (_GLF_IDENTITY(mat2((vec4(1.0))), transpose(transpose(mat2((vec4(1.0))))))) / mat2(1.0, 1.0, 1.0, 1.0)), transpose(transpose(mat2((vec4(1.0))))))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (vec4(1.0)) : _GLF_FUZZED(sign(vec4(_GLF_IDENTITY(-54.78, max(-54.78, -54.78)), 79.13, -5004.1055, 2.7))))) + vec4(0.0, 0.0, 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))) * mat4(1.0), ((_GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)), (_GLF_IDENTITY(true ? (vec4(1.0)) : _GLF_FUZZED(sign(vec4(_GLF_IDENTITY(-54.78, max(_GLF_IDENTITY(-54.78, cos(0.0) * (-54.78)), -54.78)), 79.13, -5004.1055, 2.7))), min(true ? (vec4(1.0)) : _GLF_FUZZED(sign(vec4(_GLF_IDENTITY(_GLF_IDENTITY(-54.78, (-54.78) - 0.0), max(-54.78, -54.78)), 79.13, -5004.1055, 2.7))), true ? (vec4(1.0)) : _GLF_FUZZED(sign(vec4(_GLF_IDENTITY(-54.78, max(-54.78, -54.78)), 79.13, -5004.1055, 2.7))))))) + vec4(0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)), vec4(_GLF_IDENTITY(mat2((vec4(1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2((vec4(1.0))), (_GLF_IDENTITY(mat2((vec4(1.0))), transpose(transpose(mat2((vec4(1.0))))))) / mat2(1.0, 1.0, 1.0, 1.0)), transpose(transpose(mat2((vec4(1.0))))))) / mat2(1.0, 1.0, 1.0, 1.0)))), (true ? (vec4(1.0)) : _GLF_FUZZED(sign(vec4(_GLF_IDENTITY(-54.78, max(-54.78, -54.78)), 79.13, -5004.1055, 2.7))))) + vec4(0.0, 0.0, 0.0, 0.0)) - vec4(0.0, 0.0, 0.0, 0.0))) * mat4(1.0)) * vec4(1.0, 1.0, 1.0, 1.0)))), vec4(1.0)), (true ? min(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) + vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(mat4x2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) - length(0.0)), 0.0, 1.0, 1.0, exp(0.0), 0.0))))), vec4(1.0)) : _GLF_FUZZED((true ? vec4(-5.9, 0.9, 126.985, 71.98) : vec4(-6816.1871, -26.76, 8.1, -946.590)))))), _GLF_struct_1(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.9)), bool(false))) : _GLF_FUZZED(64.37)))))), mat3(1.0), mat4x3(1.0), _GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true))))), _GLF_struct_3(mat3x2(1.0)), gl_SubgroupSize, _GLF_struct_5(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(11.45)), float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), vec3(1.0), _GLF_struct_4(_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY((uvec2(0u, _GLF_IDENTITY(0u, (0u) | (0u))) | uvec2(0u, 0u)), clamp((uvec2(0u, _GLF_IDENTITY(0u, (0u) | (0u))) | uvec2(0u, 0u)), (uvec2(0u, _GLF_IDENTITY(0u, (0u) | (0u))) | uvec2(0u, 0u)), (uvec2(0u, _GLF_IDENTITY(0u, (0u) | (0u))) | uvec2(0u, 0u)))) + (uvec2(1u))), ivec4(1))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) << 0u), min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY((~ (gl_WorkGroupSize.x)), ((~ (gl_WorkGroupSize.x))) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))), 1u * ((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) : _GLF_FUZZED(80631u)))))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), (false ? _GLF_FUZZED(41342u) : _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), ((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))))) | 0u))) >> 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), max(~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x))))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY((~ (gl_WorkGroupSize.x)), ((~ (gl_WorkGroupSize.x))) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))), 1u * ((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) : _GLF_FUZZED(80631u)))))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), (false ? _GLF_FUZZED(41342u) : _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), ((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))))) | 0u))) >> 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), max(~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x))))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))))), uint(uvec2((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY((~ (gl_WorkGroupSize.x)), ((~ (gl_WorkGroupSize.x))) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))), 1u * ((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) : _GLF_FUZZED(80631u)))))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), (false ? _GLF_FUZZED(41342u) : _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), ((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))))) | 0u))) >> 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), max(~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x))))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))))), 1u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY((~ (gl_WorkGroupSize.x)), ((~ (gl_WorkGroupSize.x))) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))), 1u * ((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) : _GLF_FUZZED(80631u)))))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), (false ? _GLF_FUZZED(41342u) : _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), ((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))))) | 0u))) >> 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), max(~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x))))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))))), uint(uvec2((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY((~ (gl_WorkGroupSize.x)), ((~ (gl_WorkGroupSize.x))) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))), 1u * ((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) : _GLF_FUZZED(80631u)))))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), (false ? _GLF_FUZZED(41342u) : _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), ((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))))) | 0u))) >> 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), max(~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x))))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))))), 1u)))), 0u + (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY((~ (gl_WorkGroupSize.x)), ((~ (gl_WorkGroupSize.x))) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))), 1u * ((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) : _GLF_FUZZED(80631u)))))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), (false ? _GLF_FUZZED(41342u) : _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), ((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))))) | 0u))) >> 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), max(~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x))))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))))), uint(uvec2((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY((~ (gl_WorkGroupSize.x)), ((~ (gl_WorkGroupSize.x))) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))), 1u * ((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) : _GLF_FUZZED(80631u)))))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), (false ? _GLF_FUZZED(41342u) : _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), ((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))))) | 0u))) >> 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), max(~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x))))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))))), 1u))))))), min(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY((~ (gl_WorkGroupSize.x)), ((~ (gl_WorkGroupSize.x))) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))), 1u * ((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) : _GLF_FUZZED(80631u)))))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), (false ? _GLF_FUZZED(41342u) : _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), ((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))))) | 0u))) >> 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), max(~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x))))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))))), uint(uvec2((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY((~ (gl_WorkGroupSize.x)), ((~ (gl_WorkGroupSize.x))) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))), 1u * ((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) : _GLF_FUZZED(80631u)))))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), (false ? _GLF_FUZZED(41342u) : _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), ((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))))) | 0u))) >> 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), max(~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x))))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))))), 1u)))), 0u + (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY((~ (gl_WorkGroupSize.x)), ((~ (gl_WorkGroupSize.x))) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))), 1u * ((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) : _GLF_FUZZED(80631u)))))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), (false ? _GLF_FUZZED(41342u) : _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), ((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))))) | 0u))) >> 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), max(~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x))))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))))), uint(uvec2((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY((~ (gl_WorkGroupSize.x)), ((~ (gl_WorkGroupSize.x))) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))), 1u * ((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) : _GLF_FUZZED(80631u)))))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), (false ? _GLF_FUZZED(41342u) : _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), ((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))))) | 0u))) >> 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), max(~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x))))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))))), 1u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY((~ (gl_WorkGroupSize.x)), ((~ (gl_WorkGroupSize.x))) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))), 1u * ((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) : _GLF_FUZZED(80631u)))))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), (false ? _GLF_FUZZED(41342u) : _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), ((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))))) | 0u))) >> 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), max(~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x))))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))))), uint(uvec2((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY((~ (gl_WorkGroupSize.x)), ((~ (gl_WorkGroupSize.x))) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))), 1u * ((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) : _GLF_FUZZED(80631u)))))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), (false ? _GLF_FUZZED(41342u) : _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), ((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))))) | 0u))) >> 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), max(~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x))))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))))), 1u)))), 0u + (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY((~ (gl_WorkGroupSize.x)), ((~ (gl_WorkGroupSize.x))) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))), 1u * ((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) : _GLF_FUZZED(80631u)))))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), (false ? _GLF_FUZZED(41342u) : _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), ((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))))) | 0u))) >> 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), max(~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x))))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))))), uint(uvec2((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY((~ (gl_WorkGroupSize.x)), ((~ (gl_WorkGroupSize.x))) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))), 1u * ((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) : _GLF_FUZZED(80631u)))))), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), (false ? _GLF_FUZZED(41342u) : _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))), ((~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))))) | 0u))) >> 0u), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize.x)), max(~ (~ (gl_WorkGroupSize.x)), ~ (~ (gl_WorkGroupSize.x))))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))))), 1u))))))))))))))), clamp(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) ^ 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) ^ 0u), max(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) ^ 0u), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) ^ 0u)))))), ((_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) ^ 0u))) >> 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) ^ 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) ^ 0u), max(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) ^ 0u), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) ^ 0u)))))), ((_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) ^ 0u))) >> 0u), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) ^ 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) ^ 0u), max(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) ^ 0u), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) ^ 0u)))))), ((_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) ^ 0u))) >> 0u)) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) ^ 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) ^ 0u), max(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) ^ 0u), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) ^ 0u)))))), ((_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) ^ 0u))) >> 0u)))) / 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | 0u), ((gl_WorkGroupSize.x)) | _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) ^ 0u)), min((_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) ^ 0u)), (_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) ^ 0u))))), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x), ((gl_WorkGroupSize.x)) ^ 0u))))))))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize), _GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize))), (~ (~ (~ (gl_WorkGroupSize)))) | (_GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize))), (~ (~ (~ (gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize), _GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize))), _GLF_IDENTITY((~ (~ (~ (gl_WorkGroupSize)))), ((~ (~ (~ (gl_WorkGroupSize))))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (gl_WorkGroupSize)), (~ (~ (gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))), (~ (~ (~ (gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize), _GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize))), (~ (~ (~ (gl_WorkGroupSize)))) | (_GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize))), (~ (~ (~ (gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u)))))), ((_GLF_IDENTITY(~ (gl_WorkGroupSize), _GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize))), (~ (~ (~ (gl_WorkGroupSize)))) | (_GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize))), (~ (~ (~ (gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u))))))) >> uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize), _GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize))), (~ (~ (~ (gl_WorkGroupSize)))) | (_GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize))), (~ (~ (~ (gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u)))))), ((_GLF_IDENTITY(~ (gl_WorkGroupSize), _GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize))), (~ (~ (~ (gl_WorkGroupSize)))) | (_GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize))), (~ (~ (~ (gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u))))))) >> uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize), _GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize))), (~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (true ? ~ (gl_WorkGroupSize) : _GLF_FUZZED(uvec3(45939u, 68663u, 186461u))))))) | (_GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize))), (~ (~ (~ (gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u)))))), ((_GLF_IDENTITY(~ (gl_WorkGroupSize), _GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize))), (~ (~ (~ (gl_WorkGroupSize)))) | (_GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize))), (~ _GLF_IDENTITY((~ (~ (gl_WorkGroupSize))), (_GLF_IDENTITY((~ (~ (gl_WorkGroupSize))), ((~ (~ (gl_WorkGroupSize)))) - uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))))))) | ((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize), (true ? _GLF_IDENTITY((gl_WorkGroupSize), clamp((gl_WorkGroupSize), (gl_WorkGroupSize), (gl_WorkGroupSize))) : _GLF_FUZZED(uvec3(112385u, 122496u, 33169u)))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (~ (gl_WorkGroupSize))), (_GLF_IDENTITY((~ (~ (gl_WorkGroupSize))), max(_GLF_IDENTITY((~ (~ _GLF_IDENTITY((gl_WorkGroupSize), max((gl_WorkGroupSize), _GLF_IDENTITY((gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupSize))))))), ((~ (~ (gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u)), (~ (~ (gl_WorkGroupSize)))))) * uvec3(1u, 1u, 1u)), (~ (~ (~ (gl_WorkGroupSize)))) | (_GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize))), (~ (~ (~ (gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u)))))))), (_GLF_IDENTITY(~ (gl_WorkGroupSize), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize))), (~ (~ (~ (gl_WorkGroupSize)))) | (_GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize))), (~ (~ (~ (gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize))), (~ (~ (~ (gl_WorkGroupSize)))) | (_GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize))), (~ (~ (~ (gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize))), (~ (~ (~ (gl_WorkGroupSize)))) | (_GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize))), (~ (~ (~ (gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) | (~ (gl_WorkGroupSize))))), (~ (~ (~ (gl_WorkGroupSize)))) | (_GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize))), (~ (~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), max(_GLF_IDENTITY((~ (gl_WorkGroupSize)), (_GLF_IDENTITY((~ (gl_WorkGroupSize)), (true ? (~ (gl_WorkGroupSize)) : _GLF_FUZZED(uvec3(42115u, 120888u, 123672u))))) | ((~ (gl_WorkGroupSize)))), (~ (gl_WorkGroupSize)))))) ^ uvec3(0u, 0u, 0u)))), (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u)) * (_GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize))), (~ (~ (~ (gl_WorkGroupSize)))) | (_GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize))), (~ (~ (~ (gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u)))))))))))) : _GLF_FUZZED((bitfieldInsert(uvec3(169601u, 66201u, 187067u), uvec3(172091u, 50517u, 197564u), -13164, -96187) % uvec3(66791u, 158721u, 177999u)))))).x))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)).x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(90455u, 101101u, 186575u)))).x))), _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))), 1u, 0u), (false ? _GLF_FUZZED(uvec3(45596u, 2432u, 151749u)) : uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)).x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(90455u, 101101u, 186575u)))).x))), _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))), 1u, 0u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))), (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) : _GLF_FUZZED(subgroup_id)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))), _GLF_IDENTITY(_GLF_IDENTITY((true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) : _GLF_FUZZED(subgroup_id)), ((true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) : _GLF_FUZZED(subgroup_id))) | ((true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) : _GLF_FUZZED(subgroup_id)))), ((true ? (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), min(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) / 1u)))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | 0u)) << (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ 0u))), max(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (gl_WorkGroupSize.x))), min(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), min(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))), (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))) | (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), min(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) ^ 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), 1u, 0u, 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), 1u, 0u, 0u), min(uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), 1u, 0u, 0u), uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), 1u, 0u, 0u)))) | (uvec4(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), 1u, 0u, 0u)))))))))))))))), (_GLF_IDENTITY(true, (true) && true) ? (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) : _GLF_FUZZED(subgroup_id)))), _GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) + uvec3(0u, 0u, 0u)).x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x)), gl_WorkGroupSize.x))))))))), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) : _GLF_FUZZED(subgroup_id), 0u + (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) : _GLF_FUZZED(subgroup_id)))))), max(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (gl_WorkGroupSize)).x, ~ (~ (gl_WorkGroupSize.x)))), (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) : _GLF_FUZZED(subgroup_id)))), ~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))), (true ? (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) : _GLF_FUZZED(subgroup_id))))))))) | (0u | 0u)))), (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))), (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))))), _GLF_IDENTITY((true ? ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) : _GLF_FUZZED(subgroup_id))))))) : _GLF_FUZZED(subgroup_local_id)), ((true ? ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) | (gl_WorkGroupSize)).x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(subgroup_local_id, uvec2(156801u, 160768u))) : gl_WorkGroupSize)).x, 0u | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(subgroup_local_id, uvec2(156801u, 160768u))) : gl_WorkGroupSize)).x))))))) : _GLF_FUZZED(subgroup_local_id))) << 0u)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize.x)), ((~ (gl_WorkGroupSize.x))) ^ 0u)))), (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (gl_WorkGroupSize.x)), min((~ (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x)), _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u)).x))) | ((~ (gl_WorkGroupSize.x)))))), min(_GLF_IDENTITY((~ (gl_WorkGroupSize.x)), min((~ (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x)), _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))), ((~ (gl_WorkGroupSize.x))) | ((~ (gl_WorkGroupSize.x)))))), _GLF_IDENTITY(_GLF_IDENTITY((~ (gl_WorkGroupSize.x)), min((~ (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x)), _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))), ((~ (gl_WorkGroupSize.x))) | ((~ (gl_WorkGroupSize.x)))))), uint(uint(_GLF_IDENTITY((~ (gl_WorkGroupSize.x)), min((~ (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x)), _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))), ((~ (gl_WorkGroupSize.x))) | ((~ (gl_WorkGroupSize.x)))))))))))))), max(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), (clamp(workgroup_size, workgroup_size, workgroup_size)) ^ 0u)) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(56.88)), mix(float(_GLF_FUZZED(15.50)), float(_GLF_IDENTITY(float(_GLF_FUZZED(56.88)), min(float(_GLF_FUZZED(56.88)), float(_GLF_FUZZED(56.88))))), bool(true))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(56.88)), mix(float(_GLF_FUZZED(15.50)), float(_GLF_IDENTITY(float(_GLF_FUZZED(56.88)), min(float(_GLF_FUZZED(56.88)), float(_GLF_FUZZED(56.88))))), bool(true))), _GLF_IDENTITY(float(_GLF_FUZZED(56.88)), mix(float(_GLF_FUZZED(15.50)), float(_GLF_IDENTITY(float(_GLF_FUZZED(56.88)), min(float(_GLF_FUZZED(56.88)), float(_GLF_FUZZED(56.88))))), bool(true))), _GLF_IDENTITY(float(_GLF_FUZZED(56.88)), mix(float(_GLF_FUZZED(15.50)), float(_GLF_IDENTITY(float(_GLF_FUZZED(56.88)), min(float(_GLF_FUZZED(56.88)), float(_GLF_FUZZED(56.88))))), bool(true))))), bool(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), true))), ((_GLF_DEAD(false))) && true), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), false || (false || (_GLF_DEAD(false)))))), true, false, true))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))), true, false, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false)), true, false, true)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, bool(bvec3(true, true, false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_struct_replacement_6.subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (1)), 1)), clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (1)), 1)), (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (1)), 1))) | (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (1)), 1)))), subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (1)), 1)), subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (1)), 1))))) % _GLF_struct_replacement_6.subgroup_size, max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (1)), 1)), clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (1)), 1)), (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (1)), 1))) | (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (1)), 1)))), subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (1)), 1)), subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (1)), 1))))) % _GLF_struct_replacement_6.subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (1)), 1)), clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (1)), 1)), (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (1)), 1))) | (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (1)), 1)))), subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (1)), 1)), subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (1)), 1))))) % _GLF_struct_replacement_6.subgroup_size) + 0u), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (1)), 1)), clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (1)), 1)), (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (1)), 1))) | (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (1)), 1)))), subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (1)), 1)), subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (1)), 1))))) % _GLF_struct_replacement_6.subgroup_size)), ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, (_GLF_struct_replacement_6.subgroup_size) | 0u)) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY((((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, (_GLF_struct_replacement_6.subgroup_size) - (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ ((((subgroup_local_id + 1) % _GLF_struct_replacement_6.subgroup_size))))), clamp(_GLF_IDENTITY((((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, (_GLF_struct_replacement_6.subgroup_size) - (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ ((((subgroup_local_id + 1) % _GLF_struct_replacement_6.subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY((((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, (_GLF_struct_replacement_6.subgroup_size) - (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ ((((subgroup_local_id + 1) % _GLF_struct_replacement_6.subgroup_size))))), min(_GLF_IDENTITY(_GLF_IDENTITY((((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, (_GLF_struct_replacement_6.subgroup_size) - (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ ((((subgroup_local_id + 1) % _GLF_struct_replacement_6.subgroup_size))))), clamp(_GLF_IDENTITY((((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, (_GLF_struct_replacement_6.subgroup_size) - (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ ((((subgroup_local_id + 1) % _GLF_struct_replacement_6.subgroup_size))))), _GLF_IDENTITY((((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, (_GLF_struct_replacement_6.subgroup_size) - (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ ((((subgroup_local_id + 1) % _GLF_struct_replacement_6.subgroup_size))))), _GLF_IDENTITY((((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, (_GLF_struct_replacement_6.subgroup_size) - (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ ((((subgroup_local_id + 1) % _GLF_struct_replacement_6.subgroup_size))))))), _GLF_IDENTITY((((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, (_GLF_struct_replacement_6.subgroup_size) - (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ ((((subgroup_local_id + 1) % _GLF_struct_replacement_6.subgroup_size))))))), _GLF_IDENTITY((((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_size, (_GLF_struct_replacement_6.subgroup_size) - (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ ((((subgroup_local_id + 1) % _GLF_struct_replacement_6.subgroup_size))))))) | (((subgroup_local_id + 1) % _GLF_struct_replacement_6.subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))), true, true, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), next_virtual_gid))))], uint(1), _GLF_IDENTITY(4, ~ (~ (4))), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(21.71), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(433.877)), (vec2((injectionSwitch)[0], _GLF_FUZZED(433.877))) / vec2(1.0, 1.0)), bvec2(true, _GLF_IDENTITY(false, ! (! (false)))))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false)), bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false)), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false))) && true))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch)).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), bool(bvec2(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(abs(0.0), 1.0), vec2(1.0, 0.0)), dot(vec2(abs(0.0), 1.0), vec2(1.0, 0.0))), tan(0.0), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mat2(1.0) * (vec2(mat4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(abs(0.0), 1.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(1.6))), 1.0), vec2(1.0, 0.0))), tan(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))).y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(abs(0.0), 1.0), vec2(1.0, 0.0)), dot(vec2(abs(0.0), 1.0), vec2(1.0, 0.0))), tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), mat2(1.0) * (vec2(mat4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(abs(0.0), 1.0), vec2(1.0, 0.0)), dot(vec2(abs(0.0), 1.0), vec2(1.0, 0.0))), tan(0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).y), false || ((_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(abs(0.0), 1.0), vec2(1.0, 0.0)), dot(vec2(abs(0.0), 1.0), vec2(1.0, 0.0))), tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED((7.3 - -3.1)), (_GLF_FUZZED((7.3 - -3.1))) / 1.0)), bool(false))), 1.0, 1.0)), _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat2(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-65.04, 70.38, 7.6, -3.9)))))))))) * (vec2(mat4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(abs(0.0), 1.0), vec2(1.0, 0.0)), dot(vec2(abs(0.0), 1.0), vec2(1.0, 0.0))), tan(0.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), (false ? _GLF_FUZZED(-2.8) : _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))).y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(abs(0.0), 1.0), vec2(1.0, 0.0)), dot(vec2(abs(0.0), 1.0), vec2(1.0, 0.0))), tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, 1.0)), mat2(1.0) * (vec2(mat4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(abs(0.0), 1.0), vec2(1.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, min(1.0, 1.0))))), dot(vec2(abs(0.0), 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), mat2(1.0) * (vec2(1.0, 0.0))))), tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))).y)))) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, ! _GLF_IDENTITY((! ((_GLF_IDENTITY(false, (false) && true)) && true)), false || ((! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))))))) && true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), (false) && true)) && true, ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)) && true)), false || ((! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))))))) && true))))))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec4(false, false, true, false))) ? _GLF_FUZZED(_GLF_IDENTITY(-1.5, min(-1.5, -1.5))) : injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), clamp(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), clamp(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, (4) / 1))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, tan(0.0), 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat2x3(injectionSwitch, 0.0, 1.0, tan(0.0), 1.0))))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
