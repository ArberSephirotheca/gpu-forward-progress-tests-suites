#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))))))), false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || false), ! (! ((false))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY((! (_GLF_IDENTITY((false), ! (! ((false)))))), false || ((! (_GLF_IDENTITY((false), ! (! ((false)))))))) || false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(_GLF_IDENTITY(17.64, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(17.64, 0.0, 1.0), (vec3(17.64, 0.0, 1.0)) + vec3(0.0, 0.0, 0.0))), (true ? float(_GLF_IDENTITY(vec3(17.64, 0.0, 1.0), (vec3(17.64, 0.0, 1.0)) + vec3(0.0, 0.0, 0.0))) : _GLF_FUZZED(10.46)))), _GLF_IDENTITY(-466.477, 0.0 + (-466.477)), 9.7, 2009.7353).z), (injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))]), vec2((injectionSwitch)[0], _GLF_FUZZED((- 5.2))), bvec2(true, false))), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, max(0, 0)))))) | 0)], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(_GLF_IDENTITY(17.64, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(17.64, 0.0, 1.0), mix(vec3((vec3(17.64, 0.0, 1.0))[0], _GLF_FUZZED((+ -10.15)), _GLF_IDENTITY((vec3(17.64, 0.0, 1.0))[2], mix(float(_GLF_FUZZED(0.9)), float((vec3(17.64, 0.0, 1.0))[2]), bool(true)))), vec3(_GLF_FUZZED(554.555), (vec3(17.64, 0.0, 1.0))[1], _GLF_FUZZED(4.5)), bvec3(false, true, false))), (vec3(17.64, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)) + vec3(0.0, 0.0, 0.0))), (true ? float(_GLF_IDENTITY(vec3(17.64, 0.0, 1.0), (vec3(17.64, 0.0, 1.0)) + vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.4))), 0.0, 0.0))) : _GLF_FUZZED(10.46)))), _GLF_IDENTITY(-466.477, 0.0 + (-466.477)), 9.7, 2009.7353).z), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- 5.2))), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.3, -2.7)))), injectionSwitch)).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) && true)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, true)))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, true)))))), true)), false)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))))))) + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    continue;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       break;
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
      continue;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(-4852.1247), _GLF_FUZZED(1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) ? _GLF_FUZZED(6.9) : _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)], ((injectionSwitch)[1]) - _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-77.78)), bool(false))))), injectionSwitch.x))))), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, true))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec3(bvec2(bvec2(bvec2(true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true))))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4852.1247), _GLF_FUZZED(1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-4852.1247), _GLF_FUZZED(1.0)), _GLF_IDENTITY((vec2(_GLF_FUZZED(-4852.1247), _GLF_FUZZED(1.0))) * vec2(1.0, 1.0), (true ? (vec2(_GLF_FUZZED(-4852.1247), _GLF_FUZZED(1.0))) * vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-2.0, -18.39)))), (injectionSwitch)))[1]), (false ? _GLF_FUZZED(vec2(-1277.2730, -1.1)) : _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-2.0, -18.39)))), (injectionSwitch)))[1]), (false ? _GLF_FUZZED(injectionSwitch) : vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-2.0, -18.39)))), (injectionSwitch)))[1]))))), bvec2(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (_GLF_IDENTITY(true, (true) || false))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) / 1.0))))) * abs(vec2(1.0, 1.0))), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-4852.1247), clamp(_GLF_FUZZED(-4852.1247), _GLF_FUZZED(-4852.1247), _GLF_IDENTITY(_GLF_FUZZED(-4852.1247), (_GLF_FUZZED(-4852.1247)) - 0.0))), _GLF_IDENTITY(_GLF_FUZZED(1.0), 0.0 + (_GLF_FUZZED(1.0)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4852.1247), _GLF_IDENTITY(_GLF_FUZZED(1.0), min(_GLF_FUZZED(1.0), _GLF_IDENTITY(_GLF_FUZZED(1.0), (_GLF_IDENTITY(_GLF_FUZZED(1.0), (false ? _GLF_FUZZED(sqrt(4.5)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1.0), min(_GLF_FUZZED(1.0), _GLF_FUZZED(1.0))), clamp(_GLF_IDENTITY(_GLF_FUZZED(1.0), min(_GLF_FUZZED(1.0), _GLF_IDENTITY(_GLF_FUZZED(1.0), _GLF_IDENTITY((_GLF_FUZZED(1.0)), mix(float(_GLF_IDENTITY((_GLF_FUZZED(1.0)), 1.0 * ((_GLF_FUZZED(1.0))))), float(_GLF_FUZZED(-6310.3552)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) + 0.0))), _GLF_IDENTITY(_GLF_FUZZED(1.0), min(_GLF_FUZZED(1.0), _GLF_FUZZED(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1.0), min(_GLF_FUZZED(1.0), _GLF_FUZZED(1.0))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_FUZZED(1.0), min(_GLF_FUZZED(1.0), _GLF_FUZZED(1.0))), 0.0, 0.0), (vec3(_GLF_IDENTITY(_GLF_FUZZED(1.0), min(_GLF_FUZZED(1.0), _GLF_FUZZED(1.0))), 0.0, 0.0)) - vec3(0.0, 0.0, 0.0))))))))) - _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (true ? 0.0 : _GLF_FUZZED(-7.4))), 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec3(1.0, 1.0, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec3(-4551.9906, 9031.2999, -97.95), min(vec3(-4551.9906, 9031.2999, -97.95), vec3(-4551.9906, 9031.2999, -97.95)))), _GLF_IDENTITY(min(_GLF_FUZZED(_GLF_IDENTITY(vec3(-4551.9906, 9031.2999, -97.95), min(vec3(-4551.9906, 9031.2999, -97.95), vec3(-4551.9906, 9031.2999, -97.95)))), _GLF_FUZZED(_GLF_IDENTITY(vec3(-4551.9906, 9031.2999, -97.95), min(vec3(-4551.9906, 9031.2999, -97.95), vec3(-4551.9906, 9031.2999, -97.95))))), (min(_GLF_FUZZED(_GLF_IDENTITY(vec3(-4551.9906, 9031.2999, -97.95), min(vec3(-4551.9906, 9031.2999, -97.95), vec3(-4551.9906, 9031.2999, -97.95)))), _GLF_FUZZED(_GLF_IDENTITY(vec3(-4551.9906, 9031.2999, -97.95), min(vec3(-4551.9906, 9031.2999, -97.95), vec3(-4551.9906, 9031.2999, -97.95)))))) - vec3(0.0, 0.0, 0.0)))))), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8205.6743)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.9) : 0.0))))))))), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch))), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch)))[0], (injectionSwitch)[1]), bvec2(true, true))))))).y))))
      {
       if(_GLF_DEAD(false))
        break;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))).x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) * round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0)))))) < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-4.1, clamp(-4.1, _GLF_IDENTITY(-4.1, (-4.1) - 0.0), -4.1)), 3.9), clamp(vec2(-4.1, 3.9), vec2(-4.1, 3.9), vec2(-4.1, 3.9)))))).y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(subgroup_base, subgroup_base)) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec3(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u) : _GLF_FUZZED(uvec3(61943u, 155528u, 4564u)))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec4(bool(bvec3(false, true, true)), false, true, false))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, cos(determinant(mat4(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), sqrt(0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(117.579)), bool(false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), (bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false))) && true))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))), true && ((_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false))))))))))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), (bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false))) && true)))), ! (! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), false)), (bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false))) && true))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), (bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), bool(bvec3((! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false))) && true)))), ! (! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))))))), (bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false))) && true)))))))) || false)))) || false))), bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), (bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false))) && true))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), (bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false))) && true)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), (bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), true, false))))))), false || (_GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), true && ((false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), (bool(bvec4(_GLF_IDENTITY((false), true && ((false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) && true))), bool(bvec3((! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false))) && true)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), ! (! (_GLF_IDENTITY(bool(! (false)), bool(bvec2(bool(! (false)), true))))))) || false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false)))))) || false))) && true, ((bool(_GLF_IDENTITY(bool(! (false)), (_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false)))))) || false))) && true) || false))))), false)), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))))))), false || (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3((! (false)), false, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y)))))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))))))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y)))))))))))) || false)) || false)))))))) && true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (false)), false, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(false, bool(bvec3(false, false, false))) || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).x < injectionSwitch.y)))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y)))))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))))))))))) && true)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3((! (false)), false, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))), true, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))), true, true))))))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), true && (! (! ((injectionSwitch.x < injectionSwitch.y)))))) || false)))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(vec3(-3512.4253, 4.9, 0.7))) : injectionSwitch.y))))))))), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))))))))))) && true)))), true)), true)))))), false || (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))))))), false || (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))))))), false || (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false), true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) / 1.0), injectionSwitch.y))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), false || ((! (false)))), bool(bvec3((! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), (! (! ((injectionSwitch.x < injectionSwitch.y)))) && true)) || false))))))))), false || (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false), true)))))))))))))) && true), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), bool(bvec4(bool(_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), false, false, false))))), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4529.8571)), float(injectionSwitch.y), bool(true)))))))))))))), false || (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bool(false))))), bool(bvec3((! (false)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))))))), false || (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))))))), false || (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3((! _GLF_IDENTITY((false), ! (! ((false))))), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))))))), false || (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false), true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(! ((injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))))))), false || (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))))))), false || (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false), true)))))))))))))) && true), true, false, true)))))), _GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), (bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(_GLF_IDENTITY(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), ! (! (bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))))), false || (_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bvec4((false), false, false, true)))), bool(bvec3((! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false))) && true)))))), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (! (! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), (bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))))))))))), false || (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false))) && true)))))))))))) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_IF_FALSE(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / cos(vec2(0.0, 0.0))) / vec2(1.0, 1.0)).y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5697.0104)))))))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)), _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, int(ivec3((1) >> 0, 0, 0))))), _GLF_IDENTITY(max(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> 0)), min((_GLF_IDENTITY(1, (1) >> 0)), (_GLF_IDENTITY(1, (1) >> 0)))), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> 0)), max((_GLF_IDENTITY(1, (1) >> 0)), (_GLF_IDENTITY(1, (1) >> 0))))), 0 ^ (max(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> 0)), min((_GLF_IDENTITY(1, (1) >> 0)), (_GLF_IDENTITY(1, (1) >> 0)))), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> 0)), max((_GLF_IDENTITY(1, (1) >> 0)), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, min((1) >> 0, _GLF_IDENTITY((1) >> 0, ((1) >> 0) | (_GLF_IDENTITY((1) >> 0, ((1) >> 0) - 0))))))))))))) ^ 0)), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) / 1))), _GLF_IDENTITY(64, min(64, 64)), 4);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-63.76)), float(injectionSwitch.y), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-63.76)), float(injectionSwitch.y), bool(true)), (false ? _GLF_FUZZED(-1.2) : mix(float(_GLF_FUZZED(-63.76)), float(injectionSwitch.y), bool(true)))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-63.76), min(_GLF_IDENTITY(_GLF_FUZZED(-63.76), (_GLF_FUZZED(-63.76)) - 0.0), _GLF_FUZZED(-63.76)))), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-63.76)), float(injectionSwitch.y), bool(true)), min(mix(float(_GLF_FUZZED(-63.76)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-63.76)), float(injectionSwitch.y), bool(true))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(979.567), _GLF_IDENTITY(_GLF_FUZZED(859.606), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(859.606), mix(float(_GLF_FUZZED(22.16)), float(_GLF_FUZZED(859.606)), bool(true)))))), bvec2(false, false))))).y)), false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-5.8)), clamp(float(_GLF_FUZZED(-5.8)), _GLF_IDENTITY(float(_GLF_FUZZED(-5.8)), float(_GLF_IDENTITY(mat2x3(float(_GLF_FUZZED(-5.8)), 1.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat2x3(float(_GLF_FUZZED(-5.8)), 1.0, 0.0, 1.0, 1.0, 1.0)))))), float(_GLF_FUZZED(-5.8)))), bool(false)))), (false ? _GLF_FUZZED(-9.6) : (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.8)), bool(false)))))) - _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(length(vec3(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(length(vec3(0.0, 0.0, 0.0)), 0.0)), float(mat4x2(dot(vec2(1.0, 1.0), vec2(length(vec3(0.0, 0.0, 0.0)), 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.8)), bool(false)), clamp(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.8)), bool(false)), (true ? mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.8)), bool(false)) : _GLF_FUZZED(1.4))), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.8)), bool(false)), max(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.8)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.8)), bool(false)))), _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.8)), bool(false)), min(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.8)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.8)), bool(false)))))))) - _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(length(vec3(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(length(vec3(0.0, 0.0, 0.0)), 0.0)), float(mat4x2(dot(vec2(1.0, 1.0), vec2(length(vec3(0.0, 0.0, 0.0)), 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupBarrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
}
