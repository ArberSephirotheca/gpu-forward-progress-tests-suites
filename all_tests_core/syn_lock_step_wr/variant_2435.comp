#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, round(length(normalize(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))) * 1.0)))), 1.0, 1.0, 1.0), max(vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (min(1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1.2)), bool(false))), 1.0))))) * 1.0)))), 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), _GLF_IDENTITY((min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), min((min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), (min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))) * 1.0)))), 1.0, 1.0, 1.0)))))), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3093.0854)), bool(false)))) / 1.0), 1.0)), 0.0, exp(0.0)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, round(length(normalize(_GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.6)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), min(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1.2))))))))))), 0.0, 1.0, 0.0, exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3657.2267)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), _GLF_IDENTITY(bool(true), (bool(true)) && true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((-310.928))), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), 1.0, 1.0)))), 0.0, 1.0, 0.0, exp(0.0))))) * 1.0)), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(7343.6586, float(_GLF_IDENTITY(mat4x2(7343.6586, cos(0.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 1.0), (true ? mat4x2(7343.6586, cos(0.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4x2(-37.40, 5.4, -7.2, -598.620, 3953.8253, 1972.3826, 7774.7432, 566.140))))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(7343.6586), (_GLF_FUZZED(7343.6586)) + 0.0) : _GLF_FUZZED((true ? -8575.7231 : -7.4)), clamp(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(7343.6586), (_GLF_FUZZED(7343.6586)) + 0.0) : _GLF_FUZZED((true ? -8575.7231 : -7.4)), clamp(true ? _GLF_IDENTITY(_GLF_FUZZED(7343.6586), (_GLF_FUZZED(7343.6586)) + 0.0) : _GLF_FUZZED((true ? -8575.7231 : -7.4)), true ? _GLF_IDENTITY(_GLF_FUZZED(7343.6586), (_GLF_FUZZED(7343.6586)) + 0.0) : _GLF_FUZZED((true ? -8575.7231 : -7.4)), true ? _GLF_IDENTITY(_GLF_FUZZED(7343.6586), (_GLF_FUZZED(7343.6586)) + 0.0) : _GLF_FUZZED((true ? -8575.7231 : -7.4)))), true ? _GLF_IDENTITY(_GLF_FUZZED(7343.6586), (_GLF_FUZZED(7343.6586)) + 0.0) : _GLF_IDENTITY(_GLF_FUZZED((true ? -8575.7231 : -7.4)), (_GLF_IDENTITY(_GLF_FUZZED((true ? -8575.7231 : -7.4)), (true ? _GLF_FUZZED((true ? -8575.7231 : -7.4)) : _GLF_FUZZED(1.7)))) + 0.0), _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(7343.6586), (_GLF_FUZZED(7343.6586)) + 0.0) : _GLF_FUZZED((true ? -8575.7231 : -7.4)), (true ? true ? _GLF_IDENTITY(_GLF_FUZZED(7343.6586), (_GLF_FUZZED(7343.6586)) + 0.0) : _GLF_FUZZED((true ? -8575.7231 : -7.4)) : _GLF_FUZZED(-77.82)))))))), bool(false))) > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, round(length(_GLF_IDENTITY(_GLF_IDENTITY(normalize(vec4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), (_GLF_IDENTITY(normalize(vec4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), min(normalize(vec4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), normalize(vec4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))) - vec4(0.0, 0.0, 0.0, 0.0)), mix(vec4((normalize(vec4(1.0, 1.0, 1.0, 1.0)))[0], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[1], _GLF_FUZZED((-394.988 / -8.4)), _GLF_FUZZED(8.8)), vec4(_GLF_FUZZED((- -5.2)), _GLF_FUZZED((-335.781 / _GLF_IDENTITY(_GLF_IDENTITY(4.2, mix(float(_GLF_FUZZED(489.776)), float(_GLF_IDENTITY(4.2, min(4.2, 4.2))), bool(true))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(4.2, mix(float(_GLF_FUZZED(489.776)), float(_GLF_IDENTITY(4.2, min(4.2, 4.2))), bool(true))), 0.0, log(1.0), sqrt(0.0), sin(abs(0.0)), 0.0, 0.0, 1.0), mat4x2(mat4(mat4x2(_GLF_IDENTITY(4.2, mix(float(_GLF_FUZZED(489.776)), float(_GLF_IDENTITY(4.2, min(4.2, 4.2))), bool(true))), 0.0, log(1.0), sqrt(0.0), sin(abs(0.0)), 0.0, 0.0, 1.0)))))))), (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[2], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[3]), bvec4(false, false, true, _GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true))) && true)))))), _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 1.0))), 1.0, 0.0, exp(0.0)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, round(length(_GLF_IDENTITY(_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) - log(cos(0.0))), 1.0, 1.0, 1.0), vec4(mat4(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((3.1 + -87.23))), bool(false)))), 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY((normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), vec4(mat4(vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(true))), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true)))), 0.0, 1.0, 0.0, 0.0))))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), clamp((normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), vec4(mat4(vec4(1.0, 1.0, 1.0, 1.0), 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, exp(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), float(_GLF_FUZZED(-8.6)), bool(false)))), 0.0, 1.0, 0.0, 0.0))))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), (normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), vec4(mat4(vec4(1.0, 1.0, 1.0, 1.0), 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0))))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), (normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), vec4(mat4(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0), 1.0, 1.0)))), 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0))))) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(mix(vec4(_GLF_FUZZED((6.5 / -0.5)), _GLF_FUZZED(0.0), _GLF_FUZZED((+ -2488.6712)), (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[3]), vec4((normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))[0], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-3464)))) / 1)) >> 0)], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[2], _GLF_FUZZED(_GLF_IDENTITY(-227.656, mix(float(_GLF_FUZZED(float(-49150))), float(-227.656), bool(true))))), bvec4(true, true, true, false)), (true ? mix(vec4(_GLF_FUZZED((6.5 / -0.5)), _GLF_FUZZED(0.0), _GLF_FUZZED((+ -2488.6712)), (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[3]), vec4((normalize(vec4(1.0, 1.0, 1.0, 1.0)))[0], (normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)))[_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) / 1)))], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[2], _GLF_FUZZED(-227.656)), bvec4(true, true, true, false)) : _GLF_FUZZED(vec4(-42.58, 211.899, 7.3, 9.3))))))), 0.0, 1.0, 0.0, exp(0.0)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, sqrt(1.0), 0.0, 0.0), (vec4(0.0, sqrt(1.0), 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(0.0, 1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, sqrt(1.0), 0.0, 0.0), clamp(vec4(0.0, sqrt(1.0), 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, sqrt(1.0), 0.0, 0.0), mix(vec4(_GLF_FUZZED(-84.44), _GLF_FUZZED(-6.0), (vec4(0.0, sqrt(1.0), 0.0, 0.0))[2], (vec4(0.0, sqrt(1.0), 0.0, 0.0))[3]), vec4((vec4(0.0, sqrt(1.0), 0.0, 0.0))[0], (vec4(0.0, sqrt(1.0), 0.0, 0.0))[1], _GLF_FUZZED(2.3), _GLF_FUZZED(33.67)), bvec4(true, true, false, false))), vec4(0.0, sqrt(1.0), 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))), 1.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(exp(0.0), min(_GLF_IDENTITY(exp(0.0), mix(float(_GLF_IDENTITY(exp(0.0), (exp(0.0)) + 0.0)), float(_GLF_FUZZED(float(true))), bool(false))), exp(0.0))))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-6.3)), float((_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.9) : 0.0)), 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), 0.0))), 1.0)))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, _GLF_IDENTITY(exp(0.0), min(exp(0.0), exp(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-99.82)), vec2(_GLF_FUZZED(5452.5903), (injectionSwitch)[1]), bvec2(false, true))).y)))), mix(float(_GLF_FUZZED((false ? 779.142 : -6038.3254))), float(mix(float(_GLF_FUZZED(-6.3)), float((_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.9) : 0.0)), 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), 0.0))), 1.0)))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, _GLF_IDENTITY(exp(0.0), min(exp(0.0), exp(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-99.82)), vec2(_GLF_FUZZED(5452.5903), (injectionSwitch)[1]), bvec2(false, true))).y))))), bool(true)))) * 1.0)), float(_GLF_FUZZED(7343.6586)), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) && true))))) > injectionSwitch.y) && true, true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, round(length(_GLF_IDENTITY(_GLF_IDENTITY(normalize(vec4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), (_GLF_IDENTITY(normalize(vec4(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), _GLF_IDENTITY(max(1.0, 1.0), tan(0.0) + (max(1.0, 1.0)))))), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), min(normalize(vec4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), normalize(vec4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + 0.0), min(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(-9.6)), bool(false))), 1.0))))))) - vec4(0.0, 0.0, 0.0, 0.0)), mix(vec4((normalize(vec4(1.0, 1.0, 1.0, 1.0)))[0], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[1], _GLF_FUZZED((-394.988 / -8.4)), _GLF_FUZZED(_GLF_IDENTITY(8.8, (8.8) / 1.0))), vec4(_GLF_FUZZED((- -5.2)), _GLF_FUZZED((-335.781 / _GLF_IDENTITY(_GLF_IDENTITY(4.2, mix(float(_GLF_FUZZED(489.776)), float(_GLF_IDENTITY(4.2, min(4.2, 4.2))), bool(true))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(4.2, mix(float(_GLF_FUZZED(489.776)), float(_GLF_IDENTITY(4.2, min(4.2, 4.2))), bool(true))), 0.0, log(1.0), sqrt(0.0), sin(abs(0.0)), 0.0, 0.0, 1.0), mat4x2(mat4(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(4.2, mix(float(_GLF_FUZZED(489.776)), float(_GLF_IDENTITY(4.2, min(4.2, 4.2))), bool(true))), mix(float(_GLF_FUZZED(-34.72)), float(_GLF_IDENTITY(4.2, mix(float(_GLF_FUZZED(489.776)), float(_GLF_IDENTITY(4.2, min(4.2, 4.2))), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, log(1.0), sqrt(0.0), sin(abs(0.0)), 0.0, 0.0, 1.0)))))))), (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[2], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[3]), bvec4(false, false, true, _GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true))) && true)))))), _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 1.0))), 1.0, 0.0, exp(0.0)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, round(length(_GLF_IDENTITY(_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - log(cos(0.0))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(1.0, 0.0, 0.0, 0.0))))), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(distance(6.2, 462.833)))), 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))))), vec4(mat4(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, sin(0.0), 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((3.1 + -87.23))), bool(false)))), 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY((normalize(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(971.271)), float(1.0), bool(true))), 1.0, 1.0, 1.0), vec4(mat4(vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(true))), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true)))), 0.0, 1.0, 0.0, 0.0))))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)), clamp((normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), vec4(mat4(vec4(1.0, 1.0, 1.0, 1.0), 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, exp(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), float(_GLF_FUZZED(-8.6)), bool(false)))), 0.0, 1.0, 0.0, 0.0))))) * mat4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(745.907)) : injectionSwitch.y)))), (normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), vec4(mat4(vec4(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0), 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0))))) * mat4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), (normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), vec4(mat4(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0), 1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), sqrt(0.0), 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0))))) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), (mat4(_GLF_ONE(1.0, injectionSwitch.y))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(mix(vec4(_GLF_FUZZED((6.5 / -0.5)), _GLF_FUZZED(0.0), _GLF_IDENTITY(_GLF_FUZZED((+ -2488.6712)), (_GLF_FUZZED((+ -2488.6712))) / 1.0), (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[3]), vec4((normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))[0], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-3464)))) / 1)) >> 0)], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[2], _GLF_FUZZED(_GLF_IDENTITY(-227.656, mix(float(_GLF_FUZZED(float(-49150))), float(-227.656), bool(true))))), bvec4(true, true, true, false)), (true ? mix(vec4(_GLF_FUZZED((6.5 / -0.5)), _GLF_FUZZED(0.0), _GLF_FUZZED((+ -2488.6712)), (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[3]), vec4((normalize(vec4(1.0, 1.0, 1.0, 1.0)))[_GLF_IDENTITY(0, (0) << 0)], (normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)))[_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) / 1)))], (normalize(vec4(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(3458.1064)), bool(false))), 1.0, 1.0)))[2], _GLF_FUZZED(-227.656)), bvec4(true, true, true, false)) : _GLF_FUZZED(vec4(-42.58, 211.899, 7.3, 9.3))))))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.8)), bool(false))), 1.0, 0.0, exp(0.0)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), float(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, sqrt(1.0), 0.0, 0.0), (vec4(0.0, sqrt(1.0), 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(0.0, 1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, sqrt(1.0), 0.0, 0.0), clamp(vec4(0.0, sqrt(1.0), 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, sqrt(1.0), 0.0, 0.0), mix(vec4(_GLF_IDENTITY(_GLF_FUZZED(-84.44), (_GLF_FUZZED(-84.44)) * determinant(mat2(1.0, 0.0, 0.0, 1.0))), _GLF_FUZZED(-6.0), (vec4(0.0, sqrt(1.0), 0.0, 0.0))[2], (vec4(0.0, sqrt(1.0), 0.0, 0.0))[3]), vec4((vec4(0.0, sqrt(1.0), 0.0, 0.0))[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), max(~ (0), ~ (0)))))], (vec4(0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))))[1], _GLF_FUZZED(2.3), _GLF_FUZZED(33.67)), bvec4(true, true, false, false))), vec4(0.0, sqrt(1.0), 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0))), 0.0))), 1.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(exp(0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), mix(float(_GLF_IDENTITY(exp(0.0), (exp(0.0)) + 0.0)), float(_GLF_FUZZED(float(true))), bool(false))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), mix(float(_GLF_IDENTITY(exp(0.0), (exp(0.0)) + 0.0)), float(_GLF_FUZZED(float(true))), bool(false))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(exp(0.0), mix(float(_GLF_IDENTITY(exp(0.0), (exp(0.0)) + 0.0)), float(_GLF_FUZZED(float(true))), bool(false))), 0.0), min(vec2(_GLF_IDENTITY(exp(0.0), mix(float(_GLF_IDENTITY(exp(0.0), (exp(0.0)) + 0.0)), float(_GLF_FUZZED(float(true))), bool(false))), 0.0), vec2(_GLF_IDENTITY(exp(0.0), mix(float(_GLF_IDENTITY(exp(0.0), (exp(0.0)) + 0.0)), float(_GLF_FUZZED(float(true))), bool(false))), 0.0)))), mix(float(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(exp(0.0), mix(float(_GLF_IDENTITY(exp(0.0), (exp(0.0)) + 0.0)), float(_GLF_FUZZED(float(true))), bool(false))), 0.0), min(vec2(_GLF_IDENTITY(exp(0.0), mix(float(_GLF_IDENTITY(exp(0.0), (exp(0.0)) + 0.0)), float(_GLF_FUZZED(float(true))), bool(false))), 0.0), vec2(_GLF_IDENTITY(exp(0.0), mix(float(_GLF_IDENTITY(exp(0.0), (exp(0.0)) + 0.0)), float(_GLF_FUZZED(float(true))), bool(false))), 0.0))))), float(_GLF_FUZZED(39.22)), bool(false))))), float(_GLF_FUZZED(9589.2406)), bool(false))), exp(0.0))))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-6.3)), float((_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.9) : 0.0)), 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), clamp(_GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.9) : 0.0)), 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.9) : 0.0)), 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), min(_GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.9) : 0.0)), 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.9) : 0.0)), 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), (false ? _GLF_FUZZED(37.53) : _GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.9) : 0.0)), 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.9) : 0.0)), 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), min(_GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.9) : 0.0)), 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.9) : 0.0)), 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), float(vec3(_GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.9) : 0.0)), 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), 0.0, 1.0))))))), 0.0))), 1.0)))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, _GLF_IDENTITY(exp(0.0), min(exp(0.0), exp(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-99.82)), vec2(_GLF_FUZZED(5452.5903), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))).y)))), mix(float(_GLF_FUZZED((false ? _GLF_IDENTITY(779.142, (779.142) * 1.0) : -6038.3254))), float(mix(float(_GLF_FUZZED(-6.3)), float((_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.9) : 0.0)), 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(0.0, _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, sqrt(1.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), 0.0))), 1.0)))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, _GLF_IDENTITY(exp(0.0), min(exp(0.0), _GLF_IDENTITY(exp(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))), min(exp(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))), exp(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-99.82)), vec2(_GLF_FUZZED(5452.5903), (injectionSwitch)[1]), bvec2(false, true))).y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-99.82)), vec2(_GLF_FUZZED(5452.5903), (injectionSwitch)[1]), bvec2(false, true))).y) / 1.0)))))), bool(true)))) * 1.0)), float(_GLF_FUZZED(7343.6586)), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) && true))))) > injectionSwitch.y) && true)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(_GLF_IDENTITY(-4.5, (-4.5) / _GLF_ONE(1.0, injectionSwitch.y)))), bool(false)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(false, true, _GLF_IDENTITY(true, ! (! (true))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-4.6), float(mat2x4(_GLF_FUZZED(-4.6), 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8.7))), _GLF_IDENTITY(dot(vec3(sqrt(0.0), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(mat3(vec3(0.0, 1.0, 0.0), 1.0, 1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(65.18)), bool(false)))), _GLF_IDENTITY(mat3(mat3(_GLF_IDENTITY(mat3(vec3(0.0, 1.0, 0.0), 1.0, 1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(65.18)), bool(false)))), transpose(transpose(mat3(vec3(0.0, 1.0, 0.0), 1.0, 1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(65.18)), bool(false))))))))), (false ? _GLF_FUZZED(mat3(-741.347, -6.4, 88.67, 254.630, -463.116, -98.47, -91.01, -8145.7454, -9.3)) : mat3(mat3(_GLF_IDENTITY(mat3(vec3(0.0, 1.0, 0.0), 1.0, 1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(65.18)), bool(false)))), transpose(transpose(mat3(vec3(0.0, 1.0, 0.0), 1.0, 1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(65.18)), bool(false))))))))))))), max(vec3(mat3(vec3(0.0, 1.0, 0.0), 1.0, 1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y))), vec3(mat3(vec3(0.0, 1.0, 0.0), 1.0, 1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y))))))), dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))), abs(0.0), 0.0, abs(0.0), 1.0)))), _GLF_IDENTITY(float(injectionSwitch.y), min(_GLF_IDENTITY(float(injectionSwitch.y), (float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.8)), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED((-71.18 / (-9.1)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) / 1.0), float(injectionSwitch.y))), bool(true))), injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, false || _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && _GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), true)))))))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true))))))))))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, false || _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && _GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((true) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))) || false), true)))))))) || false) && true))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false)))))), (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(sqrt(0.0)))))) || (false))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ((injectionSwitch.x > injectionSwitch.y) && true) && true))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ((injectionSwitch.x > injectionSwitch.y) && true) && true))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y) && true, ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.6)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true)))) / 1.0) > injectionSwitch.y) && true) && true)))))) || false)) || false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u))).x, (true ? _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | _GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((gl_NumWorkGroups.x), min((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u)), (gl_NumWorkGroups.x)))) ^ 0u)) : _GLF_FUZZED(subgroup_size)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, true && (false))), true && (true && (_GLF_IDENTITY(false, true && (false))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), (0u | 0u) | (_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u | (0u)), 0u)) | ((workgroup_base))))))) : _GLF_FUZZED(num_workgroup)))), (~ (_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base)))))), (0u | 0u) | (_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u | (0u)), 0u), ~ (~ (clamp(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u | (0u)), 0u))))) | ((workgroup_base))))))) : _GLF_FUZZED(num_workgroup))))) - 0u), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), true && (false)))), true, false)))) ? _GLF_FUZZED(subgroup_size) : ~ (workgroup_base)))))), clamp((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 1u, 1u))), ~ (~ (workgroup_base))), 0u ^ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), 0u ^ (_GLF_FUZZED(num_workgroup))), _GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), ~ (~ (_GLF_FUZZED(num_workgroup))))) + 0u)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), (true && (false)) && true)), false || (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false))) || false)), (true && (false)) && true))))))))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), (true && (false)) && true)), false || (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false))) || false)), (true && (false)) && true)))))))))) && true), true, false)))) ? _GLF_FUZZED(subgroup_size) : ~ (workgroup_base)))))), (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) : _GLF_FUZZED(num_workgroup)))), min((_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) : _GLF_FUZZED(num_workgroup)))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((true ? _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) : _GLF_FUZZED(num_workgroup)), max((true ? _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) : _GLF_FUZZED(num_workgroup)), (true ? _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) : _GLF_FUZZED(num_workgroup)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), false)))), ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, false)))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true) && (false)), true, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), false)))), ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), true))))), false)))))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(~ (workgroup_base), (false ? _GLF_FUZZED(num_workgroup) : ~ (workgroup_base)))))))), (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))) : _GLF_FUZZED(num_workgroup)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, true && (false)))), true, false)))) ? _GLF_FUZZED(subgroup_size) : ~ (workgroup_base))))))))) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u | (subgroup_local_id + 1), (0u | (subgroup_local_id + 1)) ^ 0u)), subgroup_local_id + 1))) % subgroup_size), 0u | (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)));
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), next_virtual_gid))], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), min(_GLF_IDENTITY(~ (~ (1)), max(~ (~ (1)), ~ (~ (1)))), ~ (~ (1)))))), 4, _GLF_IDENTITY(64, (44729 & 0) | (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) << 0), (false ? _GLF_FUZZED(_GLF_IDENTITY((67348 >> 19552), min((67348 >> 19552), (67348 >> 19552)))) : 64)))), 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(vec2(-0.9, -6.8).t)), float(injectionSwitch.y), bool(true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (true ? _GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])) : _GLF_FUZZED(186809u))), 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
}
