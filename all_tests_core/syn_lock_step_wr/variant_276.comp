#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true)))
      {
       if(_GLF_DEAD(false))
        continue;
       break;
      }
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), ! (! (false)))));
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), (_GLF_IDENTITY(! (false), true && (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), (_GLF_IDENTITY(! (false), true && (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((! (false)), ! (! ((! (false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), false, false))))), (false) && true)))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false || (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(640.151))))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)))))), bool(bvec3(_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))), ! _GLF_IDENTITY((! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4((! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)))))), bool(bvec3(_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))), ! _GLF_IDENTITY((! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4((! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false))))) && true)), (_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)))))), bool(bvec3(_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))), ! _GLF_IDENTITY((! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4((! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)))))), bool(bvec3(_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))), ! _GLF_IDENTITY((! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4((! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false))))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)))))), bool(bvec3(_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))), ! _GLF_IDENTITY((! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4((! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)))))), bool(bvec3(_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))), ! _GLF_IDENTITY((! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4((! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false))))) && true)), false || (false || _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)))))), bool(bvec3(_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))), ! _GLF_IDENTITY((! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4((! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)))))), bool(bvec3(_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))), ! _GLF_IDENTITY((! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4((! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false))))) && true)))), false, false, false)), true && (bool(bvec4(_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)))))), bool(bvec3(_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))), ! _GLF_IDENTITY((! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4((! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)))))), bool(bvec3(_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))), ! _GLF_IDENTITY((! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4((! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false))))) && true)), false || (false || _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)))))), bool(bvec3(_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))), ! _GLF_IDENTITY((! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4((! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)))))), bool(bvec3(_GLF_IDENTITY(! ((_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))), ! _GLF_IDENTITY((! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4((! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false))))) && true)))), false, false, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((+ -3.0)), _GLF_FUZZED(5.4)), bvec2(false, false))).y, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(16.35, _GLF_IDENTITY(float(float(16.35)), mix(float(_GLF_IDENTITY(float(float(16.35)), mix(float(float(float(16.35))), float(_GLF_FUZZED(8.9)), bool(false)))), float(_GLF_FUZZED(920.833)), bool(false)))), 0.0 + (_GLF_IDENTITY(16.35, max(_GLF_IDENTITY(16.35, float(mat2x4(_GLF_IDENTITY(16.35, min(16.35, 16.35)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 16.35))))) : injectionSwitch.y)))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
          continue;
         return;
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), 1.0 * (max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y))), max(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), 1.0 * (max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y))), _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), 1.0 * (max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y))), (true ? _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), 1.0 * (max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y))) : _GLF_FUZZED(3199.0635))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(injectionSwitch.y, injectionSwitch.y) : _GLF_FUZZED(-5687.8596)))), _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))) + log(1.0))))))))))))) || false))))
        return;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), false)))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, false))))))));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))), bool(bvec4((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))), true, true, true))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))), ! (! ((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false)))))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true))), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), true, true)))) || _GLF_IDENTITY(false, ! (! (false)))))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (false)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! _GLF_IDENTITY((false), ! (! ((false))))), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(! (! (false)), true), false)), false, true))))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bvec2(! (! (false)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! (false)), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(! (! (false)), true), false)), false, true)))))), bool(bvec3(_GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bvec2(! (! (false)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! (false)), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(! (! (false)), true), false)), false, true)))))), ! (! (_GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bvec2(! (! (false)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! (false)), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(! (! (false)), true), false)), false, true)))))), true && (true && (bool(_GLF_IDENTITY(bvec2(! (! (false)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! (false)), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(! (! (false)), true), false)), false, true))))))))))), true, false)))))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (false) && true)))))))) && true), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (false)), _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! _GLF_IDENTITY((false), ! (! ((false))))), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(! (! (false)), true), _GLF_IDENTITY(false, ! (! (false))))), false, true))))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (false)), ((! (false))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((! (false)), ((! (false))) && true), false)))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bvec2((false), false))), true, true, false)))), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(! (! (false)), true), false)), false, true)))))), bool(bvec3(_GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bvec2(! (! (false)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! (false)), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(false, (false) || false))), true), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))))), ! (! (_GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bvec2(! (! (false)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! (false)), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(! (! (false)), true), false)), false, true)))))), true && (true && (bool(_GLF_IDENTITY(bvec2(! (! (false)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! _GLF_IDENTITY((! (false)), ((! (false))) || false), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(! (! (false)), true), false)), false, true))))))))))), true, false)))))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (false) && true)))))))) && true)))), true, false, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true), true, false, true))))))))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))) || false)))) || false)))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))))))))), ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))))))))))) && true) || false)))) || false))))))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false)))))))))))), (bool(false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))) && true)))) || false)))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(true), false))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
         continue;
        }
      }
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), true, false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) || false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))
      {
      }
     else
      {
       return;
      }
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), false, _GLF_IDENTITY(true, (true) && true), false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        return;
       return;
      }
    }
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-7400.2951, 7298.7010))))[1])).x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))) && true), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))) || false), false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, log(1.0)))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))))) || false), false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(bvec4(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))) || false), false, false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-82.29)), vec2(_GLF_FUZZED(vec4(9.3, -5042.5180, -28.78, -64.77).w), (mat2(1.0) * (injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))).y))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bool(bvec4(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | 0)])).x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))) || false), false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))))))))))))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                continue;
               return;
              }
            }
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))) || (false))) || false)))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))));
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), true && ((true)))))), _GLF_IDENTITY(bool(bvec4(! (true), false, true, false)), (bool(bvec4(! (true), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), (bool(bvec3(true, true, false))) || false)), false))) && true)))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), false)))))))), ! (! (false)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-21.80)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u))[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) << 0)], max(gl_WorkGroupSize[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) << 0)], gl_WorkGroupSize[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) << 0)])), 0u | (gl_WorkGroupSize[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) << 0)])), gl_WorkGroupSize[2]))))) : _GLF_FUZZED(uvec3(175151u, 63272u, 148136u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(175151u, 63272u, _GLF_IDENTITY(148136u, (148136u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)))), 1u)))), ((gl_WorkGroupSize)) | ((gl_WorkGroupSize)))) | uvec3(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) ^ 0u)) >> 0u) : _GLF_FUZZED(subgroup_local_id))), 0u, 0u)) | (gl_WorkGroupSize)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(_GLF_IDENTITY(175151u, 0u ^ (175151u)), 63272u, 148136u)) | uvec3(0u, 0u, 0u))), (_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), _GLF_IDENTITY((uvec3(175151u, 63272u, 148136u)), ((uvec3(175151u, 63272u, 148136u))) + uvec3(0u, 0u, 0u)) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (true ? uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))), (~ (_GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))) ^ 0u)) | (~ (_GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))))))) : _GLF_FUZZED(uvec3(168223u, 183189u, 191173u))))))) | (_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u))))))) * (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, _GLF_IDENTITY(1u, 0u ^ (1u)))) | uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(true ? gl_WorkGroupSize : _GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), _GLF_IDENTITY((uvec3(175151u, 63272u, 148136u)), clamp(_GLF_IDENTITY((uvec3(175151u, 63272u, 148136u)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))) * ((uvec3(175151u, 63272u, 148136u)))), (uvec3(175151u, 63272u, 148136u)), (uvec3(175151u, 63272u, 148136u)))) - uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, 0u))), (_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)))))))) ^ uvec3(0u, 0u, 0u)), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(175151u, _GLF_IDENTITY(63272u, min(63272u, 63272u)), 148136u), clamp(uvec3(175151u, 63272u, 148136u), uvec3(175151u, 63272u, 148136u), _GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), ~ (~ (uvec3(175151u, 63272u, 148136u)))))), _GLF_IDENTITY((uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, 0u), ((uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) / (uvec3(1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 1u, 0u))), 1u)), 1u) & uvec3(1u, 1u, 1u)))))) | (_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, _GLF_IDENTITY(63272u, (true ? 63272u : _GLF_FUZZED(subgroup_id))), 148136u)) | uvec3(0u, 0u, 0u)))))) * (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)) | uvec3(0u, 0u, 0u)))), uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u) | (uvec3(_GLF_IDENTITY(true ? gl_WorkGroupSize : _GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) >> (uvec3(57324u, 161589u, 145901u) & uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))))), (_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), uvec3(uvec3(uvec3(175151u, 63272u, 148136u))))) | uvec3(_GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), 0u, 0u)))) | _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, 0u)))), (true ? (_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, 0u)))) : _GLF_FUZZED(uvec3(43110u, 54567u, 185243u)))))) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)))) : _GLF_FUZZED((45711u + uvec3(131925u, 196092u, 6363u)))), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)))) : _GLF_FUZZED((45711u + uvec3(131925u, 196092u, 6363u))))) | (_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)))) : _GLF_FUZZED((45711u + uvec3(131925u, 196092u, 6363u)))), (_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)))) : _GLF_FUZZED((45711u + uvec3(131925u, 196092u, 6363u)))), uvec3(0u, 0u, 0u) | ((true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)))) : _GLF_FUZZED((45711u + uvec3(131925u, 196092u, 6363u))))))) - uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)))) : _GLF_FUZZED((45711u + uvec3(131925u, 196092u, 6363u)))), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)))) : _GLF_FUZZED((45711u + uvec3(131925u, 196092u, 6363u))))) | (_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)))) : _GLF_FUZZED((45711u + uvec3(131925u, 196092u, 6363u)))), (_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)))) : _GLF_FUZZED((45711u + uvec3(131925u, 196092u, 6363u)))), uvec3(0u, 0u, 0u) | ((true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)))) : _GLF_FUZZED((45711u + uvec3(131925u, 196092u, 6363u))))))) - uvec3(0u, 0u, 0u))))))) | uvec3(0u, 0u, 0u))))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))) ? _GLF_FUZZED((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(157134u, (_GLF_IDENTITY(157134u, ~ (_GLF_IDENTITY(~ (157134u), uint(uint(~ (157134u))))))) | (_GLF_IDENTITY(157134u, _GLF_IDENTITY(uint(uint(157134u)), uint(uvec2(uint(uint(157134u)), 0u)))))), 84186u, 198956u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec3(157134u, 84186u, 198956u) : _GLF_FUZZED(uvec3(125897u, 37463u, 199772u)))) | uvec3(31677u, 33582u, 194167u))) : uvec3(uvec3(_GLF_IDENTITY(true ? gl_WorkGroupSize : _GLF_IDENTITY(_GLF_FUZZED(uvec3(175151u, 63272u, 148136u)), ~ (~ (_GLF_FUZZED(uvec3(175151u, 63272u, 148136u))))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))) ^ uvec3(0u, 0u, 0u)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, 0u))), (_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, 0u)))) | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(175151u, uint(uvec2(_GLF_IDENTITY(175151u, (175151u) >> 0u), (0u | 0u)))), 63272u, 148136u)), ((uvec3(175151u, 63272u, 148136u))) - uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))))))) * (uvec3(1u, 1u, 1u) | uvec3(0u, 0u, 0u)), (true ? (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))) ^ uvec3(0u, 0u, 0u)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u))), (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)))) << uvec3(0u, 0u, 0u))))))))), (_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) | uvec3(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u)))) | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u) | uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u)) | (_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(175151u, uint(uvec2(_GLF_IDENTITY(175151u, (175151u) >> 0u), (0u | 0u)))), 63272u, 148136u)), ((uvec3(175151u, 63272u, 148136u))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) + (uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))))))) * (uvec3(1u, 1u, 1u) | uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(169991u, 148716u, 125724u)))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))) ? _GLF_FUZZED((_GLF_IDENTITY(uvec3(157134u, 84186u, 198956u) | uvec3(31677u, 33582u, 194167u), (uvec3(157134u, 84186u, 198956u) | uvec3(31677u, 33582u, 194167u)) ^ uvec3(0u, 0u, 0u)))) : uvec3(uvec3(_GLF_IDENTITY(true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(175151u, 63272u, 148136u)), (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))) ^ uvec3(0u, 0u, 0u)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, 0u))), (_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), ~ (~ (uvec3(175151u, 63272u, 148136u))))) | uvec3(0u, 0u, 0u)))) | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) | uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u)), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(175151u, 63272u, 148136u)), ((uvec3(175151u, 63272u, 148136u))) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((uvec3(175151u, 63272u, 148136u)), ((uvec3(175151u, 63272u, 148136u))) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((uvec3(175151u, 63272u, 148136u)), ((uvec3(175151u, 63272u, 148136u))) - uvec3(0u, 0u, 0u))))) << uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))) ^ uvec3(0u, 0u, 0u)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, 0u))), (_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), ~ (~ (uvec3(175151u, 63272u, 148136u))))) | uvec3(0u, 0u, 0u)))) | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) | uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u)), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(175151u, 63272u, 148136u)), ((uvec3(175151u, 63272u, 148136u))) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((uvec3(175151u, 63272u, 148136u)), ((uvec3(175151u, 63272u, 148136u))) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((uvec3(175151u, 63272u, 148136u)), ((uvec3(175151u, 63272u, 148136u))) - uvec3(0u, 0u, 0u))))) << uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))))))) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))) ^ uvec3(0u, 0u, 0u)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, 0u))), (_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), ~ (~ (uvec3(175151u, 63272u, 148136u))))) | uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), ~ (~ (uvec3(175151u, 63272u, 148136u))))) | uvec3(0u, 0u, 0u)) | ((_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), ~ (~ (uvec3(175151u, 63272u, 148136u))))) | uvec3(0u, 0u, 0u)))))) | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) | uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), max(_GLF_IDENTITY(0u, (0u) + 0u), _GLF_IDENTITY(0u, (0u) + 0u))), 0u)), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), uvec3(0u, 0u, 0u) ^ (uvec3(175151u, 63272u, 148136u))), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(175151u, 63272u, 148136u)), ((uvec3(175151u, 63272u, 148136u))) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((uvec3(175151u, 63272u, 148136u)), ((uvec3(175151u, 63272u, 148136u))) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((uvec3(175151u, 63272u, 148136u)), ((uvec3(175151u, 63272u, 148136u))) - uvec3(0u, 0u, 0u))))) << uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | _GLF_IDENTITY((gl_WorkGroupSize), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) | ((gl_WorkGroupSize))))) ^ uvec3(0u, 0u, 0u)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), _GLF_IDENTITY((uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, 0u), ~ (~ ((uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, 0u)))))), (_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, _GLF_IDENTITY(148136u, max(_GLF_IDENTITY(148136u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(148136u, uint(uvec3(148136u, 1u, 1u))))), 148136u))), (_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), ~ (_GLF_IDENTITY(~ (uvec3(175151u, 63272u, 148136u)), max(_GLF_IDENTITY(~ (uvec3(175151u, 63272u, 148136u)), (_GLF_IDENTITY(~ (uvec3(175151u, 63272u, 148136u)), (~ (uvec3(175151u, 63272u, 148136u))) * uvec3(1u, 1u, 1u))) ^ uvec3(0u, 0u, 0u)), ~ (uvec3(175151u, 63272u, 148136u))))))) | uvec3(0u, 0u, 0u)))) | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) | uvec3(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u)), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))) | (_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(175151u, 63272u, 148136u)), ((_GLF_IDENTITY(uvec3(175151u, _GLF_IDENTITY(63272u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(63272u, (true ? 63272u : _GLF_FUZZED((27502u % subgroup_size)))))), 148136u), min(uvec3(175151u, _GLF_IDENTITY(63272u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(63272u, (true ? 63272u : _GLF_FUZZED((27502u % subgroup_size)))))), 148136u), _GLF_IDENTITY(uvec3(175151u, _GLF_IDENTITY(63272u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(63272u, (true ? 63272u : _GLF_FUZZED((27502u % subgroup_size)))))), 148136u), uvec3(uvec3(uvec3(175151u, _GLF_IDENTITY(63272u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(63272u, (true ? 63272u : _GLF_FUZZED((27502u % subgroup_size)))))), 148136u)))))))) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(175151u, 63272u, 148136u)), ((uvec3(175151u, 63272u, 148136u))) - uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(175151u, 63272u, 148136u)), ((uvec3(175151u, 63272u, 148136u))) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((uvec3(175151u, 63272u, 148136u)), ((uvec3(175151u, 63272u, 148136u))) - uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY((uvec3(175151u, 63272u, 148136u)), ((uvec3(175151u, 63272u, 148136u))) - uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))), uvec3(0u, 0u, 0u))) + (_GLF_IDENTITY((uvec3(175151u, 63272u, 148136u)), ((uvec3(175151u, 63272u, 148136u))) - uvec3(0u, 0u, 0u))))) << uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))))))) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))) * (uvec3(1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (0u ^ 0u) | (1u)), _GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) * 1u))))), 1u) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u)))))))), ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))) ? _GLF_FUZZED((uvec3(157134u, 84186u, 198956u) | uvec3(31677u, 33582u, 194167u))) : uvec3(uvec3(_GLF_IDENTITY(true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(175151u, 63272u, 148136u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u))) | (gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) >> uvec3(0u, 0u, 0u))), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) >> uvec3(0u, 0u, 0u)))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) >> uvec3(0u, 0u, 0u))), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) >> uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) >> uvec3(0u, 0u, 0u))), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) >> uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) >> uvec3(0u, 0u, 0u))), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) >> uvec3(0u, 0u, 0u))))))) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) >> uvec3(0u, 0u, 0u))), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) >> uvec3(0u, 0u, 0u)))))))) | (gl_WorkGroupSize))) ^ uvec3(0u, 0u, 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, 0u))), (_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, 0u)))) | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(175151u, _GLF_IDENTITY(63272u, (false ? _GLF_FUZZED(42716u) : 63272u)), 148136u), (uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), _GLF_IDENTITY((uvec3(175151u, 63272u, 148136u)), ((uvec3(175151u, 63272u, 148136u))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))) | uvec3(0u, 0u, 0u))))))), uvec3(uvec4(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, 0u))), (_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, 0u)))) | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(175151u, _GLF_IDENTITY(63272u, (false ? _GLF_FUZZED(42716u) : 63272u)), 148136u), (uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), _GLF_IDENTITY((uvec3(175151u, 63272u, 148136u)), ((uvec3(175151u, 63272u, 148136u))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u))) | uvec3(0u, 0u, 0u))))))), 1u)))) * (uvec3(1u, 1u, 1u) | uvec3(0u, 0u, 0u))))))) - uvec3(0u, 0u, 0u))), ~ (~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))) ? _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(uvec3(157134u, 84186u, 198956u) | uvec3(31677u, 33582u, 194167u), (uvec3(157134u, 84186u, 198956u) | uvec3(31677u, 33582u, 194167u)) << uvec3(0u, 0u, 0u)))), max(_GLF_FUZZED((uvec3(157134u, 84186u, 198956u) | uvec3(31677u, 33582u, 194167u))), _GLF_FUZZED((uvec3(157134u, 84186u, 198956u) | uvec3(31677u, 33582u, 194167u))))) : uvec3(uvec3(_GLF_IDENTITY(true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(175151u, 63272u, 148136u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))) ^ uvec3(0u, 0u, 0u)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), _GLF_IDENTITY((uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(uvec3((uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, 0u))), max(_GLF_IDENTITY(uvec3(uvec3((uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(13190u, 5069u, 5130u)) : uvec3(uvec3((uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, 0u))))), uvec3(uvec3((uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, 0u)))))))), (_GLF_FUZZED(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(175151u, (175151u) | 0u), 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) | uvec3(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)))) | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), _GLF_IDENTITY((uvec3(175151u, 63272u, 148136u)), ((uvec3(175151u, 63272u, 148136u))) - uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))))))) * (uvec3(1u, 1u, 1u) | uvec3(0u, 0u, 0u)))))), ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false)))) ? _GLF_FUZZED((_GLF_IDENTITY(uvec3(157134u, 84186u, 198956u), ~ (~ (_GLF_IDENTITY(uvec3(157134u, 84186u, 198956u), (uvec3(157134u, 84186u, 198956u)) - uvec3(0u, 0u, 0u))))) | uvec3(31677u, 33582u, 194167u))) : uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(175151u, 63272u, 148136u)), uvec3(uvec4(true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(175151u, 63272u, 148136u)), 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))) ^ uvec3(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), 0u ^ (uint(uvec3(0u, 1u, 0u))))), 0u))), 0u, 0u)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, 0u))), (_GLF_FUZZED(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) | uvec3(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)))) | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), (uvec3(175151u, 63272u, 148136u)) | uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(uvec3(175151u, 63272u, 148136u), _GLF_IDENTITY((uvec3(175151u, 63272u, 148136u)), ((uvec3(175151u, 63272u, 148136u))) - uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))))))) * _GLF_IDENTITY((uvec3(1u, 1u, 1u) | uvec3(0u, 0u, 0u)), ((uvec3(1u, 1u, 1u) | uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u))))))) - uvec3(0u, 0u, 0u)))))))))))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(990.934) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.y)), injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(990.934) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.y)), injectionSwitch.y)))))))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0))))).x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true), false))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true), false)))))) && true), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3094.8249), _GLF_FUZZED(-362.941)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0)), vec2(_GLF_IDENTITY(vec2(vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3094.8249), _GLF_FUZZED(-362.941)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))), mix(vec2((vec2(vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3094.8249), _GLF_FUZZED(-362.941)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))))[0], _GLF_FUZZED(-97.75)), vec2(_GLF_FUZZED(8.6), (vec2(vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3094.8249), _GLF_FUZZED(-362.941)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0))))[1]), bvec2(false, true)))))).y))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(315.903)), vec2(_GLF_FUZZED(6.2), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true), false))))), false, true, true))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(709.371), _GLF_FUZZED((-4030.5010 - 583.403))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y))) || false)) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) && true) && true), false))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true), false))))), false, true, true))))))))))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base), (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bvec4((true) && true, true, true, false)))) ? _GLF_IDENTITY(uint(workgroup_base), max(uint(workgroup_base), uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))))) : _GLF_FUZZED(num_workgroup)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base), (true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup)))), (uint(_GLF_IDENTITY(uint(workgroup_base), (true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup)), min(_GLF_IDENTITY((true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup)), clamp((true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup)), (true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup)), (true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup)))), (true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup)))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_base), clamp(uint(workgroup_base), uint(workgroup_base), _GLF_IDENTITY(uint(workgroup_base), uint(uvec4(uint(workgroup_base), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) * ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)))) : _GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_IDENTITY((true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup)), max((true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup)), _GLF_IDENTITY((true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup)), ((true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup))) >> 0u))) | (true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup)), min(_GLF_IDENTITY((true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup)), max((true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup)), _GLF_IDENTITY((true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup)), ((true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup))) >> 0u))) | (true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup)), _GLF_IDENTITY((true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup)), max((true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup)), _GLF_IDENTITY((true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup)), ((true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup))) >> 0u))) | (true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup)))))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base), (true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup)))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base), (true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup)))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base), (true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup)))), (uint(_GLF_IDENTITY(uint(workgroup_base), (true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup))))) | 0u)))), uint(_GLF_IDENTITY(uint(workgroup_base), (true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup)))))), (true ? uint(_GLF_IDENTITY(uint(workgroup_base), (true ? uint(workgroup_base) : _GLF_FUZZED(num_workgroup)))) : _GLF_FUZZED(uvec2(197316u, 175267u).r)))))))) + subgroup_id * subgroup_size + subgroup_local_id;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false)))))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))
              continue;
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(! (! (false)), true, false)), bool(bool(bool(bvec3(! (! (false)), true, false)))))))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED((float(-8511)))), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(mix(float(_GLF_FUZZED((float(-8511)))), float(injectionSwitch.y), bool(true)), (mix(float(_GLF_FUZZED((float(-8511)))), float(injectionSwitch.y), bool(true))) - sin(0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-251.521)), float(float(mat4x3(_GLF_IDENTITY(mix(float(_GLF_FUZZED((float(-8511)))), float(injectionSwitch.y), bool(true)), (mix(float(_GLF_FUZZED((float(-8511)))), float(injectionSwitch.y), bool(true))) - sin(0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0))), bool(true))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(560.255, 6.3))))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y) && true)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, 1.0, length(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0), (false ? _GLF_FUZZED(mat2x4(-5.6, -1.9, -21.76, 4763.5010, 0.0, 9058.3113, 228.377, -26.86)) : mat2x4(injectionSwitch.x, 0.0, 1.0, length(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0)))), 1.0 * (float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, 1.0, length(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0), (false ? _GLF_FUZZED(mat2x4(-5.6, -1.9, -21.76, 4763.5010, 0.0, 9058.3113, 228.377, -26.86)) : mat2x4(injectionSwitch.x, 0.0, 1.0, length(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0))))))) < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1260.2530), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.8)), bvec2(true, false))).y)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(560.255, 6.3))), vec2(0.0, 0.0) + ((true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(560.255, 6.3))))))).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y) && true)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, 1.0, length(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), max(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), (vec2(0.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))) / vec2(1.0, 1.0)), vec2(0.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0), (false ? _GLF_FUZZED(mat2x4(-5.6, -1.9, -21.76, 4763.5010, 0.0, 9058.3113, 228.377, -26.86)) : mat2x4(injectionSwitch.x, 0.0, 1.0, length(0.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0)))), 1.0 * (float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), length(0.0), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), max(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), 1.0), (false ? _GLF_FUZZED(mat2x4(-5.6, -1.9, -21.76, 4763.5010, 0.0, 9058.3113, 228.377, -26.86)) : mat2x4(injectionSwitch.x, 0.0, 1.0, length(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0))))))) < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1260.2530), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(float(146090u))), bool(false))), (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(2.8)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).y)))))))))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
                break;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, false, false))))
                      return;
                     break;
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     return;
                    }
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    return;
                   return;
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))))))
                return;
               if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                return;
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           else
            {
            }
           for(int _injected_loop_counter = (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) >> 0) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              return;
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (-47422 & 0)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               continue;
              }
            }
          }
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      break;
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) - 0), min(int(0), int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), (uint(2u)) | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))))))) + (subgroup_local_id))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), (uint(2u)) | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))))))) + (subgroup_local_id))), ((_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), (uint(2u)) | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))))))) + (subgroup_local_id)))) >> 0u), (_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), (uint(2u)) | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))))))) + (subgroup_local_id)))))) | _GLF_IDENTITY((~ (subgroup_local_id)), clamp(_GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_IDENTITY((~ (subgroup_local_id)), ~ (~ ((~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) - (1u ^ 1u)))))))) | ((_GLF_IDENTITY(~ (subgroup_local_id), (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) | (~ (subgroup_local_id)))) ^ 0u)))), _GLF_IDENTITY((~ (subgroup_local_id)), max((~ (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 1u, ((((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, (7u) + 0u)) << 0u)), _GLF_IDENTITY(uint(7u), ~ (~ (uint(7u)))))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))), (~ (subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (54817u & 0u) | (subgroup_local_id)))), _GLF_IDENTITY(((~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))) | (_GLF_IDENTITY((~ (subgroup_local_id)), ((~ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))))) | ((~ (subgroup_local_id))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((~ (subgroup_local_id))) | (_GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) | ((~ (subgroup_local_id))))), ~ (~ (((~ (subgroup_local_id))) | (_GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) | ((_GLF_IDENTITY(~ (subgroup_local_id), (0u | 0u) + (~ (subgroup_local_id)))))))))) : _GLF_FUZZED(subgroup_size)))), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_local_id)), clamp(_GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) ^ 0u)) | ((~ (subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) >> 0u), (true ? _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_local_id), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * ((subgroup_local_id)))), ((~ (subgroup_local_id))) | ((~ (subgroup_local_id)))) : _GLF_FUZZED(uvec2(126028u, 3468u).t))), (~ (subgroup_local_id)))), max(_GLF_IDENTITY((~ (subgroup_local_id)), clamp(_GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) ^ 0u)) | ((~ (subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) >> 0u), (true ? _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_local_id), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * ((subgroup_local_id)))), ((~ (subgroup_local_id))) | ((~ (subgroup_local_id)))) : _GLF_FUZZED(uvec2(126028u, 3468u).t))), (~ (subgroup_local_id)))), _GLF_IDENTITY((~ (subgroup_local_id)), clamp(_GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) ^ 0u)) | ((~ (subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) >> 0u), (true ? _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_local_id), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * ((subgroup_local_id)))), ((~ (subgroup_local_id))) | ((~ (subgroup_local_id)))) : _GLF_FUZZED(uvec2(126028u, 3468u).t))), (~ (subgroup_local_id)))))), (~ (subgroup_local_id)))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2u : _GLF_FUZZED((~ virtual_gid))))), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(0u | (uint(2u)), max(0u | (uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(0u | (uint(2u)), max(0u | (uint(2u)), 0u | (uint(2u)))), 0u + (_GLF_IDENTITY(0u | (uint(2u)), min(0u | (uint(2u)), 0u | (uint(2u)))))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), _GLF_IDENTITY(0u | (uint(2u)), _GLF_IDENTITY(max(0u | (uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(0u | (uint(2u)), max(0u | (uint(2u)), 0u | (uint(2u)))), 0u + (0u | (uint(2u))))), (max(0u | (uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u | _GLF_IDENTITY((uint(2u)), ((uint(2u))) ^ 0u), (0u | _GLF_IDENTITY((uint(2u)), ((uint(2u))) | ((uint(2u))))) | 0u), max(_GLF_IDENTITY(0u | (uint(2u)), (0u | (uint(2u))) | 0u), 0u | (uint(2u)))), 0u + (0u | (uint(2u)))))) * 1u)))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), _GLF_IDENTITY(0u | (uint(2u)), _GLF_IDENTITY(max(0u | (uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(0u | (uint(2u)), max(0u | (uint(2u)), 0u | (uint(2u)))), 0u + (0u | (uint(2u))))), (max(0u | (uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u | _GLF_IDENTITY((uint(2u)), ((uint(2u))) ^ 0u), (0u | _GLF_IDENTITY((uint(2u)), ((uint(2u))) | ((uint(2u))))) | 0u), max(_GLF_IDENTITY(0u | (uint(2u)), (0u | (uint(2u))) | 0u), 0u | (uint(2u)))), 0u + (0u | (uint(2u)))))) * 1u))))) << 0u)))) + (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) - 0u)), _GLF_IDENTITY(0u | (uint(2u)), max(0u | (uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u | (uint(2u)), max(_GLF_IDENTITY(0u | (uint(2u)), min(0u | (uint(2u)), 0u | (uint(2u)))), 0u | (uint(2u)))), 0u + (0u | (uint(2u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u | (uint(2u)), max(_GLF_IDENTITY(0u | (uint(2u)), min(0u | (uint(2u)), 0u | (uint(2u)))), 0u | (uint(2u)))), 0u + (0u | (uint(2u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u | (uint(2u)), max(_GLF_IDENTITY(0u | (uint(2u)), min(0u | (uint(2u)), 0u | (uint(2u)))), 0u | (uint(2u)))), 0u + (0u | (uint(2u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u | (uint(2u)), max(_GLF_IDENTITY(0u | (uint(2u)), min(0u | (uint(2u)), 0u | (uint(2u)))), 0u | (uint(2u)))), 0u + (0u | (uint(2u))))))))))) + (subgroup_local_id))) | 0u))) | _GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) | 0u))), ((~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) | 0u)))) << _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), clamp(0u, 0u, 0u)))) << 0u)) / (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), max(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), 0u ^ (max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))))))))), clamp(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), max(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), 0u ^ (max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))))))))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), max(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), 0u ^ (max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), max(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), 0u ^ (max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))))))))), ~ (~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), max(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), 0u ^ (max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))))))))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY(_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), max((1), (1))))), (1))), max(_GLF_IDENTITY((1), ((1)) - 0), (1))))) | (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1)), (1) + 0)))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), _GLF_IDENTITY((subgroup_size) - 0u, (_GLF_IDENTITY((subgroup_size) - 0u, ((subgroup_size) - 0u) >> 0u)) << 0u))) >> 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), (subgroup_size) - 0u)) >> 0u) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), max(uint(uvec3(0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), uint(uvec3(0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))))))), (subgroup_size) - 0u)) >> 0u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), (uint(2u)) | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))))))) + (subgroup_local_id))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), (uint(2u)) | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))))))) + (subgroup_local_id))), ((_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), (uint(2u)) | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))))))) + (subgroup_local_id)))) >> 0u), (_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), (uint(2u)) | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))))))) + (subgroup_local_id)))))) | _GLF_IDENTITY((~ (subgroup_local_id)), clamp(_GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_IDENTITY((~ (subgroup_local_id)), ~ (~ ((~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) - (1u ^ 1u)))))))) | ((_GLF_IDENTITY(~ (subgroup_local_id), (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) | (~ (subgroup_local_id)))) ^ 0u)))), _GLF_IDENTITY((~ (subgroup_local_id)), max((~ (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 1u, ((((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, (7u) + 0u)) << 0u)), _GLF_IDENTITY(uint(7u), ~ (~ (uint(7u)))))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))), (~ (subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (54817u & 0u) | (subgroup_local_id)))), _GLF_IDENTITY(((~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))) | (_GLF_IDENTITY((~ (subgroup_local_id)), ((~ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))))) | ((~ (subgroup_local_id))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((~ (subgroup_local_id))) | (_GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) | ((~ (subgroup_local_id))))), ~ (~ (((~ (subgroup_local_id))) | (_GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) | ((_GLF_IDENTITY(~ (subgroup_local_id), (0u | 0u) + (~ (subgroup_local_id)))))))))) : _GLF_FUZZED(subgroup_size)))), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_local_id)), clamp(_GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) ^ 0u)) | ((~ (subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) >> 0u), (true ? _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_local_id), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * ((subgroup_local_id)))), ((~ (subgroup_local_id))) | ((~ (subgroup_local_id)))) : _GLF_FUZZED(uvec2(126028u, 3468u).t))), (~ (subgroup_local_id)))), max(_GLF_IDENTITY((~ (subgroup_local_id)), clamp(_GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) ^ 0u)) | ((~ (subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) >> 0u), (true ? _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_local_id), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * ((subgroup_local_id)))), ((~ (subgroup_local_id))) | ((~ (subgroup_local_id)))) : _GLF_FUZZED(uvec2(126028u, 3468u).t))), (~ (subgroup_local_id)))), _GLF_IDENTITY((~ (subgroup_local_id)), clamp(_GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) ^ 0u)) | ((~ (subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) >> 0u), (true ? _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_local_id), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * ((subgroup_local_id)))), ((~ (subgroup_local_id))) | ((~ (subgroup_local_id)))) : _GLF_FUZZED(uvec2(126028u, 3468u).t))), (~ (subgroup_local_id)))))), (~ (subgroup_local_id)))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2u : _GLF_FUZZED((~ virtual_gid))))), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(0u | (uint(2u)), max(0u | (uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(0u | (uint(2u)), max(0u | (uint(2u)), 0u | (uint(2u)))), 0u + (_GLF_IDENTITY(0u | (uint(2u)), min(0u | (uint(2u)), 0u | (uint(2u)))))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), _GLF_IDENTITY(0u | (uint(2u)), _GLF_IDENTITY(max(0u | (uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(0u | (uint(2u)), max(0u | (uint(2u)), 0u | (uint(2u)))), 0u + (0u | (uint(2u))))), (max(0u | (uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u | _GLF_IDENTITY((uint(2u)), ((uint(2u))) ^ 0u), (0u | _GLF_IDENTITY((uint(2u)), ((uint(2u))) | ((uint(2u))))) | 0u), max(_GLF_IDENTITY(0u | (uint(2u)), (0u | (uint(2u))) | 0u), 0u | (uint(2u)))), 0u + (0u | (uint(2u)))))) * 1u)))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), _GLF_IDENTITY(0u | (uint(2u)), _GLF_IDENTITY(max(0u | (uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(0u | (uint(2u)), max(0u | (uint(2u)), 0u | (uint(2u)))), 0u + (0u | (uint(2u))))), (max(0u | (uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u | _GLF_IDENTITY((uint(2u)), ((uint(2u))) ^ 0u), (0u | _GLF_IDENTITY((uint(2u)), ((uint(2u))) | ((uint(2u))))) | 0u), max(_GLF_IDENTITY(0u | (uint(2u)), (0u | (uint(2u))) | 0u), 0u | (uint(2u)))), 0u + (0u | (uint(2u)))))) * 1u))))) << 0u)))) + (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) - 0u)), _GLF_IDENTITY(0u | (uint(2u)), max(0u | (uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u | (uint(2u)), max(_GLF_IDENTITY(0u | (uint(2u)), min(0u | (uint(2u)), 0u | (uint(2u)))), 0u | (uint(2u)))), 0u + (0u | (uint(2u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u | (uint(2u)), max(_GLF_IDENTITY(0u | (uint(2u)), min(0u | (uint(2u)), 0u | (uint(2u)))), 0u | (uint(2u)))), 0u + (0u | (uint(2u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u | (uint(2u)), max(_GLF_IDENTITY(0u | (uint(2u)), min(0u | (uint(2u)), 0u | (uint(2u)))), 0u | (uint(2u)))), 0u + (0u | (uint(2u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u | (uint(2u)), max(_GLF_IDENTITY(0u | (uint(2u)), min(0u | (uint(2u)), 0u | (uint(2u)))), 0u | (uint(2u)))), 0u + (0u | (uint(2u))))))))))) + (subgroup_local_id))) | 0u))) | _GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) | 0u))), ((~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) | 0u)))) << _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), clamp(0u, 0u, 0u)))) << 0u)) / (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), max(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), 0u ^ (max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))))))))), clamp(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), max(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), 0u ^ (max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))))))))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), max(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), 0u ^ (max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), max(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), 0u ^ (max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))))))))), ~ (~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), max(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), 0u ^ (max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))))))))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), (_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), (uint(2u)) | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))))))) + (subgroup_local_id))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), (uint(2u)) | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))))))) + (subgroup_local_id))), ((_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), (uint(2u)) | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))))))) + (subgroup_local_id)))) >> 0u), (_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u | (_GLF_IDENTITY(uint(2u), (uint(2u)) | (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))))))) + (subgroup_local_id)))))) | _GLF_IDENTITY((~ (subgroup_local_id)), clamp(_GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_IDENTITY((~ (subgroup_local_id)), ~ (~ ((~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) - (1u ^ 1u)))))))) | ((_GLF_IDENTITY(~ (subgroup_local_id), (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) | (~ (subgroup_local_id)))) ^ 0u)))), _GLF_IDENTITY((~ (subgroup_local_id)), max((~ (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 1u, ((((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, (7u) + 0u)) << 0u)), _GLF_IDENTITY(uint(7u), ~ (~ (uint(7u)))))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))), (~ (subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (54817u & 0u) | (subgroup_local_id)))), _GLF_IDENTITY(((~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))) | (_GLF_IDENTITY((~ (subgroup_local_id)), ((~ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))))) | ((~ (subgroup_local_id))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(((~ (subgroup_local_id))) | (_GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) | ((~ (subgroup_local_id))))), ~ (~ (((~ (subgroup_local_id))) | (_GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) | ((_GLF_IDENTITY(~ (subgroup_local_id), (0u | 0u) + (~ (subgroup_local_id)))))))))) : _GLF_FUZZED(subgroup_size)))), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_local_id)), clamp(_GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) ^ 0u)) | ((~ (subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) >> 0u), (true ? _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_local_id), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * ((subgroup_local_id)))), ((~ (subgroup_local_id))) | ((~ (subgroup_local_id)))) : _GLF_FUZZED(uvec2(126028u, 3468u).t))), (~ (subgroup_local_id)))), max(_GLF_IDENTITY((~ (subgroup_local_id)), clamp(_GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) ^ 0u)) | ((~ (subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) >> 0u), (true ? _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_local_id), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * ((subgroup_local_id)))), ((~ (subgroup_local_id))) | ((~ (subgroup_local_id)))) : _GLF_FUZZED(uvec2(126028u, 3468u).t))), (~ (subgroup_local_id)))), _GLF_IDENTITY((~ (subgroup_local_id)), clamp(_GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) ^ 0u)) | ((~ (subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) >> 0u), (true ? _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_local_id), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * ((subgroup_local_id)))), ((~ (subgroup_local_id))) | ((~ (subgroup_local_id)))) : _GLF_FUZZED(uvec2(126028u, 3468u).t))), (~ (subgroup_local_id)))))), (~ (subgroup_local_id)))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2u : _GLF_FUZZED((~ virtual_gid))))), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(0u | (uint(2u)), max(0u | (uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(0u | (uint(2u)), max(0u | (uint(2u)), 0u | (uint(2u)))), 0u + (_GLF_IDENTITY(0u | (uint(2u)), min(0u | (uint(2u)), 0u | (uint(2u)))))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), _GLF_IDENTITY(0u | (uint(2u)), _GLF_IDENTITY(max(0u | (uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(0u | (uint(2u)), max(0u | (uint(2u)), 0u | (uint(2u)))), 0u + (0u | (uint(2u))))), (max(0u | (uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u | _GLF_IDENTITY((uint(2u)), ((uint(2u))) ^ 0u), (0u | _GLF_IDENTITY((uint(2u)), ((uint(2u))) | ((uint(2u))))) | 0u), max(_GLF_IDENTITY(0u | (uint(2u)), (0u | (uint(2u))) | 0u), 0u | (uint(2u)))), 0u + (0u | (uint(2u)))))) * 1u)))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), _GLF_IDENTITY(0u | (uint(2u)), _GLF_IDENTITY(max(0u | (uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(0u | (uint(2u)), max(0u | (uint(2u)), 0u | (uint(2u)))), 0u + (0u | (uint(2u))))), (max(0u | (uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u | _GLF_IDENTITY((uint(2u)), ((uint(2u))) ^ 0u), (0u | _GLF_IDENTITY((uint(2u)), ((uint(2u))) | ((uint(2u))))) | 0u), max(_GLF_IDENTITY(0u | (uint(2u)), (0u | (uint(2u))) | 0u), 0u | (uint(2u)))), 0u + (0u | (uint(2u)))))) * 1u))))) << 0u)))) + (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) - 0u)), _GLF_IDENTITY(0u | (uint(2u)), max(0u | (uint(2u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u | (uint(2u)), max(_GLF_IDENTITY(0u | (uint(2u)), min(0u | (uint(2u)), 0u | (uint(2u)))), 0u | (uint(2u)))), 0u + (0u | (uint(2u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u | (uint(2u)), max(_GLF_IDENTITY(0u | (uint(2u)), min(0u | (uint(2u)), 0u | (uint(2u)))), 0u | (uint(2u)))), 0u + (0u | (uint(2u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u | (uint(2u)), max(_GLF_IDENTITY(0u | (uint(2u)), min(0u | (uint(2u)), 0u | (uint(2u)))), 0u | (uint(2u)))), 0u + (0u | (uint(2u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u | (uint(2u)), max(_GLF_IDENTITY(0u | (uint(2u)), min(0u | (uint(2u)), 0u | (uint(2u)))), 0u | (uint(2u)))), 0u + (0u | (uint(2u))))))))))) + (subgroup_local_id))) | 0u))) | _GLF_IDENTITY((~ (subgroup_local_id)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) | 0u))), ((~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) | 0u)))) << _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), clamp(0u, 0u, 0u)))) << 0u)) / (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), max(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), 0u ^ (max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))))))))), clamp(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), max(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), 0u ^ (max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))))))))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), max(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), 0u ^ (max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), max(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), 0u ^ (max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))))))))), ~ (~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), max(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY(max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), 0u ^ (max(0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))), 0u + ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))))))))) >> _GLF_IDENTITY(uint(7u), uint(7u))))) ^ 0u)))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY(_GLF_IDENTITY((1), max(_GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), max((1), (1))))), (1))), max(_GLF_IDENTITY((1), ((1)) - 0), (1))))) | (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1)), (1) + 0)))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), _GLF_IDENTITY((subgroup_size) - 0u, (_GLF_IDENTITY((subgroup_size) - 0u, ((subgroup_size) - 0u) >> 0u)) << 0u))) >> 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), _GLF_IDENTITY((subgroup_size) - 0u, (_GLF_IDENTITY((subgroup_size) - 0u, ((subgroup_size) - 0u) >> 0u)) << 0u))) >> 0u, clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), _GLF_IDENTITY((subgroup_size) - 0u, (_GLF_IDENTITY((subgroup_size) - 0u, ((subgroup_size) - 0u) >> 0u)) << 0u))) >> 0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), _GLF_IDENTITY((subgroup_size) - 0u, (_GLF_IDENTITY((subgroup_size) - 0u, ((subgroup_size) - 0u) >> 0u)) << 0u))) >> 0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), _GLF_IDENTITY((subgroup_size) - 0u, (_GLF_IDENTITY((subgroup_size) - 0u, ((subgroup_size) - 0u) >> 0u)) << 0u))) >> 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), _GLF_IDENTITY((subgroup_size) - 0u, (_GLF_IDENTITY((subgroup_size) - 0u, ((subgroup_size) - 0u) >> 0u)) << 0u))) >> 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), _GLF_IDENTITY((subgroup_size) - 0u, (_GLF_IDENTITY((subgroup_size) - 0u, ((subgroup_size) - 0u) >> 0u)) << 0u))) >> 0u) - 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), (subgroup_size) - 0u)) >> 0u) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) | ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))) | _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), max(uint(uvec3(0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), uint(uvec3(0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))), max(_GLF_IDENTITY(uint(uvec3(0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), max(uint(uvec3(0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), uint(uvec3(0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))), _GLF_IDENTITY(uint(uvec3(0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), max(uint(uvec3(0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), uint(uvec3(0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))))))))), (subgroup_size) - 0u)) >> 0u)))) : _GLF_FUZZED(subgroup_id)));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, _GLF_IDENTITY(false, ! (! (false)))))))), _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), true)))), _GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))) && true)), (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), round(length(normalize(cos(vec2(0.0, 0.0))))), 1.0, log(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0))) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, false || (_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, (1) - (0 >> _GLF_IDENTITY(int(2), int(2)))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)) < 1, false || (_injected_loop_counter < 1))) && true)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, (1 ^ 1))), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, max(1, 1))), (min(1, _GLF_IDENTITY(1, max(1, 1)))) | (min(1, _GLF_IDENTITY(1, max(1, 1)))))), 0, (1 ^ 1))))), (true ? (~ (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))))), 0, (1 ^ 1))))) : _GLF_FUZZED(int(3.4)))), 0 | ((_GLF_IDENTITY(~ (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1)))), 0, (_GLF_IDENTITY(1 ^ 1, (_GLF_IDENTITY(1 ^ 1, clamp(1 ^ 1, 1 ^ 1, 1 ^ 1))) / 1)))), max(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1)))), 0, (_GLF_IDENTITY(1 ^ 1, (_GLF_IDENTITY(1 ^ 1, clamp(1 ^ 1, 1 ^ 1, 1 ^ 1))) / 1)))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1)))), 0, (_GLF_IDENTITY(1 ^ 1, (_GLF_IDENTITY(1 ^ 1, clamp(1 ^ 1, 1 ^ 1, 1 ^ 1))) / 1)))), (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1)))), 0, (_GLF_IDENTITY(1 ^ 1, (_GLF_IDENTITY(1 ^ 1, clamp(1 ^ 1, 1 ^ 1, 1 ^ 1))) / 1))))) | (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1)))), 0, (_GLF_IDENTITY(1 ^ 1, (_GLF_IDENTITY(1 ^ 1, clamp(1 ^ 1, 1 ^ 1, 1 ^ 1))) / 1))))))))), _GLF_IDENTITY(int(ivec2(~ (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), max(max(1, 1), max(1, 1))), _GLF_IDENTITY(max(1, 1), min(max(1, 1), max(1, 1))), max(1, 1)))))), 0, (1 ^ 1)))), 1)), int(ivec4(int(ivec2(~ (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), min(1, _GLF_IDENTITY(1, max(1, 1)))), 0, (1 ^ 1)))), 1)), 0, 1, 0)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (0 << _GLF_IDENTITY(int(8), int(8))) ^ (clamp(4, 4, 4)))), (_GLF_IDENTITY(4, clamp(4, 4, 4))) | _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), ((_GLF_IDENTITY(4, clamp(4, 4, 4)))) | 0)), 4)), max(_GLF_IDENTITY(4, int(ivec3(4, (1 | 0), 0))), 4)), 64, 4);
  }
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
        {
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         atomicStore(checker[virtual_gid], read, 4, 64, 4);
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(92.34) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-253.966))) : _GLF_FUZZED(-6349.2369))), injectionSwitch.y, injectionSwitch.y))))))
          return;
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                continue;
               continue;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)))), (false ? _GLF_FUZZED(mat2x3(-8.4, -1.2, 9287.8812, 1674.1610, -5.8, 986.987)) : mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, 1.0))))).y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
                break;
               return;
              }
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY((1 | 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (1 | 1) : _GLF_FUZZED(_injected_loop_counter))), (_GLF_IDENTITY(_GLF_IDENTITY((1 | 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (1 | 1) : _GLF_FUZZED(_injected_loop_counter))), max(_GLF_IDENTITY((1 | 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (1 | 1) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY((1 | 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (1 | 1) : _GLF_FUZZED(_injected_loop_counter)))))) | (_GLF_IDENTITY((1 | 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (1 | 1) : _GLF_FUZZED(_injected_loop_counter)))))); _injected_loop_counter ++)
              {
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              break;
             break;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(exp(vec2(0.0, 0.0)))), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0)), clamp(vec2(vec3(injectionSwitch, 1.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / vec3(1.0, 1.0, 1.0))), (vec2(vec3(injectionSwitch, 1.0))) * vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), mix(vec2((_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), _GLF_IDENTITY(max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))), mix(_GLF_IDENTITY(vec2((max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))[0], _GLF_IDENTITY((max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))[1], (false ? _GLF_FUZZED(14.29) : (max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))[1]))), vec2(1.0, 1.0) * (vec2((max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))[0], _GLF_IDENTITY((max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))[1], (false ? _GLF_FUZZED(14.29) : (max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))[1]))))), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(-2.2)), bvec2(false, false)))), 0.0, 0.0, sin(0.0), 0.0)), (vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / cos(vec3(0.0, 0.0, 0.0)))), max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)))), mat2(1.0) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) / cos(vec3(0.0, 0.0, 0.0)))), max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)))))), 0.0, 0.0, sin(0.0), 0.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(min(vec2(mat2x3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), min(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0)))), max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)))), 0.0, 0.0, sin(0.0), 0.0)), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), _GLF_IDENTITY(max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))), min(max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))), max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)))))), 0.0, 0.0, sin(0.0), 0.0)), (_GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)))), 0.0, 0.0, sin(0.0), 0.0)), abs(vec2(0.0, 0.0)) + (vec2(mat2x3(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)))), 0.0, 0.0, sin(0.0), 0.0))))) - vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))) - 0.0) : _GLF_FUZZED(80.60)))))), max(_GLF_IDENTITY(min(vec2(mat2x3(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), vec3(1.0, 1.0, 1.0) * (vec3(injectionSwitch, 1.0)))), max(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - log(vec3(1.0, 1.0, 1.0)))), vec2(vec3(injectionSwitch, 1.0)))), 0.0, 0.0, sin(0.0), 0.0)), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), _GLF_IDENTITY(max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))), (max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)))) - vec2(0.0, 0.0))), 0.0, 0.0, sin(0.0), 0.0)), (vec2(mat2x3(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)))), 0.0, 0.0, sin(0.0), 0.0))) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), (true ? min(vec2(mat2x3(_GLF_IDENTITY(vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, tan(0.0) + (1.0)))), max(vec2(vec3(injectionSwitch, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.0)), bool(false))))), vec2(vec3(injectionSwitch, 1.0)))), 0.0, 0.0, sin(0.0), 0.0)), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)))), 0.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, 0.0 + _GLF_IDENTITY((0.0), 1.0 * (_GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0)))))))), _GLF_IDENTITY((vec2(mat2x3(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)))), 0.0, 0.0, sin(0.0), 0.0))) - vec2(0.0, 0.0), vec2(vec4((vec2(mat2x3(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), max(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), clamp(vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0), vec3(injectionSwitch, 1.0)))), vec2(vec3(injectionSwitch, 1.0)))), 0.0, 0.0, sin(0.0), 0.0))) - vec2(0.0, 0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))))) : _GLF_FUZZED(vec2(-8494.0163, -89.32)))), min(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (vec2(vec3(injectionSwitch, 1.0))) - vec2(0.0, 0.0)), max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)))), 0.0, 0.0, sin(0.0), 0.0)), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)))), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0))))) * abs(vec2(1.0, 1.0))), 0.0, 0.0, sin(0.0), 0.0)), (vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)))), mix(vec2(_GLF_FUZZED(0.0), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)))))[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)))))[0], min((_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)))))[0], (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), max(vec2(vec3(injectionSwitch, 1.0)), vec2(vec3(injectionSwitch, 1.0)))))[0])), _GLF_FUZZED(-685.460)), bvec2(true, false))), 0.0, 0.0, sin(0.0), 0.0))) - vec2(0.0, 0.0))))))))[0], _GLF_FUZZED(9.7)), vec2(_GLF_FUZZED(-974.734), (vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0), mix(vec3(_GLF_IDENTITY((vec3(injectionSwitch, 1.0))[0], clamp((vec3(injectionSwitch, 1.0))[0], (vec3(injectionSwitch, 1.0))[0], (vec3(injectionSwitch, 1.0))[0])), (vec3(injectionSwitch, 1.0))[1], _GLF_FUZZED(-6.5)), vec3(_GLF_FUZZED((9658.3537 / -37.93)), _GLF_FUZZED(8602.8351), _GLF_IDENTITY((vec3(injectionSwitch, 1.0))[2], _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY((vec3(injectionSwitch, 1.0))[2], clamp((vec3(injectionSwitch, 1.0))[2], (vec3(injectionSwitch, 1.0))[2], (vec3(injectionSwitch, 1.0))[2])), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0)), (float(mat3x4(_GLF_IDENTITY((vec3(injectionSwitch, 1.0))[2], clamp((vec3(injectionSwitch, 1.0))[2], (_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), max(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) * mat3(1.0)))), clamp(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), max(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) * mat3(1.0)))), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), max(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) * mat3(1.0)))), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), max(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) * mat3(1.0)))))))[2], (vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-98.82)), vec2(_GLF_FUZZED(11.61), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 1.0))[2])), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.0)), float(1.0), bool(true)))) / 1.0), 1.0))), float(_GLF_FUZZED(-939.446)), bool(false))), 0.0, 1.0, sqrt(1.0), 0.0))) / 1.0))), bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true)))))[1]), bvec2(false, true)))))).y))));
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             break;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
                break;
               return;
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), false), true, true))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, false || (false))), bvec2(bvec4(bvec2(false, false), true, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))))))))))))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  continue;
                 return;
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))
                continue;
              }
            }
          }
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               return;
              }
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              return;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), true)))), (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), true))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), true)))), (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), true))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))));
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
          {
          }
         else
          {
           do
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) ^ 0) - 0, (true ? _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) ^ 0) - 0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((0), ((0)) ^ 0) - 0)), (~ (~ (_GLF_IDENTITY((0), ((0)) ^ 0) - 0))) << 0)) : _GLF_FUZZED((~ -25215))))), 0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)), ! (! (_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) * 1))
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), ! (! (bool(bvec3(_GLF_DEAD(false), true, true)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_IDENTITY(true, (true) && true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false))))), (_GLF_IDENTITY(false, bool(bool(false)))) && true)), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true))), ! (! (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-9137.5437)), float(injectionSwitch[1]), bool(true))), injectionSwitch[1], injectionSwitch[1])))), (injectionSwitch[1]) - 0.0))))).y)) || (! (! (! (_GLF_DEAD(false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-9137.5437)), float(injectionSwitch[1]), bool(true))), injectionSwitch[1], injectionSwitch[1])))), (injectionSwitch[1]) - 0.0))))).y)) || (! (! (! (_GLF_DEAD(false)))))), bool(bvec4(_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-9137.5437)), float(injectionSwitch[1]), bool(true))), injectionSwitch[1], injectionSwitch[1])))), (injectionSwitch[1]) - 0.0))))).y)) || (! (! (! (_GLF_DEAD(false)))))), false, true, true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), bool(bvec3(! (! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, false || (false)), false)))))))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), ! (! (bool(bvec3(_GLF_DEAD(false), true, true)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_IDENTITY(true, (true) && true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false))))), (_GLF_IDENTITY(false, bool(bool(false)))) && true)), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true))), ! (! (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-9137.5437)), float(injectionSwitch[1]), bool(true))), injectionSwitch[1], injectionSwitch[1])))), (injectionSwitch[1]) - 0.0))))).y)) || (! (! (! (_GLF_DEAD(false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-9137.5437)), float(injectionSwitch[1]), bool(true))), injectionSwitch[1], injectionSwitch[1])))), (injectionSwitch[1]) - 0.0))))).y)) || (! (! (! (_GLF_DEAD(false)))))), bool(bvec4(_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-9137.5437)), float(injectionSwitch[1]), bool(true))), injectionSwitch[1], injectionSwitch[1])))), (injectionSwitch[1]) - 0.0))))).y)) || (! (! (! (_GLF_DEAD(false)))))), false, true, true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), bool(bvec3(! (! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, false || (false)), false)))))))) && true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), ! (! (bool(bvec3(_GLF_DEAD(false), true, true)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true), (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_IDENTITY(true, (true) && true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true)) && true))))) && true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true))), ! (! (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true)))))), true && (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true))), ! (! (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true)))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true))), ! (! ((! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-9137.5437)), float(injectionSwitch[1]), bool(true))), injectionSwitch[1], injectionSwitch[1])))), (injectionSwitch[1]) - 0.0))))).y)) || (! (! (! (_GLF_DEAD(false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch[1] : _GLF_FUZZED(66.17))), _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-9137.5437)), float(_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-6403.2514) : injectionSwitch[1]))), bool(true))), injectionSwitch[1], injectionSwitch[1])))), (injectionSwitch[1]) - 0.0))))).y)) || (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-9137.5437)), float(injectionSwitch[1]), bool(true))), injectionSwitch[1], injectionSwitch[1])))), (injectionSwitch[1]) - 0.0))))).y)) || (! (! (! (_GLF_DEAD(false)))))), false, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-9137.5437)), float(injectionSwitch[1]), bool(true))), injectionSwitch[1], injectionSwitch[1])))), (injectionSwitch[1]) - 0.0))))).y)) || (! (! (! (_GLF_DEAD(false)))))), false, true, true)), false, false, false)))), _GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), bool(bvec3(! (! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false, false || (false)), false)))))))) && _GLF_IDENTITY(true, false || (true))))))) || false))))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     do
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          return;
                         if(_GLF_DEAD(false))
                          continue;
                         continue;
                        }
                       do
                        {
                         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), (! (_GLF_WRAPPED_IF_FALSE(false))) && true)))))))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) / 1) > 0); _injected_loop_counter --)
                            {
                             if(_GLF_DEAD(false))
                              continue;
                             return;
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), true && ((! (false)))), true, true))))))))))), (false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))))) || false), _GLF_IDENTITY(true, false || (true)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))))) || false), _GLF_IDENTITY(true, false || (true)), true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))))) || false), _GLF_IDENTITY(true, false || (true)), true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))))) || false), _GLF_IDENTITY(true, false || (true)), true), false))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), true)))))), ! (! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))), true, true), true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(float(mat2((injectionSwitch.x), 0.0, 0.0, 0.0)), (_GLF_IDENTITY(float(mat2((injectionSwitch.x), 0.0, 0.0, 0.0)), (float(mat2((injectionSwitch.x), 0.0, 0.0, 0.0))) - 0.0)) + 0.0)) + 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + 0.0, ((injectionSwitch.x) + 0.0) / 1.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).x, (injectionSwitch.x) + 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.8)), bool(false)))) + 0.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0))), 0.0)))))), (false ? _GLF_FUZZED(floor(46.27)) : clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY((injectionSwitch.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((injectionSwitch.x), float(mat3x4((injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(7626.8701))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + 0.0, clamp(_GLF_IDENTITY((injectionSwitch.x) + 0.0, min((injectionSwitch.x) + 0.0, _GLF_IDENTITY((injectionSwitch.x) + 0.0, (_GLF_IDENTITY((injectionSwitch.x) + 0.0, 1.0 * ((injectionSwitch.x) + 0.0))) / 1.0))), _GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(-6.2)), float((injectionSwitch.x)), bool(true))) + 0.0, (injectionSwitch.x) + 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 0.0)), max(float(vec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 0.0)), float(vec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 0.0))))), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.0)), bool(false))))), (injectionSwitch.x) + 0.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).x, (injectionSwitch.x) + 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (float(mat2x3(0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) + 0.0), clamp(_GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (float(mat2x3(0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) + 0.0), _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (float(mat2x3(0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) + 0.0), _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (float(mat2x3(0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) + 0.0)))), clamp(0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, determinant(mat4(0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0))), 0.0))))))))) > injectionSwitch.y))));
                    }
                  }
                 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))))));
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
                  break;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(((1 & 1) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(max(_GLF_IDENTITY(((1 & 1) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), min(((1 & 1) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), ((1 & 1) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), ((1 & 1) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), ~ (~ (max(_GLF_IDENTITY(((1 & 1) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), min(((1 & 1) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), ((1 & 1) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), ((1 & 1) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-27013) : 4))), int(4))) >> _GLF_IDENTITY(int(4), int(4))))))))); _injected_loop_counter ++)
                    {
                     for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0, 0.0, exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-76.96)), float(0.0), bool(true)))))), (false ? _GLF_FUZZED(mat2x4(-337.830, -171.182, 481.709, 92.88, -2457.8863, 506.663, -5.3, 6411.3104)) : mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, 1.0, 1.0, 1.0, 0.0, exp(0.0), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0)))))))) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8602.5588)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) < injectionSwitch.y)), true, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8602.5588)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) < injectionSwitch.y)), true, false))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8602.5588)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) < injectionSwitch.y)), true, false))))), true, false, true)))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8602.5588)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) < injectionSwitch.y)), true, false))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8602.5588)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) < injectionSwitch.y)), true, false))))), true, false, true))))) && true))))
                        break;
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))
                          {
                           if(_GLF_DEAD(false))
                            continue;
                           return;
                          }
                         if(_GLF_DEAD(false))
                          break;
                         return;
                        }
                       return;
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            break;
                           return;
                          }
                         continue;
                        }
                      }
                    }
                  }
                 else
                  {
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
            return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
            }
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || false)))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || false, ! (! ((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || false))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).x, (injectionSwitch.x) * _GLF_IDENTITY(1.0, (1.0) * 1.0)) > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))))
      return;
     for(int _injected_loop_counter = _GLF_IDENTITY(1, 1 * (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       do
        {
         do
          {
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
  }
}
