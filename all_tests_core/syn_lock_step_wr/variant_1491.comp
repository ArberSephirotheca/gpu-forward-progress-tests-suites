#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false))))))))))
        barrier();
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             barrier();
            }
          }
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y))), float(_GLF_FUZZED(-7.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y), clamp(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y, mix(float(_GLF_FUZZED(((-70.77 + -1.5)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y))), bool(true)))))), float(_GLF_FUZZED(-7.6)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), true)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), true))))))), false, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), true)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), true))))))), false, true)), true, false)))))))))) || false)))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           do
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, exp(0.0), 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY((float(mat3x2(injectionSwitch.y, exp(0.0), 0.0, 0.0, 1.0, 1.0))) + 0.0, float(mat4((float(mat3x2(injectionSwitch.y, exp(0.0), 0.0, 0.0, 1.0, 1.0))) + 0.0, 1.0, 1.0, abs(1.0), tan(0.0), 1.0, 1.0, cos(0.0), sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0)))))), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))));
          }
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(888.538))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))))
  barrier();
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-82200) : _GLF_IDENTITY(int(5), int(5)))))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-38.31)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1), _injected_loop_counter)) != int(_GLF_ZERO(0.0, injectionSwitch.x)), ! (! (_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))))); _injected_loop_counter --)
    {
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), false, false, false)))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(bvec2(! (injectionSwitch.x < injectionSwitch.y), true))))))))))))
              {
               barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
              barrier();
            }
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       barrier();
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, 1 * (1))), (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - _GLF_IDENTITY(0, (0) * ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))) : ~ (_GLF_IDENTITY(1, _GLF_IDENTITY(1, (1) << 0) * (1)))))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1687.0287)), vec2(_GLF_IDENTITY(_GLF_FUZZED(1.4), min(_GLF_IDENTITY(_GLF_FUZZED(1.4), 0.0 + (_GLF_FUZZED(1.4))), _GLF_IDENTITY(_GLF_FUZZED(1.4), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-3.6), 1.0 * (_GLF_FUZZED(-3.6)))), float(_GLF_FUZZED(1.4)), bool(true))))), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.6)), float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, sqrt(0.0), 0.0))), injectionSwitch, injectionSwitch)).x), bool(true))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9541.5622) : injectionSwitch.y))), bool(true))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true)))))), true && (_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), true && (_GLF_IDENTITY(! (bool(true)), (! (bool(true))) && true))))))))))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(1.0) : _GLF_FUZZED(-44.99)))), float(injectionSwitch.y), bool(true)))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).y), bool(true))))), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(1.0)), _GLF_IDENTITY(float(injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(injectionSwitch.y), clamp(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), float(injectionSwitch.y))), 1.0, 1.0, 0.0, sin(0.0), 1.0), (mat3x2(_GLF_IDENTITY(float(injectionSwitch.y), clamp(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), float(injectionSwitch.y))), 1.0, 1.0, 0.0, sin(0.0), 1.0)) - mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true)))), max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)))), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), false || (bool(true))))), (false ? _GLF_FUZZED(max(-2644.1307, 14.55)) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))))), float(_GLF_FUZZED(-20.94)), bool(false))))), float(injectionSwitch.y), bool(true)))))))))))) - abs(0.0)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, abs(0.0), 0.0))))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-463.210), _GLF_FUZZED(7.8)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-960.956, min(_GLF_IDENTITY(-960.956, (true ? -960.956 : _GLF_FUZZED(-2.7))), -960.956)))), min(float(_GLF_FUZZED(-960.956)), float(_GLF_FUZZED(-960.956)))), float((injectionSwitch)[1]), bool(true)))), _GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec4(bvec3(bvec2(true, true), false), false))))))).y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (true) && true))))))) - abs(0.0))), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), bool(true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED((float(133857u) - -0.3))), bool(false))))), min(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), max(_GLF_IDENTITY(_GLF_FUZZED(1.0), clamp(_GLF_FUZZED(1.0), _GLF_FUZZED(1.0), _GLF_FUZZED(1.0))), _GLF_IDENTITY(_GLF_FUZZED(1.0), max(_GLF_FUZZED(1.0), _GLF_FUZZED(1.0)))))), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))) : _GLF_FUZZED(-8.2)))))) - _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), _GLF_IDENTITY(abs(0.0), 0.0 + (abs(0.0)))))))))))))))) && true), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.6)), _GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), bool(true))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9541.5622) : injectionSwitch.y))), bool(true))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true))))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true))))), true, true))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), ! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true)))))))))))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), bvec2(true, false))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).y), bool(true))))), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))) * (injectionSwitch)).y, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), max(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), min(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), max(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), _GLF_IDENTITY(float(_GLF_FUZZED(1.0)), max(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))))), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-0.9)), float(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0)), float(vec4(float(mat3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-0.9)), float(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0)), 0.0, 1.0, 0.0))))))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), float(mat2x4(_GLF_IDENTITY(max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), max(max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)))))), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), (false ? _GLF_FUZZED(max(-2644.1307, 14.55)) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), mat2(1.0) * (mat4x2(_GLF_IDENTITY(_GLF_FUZZED(1.0), (true ? _GLF_FUZZED(1.0) : _GLF_FUZZED(_GLF_IDENTITY(-8.6, float(mat4x3(_GLF_IDENTITY(-8.6, (-8.6) - 0.0), 0.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, abs(1.0), tan(0.0))))))), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))))), float(_GLF_IDENTITY(_GLF_FUZZED(-20.94), clamp(_GLF_FUZZED(-20.94), _GLF_FUZZED(-20.94), _GLF_FUZZED(-20.94)))), bool(false))))), float(injectionSwitch.y), bool(true)))))))))))) - _GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-79.16)), float(abs(0.0)), bool(true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, abs(0.0), 0.0), (_GLF_IDENTITY(vec4(injectionSwitch, abs(0.0), 0.0), vec4(mat4(vec4(injectionSwitch, abs(0.0), 0.0), 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))) * vec4(1.0, 1.0, 1.0, 1.0)))))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-463.210), clamp(_GLF_IDENTITY(_GLF_FUZZED(-463.210), (_GLF_FUZZED(-463.210)) * 1.0), _GLF_FUZZED(-463.210), _GLF_FUZZED(-463.210))), _GLF_FUZZED(7.8)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-960.956, min(_GLF_IDENTITY(-960.956, (true ? _GLF_IDENTITY(-960.956, abs(0.0) + (-960.956)) : _GLF_FUZZED(-2.7))), -960.956)))), min(float(_GLF_FUZZED(-960.956)), float(_GLF_FUZZED(-960.956)))), float(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-9.9)), float((injectionSwitch)[1]), bool(true)))), bool(true)))), bvec2(true, true))).y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (true) && true))))))) - abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)))), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), bool(true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(-8.2))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), bool(true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), _GLF_IDENTITY(min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0))), mix(float(_GLF_FUZZED(vec3(-3.0, vec2(2.5, -33.21)).t)), float(_GLF_IDENTITY(min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0))), (min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))) + 0.0)), bool(true)))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(-8.2)))) / 1.0)))) - _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), _GLF_IDENTITY(abs(0.0), 0.0 + (abs(0.0)))))))))))))))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.6)), float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, sqrt(0.0), 0.0))), injectionSwitch, injectionSwitch)).x), bool(true))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9541.5622) : injectionSwitch.y))), bool(true))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true)))))), true && (_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), true && (_GLF_IDENTITY(! (bool(true)), (! (bool(true))) && true))))))))))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(1.0) : _GLF_FUZZED(-44.99)))), float(injectionSwitch.y), bool(true)))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).y), bool(true))))), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(1.0)), _GLF_IDENTITY(float(injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(injectionSwitch.y), clamp(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), float(injectionSwitch.y))), 1.0, 1.0, 0.0, sin(0.0), 1.0), (mat3x2(_GLF_IDENTITY(float(injectionSwitch.y), clamp(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), float(injectionSwitch.y))), 1.0, 1.0, 0.0, sin(0.0), 1.0)) - mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true)))), max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)))), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), false || (bool(true))))), (false ? _GLF_FUZZED(max(-2644.1307, 14.55)) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))))), float(_GLF_FUZZED(-20.94)), bool(false))))), float(injectionSwitch.y), bool(true)))))))))))) - abs(0.0)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, abs(0.0), 0.0))))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-463.210), _GLF_FUZZED(7.8)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-960.956, min(_GLF_IDENTITY(-960.956, (true ? -960.956 : _GLF_FUZZED(-2.7))), -960.956)))), min(float(_GLF_FUZZED(-960.956)), float(_GLF_FUZZED(-960.956)))), float((injectionSwitch)[1]), bool(true)))), _GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec4(bvec3(bvec2(true, true), false), false))))))).y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (true) && true))))))) - abs(0.0))), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), bool(true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED((float(133857u) - -0.3))), bool(false))))), min(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), max(_GLF_IDENTITY(_GLF_FUZZED(1.0), clamp(_GLF_FUZZED(1.0), _GLF_FUZZED(1.0), _GLF_FUZZED(1.0))), _GLF_IDENTITY(_GLF_FUZZED(1.0), max(_GLF_FUZZED(1.0), _GLF_FUZZED(1.0)))))), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))) : _GLF_FUZZED(-8.2)))))) - _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), _GLF_IDENTITY(abs(0.0), 0.0 + (abs(0.0)))))))))))))))) && true), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.6)), _GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), bool(true))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9541.5622) : injectionSwitch.y))), bool(true))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true))))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true))))), true, true))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), ! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true)))))))))))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), bvec2(true, false))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).y), bool(true))))), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))) * (injectionSwitch)).y, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), max(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), min(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), max(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), _GLF_IDENTITY(float(_GLF_FUZZED(1.0)), max(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))))), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-0.9)), float(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0)), float(vec4(float(mat3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-0.9)), float(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0)), 0.0, 1.0, 0.0))))))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), float(mat2x4(_GLF_IDENTITY(max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), max(max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)))))), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), (false ? _GLF_FUZZED(max(-2644.1307, 14.55)) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), mat2(1.0) * (mat4x2(_GLF_IDENTITY(_GLF_FUZZED(1.0), (true ? _GLF_FUZZED(1.0) : _GLF_FUZZED(_GLF_IDENTITY(-8.6, float(mat4x3(_GLF_IDENTITY(-8.6, (-8.6) - 0.0), 0.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, abs(1.0), tan(0.0))))))), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))))), float(_GLF_IDENTITY(_GLF_FUZZED(-20.94), clamp(_GLF_FUZZED(-20.94), _GLF_FUZZED(-20.94), _GLF_FUZZED(-20.94)))), bool(false))))), float(injectionSwitch.y), bool(true)))))))))))) - _GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-79.16)), float(abs(0.0)), bool(true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, abs(0.0), 0.0), (_GLF_IDENTITY(vec4(injectionSwitch, abs(0.0), 0.0), vec4(mat4(vec4(injectionSwitch, abs(0.0), 0.0), 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))) * vec4(1.0, 1.0, 1.0, 1.0)))))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-463.210), clamp(_GLF_IDENTITY(_GLF_FUZZED(-463.210), (_GLF_FUZZED(-463.210)) * 1.0), _GLF_FUZZED(-463.210), _GLF_FUZZED(-463.210))), _GLF_FUZZED(7.8)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-960.956, min(_GLF_IDENTITY(-960.956, (true ? _GLF_IDENTITY(-960.956, abs(0.0) + (-960.956)) : _GLF_FUZZED(-2.7))), -960.956)))), min(float(_GLF_FUZZED(-960.956)), float(_GLF_FUZZED(-960.956)))), float(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-9.9)), float((injectionSwitch)[1]), bool(true)))), bool(true)))), bvec2(true, true))).y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (true) && true))))))) - abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)))), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), bool(true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(-8.2))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), bool(true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), _GLF_IDENTITY(min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0))), mix(float(_GLF_FUZZED(vec3(-3.0, vec2(2.5, -33.21)).t)), float(_GLF_IDENTITY(min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0))), (min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))) + 0.0)), bool(true)))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(-8.2)))) / 1.0)))) - _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), _GLF_IDENTITY(abs(0.0), 0.0 + (abs(0.0)))))))))))))))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.6)), float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, sqrt(0.0), 0.0))), injectionSwitch, injectionSwitch)).x), bool(true))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9541.5622) : injectionSwitch.y))), bool(true))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true)))))), true && (_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), true && (_GLF_IDENTITY(! (bool(true)), (! (bool(true))) && true))))))))))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(1.0) : _GLF_FUZZED(-44.99)))), float(injectionSwitch.y), bool(true)))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).y), bool(true))))), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(1.0)), _GLF_IDENTITY(float(injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(injectionSwitch.y), clamp(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), float(injectionSwitch.y))), 1.0, 1.0, 0.0, sin(0.0), 1.0), (mat3x2(_GLF_IDENTITY(float(injectionSwitch.y), clamp(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), float(injectionSwitch.y))), 1.0, 1.0, 0.0, sin(0.0), 1.0)) - mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true)))), max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)))), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), false || (bool(true))))), (false ? _GLF_FUZZED(max(-2644.1307, 14.55)) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))))), float(_GLF_FUZZED(-20.94)), bool(false))))), float(injectionSwitch.y), bool(true)))))))))))) - abs(0.0)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, abs(0.0), 0.0))))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-463.210), _GLF_FUZZED(7.8)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-960.956, min(_GLF_IDENTITY(-960.956, (true ? -960.956 : _GLF_FUZZED(-2.7))), -960.956)))), min(float(_GLF_FUZZED(-960.956)), float(_GLF_FUZZED(-960.956)))), float((injectionSwitch)[1]), bool(true)))), _GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec4(bvec3(bvec2(true, true), false), false))))))).y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (true) && true))))))) - abs(0.0))), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), bool(true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED((float(133857u) - -0.3))), bool(false))))), min(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), max(_GLF_IDENTITY(_GLF_FUZZED(1.0), clamp(_GLF_FUZZED(1.0), _GLF_FUZZED(1.0), _GLF_FUZZED(1.0))), _GLF_IDENTITY(_GLF_FUZZED(1.0), max(_GLF_FUZZED(1.0), _GLF_FUZZED(1.0)))))), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))) : _GLF_FUZZED(-8.2)))))) - _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), _GLF_IDENTITY(abs(0.0), 0.0 + (abs(0.0)))))))))))))))) && true), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.6)), _GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), bool(true))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9541.5622) : injectionSwitch.y))), bool(true))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true))))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true))))), true, true))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), ! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true)))))))))))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), bvec2(true, false))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).y), bool(true))))), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))) * (injectionSwitch)).y, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), max(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), min(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), max(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), _GLF_IDENTITY(float(_GLF_FUZZED(1.0)), max(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))))), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-0.9)), float(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0)), float(vec4(float(mat3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-0.9)), float(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0)), 0.0, 1.0, 0.0))))))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), float(mat2x4(_GLF_IDENTITY(max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), max(max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)))))), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), (false ? _GLF_FUZZED(max(-2644.1307, 14.55)) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), mat2(1.0) * (mat4x2(_GLF_IDENTITY(_GLF_FUZZED(1.0), (true ? _GLF_FUZZED(1.0) : _GLF_FUZZED(_GLF_IDENTITY(-8.6, float(mat4x3(_GLF_IDENTITY(-8.6, (-8.6) - 0.0), 0.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, abs(1.0), tan(0.0))))))), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))))), float(_GLF_IDENTITY(_GLF_FUZZED(-20.94), clamp(_GLF_FUZZED(-20.94), _GLF_FUZZED(-20.94), _GLF_FUZZED(-20.94)))), bool(false))))), float(injectionSwitch.y), bool(true)))))))))))) - _GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-79.16)), float(abs(0.0)), bool(true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, abs(0.0), 0.0), (_GLF_IDENTITY(vec4(injectionSwitch, abs(0.0), 0.0), vec4(mat4(vec4(injectionSwitch, abs(0.0), 0.0), 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))) * vec4(1.0, 1.0, 1.0, 1.0)))))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-463.210), clamp(_GLF_IDENTITY(_GLF_FUZZED(-463.210), (_GLF_FUZZED(-463.210)) * 1.0), _GLF_FUZZED(-463.210), _GLF_FUZZED(-463.210))), _GLF_FUZZED(7.8)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-960.956, min(_GLF_IDENTITY(-960.956, (true ? _GLF_IDENTITY(-960.956, abs(0.0) + (-960.956)) : _GLF_FUZZED(-2.7))), -960.956)))), min(float(_GLF_FUZZED(-960.956)), float(_GLF_FUZZED(-960.956)))), float(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-9.9)), float((injectionSwitch)[1]), bool(true)))), bool(true)))), bvec2(true, true))).y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (true) && true))))))) - abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)))), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), bool(true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(-8.2))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), bool(true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), _GLF_IDENTITY(min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0))), mix(float(_GLF_FUZZED(vec3(-3.0, vec2(2.5, -33.21)).t)), float(_GLF_IDENTITY(min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0))), (min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))) + 0.0)), bool(true)))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(-8.2)))) / 1.0)))) - _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), _GLF_IDENTITY(abs(0.0), 0.0 + (abs(0.0)))))))))))))))) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.6)), float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, sqrt(0.0), 0.0))), injectionSwitch, injectionSwitch)).x), bool(true))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9541.5622) : injectionSwitch.y))), bool(true))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true)))))), true && (_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), true && (_GLF_IDENTITY(! (bool(true)), (! (bool(true))) && true))))))))))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(1.0) : _GLF_FUZZED(-44.99)))), float(injectionSwitch.y), bool(true)))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).y), bool(true))))), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(1.0)), _GLF_IDENTITY(float(injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(injectionSwitch.y), clamp(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), float(injectionSwitch.y))), 1.0, 1.0, 0.0, sin(0.0), 1.0), (mat3x2(_GLF_IDENTITY(float(injectionSwitch.y), clamp(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), float(injectionSwitch.y))), 1.0, 1.0, 0.0, sin(0.0), 1.0)) - mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true)))), max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)))), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), false || (bool(true))))), (false ? _GLF_FUZZED(max(-2644.1307, 14.55)) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))))), float(_GLF_FUZZED(-20.94)), bool(false))))), float(injectionSwitch.y), bool(true)))))))))))) - abs(0.0)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, abs(0.0), 0.0))))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-463.210), _GLF_FUZZED(7.8)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-960.956, min(_GLF_IDENTITY(-960.956, (true ? -960.956 : _GLF_FUZZED(-2.7))), -960.956)))), min(float(_GLF_FUZZED(-960.956)), float(_GLF_FUZZED(-960.956)))), float((injectionSwitch)[1]), bool(true)))), _GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec4(bvec3(bvec2(true, true), false), false))))))).y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (true) && true))))))) - abs(0.0))), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), bool(true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED((float(133857u) - -0.3))), bool(false))))), min(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), max(_GLF_IDENTITY(_GLF_FUZZED(1.0), clamp(_GLF_FUZZED(1.0), _GLF_FUZZED(1.0), _GLF_FUZZED(1.0))), _GLF_IDENTITY(_GLF_FUZZED(1.0), max(_GLF_FUZZED(1.0), _GLF_FUZZED(1.0)))))), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))) : _GLF_FUZZED(-8.2)))))) - _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), _GLF_IDENTITY(abs(0.0), 0.0 + (abs(0.0)))))))))))))))) && true), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.6)), _GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), bool(true))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9541.5622) : injectionSwitch.y))), bool(true))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true))))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true))))), true, true))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), ! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true)))))))))))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), bvec2(true, false))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).y), bool(true))))), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))) * (injectionSwitch)).y, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), max(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), min(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), max(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), _GLF_IDENTITY(float(_GLF_FUZZED(1.0)), max(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))))), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-0.9)), float(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0)), float(vec4(float(mat3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-0.9)), float(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0)), 0.0, 1.0, 0.0))))))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), float(mat2x4(_GLF_IDENTITY(max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), max(max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)))))), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), (false ? _GLF_FUZZED(max(-2644.1307, 14.55)) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), mat2(1.0) * (mat4x2(_GLF_IDENTITY(_GLF_FUZZED(1.0), (true ? _GLF_FUZZED(1.0) : _GLF_FUZZED(_GLF_IDENTITY(-8.6, float(mat4x3(_GLF_IDENTITY(-8.6, (-8.6) - 0.0), 0.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, abs(1.0), tan(0.0))))))), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))))), float(_GLF_IDENTITY(_GLF_FUZZED(-20.94), clamp(_GLF_FUZZED(-20.94), _GLF_FUZZED(-20.94), _GLF_FUZZED(-20.94)))), bool(false))))), float(injectionSwitch.y), bool(true)))))))))))) - _GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-79.16)), float(abs(0.0)), bool(true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, abs(0.0), 0.0), (_GLF_IDENTITY(vec4(injectionSwitch, abs(0.0), 0.0), vec4(mat4(vec4(injectionSwitch, abs(0.0), 0.0), 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))) * vec4(1.0, 1.0, 1.0, 1.0)))))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-463.210), clamp(_GLF_IDENTITY(_GLF_FUZZED(-463.210), (_GLF_FUZZED(-463.210)) * 1.0), _GLF_FUZZED(-463.210), _GLF_FUZZED(-463.210))), _GLF_FUZZED(7.8)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-960.956, min(_GLF_IDENTITY(-960.956, (true ? _GLF_IDENTITY(-960.956, abs(0.0) + (-960.956)) : _GLF_FUZZED(-2.7))), -960.956)))), min(float(_GLF_FUZZED(-960.956)), float(_GLF_FUZZED(-960.956)))), float(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-9.9)), float((injectionSwitch)[1]), bool(true)))), bool(true)))), bvec2(true, true))).y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (true) && true))))))) - abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)))), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), bool(true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(-8.2))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), bool(true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), _GLF_IDENTITY(min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0))), mix(float(_GLF_FUZZED(vec3(-3.0, vec2(2.5, -33.21)).t)), float(_GLF_IDENTITY(min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0))), (min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))) + 0.0)), bool(true)))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(-8.2)))) / 1.0)))) - _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), _GLF_IDENTITY(abs(0.0), 0.0 + (abs(0.0)))))))))))))))) && true))))))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.6)), float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, sqrt(0.0), 0.0))), injectionSwitch, injectionSwitch)).x), bool(true))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9541.5622) : injectionSwitch.y))), bool(true))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true)))))), true && (_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), true && (_GLF_IDENTITY(! (bool(true)), (! (bool(true))) && true))))))))))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(1.0) : _GLF_FUZZED(-44.99)))), float(injectionSwitch.y), bool(true)))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).y), bool(true))))), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(1.0)), _GLF_IDENTITY(float(injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(injectionSwitch.y), clamp(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), float(injectionSwitch.y))), 1.0, 1.0, 0.0, sin(0.0), 1.0), (mat3x2(_GLF_IDENTITY(float(injectionSwitch.y), clamp(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), float(injectionSwitch.y))), 1.0, 1.0, 0.0, sin(0.0), 1.0)) - mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true)))), max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)))), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), false || (bool(true))))), (false ? _GLF_FUZZED(max(-2644.1307, 14.55)) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))))), float(_GLF_FUZZED(-20.94)), bool(false))))), float(injectionSwitch.y), bool(true)))))))))))) - abs(0.0)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, abs(0.0), 0.0))))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-463.210), _GLF_FUZZED(7.8)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-960.956, min(_GLF_IDENTITY(-960.956, (true ? -960.956 : _GLF_FUZZED(-2.7))), -960.956)))), min(float(_GLF_FUZZED(-960.956)), float(_GLF_FUZZED(-960.956)))), float((injectionSwitch)[1]), bool(true)))), _GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec4(bvec3(bvec2(true, true), false), false))))))).y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (true) && true))))))) - abs(0.0))), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), bool(true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED((float(133857u) - -0.3))), bool(false))))), min(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), max(_GLF_IDENTITY(_GLF_FUZZED(1.0), clamp(_GLF_FUZZED(1.0), _GLF_FUZZED(1.0), _GLF_FUZZED(1.0))), _GLF_IDENTITY(_GLF_FUZZED(1.0), max(_GLF_FUZZED(1.0), _GLF_FUZZED(1.0)))))), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))) : _GLF_FUZZED(-8.2)))))) - _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), _GLF_IDENTITY(abs(0.0), 0.0 + (abs(0.0)))))))))))))))) && true), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.6)), _GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), bool(true))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9541.5622) : injectionSwitch.y))), bool(true))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true))))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true))))), true, true))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), ! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true)))))))))))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), bvec2(true, false))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).y), bool(true))))), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))) * (injectionSwitch)).y, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), max(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), min(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), max(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), _GLF_IDENTITY(float(_GLF_FUZZED(1.0)), max(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))))), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-0.9)), float(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0)), float(vec4(float(mat3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-0.9)), float(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0)), 0.0, 1.0, 0.0))))))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), float(mat2x4(_GLF_IDENTITY(max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), max(max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)))))), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), (false ? _GLF_FUZZED(max(-2644.1307, 14.55)) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), mat2(1.0) * (mat4x2(_GLF_IDENTITY(_GLF_FUZZED(1.0), (true ? _GLF_FUZZED(1.0) : _GLF_FUZZED(_GLF_IDENTITY(-8.6, float(mat4x3(_GLF_IDENTITY(-8.6, (-8.6) - 0.0), 0.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, abs(1.0), tan(0.0))))))), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))))), float(_GLF_IDENTITY(_GLF_FUZZED(-20.94), clamp(_GLF_FUZZED(-20.94), _GLF_FUZZED(-20.94), _GLF_FUZZED(-20.94)))), bool(false))))), float(injectionSwitch.y), bool(true)))))))))))) - _GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-79.16)), float(abs(0.0)), bool(true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, abs(0.0), 0.0), (_GLF_IDENTITY(vec4(injectionSwitch, abs(0.0), 0.0), vec4(mat4(vec4(injectionSwitch, abs(0.0), 0.0), 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))) * vec4(1.0, 1.0, 1.0, 1.0)))))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-463.210), clamp(_GLF_IDENTITY(_GLF_FUZZED(-463.210), (_GLF_FUZZED(-463.210)) * 1.0), _GLF_FUZZED(-463.210), _GLF_FUZZED(-463.210))), _GLF_FUZZED(7.8)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-960.956, min(_GLF_IDENTITY(-960.956, (true ? _GLF_IDENTITY(-960.956, abs(0.0) + (-960.956)) : _GLF_FUZZED(-2.7))), -960.956)))), min(float(_GLF_FUZZED(-960.956)), float(_GLF_FUZZED(-960.956)))), float(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-9.9)), float((injectionSwitch)[1]), bool(true)))), bool(true)))), bvec2(true, true))).y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (true) && true))))))) - abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)))), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), bool(true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(-8.2))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), bool(true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), _GLF_IDENTITY(min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0))), mix(float(_GLF_FUZZED(vec3(-3.0, vec2(2.5, -33.21)).t)), float(_GLF_IDENTITY(min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0))), (min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))) + 0.0)), bool(true)))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(-8.2)))) / 1.0)))) - _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), _GLF_IDENTITY(abs(0.0), 0.0 + (abs(0.0)))))))))))))))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.6)), float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, sqrt(0.0), 0.0))), injectionSwitch, injectionSwitch)).x), bool(true))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9541.5622) : injectionSwitch.y))), bool(true))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true)))))), true && (_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), true && (_GLF_IDENTITY(! (bool(true)), (! (bool(true))) && true))))))))))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(1.0) : _GLF_FUZZED(-44.99)))), float(injectionSwitch.y), bool(true)))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).y), bool(true))))), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(1.0)), _GLF_IDENTITY(float(injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(injectionSwitch.y), clamp(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), float(injectionSwitch.y))), 1.0, 1.0, 0.0, sin(0.0), 1.0), (mat3x2(_GLF_IDENTITY(float(injectionSwitch.y), clamp(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), float(injectionSwitch.y))), 1.0, 1.0, 0.0, sin(0.0), 1.0)) - mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true)))), max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)))), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), false || (bool(true))))), (false ? _GLF_FUZZED(max(-2644.1307, 14.55)) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))))), float(_GLF_FUZZED(-20.94)), bool(false))))), float(injectionSwitch.y), bool(true)))))))))))) - abs(0.0)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, abs(0.0), 0.0))))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-463.210), _GLF_FUZZED(7.8)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-960.956, min(_GLF_IDENTITY(-960.956, (true ? -960.956 : _GLF_FUZZED(-2.7))), -960.956)))), min(float(_GLF_FUZZED(-960.956)), float(_GLF_FUZZED(-960.956)))), float((injectionSwitch)[1]), bool(true)))), _GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec4(bvec3(bvec2(true, true), false), false))))))).y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (true) && true))))))) - abs(0.0))), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), bool(true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED((float(133857u) - -0.3))), bool(false))))), min(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), max(_GLF_IDENTITY(_GLF_FUZZED(1.0), clamp(_GLF_FUZZED(1.0), _GLF_FUZZED(1.0), _GLF_FUZZED(1.0))), _GLF_IDENTITY(_GLF_FUZZED(1.0), max(_GLF_FUZZED(1.0), _GLF_FUZZED(1.0)))))), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))) : _GLF_FUZZED(-8.2)))))) - _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), _GLF_IDENTITY(abs(0.0), 0.0 + (abs(0.0)))))))))))))))) && true), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.6)), _GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), bool(true))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9541.5622) : injectionSwitch.y))), bool(true))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true))))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true))))), true, true))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), ! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true)))))))))))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), bvec2(true, false))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).y), bool(true))))), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))) * (injectionSwitch)).y, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), max(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), min(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), max(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), _GLF_IDENTITY(float(_GLF_FUZZED(1.0)), max(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))))), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-0.9)), float(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0)), float(vec4(float(mat3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-0.9)), float(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0)), 0.0, 1.0, 0.0))))))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), float(mat2x4(_GLF_IDENTITY(max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), max(max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)))))), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), (false ? _GLF_FUZZED(max(-2644.1307, 14.55)) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), mat2(1.0) * (mat4x2(_GLF_IDENTITY(_GLF_FUZZED(1.0), (true ? _GLF_FUZZED(1.0) : _GLF_FUZZED(_GLF_IDENTITY(-8.6, float(mat4x3(_GLF_IDENTITY(-8.6, (-8.6) - 0.0), 0.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, abs(1.0), tan(0.0))))))), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))))), float(_GLF_IDENTITY(_GLF_FUZZED(-20.94), clamp(_GLF_FUZZED(-20.94), _GLF_FUZZED(-20.94), _GLF_FUZZED(-20.94)))), bool(false))))), float(injectionSwitch.y), bool(true)))))))))))) - _GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-79.16)), float(abs(0.0)), bool(true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, abs(0.0), 0.0), (_GLF_IDENTITY(vec4(injectionSwitch, abs(0.0), 0.0), vec4(mat4(vec4(injectionSwitch, abs(0.0), 0.0), 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))) * vec4(1.0, 1.0, 1.0, 1.0)))))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-463.210), clamp(_GLF_IDENTITY(_GLF_FUZZED(-463.210), (_GLF_FUZZED(-463.210)) * 1.0), _GLF_FUZZED(-463.210), _GLF_FUZZED(-463.210))), _GLF_FUZZED(7.8)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-960.956, min(_GLF_IDENTITY(-960.956, (true ? _GLF_IDENTITY(-960.956, abs(0.0) + (-960.956)) : _GLF_FUZZED(-2.7))), -960.956)))), min(float(_GLF_FUZZED(-960.956)), float(_GLF_FUZZED(-960.956)))), float(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-9.9)), float((injectionSwitch)[1]), bool(true)))), bool(true)))), bvec2(true, true))).y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (true) && true))))))) - abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)))), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), bool(true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(-8.2))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), bool(true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), _GLF_IDENTITY(min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0))), mix(float(_GLF_FUZZED(vec3(-3.0, vec2(2.5, -33.21)).t)), float(_GLF_IDENTITY(min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0))), (min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))) + 0.0)), bool(true)))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(-8.2)))) / 1.0)))) - _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), _GLF_IDENTITY(abs(0.0), 0.0 + (abs(0.0)))))))))))))))) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.6)), float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, sqrt(0.0), 0.0))), injectionSwitch, injectionSwitch)).x), bool(true))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9541.5622) : injectionSwitch.y))), bool(true))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true)))))), true && (_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), true && (_GLF_IDENTITY(! (bool(true)), (! (bool(true))) && true))))))))))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(1.0) : _GLF_FUZZED(-44.99)))), float(injectionSwitch.y), bool(true)))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).y), bool(true))))), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(1.0)), _GLF_IDENTITY(float(injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(injectionSwitch.y), clamp(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), float(injectionSwitch.y))), 1.0, 1.0, 0.0, sin(0.0), 1.0), (mat3x2(_GLF_IDENTITY(float(injectionSwitch.y), clamp(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0), _GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), float(injectionSwitch.y))), 1.0, 1.0, 0.0, sin(0.0), 1.0)) - mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true)))), max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)))), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), false || (bool(true))))), (false ? _GLF_FUZZED(max(-2644.1307, 14.55)) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))))), float(_GLF_FUZZED(-20.94)), bool(false))))), float(injectionSwitch.y), bool(true)))))))))))) - abs(0.0)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, abs(0.0), 0.0))))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-463.210), _GLF_FUZZED(7.8)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-960.956, min(_GLF_IDENTITY(-960.956, (true ? -960.956 : _GLF_FUZZED(-2.7))), -960.956)))), min(float(_GLF_FUZZED(-960.956)), float(_GLF_FUZZED(-960.956)))), float((injectionSwitch)[1]), bool(true)))), _GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec4(bvec3(bvec2(true, true), false), false))))))).y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (true) && true))))))) - abs(0.0))), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), bool(true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), float(_GLF_FUZZED((float(133857u) - -0.3))), bool(false))))), min(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), max(_GLF_IDENTITY(_GLF_FUZZED(1.0), clamp(_GLF_FUZZED(1.0), _GLF_FUZZED(1.0), _GLF_FUZZED(1.0))), _GLF_IDENTITY(_GLF_FUZZED(1.0), max(_GLF_FUZZED(1.0), _GLF_FUZZED(1.0)))))), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))) : _GLF_FUZZED(-8.2)))))) - _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), _GLF_IDENTITY(abs(0.0), 0.0 + (abs(0.0)))))))))))))))) && true), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.6)), _GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), bool(true))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9541.5622) : injectionSwitch.y))), bool(true))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true))))), true, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true))))), true, true))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), ! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true)))))))))))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), bvec2(true, false))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).y), bool(true))))), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))) * (injectionSwitch)).y, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), max(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), min(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), max(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), _GLF_IDENTITY(float(_GLF_FUZZED(1.0)), max(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))))), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-0.9)), float(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0)), float(vec4(float(mat3(_GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-0.9)), float(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0)), 0.0, 1.0, 0.0))))))))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), float(mat2x4(_GLF_IDENTITY(max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), max(max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), max(mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)))))), mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))), (false ? _GLF_FUZZED(max(-2644.1307, 14.55)) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), mat2(1.0) * (mat4x2(_GLF_IDENTITY(_GLF_FUZZED(1.0), (true ? _GLF_FUZZED(1.0) : _GLF_FUZZED(_GLF_IDENTITY(-8.6, float(mat4x3(_GLF_IDENTITY(-8.6, (-8.6) - 0.0), 0.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, abs(1.0), tan(0.0))))))), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(_GLF_FUZZED(1.0), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))))), float(_GLF_IDENTITY(_GLF_FUZZED(-20.94), clamp(_GLF_FUZZED(-20.94), _GLF_FUZZED(-20.94), _GLF_FUZZED(-20.94)))), bool(false))))), float(injectionSwitch.y), bool(true)))))))))))) - _GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-79.16)), float(abs(0.0)), bool(true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, abs(0.0), 0.0), (_GLF_IDENTITY(vec4(injectionSwitch, abs(0.0), 0.0), vec4(mat4(vec4(injectionSwitch, abs(0.0), 0.0), 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))) * vec4(1.0, 1.0, 1.0, 1.0)))))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-463.210), clamp(_GLF_IDENTITY(_GLF_FUZZED(-463.210), (_GLF_FUZZED(-463.210)) * 1.0), _GLF_FUZZED(-463.210), _GLF_FUZZED(-463.210))), _GLF_FUZZED(7.8)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-960.956, min(_GLF_IDENTITY(-960.956, (true ? _GLF_IDENTITY(-960.956, abs(0.0) + (-960.956)) : _GLF_FUZZED(-2.7))), -960.956)))), min(float(_GLF_FUZZED(-960.956)), float(_GLF_FUZZED(-960.956)))), float(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-9.9)), float((injectionSwitch)[1]), bool(true)))), bool(true)))), bvec2(true, true))).y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (true) && true))))))) - abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)))), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), bool(true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(-8.2))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))), float(injectionSwitch.y), bool(true))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.0)), _GLF_IDENTITY(min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0))), mix(float(_GLF_FUZZED(vec3(-3.0, vec2(2.5, -33.21)).t)), float(_GLF_IDENTITY(min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0))), (min(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(1.0)))) + 0.0)), bool(true)))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(-8.2)))) / 1.0)))) - _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), _GLF_IDENTITY(abs(0.0), 0.0 + (abs(0.0)))))))))))))))) && true))))))) && true)), false, true, false)))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), _GLF_IDENTITY(false, (false) || false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))), true, true, _GLF_IDENTITY(false, (false) || false)))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))), _GLF_IDENTITY(true, bool(bvec2(true, true))), true, _GLF_IDENTITY(false, (false) || false)))), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))), true, true, _GLF_IDENTITY(false, (false) || false)))), bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))), true, true, _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false))))), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false, false))), false))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                    }
                  }
                 do
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)));
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))))))))))
                          barrier();
                        }
                       else
                        {
                        }
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         barrier();
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 else
                  {
                  }
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_TRUE(true), false), bvec2(bvec2(bvec2(_GLF_WRAPPED_IF_TRUE(true), false)))))), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), false)), true))))))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                 else
                  {
                  }
                }
              }
             else
              {
              }
            }
           else
            {
            }
          }
        }
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               barrier();
              }
            }
           else
            {
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), mix(float((injectionSwitch.y) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), float(_GLF_FUZZED(1.6)), bool(false)))))))), bool(bvec2(_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), mix(float((injectionSwitch.y) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), float(_GLF_FUZZED(1.6)), bool(false)))))))), bool(bool((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), mix(float((injectionSwitch.y) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), float(_GLF_FUZZED(1.6)), bool(false))))))))))), false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-65.52), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-24.80)), bvec2(true, false))).x, injectionSwitch.x)))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))), bool(_GLF_IDENTITY(bvec3(bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))), false, true), bvec3(bvec4(bvec3(bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))), false, true), true))))), bool(bvec3(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0), clamp(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0), vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0), vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0)))))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0))).x > injectionSwitch.y)) || false))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))), false, false)))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8593.9504)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))), false || (_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), float(mat4(_GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) - 0.0)))))))))))), bool(bvec3(bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (injectionSwitch.y) - 0.0), false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (injectionSwitch.y) - 0.0))))))))))), false, false))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8593.9504)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))), false || (_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) || false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), float(mat4(_GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) - 0.0))))))), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), float(mat4(_GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) - 0.0)))))))))))))), bool(bvec3(bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * 1.0), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (injectionSwitch.y) - 0.0))))))))), false, false))))))), ((bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8593.9504)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))))), false || (_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), float(mat4(_GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) - 0.0)))))))))))), bool(bvec3(bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) - 0.0))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.y) - 0.0, float(mat3((injectionSwitch.y) - 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, abs(1.0))))))))))))), false, false)))))))) && true)))) && true)), (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))))), (! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false)))))) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))))), (! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false)))))) || false), true && (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))))), (! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false)))))) || false))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))))), (! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false)))))) || false), true && (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))))), (! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false)))))) || false)))))))))))) && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, (true) && true)), bvec2(bvec3(bvec2(true, true), false))))), (! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false)))))) || false)))) && (false), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(true, true), false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(true, true), false)))), (bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(true, true), false))))) || false)), ! (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(true, true), false)))), (bool(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(bvec2(true, true), false))))) || false))))))))) || false)))) && (false), bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))))), (! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false)))))) || false)))) && (false), true)))) || false))), false))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))));
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
      {
       do
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_id) : workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)), min(subgroup_id, subgroup_id)) * subgroup_size, uint(uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)), min(subgroup_id, subgroup_id)) * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)), min(subgroup_id, subgroup_id)) * subgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)), min(subgroup_id, subgroup_id)) * subgroup_size), uint(uvec3(~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)), min(subgroup_id, subgroup_id)) * subgroup_size), 0u, 1u)))))), clamp(~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)), min(subgroup_id, subgroup_id)) * subgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)), min(subgroup_id, subgroup_id)) * subgroup_size), uint(uvec3(~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)), min(subgroup_id, subgroup_id)) * subgroup_size), 0u, 1u)))))), ~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)), min(subgroup_id, subgroup_id)) * subgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)), min(subgroup_id, subgroup_id)) * subgroup_size), uint(uvec3(~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)), min(subgroup_id, subgroup_id)) * subgroup_size), 0u, 1u)))))), ~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)), min(subgroup_id, subgroup_id)) * subgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)), min(subgroup_id, subgroup_id)) * subgroup_size), uint(uvec3(~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id)), min(subgroup_id, subgroup_id)) * subgroup_size), 0u, 1u))))))))))))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((subgroup_local_id), 0u + ((subgroup_local_id))))), (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u)))) | 0u), (subgroup_local_id) - 0u), subgroup_local_id)) + 1), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(22693u) : subgroup_local_id)) + 1)), _GLF_IDENTITY((~ ((subgroup_local_id + 1))), 0u ^ ((~ ((subgroup_local_id + 1))))) - _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, _GLF_IDENTITY(0u, 0u | (0u))))))) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(16215u))));
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ _GLF_IDENTITY((~ (next_virtual_gid)), ((~ (next_virtual_gid))) | (_GLF_IDENTITY(_GLF_IDENTITY((~ (next_virtual_gid)), ((~ _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), 0u ^ ((next_virtual_gid)))) / 1u))) ^ 0u), min(_GLF_IDENTITY((~ (next_virtual_gid)), ((~ _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), 0u ^ ((next_virtual_gid)))) / 1u))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((~ (next_virtual_gid)), ((~ _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), 0u ^ ((next_virtual_gid)))) / 1u))) ^ 0u), clamp(_GLF_IDENTITY((~ (next_virtual_gid)), ((~ _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), 0u ^ ((next_virtual_gid)))) / 1u))) ^ 0u), _GLF_IDENTITY((~ (next_virtual_gid)), ((~ _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), 0u ^ ((next_virtual_gid)))) / 1u))) ^ 0u), _GLF_IDENTITY((~ (next_virtual_gid)), ((~ _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), 0u ^ ((next_virtual_gid)))) / 1u))) ^ 0u))))))))], uint(1), 4, 64, 4);
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && ((! (false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false)))), false || ((! (false)))), true && ((! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false)))), false || ((! (false)))), true && ((! (false)))))))) && true) && true), bool(bvec3(! _GLF_IDENTITY((! (false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ((! (false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.5)), float(injectionSwitch.y), bool(true)))))))), true && _GLF_IDENTITY(((! (false))), (((! (false)))) || false))), ((_GLF_IDENTITY(_GLF_IDENTITY((! (false)), false || ((! (false)))), true && ((! (false)))))) && true) && true), false, false))))))));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = (1 | (0 | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, clamp(_GLF_IDENTITY(0 | 0, (true ? _GLF_IDENTITY(0 | 0, int(ivec3(0 | 0, 0, 1))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(0, int(ivec3(0, 0, 1))) | 0, 0 | 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, clamp(0 | 0, _GLF_IDENTITY(0 | 0, clamp(_GLF_IDENTITY(0 | 0, min(0 | 0, 0 | 0)), 0 | 0, 0 | 0)), 0 | 0)), clamp(0 | 0, 0 | 0, 0 | 0)), _GLF_IDENTITY(0 | 0, clamp(0 | 0, 0 | 0, 0 | 0)))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), (mat2x4(injectionSwitch, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-45.53) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         atomicStore(checker[virtual_gid], read, 4, 64, 4);
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.0)), bool(false))), log(1.0), 0.0, 0.0), (mat4x2(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.0)), bool(false))), log(1.0), 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])))).x, mix(float(_GLF_FUZZED(77.14)), float(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])))).x), bool(true))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])))).x)) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.0)), bool(false))), log(1.0), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)), (mat4x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-332.626) : 0.0))), float(_GLF_FUZZED(-6172.8924)), bool(false))), 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(0.0), mix(float(_GLF_FUZZED(vec2(-303.080, 289.883).t)), float(_GLF_FUZZED(0.0)), bool(true)))), bool(false))), log(1.0), 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(0, (0) >> 0)])), injectionSwitch[1])))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])))).x, mix(float(_GLF_FUZZED(77.14)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), max(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])))).x), bool(true))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1]))), clamp(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1]))), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1]))), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])))))).x)) > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])))).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(0, (0) >> 0)])), injectionSwitch[1])))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])))).x, mix(float(_GLF_FUZZED(77.14)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), max(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])))).x), bool(true))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1]))), clamp(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1]))), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1]))), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])))))).x)) > injectionSwitch.y))))))))))))
        {
         do
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                barrier();
               for(int _injected_loop_counter = (0 & ivec4(-4067, 73901, 57202, -6551).r); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                    barrier();
                   barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) + 0.0)))))
                barrier();
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
}
