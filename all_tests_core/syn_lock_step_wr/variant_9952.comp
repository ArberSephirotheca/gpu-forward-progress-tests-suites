#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_23 {
 bvec3 _f0;
 vec3 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_22 {
 mat2x4 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_24 {
 ivec3 _f0;
 uint _f1;
 uvec4 _f2;
 _GLF_struct_22 _f3;
 bvec3 _f4;
 _GLF_struct_23 _f5;
} ;

struct _GLF_struct_20 {
 uint subgroup_local_id;
 mat2x4 _f0;
} ;

struct _GLF_struct_19 {
 mat2 _f0;
 uvec2 _f1;
 bool _f2;
 mat2 _f3;
 bool _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_18 {
 uvec4 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_21 {
 mat3x4 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_19 _f2;
 mat3x4 _f3;
 uvec2 _f4;
 int _f5;
 _GLF_struct_20 _f6;
} ;

struct _GLF_struct_16 {
 bool _f0;
 int _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_15 {
 ivec4 _f0;
 mat2x4 _f1;
 ivec3 _f2;
 vec4 _f3;
 uvec4 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_14 {
 uvec3 _f0;
 mat3x2 _f1;
 mat3x4 _f2;
 uvec4 _f3;
 mat2x3 _f4;
 ivec4 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_13 {
 mat2x3 _f0;
 mat2x3 _f1;
 mat4x2 _f2;
 bvec2 _f3;
 mat4x3 _f4;
 bvec3 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_17 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_15 _f2;
 bvec4 _f3;
 _GLF_struct_16 _f4;
} ;

struct _GLF_struct_11 {
 vec4 _f0;
} ;

struct _GLF_struct_10 {
 ivec4 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_12 {
 uvec2 _f0;
 mat2x3 _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_11 _f3;
 uvec2 _f4;
 mat3 _f5;
 uint _f6;
} ;

struct _GLF_struct_25 {
 float _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_17 _f2;
 _GLF_struct_21 _f3;
 mat3x2 _f4;
 _GLF_struct_24 _f5;
} ;

struct _GLF_struct_7 {
 mat3x2 _f0;
 bvec4 _f1;
 float _f2;
 vec3 _f3;
} ;

struct _GLF_struct_6 {
 uint _f0;
 mat2 _f1;
} ;

struct _GLF_struct_5 {
 float _f0;
 ivec4 _f1;
 mat3 _f2;
 bvec3 _f3;
 mat4x2 _f4;
 mat3x4 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_4 {
 mat2x4 _f0;
 bvec3 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_8 {
 uint subgroup_size;
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 bvec4 _f2;
 _GLF_struct_6 _f3;
 uint _f4;
 _GLF_struct_7 _f5;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 bvec3 _f1;
 ivec4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 uint subgroup_id;
 ivec2 _f1;
 bvec3 _f2;
 _GLF_struct_1 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(_GLF_struct_0(ivec4(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) * 1)))), vec3(1.0)), gl_SubgroupID, ivec2(1), bvec3(true), _GLF_struct_1(vec2(1.0), bvec3(true), ivec4(1), mat3x4(1.0)), vec3(1.0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, sqrt(1.0), 1.0))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), float(_GLF_FUZZED(-1441.0829)), bool(false))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_8(gl_SubgroupSize, _GLF_struct_4(mat2x4(1.0), bvec3(true), mat2x4(_GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_struct_5(1.0, ivec4(_GLF_IDENTITY(1, (1) << _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1))))), 1 * (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(_GLF_IDENTITY(int(1), ~ (~ (_GLF_IDENTITY(int(1), (int(1)) << (0 << _GLF_IDENTITY(int(3), int(3))))))), int(1))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1))))), ((0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))))) >> 0))))))), mat3(1.0), bvec3(true), mat4x2(1.0), mat3x4(1.0), bvec3(true)), bvec4(true), _GLF_struct_6(1u, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, sqrt(1.0)), _GLF_IDENTITY((true ? mat2(1.0, 1.0, 0.0, sqrt(1.0)) : _GLF_FUZZED(mat2(-511.856, 74.52, 7.4, 78.48))), ((true ? mat2(1.0, 1.0, 0.0, sqrt(1.0)) : _GLF_FUZZED(mat2(-511.856, 74.52, 7.4, 78.48)))) / mat2(1.0, 1.0, 1.0, 1.0))))), 1.0), max(min(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, sqrt(1.0)), _GLF_IDENTITY((true ? mat2(1.0, 1.0, 0.0, sqrt(1.0)) : _GLF_FUZZED(mat2(-511.856, 74.52, 7.4, 78.48))), ((true ? mat2(1.0, 1.0, 0.0, sqrt(1.0)) : _GLF_FUZZED(mat2(-511.856, 74.52, 7.4, 78.48)))) / mat2(1.0, 1.0, 1.0, 1.0))))), 1.0), min(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, sqrt(1.0)), _GLF_IDENTITY((true ? mat2(1.0, 1.0, 0.0, sqrt(1.0)) : _GLF_FUZZED(mat2(-511.856, 74.52, 7.4, 78.48))), ((true ? mat2(1.0, 1.0, 0.0, sqrt(1.0)) : _GLF_FUZZED(mat2(-511.856, 74.52, 7.4, 78.48)))) / mat2(1.0, 1.0, 1.0, 1.0))))), 1.0))))), mat2(mat3x4(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, sqrt(1.0)), _GLF_IDENTITY((true ? mat2(1.0, 1.0, 0.0, sqrt(1.0)) : _GLF_FUZZED(mat2(-511.856, 74.52, 7.4, 78.48))), ((true ? mat2(1.0, 1.0, 0.0, sqrt(1.0)) : _GLF_FUZZED(mat2(-511.856, 74.52, 7.4, 78.48)))) / mat2(1.0, 1.0, 1.0, 1.0))))), 1.0))), (false ? _GLF_FUZZED(mat2(271.128, -699.148, 2.6, 73.82)) : mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, sqrt(1.0)), _GLF_IDENTITY((true ? mat2(1.0, 1.0, 0.0, sqrt(1.0)) : _GLF_FUZZED(mat2(-511.856, 74.52, 7.4, 78.48))), ((true ? mat2(1.0, 1.0, 0.0, sqrt(1.0)) : _GLF_FUZZED(mat2(-511.856, 74.52, 7.4, 78.48)))) / mat2(1.0, 1.0, 1.0, 1.0))))), 1.0)))))))), _GLF_IDENTITY(mat2(mat3x4(mat2(1.0))), _GLF_IDENTITY(mat2(mat3x4(mat2(mat3x4(mat2(1.0))))), transpose(transpose(mat2(mat3x4(mat2(mat3x4(mat2(1.0))))))))))), 1u, _GLF_struct_7(mat3x2(1.0), bvec4(true), 1.0, vec3(1.0))));
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_25 _GLF_struct_replacement_25 = _GLF_struct_25(1.0, _GLF_struct_12(uvec2(1u), mat2x3(1.0), _GLF_struct_10(ivec4(1), vec2(1.0)), _GLF_struct_11(vec4(1.0)), uvec2(1u), mat3(1.0), 1u), _GLF_struct_17(_GLF_struct_13(mat2x3(1.0), mat2x3(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(5.8)))), mat4x2(1.0), bvec2(true), mat4x3(1.0), _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(bvec3(true), true))), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))), true)))), true))))), mat2(1.0)), _GLF_struct_14(uvec3(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, ~ (~ (1u))))))), mat3x2(1.0), mat3x4(1.0), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(1u, 1u, 0u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))) / 1u) + 0u)) << 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u)))), min(uvec4(1u, 1u, 0u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))) / 1u) + 0u)) << 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uvec4(1u, 1u, 0u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))) / 1u) + 0u)) << 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), max(uint(uvec4(1u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), _GLF_IDENTITY(uint(uvec4(1u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) | 0u)))))), (uint(uvec4(1u, 1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) | 0u))))))) << 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(42811u) : 1u))))), uvec4(1u)))) ^ uvec4(0u, 0u, 0u, 0u), max((_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (false ? _GLF_FUZZED(uvec4(175199u, 46059u, 26928u, 131973u)) : uvec4(1u))), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), uvec4(1u)))) ^ uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), (_GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u)))) ^ uvec4(0u, 0u, 0u, 0u)), uvec4(1u)))) ^ uvec4(0u, 0u, 0u, 0u), ~ (~ ((_GLF_IDENTITY(uvec4(1u), clamp(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) >> uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), max(_GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))), (true ? _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))) : _GLF_FUZZED(uvec4(43331u, 75247u, 125517u, 23296u))))) - uvec4(0u, 0u, 0u, 0u)))))), uvec4(1u)))) ^ uvec4(0u, 0u, 0u, 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY(_GLF_IDENTITY(max(uvec4(1u), uvec4(1u)), clamp(max(uvec4(1u), uvec4(1u)), max(uvec4(1u), uvec4(1u)), _GLF_IDENTITY(max(uvec4(1u), uvec4(1u)), (max(uvec4(1u), uvec4(1u))) - (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u)))))), (_GLF_IDENTITY(max(uvec4(1u), uvec4(1u)), clamp(max(uvec4(1u), uvec4(1u)), max(uvec4(1u), uvec4(1u)), _GLF_IDENTITY(max(uvec4(1u), uvec4(1u)), (max(uvec4(1u), uvec4(1u))) - (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u))))))) ^ uvec4(0u, 0u, 0u, 0u))), uvec4(1u)))), min((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY(max(uvec4(1u), uvec4(1u)), _GLF_IDENTITY(clamp(max(uvec4(1u), uvec4(1u)), max(uvec4(1u), uvec4(1u)), _GLF_IDENTITY(max(uvec4(1u), uvec4(1u)), (max(uvec4(1u), uvec4(1u))) - (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u))))), (clamp(max(uvec4(1u), uvec4(1u)), max(uvec4(1u), uvec4(1u)), _GLF_IDENTITY(max(uvec4(1u), uvec4(1u)), (max(uvec4(1u), uvec4(1u))) - (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u)))))) / (uvec4(1u, 1u, 1u, 1u) | uvec4(1u, 1u, 1u, 1u))))), uvec4(1u)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY(max(uvec4(1u), uvec4(1u)), clamp(max(uvec4(1u), uvec4(1u)), max(uvec4(1u), uvec4(1u)), _GLF_IDENTITY(max(uvec4(1u), uvec4(1u)), (max(uvec4(1u), uvec4(1u))) - (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u))))))), uvec4(1u)))), ((_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY(max(uvec4(1u), uvec4(1u)), clamp(max(uvec4(1u), uvec4(1u)), max(uvec4(1u), uvec4(1u)), _GLF_IDENTITY(max(uvec4(1u), uvec4(1u)), (max(uvec4(1u), uvec4(1u))) - (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u))))))), uvec4(1u))))) / uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(uvec4(83945u, 3403u, 123622u, 144655u)) : (_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY(max(uvec4(1u), uvec4(1u)), clamp(max(uvec4(1u), uvec4(1u)), max(uvec4(1u), uvec4(1u)), _GLF_IDENTITY(max(uvec4(1u), uvec4(1u)), (max(uvec4(1u), uvec4(1u))) - (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u))))))), uvec4(1u)))))))) ^ uvec4(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(197933u))), 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u))))), mat2x3(1.0), ivec4(1), vec4(1.0)), _GLF_struct_15(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, clamp(1, 1, 1))))), (ivec4(_GLF_IDENTITY(1, max(1, 1)))) << ivec4(0, 0, 0, 0)), mat2x4(1.0), ivec3(1), vec4(1.0), uvec4(1u), _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), bvec4(true), _GLF_struct_16(true, 1, ivec4(1))), _GLF_struct_21(mat3x4(1.0), _GLF_struct_18(uvec4(_GLF_IDENTITY(1u, max(1u, 1u))), mat4x3(1.0)), _GLF_struct_19(mat2(1.0), uvec2(1u), true, mat2(1.0), true, uvec4(1u)), mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), uvec2(1u), 1, _GLF_struct_20(gl_SubgroupInvocationID, mat2x4(1.0))), mat3x2(1.0), _GLF_struct_24(ivec3(1), 1u, uvec4(1u), _GLF_struct_22(mat2x4(1.0), vec4(1.0)), bvec3(true), _GLF_struct_23(bvec3(true), vec3(1.0), uvec3(1u))));
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))), bool(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) || false)))))))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 0.0)), max(vec2(mat2(injectionSwitch, 1.0, 0.0)), vec2(mat2(injectionSwitch, 1.0, 0.0))))), mix(vec2(_GLF_FUZZED(957.687), _GLF_FUZZED(-6.3)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat4x3((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(-3.9)), bool(false))), 0.0, 0.0, 1.0))))), min(float(_GLF_IDENTITY(mat4x3((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), (injectionSwitch)))[1], _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-51.39)), bool(false))), 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0))))), float(_GLF_IDENTITY(mat4x3((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat4x3((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0))))))))), bvec2(true, true))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 0.0)), max(vec2(mat2(injectionSwitch, 1.0, 0.0)), vec2(mat2(injectionSwitch, 1.0, 0.0))))), mix(vec2(_GLF_FUZZED(957.687), _GLF_FUZZED(-6.3)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat4x3((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(-3.9)), bool(false))), 0.0, 0.0, 1.0))))), min(float(_GLF_IDENTITY(mat4x3((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), (injectionSwitch)))[1], _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-51.39)), bool(false))), 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0))))), float(_GLF_IDENTITY(mat4x3((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat4x3((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0))))))))), bvec2(true, true))).y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 0.0)), max(vec2(mat2(injectionSwitch, 1.0, 0.0)), vec2(mat2(injectionSwitch, 1.0, 0.0))))), mix(vec2(_GLF_FUZZED(957.687), _GLF_FUZZED(-6.3)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat4x3((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(-3.9)), bool(false))), 0.0, 0.0, 1.0))))), min(float(_GLF_IDENTITY(mat4x3((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), ((injectionSwitch))))), (injectionSwitch)))[1], _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-51.39)), bool(false))), 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0))))), float(_GLF_IDENTITY(mat4x3((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat4x3((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0))))))))), bvec2(true, true))).y)))))))))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && (false)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).x)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, true))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || (false)), bool(bvec3(! (false || (false)), false, false))))))) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : workgroup_id)), (true ? _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : workgroup_id)) : _GLF_FUZZED(workgroup_size)))))), (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))) >> _GLF_IDENTITY(0u, min(0u, 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(4.1)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_3._f0.subgroup_id * _GLF_struct_replacement_9._f0.subgroup_size + _GLF_struct_replacement_25._f3._f6.subgroup_local_id, ~ (_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_3._f0.subgroup_id, min(_GLF_struct_replacement_3._f0.subgroup_id, _GLF_struct_replacement_3._f0.subgroup_id)) * _GLF_struct_replacement_9._f0.subgroup_size + _GLF_struct_replacement_25._f3._f6.subgroup_local_id), uint(_GLF_IDENTITY(uvec3(~ (workgroup_base + _GLF_struct_replacement_3._f0.subgroup_id * _GLF_struct_replacement_9._f0.subgroup_size + _GLF_struct_replacement_25._f3._f6.subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)), 0u)), 1u), (uvec3(~ (workgroup_base + _GLF_struct_replacement_3._f0.subgroup_id * _GLF_struct_replacement_9._f0.subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_25._f3._f6.subgroup_local_id, (_GLF_struct_replacement_25._f3._f6.subgroup_local_id) + 0u)), 0u, 1u)) << uvec3(0u, 0u, 0u))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (false))))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (false))))))), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (false))))))), false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_3._f0.subgroup_id * _GLF_struct_replacement_9._f0.subgroup_size + ((_GLF_struct_replacement_25._f3._f6.subgroup_local_id + _GLF_IDENTITY(1, 1 * (1))) % _GLF_struct_replacement_9._f0.subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)), clamp(float(mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)), float(mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)), float(mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))))) : _GLF_FUZZED(reflect(7.1, -431.856)))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))) && true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))) * mat2(1.0), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0), mat4x2(mat4(mat4x2(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))))))) < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true, false)))))))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0)))) - sqrt(0.0)))))))))), true && (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), true && (! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY((bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3((bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false)))))) || false)) && true))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))))))), true && ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, _GLF_IDENTITY(abs(0.0), mix(float(_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(7157.0926)), float(abs(0.0)), bool(true)))), float(_GLF_FUZZED(-8.0)), bool(false))), length(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 0.0, 0.0), transpose(transpose(mat3x2(injectionSwitch.x, abs(0.0), length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0)))))) > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0)))))).y))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))), true, true, false)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0)))))).y))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))), true, true, false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bool(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))) || false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), (true ? ((injectionSwitch)) * mat2(1.0) : _GLF_FUZZED(vec2(-780.636, 7630.2998))))), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0))), transpose(transpose(mat2x4(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), (true ? ((injectionSwitch)) * mat2(1.0) : _GLF_FUZZED(vec2(-780.636, 7630.2998))))), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0))))))), mix(vec2((vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), (true ? ((injectionSwitch)) * mat2(1.0) : _GLF_FUZZED(vec2(-780.636, 7630.2998))))), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0))), transpose(transpose(mat2x4(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), (true ? ((injectionSwitch)) * mat2(1.0) : _GLF_FUZZED(vec2(-780.636, 7630.2998))))), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0))))))))[0], (vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), (true ? ((injectionSwitch)) * mat2(1.0) : _GLF_FUZZED(vec2(-780.636, 7630.2998))))), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0))), transpose(transpose(mat2x4(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), (true ? ((injectionSwitch)) * mat2(1.0) : _GLF_FUZZED(vec2(-780.636, 7630.2998))))), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0))))))))[1]), vec2(_GLF_FUZZED(16.40), _GLF_FUZZED(90.33)), bvec2(false, false)))) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) / 1.0), float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, sqrt(1.0), 0.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, sqrt(1.0), 0.0)))))) / 1.0)), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0), mat4x2(mat4(mat4x2(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))))))) < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(74.70))))) < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), true && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))), false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(74.70))))) < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), true && (bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))), false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true, false), false)))))))))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), bvec2(bvec2(bvec2((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.4, -6025.0695)) : injectionSwitch)).x < injectionSwitch.y)))), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))) || false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))) && true)), (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))), _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))), true && ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))) && true))) || false)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) + 0.0) > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) && true))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mat2(1.0) * (_GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)))))).y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true && (! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), (_GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)) && true))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && ((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, abs(0.0), length(vec2(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0)), 1.0, 0.0, 0.0), transpose(transpose(mat3x2(injectionSwitch.x, abs(0.0), length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0)))))) > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 0.0, 1.0, 1.0))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y)))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y))))))))))) || false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))), true, true, false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, abs(0.0), length(vec2(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0)), 1.0, 0.0, 0.0), transpose(transpose(mat3x2(injectionSwitch.x, abs(0.0), length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0)))))) > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 0.0, 1.0, 1.0))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y)))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y))))))))))) || false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))), true, true, false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, abs(0.0), length(vec2(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0)), 1.0, 0.0, 0.0), transpose(transpose(mat3x2(injectionSwitch.x, abs(0.0), length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0)))))) > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 0.0, 1.0, 1.0))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y)))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y))))))))))) || false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))), true, true, false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, abs(0.0), length(vec2(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0)), 1.0, 0.0, 0.0), transpose(transpose(mat3x2(injectionSwitch.x, abs(0.0), length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0)))))) > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 0.0, 1.0, 1.0))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y)))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y))))))))))) || false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))), true, true, false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, abs(0.0), length(vec2(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0)), 1.0, 0.0, 0.0), transpose(transpose(mat3x2(injectionSwitch.x, abs(0.0), length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0)))))) > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 0.0, 1.0, 1.0))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y)))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y))))))))))) || false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))), true, true, false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)))))))))), true)))))))))))))))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))))) && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (false))) && true)) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (0) >> 0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), _GLF_IDENTITY(false, false || (false))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(virtual_gid) : virtual_gid)), ~ (~ (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), uint(uvec3(~ (virtual_gid), 1u, 1u))))))))], read, 4, 64, 4);
}
