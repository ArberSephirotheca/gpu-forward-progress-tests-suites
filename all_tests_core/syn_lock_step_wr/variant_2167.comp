#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 vec2 _f0;
} ;

struct _GLF_struct_7 {
 mat3x4 _f0;
} ;

struct _GLF_struct_9 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
} ;

struct _GLF_struct_5 {
 mat2x3 _f0;
 bvec4 _f1;
 mat3x2 _f2;
 bool _f3;
 ivec2 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_4 {
 ivec3 _f0;
} ;

struct _GLF_struct_3 {
 bool _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_6 {
 vec3 _f0;
 ivec3 _f1;
 _GLF_struct_3 _f2;
 mat4x2 _f3;
 _GLF_struct_4 _f4;
 _GLF_struct_5 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_0 {
 bool _f0;
 vec3 _f1;
 mat3x4 _f2;
 mat4x3 _f3;
 uvec4 _f4;
 int _f5;
} ;

struct _GLF_struct_10 {
 bvec2 _f0;
 uint subgroup_id;
 _GLF_struct_0 _f1;
 _GLF_struct_2 _f2;
 vec2 _f3;
 _GLF_struct_6 _f4;
 _GLF_struct_9 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), true, true, false)))))))), bool(bvec3(true, false, _GLF_IDENTITY(false, (false) && true))))))), gl_SubgroupID, _GLF_struct_0(true, _GLF_IDENTITY(vec3(1.0), (_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) - vec3(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))) / vec3(1.0, 1.0, 1.0)), mat3x4(1.0), mat4x3(1.0), _GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))), true, false))), false || (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))), bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))), false, false, false))), _GLF_IDENTITY(true, false || (true)), false)))))))), (false) && true))) || false))) ? _GLF_FUZZED(uvec4(87337u, 177877u, 164914u, 152858u)) : uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) + 0u), 1u), uvec2(uvec2(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) + 0u), 1u), (uvec2(_GLF_IDENTITY(1u, (1u) + 0u), 1u)) | uvec2(0u, 0u)))))), _GLF_IDENTITY(uint(uint(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) + 0u), 1u), uvec2(uvec2(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) + 0u), 1u), (uvec2(_GLF_IDENTITY(1u, (1u) + 0u), 1u)) | uvec2(0u, 0u)))))))), 0u | (uint(uint(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) + 0u), 1u), uvec2(uvec2(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) + 0u), 1u), (uvec2(_GLF_IDENTITY(1u, (1u) + 0u), 1u)) | uvec2(0u, 0u))))))))))))), (false ? _GLF_FUZZED(uvec4(10488u, uvec3(23440u, 112758u, _GLF_IDENTITY(150646u, min(150646u, _GLF_IDENTITY(150646u, (150646u) | _GLF_IDENTITY((150646u), max((150646u), _GLF_IDENTITY((150646u), ((150646u)) / 1u))))))))) : false ? _GLF_FUZZED(uvec4(87337u, 177877u, 164914u, 152858u)) : uvec4(1u))))), (uvec4(1u)) / uvec4(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (uvec4(1u))), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(1u))), uvec4(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), 0u ^ (_GLF_IDENTITY(uint(uint(1u)), uint(uvec2(uint(uint(1u)), 0u)))))), 1u, 1u) * (_GLF_IDENTITY(uvec4(1u), (uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))) | (uvec4(1u))))))), 1), _GLF_struct_2(_GLF_struct_1(_GLF_IDENTITY(mat3(1.0), (true ? _GLF_IDENTITY(mat3(1.0), (true ? _GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY((mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose((mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat3(-3490.9985, -3.3, -6053.3969, -5.5, 3.7, 1409.7444, -1565.2757, -8.2, -4529.9113)) : transpose((mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))) : _GLF_FUZZED(mat3(547.512, 816.518, 2.9, 7.8, 94.95, 9.6, _GLF_IDENTITY(6.6, max(6.6, 6.6)), -56.20, 50.11)))) : _GLF_FUZZED(mat3(849.202, -75.24, 4977.8009, 8.6, -62.93, -1440.1060, -57.94, -1809.7753, 5.2)))), vec4(1.0)), mat4x2(1.0)), vec2(1.0), _GLF_struct_6(vec3(1.0), ivec3(1), _GLF_struct_3(true, _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), min(uvec4(1u), uvec4(1u))), max(uvec4(1u), uvec4(1u)))), mat4x2(1.0), _GLF_struct_4(ivec3(1)), _GLF_struct_5(mat2x3(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), bvec4(true), mat3x2(1.0), true, ivec2(1), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8.2) : 1.0)))), vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(29.96)), bool(false)), clamp(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(29.96)), bool(false)), (_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(29.96)), bool(false)), 0.0 + (_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(29.96)), bool(false)), mix(float(_GLF_FUZZED(-68.98)), float(mix(float(1.0), float(_GLF_FUZZED(29.96)), bool(false))), bool(true)))))) + 0.0), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(29.96)), bool(false)), 0.0 + (mix(float(1.0), float(_GLF_FUZZED(29.96)), bool(false)))), mix(float(1.0), float(_GLF_FUZZED(29.96)), bool(false))))))), _GLF_struct_9(_GLF_struct_7(mat3x4(1.0)), _GLF_struct_8(vec2(1.0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, _GLF_IDENTITY(0u, (0u | 0u) + (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u) ^ (gl_WorkGroupSize)), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, _GLF_IDENTITY(0u, (0u | 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u)), (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u))) | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u)))))), 0u) ^ _GLF_IDENTITY((gl_WorkGroupSize), (true ? (gl_WorkGroupSize) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(58665u, 873u, 8327u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(58665u, (58665u) | (_GLF_IDENTITY(58665u, (58665u) | (58665u)))), 873u, 8327u), clamp(uvec3(58665u, 873u, 8327u), uvec3(58665u, 873u, 8327u), uvec3(58665u, 873u, 8327u))))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(58665u, 873u, 8327u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(58665u, 873u, 8327u), clamp(uvec3(58665u, 873u, 8327u), uvec3(58665u, 873u, 8327u), uvec3(_GLF_IDENTITY(58665u, 0u + (58665u)), 873u, 8327u))))) : _GLF_FUZZED(uvec3(128590u, 101742u, 55177u))), _GLF_IDENTITY(uvec3(uvec3((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(58665u, 873u, 8327u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(58665u, 873u, 8327u), clamp(uvec3(58665u, 873u, 8327u), uvec3(58665u, 873u, 8327u), uvec3(_GLF_IDENTITY(58665u, 0u + (58665u)), 873u, 8327u))))) : _GLF_FUZZED(uvec3(128590u, 101742u, 55177u))))), clamp(uvec3(uvec3((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(58665u, 873u, 8327u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(58665u, 873u, 8327u), clamp(uvec3(58665u, 873u, 8327u), uvec3(58665u, 873u, 8327u), uvec3(_GLF_IDENTITY(58665u, 0u + (58665u)), 873u, 8327u))))) : _GLF_FUZZED(uvec3(128590u, 101742u, 55177u))))), uvec3(uvec3((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(58665u, 873u, 8327u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(58665u, 873u, 8327u), clamp(uvec3(58665u, 873u, 8327u), uvec3(58665u, 873u, 8327u), uvec3(_GLF_IDENTITY(58665u, 0u + (58665u)), 873u, 8327u))))) : _GLF_FUZZED(uvec3(128590u, 101742u, 55177u))))), uvec3(uvec3((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(58665u, 873u, 8327u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(58665u, 873u, 8327u), clamp(uvec3(58665u, 873u, 8327u), uvec3(58665u, 873u, 8327u), uvec3(_GLF_IDENTITY(58665u, 0u + (58665u)), 873u, 8327u))))) : _GLF_FUZZED(uvec3(128590u, 101742u, 55177u))))))))))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u | 0u) + (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (_GLF_IDENTITY(0u, (0u | 0u) + (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) | (_GLF_IDENTITY(0u, (0u | 0u) + (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), 0u) ^ (gl_WorkGroupSize))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, _GLF_IDENTITY(0u, (0u | 0u) + (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))))).x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x))) | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, 1u * (_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) * workgroup_id), (~ (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) * 1u)))))) - (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), clamp(0u << _GLF_IDENTITY(uint(0u), uint(0u)), 0u << _GLF_IDENTITY(uint(0u), uint(0u)), 0u << _GLF_IDENTITY(uint(0u), uint(0u))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_10.subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)) + _GLF_struct_replacement_10.subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)))), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), clamp(uint(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))))))))) | 0u) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, ~ (~ (4))), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((! (bool(bool(false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((! (bool(bool(false)))), bool(bvec4((! (bool(bool(false)))), false, false, true))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((! (bool(bool(false)))), bool(bvec4((! (bool(bool(false)))), false, false, true))))), ! (! ((! (_GLF_IDENTITY((! (bool(bool(false)))), bool(bvec4((! (bool(bool(false)))), false, false, true))))))))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))), (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))) && (bool(bool(_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(_GLF_IDENTITY(false, true && (false))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true)))))) && true)) && true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (! (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))) && true))))) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), (! (bool(bool(false)))) || false))), (_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), (! (bool(bool(false)))) || false)))) || false))) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false)), ((_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false)), ((_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false))) || false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false)), ((_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false))) || false))))) || false)))), false || ((! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false)), bool(bvec3((_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false)), false, false))))), true && ((_GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false)), true && ((_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false))))))), true, true, false)))))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false)), ((_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false)), ((_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false))) || false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false)), ((_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false))) || false))))) || false)))), false || ((! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY((! (bool(bool(false)))) || false, false || (_GLF_IDENTITY((! (bool(bool(false)))) || false, ((! (bool(bool(false)))) || false) && true))))), bool(bvec3((_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false)), false, false))))), true && ((_GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false)), true && ((_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false))))))), true, true, false)))))))))))))))))) || false), false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((! (bool(bool(false)))), ! (! (_GLF_IDENTITY((! (bool(bool(false)))), _GLF_IDENTITY(bool(bvec4((! (bool(bool(false)))), false, _GLF_IDENTITY(false, true && (false)), true)), (_GLF_IDENTITY(bool(bvec4((! (bool(bool(false)))), false, _GLF_IDENTITY(false, true && (false)), true)), false || (bool(bvec4((! (bool(bool(false)))), false, _GLF_IDENTITY(false, true && (false)), true))))) && true)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), (bool(_GLF_IDENTITY(false, true && (false)))) && true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), ! (! (bool(_GLF_IDENTITY(false, true && (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), ! (! (bool(_GLF_IDENTITY(false, true && (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bool(bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), ! (! (bool(_GLF_IDENTITY(false, true && (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false)), ((_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false))) || false)))), false || ((! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), (_GLF_IDENTITY(! (bool(bool(false))), bool(_GLF_IDENTITY(bool(! (bool(bool(false)))), ! (_GLF_IDENTITY(! (bool(! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(_GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec4(bvec2(bool(bool(false)), true), false, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))), bool(bvec4(! (bool(! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(_GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec4(bvec2(bool(bool(false)), true), false, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))), true && _GLF_IDENTITY(((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(false))), (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))), (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) || false))), _GLF_IDENTITY(bool(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (bool(bool(false))), bool(bvec2(! (bool(bool(false))), true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(! (bool(bool(false))), bool(bvec2(! (bool(bool(false))), true))), true, true))))), (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) || false))), false, true)), bool(bvec4(bool(bvec3(! (! (_GLF_IDENTITY(! (bool(bool(false))), (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) || false))), false, true)), true, true, true))))))))), _GLF_IDENTITY(bool(bool(((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(false))), (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))), (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) || false))), _GLF_IDENTITY(bool(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (bool(bool(false))), bool(bvec2(! (bool(bool(false))), true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(! (bool(bool(false))), bool(bvec2(! (bool(bool(false))), true))), true, true))))), (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) || false))), false, true)), bool(bvec4(bool(bvec3(! (! (_GLF_IDENTITY(! (bool(bool(false))), (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) || false))), false, true)), true, true, true))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bool(((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(false))), (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))), (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) || false))), _GLF_IDENTITY(bool(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (bool(bool(false))), bool(bvec2(! (bool(bool(false))), true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(! (bool(bool(false))), bool(bvec2(! (bool(bool(false))), true))), true, true))))), (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) || false))), false, true)), bool(bvec4(bool(bvec3(! (! (_GLF_IDENTITY(! (bool(bool(false))), (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) || false))), false, true)), true, true, true))))))))))), true, false), bvec3(bvec3(bvec3(bool(bool(((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(false))), (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))), (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) || false))), _GLF_IDENTITY(bool(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (bool(bool(false))), bool(bvec2(! (bool(bool(false))), true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(! (bool(bool(false))), bool(bvec2(! (bool(bool(false))), true))), true, true))))), (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) || false))), false, true)), bool(bvec4(bool(bvec3(! (! (_GLF_IDENTITY(! (bool(bool(false))), (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) || false))), false, true)), true, true, true))))))))))), true, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(bool(bool(((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(false))), (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))), (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) || false))), _GLF_IDENTITY(bool(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (bool(bool(false))), bool(bvec2(! (bool(bool(false))), true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(! (bool(bool(false))), bool(bvec2(! (bool(bool(false))), true))), true, true))))), (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) || false))), false, true)), bool(bvec4(bool(bvec3(! (! (_GLF_IDENTITY(! (bool(bool(false))), (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) || false))), false, true)), true, true, true))))))))))), true, false), bvec3(bvec3(bvec3(bool(bool(((_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bool(false))), (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))), (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) || false))), _GLF_IDENTITY(bool(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (bool(bool(false))), bool(bvec2(! (bool(bool(false))), true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(! (bool(bool(false))), bool(bvec2(! (bool(bool(false))), true))), true, true))))), (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) || false))), false, true)), bool(bvec4(bool(bvec3(! (! (_GLF_IDENTITY(! (bool(bool(false))), (! (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) || false))), false, true)), true, true, true))))))))))), true, false))))), true)))))))))))))) || false), false))))))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) - 0.0)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(mat4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))), 1.0, 1.0, 1.0, exp(0.0), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-224.904) : 1.0)), 1.0, 1.0, 1.0, log(1.0))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, _GLF_IDENTITY(1 * (_GLF_IDENTITY(4, min(4, 4))), ~ (_GLF_IDENTITY(~ (1 * (_GLF_IDENTITY(4, min(4, 4)))), (0 << _GLF_IDENTITY(int(7), int(7))) | (~ (1 * (_GLF_IDENTITY(4, min(4, 4))))))))), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
