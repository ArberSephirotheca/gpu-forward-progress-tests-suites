#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? injectionSwitch : _GLF_FUZZED(vec2(-75.96, 4966.8016)))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-569.436)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(false, true, false))) || ((! (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(false, true, false))) || ((! (injectionSwitch.x > injectionSwitch.y)))), false, true, true))))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(false, true, false))) || ((! (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))))) || false))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(false, true, false))) || (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3((! (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec3((! (injectionSwitch.x > injectionSwitch.y)), true, true)))))))), false, true, true)))))), bool(bool(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(false, true, false))) || ((! (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))))))))))), ! (! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1914.6437))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(tan(-22.46)))))) > injectionSwitch.y)))) || false))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(float(24014u)))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! (! (injectionSwitch.x > injectionSwitch.y))), true && (! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), ! _GLF_IDENTITY((! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY((! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, true))), true, true))))))), bool(bool((! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), false, false, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), false, false, false))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-128.953) : injectionSwitch.x))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2103.7603, -364.788)) : injectionSwitch)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2103.7603, -364.788)) : injectionSwitch)).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2103.7603, -364.788)) : injectionSwitch)).x, 0.0, 1.0, 1.0, 1.0, 0.0)))) - 0.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1605.5165)), vec2(_GLF_FUZZED(68.95), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sinh((18.00 - injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))), ! (! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, true), false)))))))))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, log(1.0)))), sin(0.0))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), false || _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))) || false)) || false))))), bool(bvec2((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(float(24014u)))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! (! (injectionSwitch.x > injectionSwitch.y))), true && (! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), ! _GLF_IDENTITY((! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY((! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, true))), true, true))))))), bool(bool((! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), false, false, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), false, false, false))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-128.953) : injectionSwitch.x))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2103.7603, -364.788)) : injectionSwitch)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2103.7603, -364.788)) : injectionSwitch)).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2103.7603, -364.788)) : injectionSwitch)).x, 0.0, 1.0, 1.0, 1.0, 0.0)))) - 0.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1605.5165)), vec2(_GLF_FUZZED(68.95), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sinh((18.00 - injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))), ! (! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, true), false)))))))))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, log(1.0)))), sin(0.0))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), false || _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))) || false)) || false))))), true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-569.436)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))) || ((! (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))), true))))) || ((! (injectionSwitch.x > injectionSwitch.y)))), false, true, true))))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(false, true, false))) || ((! (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))))) || false))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, exp(0.0)), max(vec2(injectionSwitch.x, exp(0.0)), vec2(injectionSwitch.x, exp(0.0)))))) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(false, true, false))) || (_GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), false || ((! (injectionSwitch.x > injectionSwitch.y)))), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3((! (injectionSwitch.x > injectionSwitch.y)), true, true)), ! (! (bool(bvec3((! (injectionSwitch.x > injectionSwitch.y)), true, true))))))))))), false, true, true)))))), bool(bool(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(false, true, false))) || ((! (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))))))))))), ! (! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1914.6437))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(tan(-22.46)))))) > injectionSwitch.y)))) || false))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(float(24014u)))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! (! (injectionSwitch.x > injectionSwitch.y))), true && (! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), ! _GLF_IDENTITY((! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY((! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, true))), true, true))))))), bool(bool((! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), false, false, false)), true && _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), false, false, false))), ((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), false, false, false)))) || false))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-128.953) : injectionSwitch.x))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2103.7603, -364.788)) : injectionSwitch)), mix(vec2(_GLF_FUZZED((+ -7.3)), _GLF_FUZZED(838.952)), vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2103.7603, -364.788)) : injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2103.7603, -364.788)) : injectionSwitch)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2103.7603, -364.788)) : injectionSwitch)).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2103.7603, -364.788)) : injectionSwitch)).x, 0.0, 1.0, 1.0, 1.0, 0.0)))) - 0.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(1605.5165, clamp(1605.5165, 1605.5165, 1605.5165)))), vec2(_GLF_FUZZED(68.95), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sinh((18.00 - injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))), ! (! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true))))), ! (! (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.9, 9.6)))).x > injectionSwitch.y)))))), true, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, true), false)))))))))))), _GLF_IDENTITY(false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, log(1.0)))), sin(0.0)))))), false || (false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, log(1.0)))), sin(0.0))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) || false)), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) || false))))))))), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))) || false)) || false))))), bool(bvec2((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(float(24014u), min(float(24014u), float(24014u)))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! (! (injectionSwitch.x > injectionSwitch.y))), true && (! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), ! _GLF_IDENTITY((! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY((! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), true, true))), true, true))))))), bool(bool((! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true), false, false, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec3(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true), false, false, false))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-128.953) : injectionSwitch.x))) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.5)), bool(false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(2103.7603, sqrt(0.0) + (2103.7603)), -364.788)) : injectionSwitch, max(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(2103.7603, sqrt(0.0) + (2103.7603)), -364.788)) : injectionSwitch, mix(vec2((false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(2103.7603, sqrt(0.0) + (2103.7603)), -364.788)) : injectionSwitch)[0], (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(2103.7603, sqrt(0.0) + (2103.7603)), -364.788)) : injectionSwitch)[1]), vec2(_GLF_FUZZED(-3502.1684), _GLF_FUZZED(-32.68)), bvec2(false, false))), false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(2103.7603, sqrt(0.0) + (2103.7603)), -364.788)) : injectionSwitch))), clamp((_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(2103.7603, sqrt(0.0) + (2103.7603)), -364.788)) : injectionSwitch, max(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(2103.7603, sqrt(0.0) + (2103.7603)), -364.788)) : injectionSwitch, mix(vec2((false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(2103.7603, sqrt(0.0) + (2103.7603)), -364.788)) : injectionSwitch)[0], (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(2103.7603, sqrt(0.0) + (2103.7603)), -364.788)) : injectionSwitch)[1]), vec2(_GLF_FUZZED(-3502.1684), _GLF_FUZZED(-32.68)), bvec2(false, false))), false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(2103.7603, sqrt(0.0) + (2103.7603)), -364.788)) : injectionSwitch))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(2103.7603, sqrt(0.0) + (2103.7603)), -364.788)) : injectionSwitch, max(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(2103.7603, sqrt(0.0) + (2103.7603)), -364.788)) : injectionSwitch, mix(vec2((false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(2103.7603, sqrt(0.0) + (2103.7603)), -364.788)) : injectionSwitch)[0], (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(2103.7603, sqrt(0.0) + (2103.7603)), -364.788)) : injectionSwitch)[1]), vec2(_GLF_FUZZED(-3502.1684), _GLF_FUZZED(-32.68)), bvec2(false, false))), false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(2103.7603, sqrt(0.0) + (2103.7603)), -364.788)) : injectionSwitch))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(2103.7603, sqrt(0.0) + (2103.7603)), -364.788)) : injectionSwitch, max(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(2103.7603, sqrt(0.0) + (2103.7603)), -364.788)) : injectionSwitch, mix(vec2((false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(2103.7603, sqrt(0.0) + (2103.7603)), -364.788)) : injectionSwitch)[0], (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(2103.7603, sqrt(0.0) + (2103.7603)), -364.788)) : injectionSwitch)[1]), vec2(_GLF_FUZZED(-3502.1684), _GLF_FUZZED(-32.68)), bvec2(false, false))), false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(2103.7603, sqrt(0.0) + (2103.7603)), -364.788)) : injectionSwitch)))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2103.7603, -364.788)) : injectionSwitch)).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2103.7603, -364.788)) : injectionSwitch)).x, 0.0, 1.0, 1.0, 1.0, 0.0)))) - 0.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1605.5165)), vec2(_GLF_FUZZED(68.95), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sinh((18.00 - injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), clamp(min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sinh((18.00 - injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sinh((18.00 - injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sinh((18.00 - injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y))))), ! (! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true)))))), ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), true), false, true))))), ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.6)), bool(false))) > injectionSwitch.y)))))), true, _GLF_IDENTITY(true, bool(bool(true)))), false)))))))))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, log(1.0)))), sin(0.0))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))), true))))), false || _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! (! (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! (! (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), false, true))))))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))), true))))), false || _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! (! (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! (! (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), false, true)))))))))))))))))) || false)) || false))))), true))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- 718.424))), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-109.521) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), bool(true))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), true && (bool(bvec3(_GLF_DEAD(false), true, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false)))) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uint(gl_WorkGroupSize.x), (uint(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | (gl_WorkGroupSize[0])), gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x)) * 1u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false)))))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))))))), (uint(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), clamp(subgroup_id, subgroup_id, subgroup_id)))))) | (uint(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id), (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), (clamp(subgroup_id, subgroup_id, subgroup_id)) - 0u)) | 0u)))))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))))))), (uint(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), clamp(subgroup_id, subgroup_id, subgroup_id)))))) | (uint(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, subgroup_id), (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), (clamp(subgroup_id, subgroup_id, subgroup_id)) - 0u)) | 0u))))))))) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), _GLF_IDENTITY(mat3(1.0) * (vec3(injectionSwitch, 0.0)), min(mat3(1.0) * (vec3(injectionSwitch, 0.0)), mat3(1.0) * _GLF_IDENTITY((vec3(injectionSwitch, 0.0)), (_GLF_IDENTITY((vec3(injectionSwitch, 0.0)), min((vec3(injectionSwitch, 0.0)), (vec3(injectionSwitch, 0.0))))) - vec3(0.0, 0.0, 0.0)))))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-10.18)), float(1.0), bool(true)))), float(_GLF_FUZZED(72.47)), bool(false)))) * (vec3(injectionSwitch, 0.0)), min(mat3(1.0) * (vec3(injectionSwitch, 0.0)), mat3(1.0) * (vec3(injectionSwitch, 0.0))))))))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), _GLF_IDENTITY(mat3(1.0) * (vec3(injectionSwitch, 0.0)), min(mat3(1.0) * (vec3(injectionSwitch, 0.0)), mat3(1.0) * _GLF_IDENTITY((vec3(injectionSwitch, 0.0)), (_GLF_IDENTITY((vec3(injectionSwitch, 0.0)), min((vec3(injectionSwitch, 0.0)), (vec3(injectionSwitch, 0.0))))) - vec3(0.0, 0.0, 0.0)))))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-10.18)), float(1.0), bool(true)))), float(_GLF_FUZZED(72.47)), bool(false)))) * (vec3(injectionSwitch, 0.0)), min(mat3(1.0) * (vec3(injectionSwitch, 0.0)), mat3(1.0) * (vec3(injectionSwitch, 0.0))))))))).x) + 0.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), _GLF_IDENTITY(mat3(1.0) * (vec3(injectionSwitch, 0.0)), min(mat3(1.0) * (vec3(injectionSwitch, 0.0)), mat3(1.0) * _GLF_IDENTITY((vec3(injectionSwitch, 0.0)), (_GLF_IDENTITY((vec3(injectionSwitch, 0.0)), min((vec3(injectionSwitch, 0.0)), (vec3(injectionSwitch, 0.0))))) - vec3(0.0, 0.0, 0.0)))))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), _GLF_IDENTITY(mat3(1.0) * (vec3(injectionSwitch, 0.0)), min(mat3(1.0) * (vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0)), mat3(1.0) * (vec3(injectionSwitch, 0.0))))))))).x > injectionSwitch.y)) || false))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), _GLF_IDENTITY(mat3(1.0) * _GLF_IDENTITY((vec3(injectionSwitch, 0.0)), min((vec3(injectionSwitch, 0.0)), (vec3(injectionSwitch, 0.0)))), min(mat3(1.0) * (vec3(injectionSwitch, 0.0)), mat3(1.0) * (vec3(injectionSwitch, 0.0)))))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), _GLF_IDENTITY(mat3(1.0) * (vec3(injectionSwitch, 0.0)), min(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) * (vec3(injectionSwitch, 0.0)), mat3(1.0) * (vec3(injectionSwitch, 0.0))))))))).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch)).y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), false || ((false)))))), true, false, true))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), bool(bool((false)))), true)), false || (bool(bvec2(_GLF_IDENTITY((false), bool(bool((false)))), true))))), true && ((false))), false, false))))), true && (! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), false || (((false))))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY((false), true && ((false))), false, false))))))))))), bool(bool(! (false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))), true && ((! (false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.8), _GLF_FUZZED((false ? 9.4 : 2465.4792))), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))).y))))))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.8), _GLF_FUZZED((false ? 9.4 : 2465.4792))), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))).y))))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.8), _GLF_FUZZED((false ? 9.4 : 2465.4792))), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))).y)))))))))) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) + 0.0)), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) || false))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.8) : injectionSwitch.y)), injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-78.34))))))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, false, true)), ! (! (bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, false, true))))))) ? injectionSwitch.y : _GLF_FUZZED(-78.34))), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((true ? injectionSwitch : vec2(-2.4, 677.195))) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5086.6311), _GLF_FUZZED(-54.27)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(-78.34)))) * 1.0))))))))))))), ! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), bool(bool(true && ((injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, 0.0, cos(0.0))), mat2(1.0) * (vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, 0.0, cos(0.0)))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, 0.0, cos(0.0))), mat2(1.0) * (vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, 0.0, cos(0.0))))))) * mat2(1.0)).x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, sqrt(1.0), 1.0, cos(0.0)), max(vec4(injectionSwitch.x, sqrt(1.0), 1.0, cos(0.0)), vec4(injectionSwitch.x, sqrt(1.0), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), cos(0.0)))))) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), true && (bool(bool(! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) || false) && ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))))))))))))))))), true && (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid])), 4, 64, 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
}
