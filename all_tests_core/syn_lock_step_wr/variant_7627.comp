#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_21 {
 mat2 _f0;
 mat3x4 _f1;
 mat2x3 _f2;
 bvec4 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_22 {
 vec4 _f0;
 _GLF_struct_21 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_19 {
 ivec4 _f0;
 mat4x2 _f1;
 mat3x2 _f2;
 ivec2 _f3;
 bool _f4;
 bvec4 _f5;
 uint _f6;
} ;

struct _GLF_struct_20 {
 mat4x2 _f0;
 _GLF_struct_19 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_17 {
 mat2 _f0;
} ;

struct _GLF_struct_18 {
 _GLF_struct_17 _f0;
 ivec2 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_16 {
 mat3x4 _f0;
 vec3 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_23 {
 uint workgroup_size;
 _GLF_struct_16 _f0;
 mat2x3 _f1;
 ivec2 _f2;
 _GLF_struct_18 _f3;
 _GLF_struct_20 _f4;
 _GLF_struct_22 _f5;
} ;

struct _GLF_struct_14 {
 vec2 _f0;
 uint virtual_gid;
 mat3 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_12 {
 uvec2 _f0;
 float _f1;
 float _f2;
 bvec3 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_11 {
 ivec4 _f0;
 mat3 _f1;
 float _f2;
} ;

struct _GLF_struct_13 {
 _GLF_struct_11 _f0;
 vec4 _f1;
 bvec4 _f2;
 _GLF_struct_12 _f3;
} ;

struct _GLF_struct_9 {
 bool _f0;
 mat2 _f1;
 bool _f2;
} ;

struct _GLF_struct_8 {
 vec4 _f0;
 bvec4 _f1;
 bvec4 _f2;
 vec3 _f3;
 mat4 _f4;
 uint _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_10 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
} ;

struct _GLF_struct_15 {
 _GLF_struct_10 _f0;
 vec2 _f1;
 _GLF_struct_13 _f2;
 mat3x2 _f3;
 uvec4 _f4;
 _GLF_struct_14 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_5 {
 ivec3 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_4 {
 ivec4 _f0;
 uvec4 _f1;
 bvec2 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_3 {
 vec4 _f0;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 ivec4 _f1;
 _GLF_struct_4 _f2;
 bool _f3;
 mat3x2 _f4;
 uvec3 _f5;
 _GLF_struct_5 _f6;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 uvec3 _f1;
 uint _f2;
 float _f3;
 uint _f4;
} ;

struct _GLF_struct_0 {
 bool _f0;
 vec2 _f1;
 bool _f2;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 uint subgroup_local_id;
} ;

struct _GLF_struct_7 {
 _GLF_struct_2 _f0;
 mat4 _f1;
 mat4x3 _f2;
 bvec2 _f3;
 uint _f4;
 _GLF_struct_6 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_2(_GLF_struct_0(true, _GLF_IDENTITY(vec2(1.0), (vec2(1.0)) / vec2(1.0, 1.0)), true), _GLF_struct_1(vec2(1.0), _GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), 1u, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), ((1u)) | ((1u))), _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) - 0u)), min((1u), _GLF_IDENTITY((1u), clamp((1u), (1u), (1u))))))) | 0u), (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), _GLF_IDENTITY(min((1u), _GLF_IDENTITY((1u), _GLF_IDENTITY(min((1u), (1u)), (min((1u), (1u))) + 0u))), (true ? _GLF_IDENTITY(min((1u), _GLF_IDENTITY((1u), _GLF_IDENTITY(min((1u), (1u)), (min((1u), (1u))) + 0u))), (min(_GLF_IDENTITY((1u), 0u | ((1u))), _GLF_IDENTITY((1u), _GLF_IDENTITY(min((1u), (1u)), (min(_GLF_IDENTITY((1u), ((1u)) ^ 0u), (1u))) + 0u)))) / 1u) : _GLF_FUZZED(69004u)))) | 0u)) * (1u & 1u))), gl_SubgroupInvocationID), mat4(1.0), mat4x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(float(1.0))) : _GLF_FUZZED(9.9)))) * 1.0)), bvec2(true), 1u, _GLF_struct_6(_GLF_struct_3(_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(clamp(vec4(1.0), vec4(1.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0 + (1.0)))), (clamp(vec4(1.0), vec4(1.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0 + (1.0))))) * mat4(1.0))), vec4(1.0)))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), _GLF_IDENTITY(((max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))) | 0, ~ (~ (((max(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((89922 | -87396)) : _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) - 0)))), 1))) | 0))))), 0 | (max(1, 1)))), 1, 0))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), _GLF_IDENTITY(((max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))) | 0, ~ (~ (((max(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((89922 | -87396)) : _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) - 0)))), 1))) | 0))))), 0 | (max(1, 1)))), 1, 0))), int(ivec4(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), _GLF_IDENTITY(((max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))) | 0, ~ (~ (((max(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((89922 | -87396)) : _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) - 0)))), 1))) | 0))))), 0 | (max(1, 1)))), 1, 0))), 1, 0, 0)))))), _GLF_struct_4(ivec4(1), uvec4(1u), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(true)))), true, true)))))), true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true))), true))), true)), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true))), true)))))), bvec2(bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), false))), true))), true)))))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true))), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), _GLF_IDENTITY(true, (true) && true)))), true))), bvec2(bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true))), true)))))))), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true))), true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true))), true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true))), true))))))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true))), true))), bvec2(bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true))), _GLF_IDENTITY(true, (true) && true))))))))), true)), true)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true))), true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true))), true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true))), true))))))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true))), true))), bvec2(bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true))), _GLF_IDENTITY(true, (true) && true))))))))), true)), true)))))))), vec2(1.0)), true, mat3x2(1.0), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), 0u | (~ (~ (1u)))))), _GLF_struct_5(_GLF_IDENTITY(ivec3(1), (ivec3(1)) | ivec3(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) ^ 0))))), 0)), mat2x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-478.488)), bool(false)))) * 1.0)))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || _GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))), ! (! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))))))))))), (injectionSwitch.x < injectionSwitch.y)))), true && ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))), ! (! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))))))))))), (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (false), true, false, false))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))), ! (! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))))))))))), (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(! (false), true, _GLF_IDENTITY(false, (false) && true), false))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))) && true)), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))), ! (! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))))))))))), (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(! (false), true, false, false))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))) && true)))), ! (_GLF_IDENTITY(! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))), ! (! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))))))))))), (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(! (false), true, false, false))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))) && true))))), true && (! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false)))))), ! (! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))))))))))), (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(! (false), true, false, false))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))) && true)))))))))))))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(! (false), _GLF_IDENTITY(true, true && (true)), false, false))), _GLF_IDENTITY((! (false)) && true, (_GLF_IDENTITY((! (false)) && true, ((! (false)) && true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), false || (bool(_GLF_IDENTITY(false, (false) && true)))))) || (bool(bvec3(false, false, false))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))), bool(bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), true))))) || false)), (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))) || (bool(bool(false)))))))) || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) || false)) || false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), clamp(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), (vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0))) - vec2(0.0, 0.0))))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), clamp(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), (vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0))) - vec2(0.0, 0.0))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), clamp(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), (vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0))) - vec2(0.0, 0.0))))).y)))))), bool(bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(254.906, -69.84, -9867.1793, 0.1, -8170.8110, -960.235)) : mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0))))).x > injectionSwitch.y))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), clamp(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), (vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0))) - vec2(0.0, 0.0))))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), clamp(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), (vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0))) - vec2(0.0, 0.0))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), clamp(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), (vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0))) - vec2(0.0, 0.0))))).y)))))), bool(bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(254.906, -69.84, -9867.1793, 0.1, -8170.8110, -960.235)) : mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0))))).x > injectionSwitch.y))), true)), false, false))))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))) || (bool(bool(false)))))))) || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) || false)) || false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), clamp(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), (vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0))) - vec2(0.0, 0.0))))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), clamp(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), (vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0))) - vec2(0.0, 0.0))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), clamp(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), (vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0))) - vec2(0.0, 0.0))))).y)))))), bool(bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(254.906, -69.84, -9867.1793, 0.1, -8170.8110, -960.235)) : mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0))))).x > injectionSwitch.y))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), clamp(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), (vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0))) - vec2(0.0, 0.0))))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), clamp(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), (vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0))) - vec2(0.0, 0.0))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), clamp(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0)), (vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0))) - vec2(0.0, 0.0))))).y)))))), bool(bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(254.906, -69.84, -9867.1793, 0.1, -8170.8110, -960.235)) : mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0))))).x > injectionSwitch.y))), true)), false, false))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0)))) / 1.0) < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), float(mat4x3(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))), 1.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), float(_GLF_FUZZED(6.4)), bool(false)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))))))), ! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY((bool(bool(false))) || false, ! (! (_GLF_IDENTITY((bool(bool(false))) || false, bool(bvec2((bool(bool(false))) || false, true))))))))), true && _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), (bool(bool(false))) || false)))), false || (((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), (bool(bool(false))) || false)))))))))))))))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true) || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), (bool(bool((false)))) || false))), (_GLF_IDENTITY(false, true && (false))) || false)))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, abs(exp(0.0)), 0.0))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-29.15) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) / 1.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-29.15) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-29.15) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), injectionSwitch)).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(-29.15) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), min((false ? _GLF_FUZZED(-29.15) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (false ? _GLF_FUZZED(-29.15) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) / 1.0))), mix(float(_GLF_FUZZED(-1805.6317)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-29.15) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) / 1.0)))), bool(true)))))))))), bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.8)), bool(false))))) > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-29.15) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) / 1.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-29.15) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))))))) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-29.15) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-29.15) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) / 1.0, (false ? _GLF_FUZZED(-50.74) : (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false) ? _GLF_FUZZED(-29.15) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) / 1.0))))), mix(float(_GLF_FUZZED(-1805.6317)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(-29.15, max(_GLF_IDENTITY(-29.15, (true ? -29.15 : _GLF_FUZZED(-42.23))), -29.15))) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) / 1.0)))), bool(true)))))))))), false))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(gl_WorkGroupSize.x, _GLF_struct_16(mat3x4(1.0), vec3(1.0), mat4x3(1.0)), mat2x3(1.0), ivec2(_GLF_IDENTITY(1, 0 + (1))), _GLF_struct_18(_GLF_struct_17(mat2(1.0)), ivec2(1), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_struct_20(mat4x2(1.0), _GLF_struct_19(ivec4(1), mat4x2(1.0), mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.5)), bool(_GLF_IDENTITY(false, true && (false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.5)), bool(false))), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.5)), bool(false))), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.5)), bool(false)))) * 1.0), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), determinant(mat3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-668.315)), float(_GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0))), 0.0, 1.0, 1.0)), (float(mat2x4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0))), 0.0, 1.0, 1.0))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), (true ? 0.0 : _GLF_FUZZED(-766.390))), round(length(normalize(1.0))))))), bool(true))), 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.5)), bool(false))), mix(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.5)), bool(false)))), float(_GLF_FUZZED(-5.9)), bool(false))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.5)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))) : _GLF_FUZZED(8.0), mix(float(true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.5)), bool(false))) : _GLF_FUZZED(8.0)), float(_GLF_FUZZED(float(19034u))), bool(false))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.5)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(58678) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (1) * _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(-60079) : 1), 0 ^ ((false ? _GLF_FUZZED(-60079) : 1))))), (false ? _GLF_FUZZED(46497) : false ? _GLF_FUZZED(58678) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (1) * _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(-60079) : 1), 0 ^ ((false ? _GLF_FUZZED(-60079) : 1))))))))), _GLF_IDENTITY(int(int(1)), clamp(int(int(1)), int(int(1)), int(int(1)))))), (false ? _GLF_FUZZED(ivec2(-4406, 10556)) : ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(58678) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (1) * _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(-60079) : 1), 0 ^ ((false ? _GLF_FUZZED(-60079) : 1))))), (false ? _GLF_FUZZED(46497) : false ? _GLF_FUZZED(58678) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (1) * _GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(-60079) : 1), 0 ^ ((false ? _GLF_FUZZED(-60079) : 1))))))))), _GLF_IDENTITY(int(int(1)), clamp(int(int(1)), int(int(1)), int(int(1)))))))), (ivec2(1)) | ivec2(0, 0)), true, bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(true, ! (! (true)))) && true), bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) | (1u)))), ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u ^ (~ (1u)))))) - 0u))), 1u))) | (1u), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, 0u ^ (1u)))) * (1u))) | (1u)), (1u) | (1u)), 1u))), clamp((_GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) | (1u)), (1u) | (1u)), 1u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) | (1u)), (1u) | (1u)), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) | (1u)), (1u) | (1u)), 1u)), max(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) | (1u)), (1u) | (1u)), 1u)), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) | (1u)), (1u) | (1u)), 1u))))) | 0u)), 0u | ((_GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) | (1u)), (1u) | (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) | (1u)), (1u) | (1u))) | 0u), 1u))))), (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) | (1u)), (1u) | (1u)), 1u))))) | (1u)))))), _GLF_struct_22(vec4(1.0), _GLF_struct_21(mat2(1.0), mat3x4(1.0), mat2x3(1.0), bvec4(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, false || (true)))))), mat3(1.0)), mat2x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min((1.0), (1.0))) - 0.0))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))))) && true))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))), false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_23.workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(clamp(workgroup_id, workgroup_id, workgroup_id), 1u * (clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u), workgroup_id))));
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_10(_GLF_struct_8(vec4(1.0), bvec4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))), bvec4(true), vec3(1.0), mat4(1.0), 1u, mat3x4(1.0)), _GLF_struct_9(true, mat2(1.0), true)), vec2(1.0), _GLF_struct_13(_GLF_struct_11(ivec4(1), _GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_FUZZED(uintBitsToFloat(workgroup_base)) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_FUZZED(uintBitsToFloat(workgroup_base)) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0))), (false ? _GLF_FUZZED(6312.0487) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) ? _GLF_FUZZED(uintBitsToFloat(workgroup_base)) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_FUZZED(uintBitsToFloat(workgroup_base)) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0)))))), mat3(mat3(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_FUZZED(uintBitsToFloat(workgroup_base)) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_FUZZED(uintBitsToFloat(workgroup_base)) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0))), (false ? _GLF_FUZZED(6312.0487) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) ? _GLF_FUZZED(uintBitsToFloat(workgroup_base)) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_FUZZED(uintBitsToFloat(workgroup_base)) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0))))))))), 1.0), vec4(1.0), bvec4(true), _GLF_struct_12(uvec2(1u), 1.0, 1.0, bvec3(true), mat4x3(1.0))), mat3x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2x4(92.89, 3.7, 4.5, -2084.9590, -8074.0021, -7.6, 3284.6119, 374.459)) : mat2x4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), (float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2x4(92.89, 3.7, 4.5, -2084.9590, -8074.0021, -7.6, 3284.6119, 374.459)) : mat2x4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) + 0.0))), uvec4(1u), _GLF_struct_14(vec2(1.0), workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_7._f0.subgroup_local_id, mat3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(-34.65, -789.496)) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(-34.65, -789.496)) : 1.0))) + sqrt(0.0))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(-34.65, -789.496)) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(-34.65, -789.496)) : 1.0))) + sqrt(0.0))))), (false ? _GLF_FUZZED(vec4(-958.446, 29.40, -249.530, 9.6)) : _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(-34.65, -789.496)) : 1.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(-34.65, -789.496)) : 1.0))), (true ? vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(-34.65, -789.496)) : 1.0))) : _GLF_FUZZED(vec4(-3511.9312, 4.6, 138.307, 96.39)))), vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(-34.65, -789.496)) : 1.0)))), min(min(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(atan(-34.65, -789.496)) : 1.0))), (true ? vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(-34.65, -789.496)) : 1.0))) : _GLF_FUZZED(vec4(-3511.9312, 4.6, 138.307, 96.39)))), vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(-34.65, -789.496)) : 1.0)))), min(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(-34.65, -789.496)) : 1.0))), (true ? vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(atan(-34.65, _GLF_IDENTITY(-789.496, float(mat2x3(-789.496, 1.0, 0.0, 1.0, 0.0, 0.0))))) : 1.0, abs(1.0) * (false ? _GLF_FUZZED(atan(-34.65, _GLF_IDENTITY(-789.496, float(mat2x3(-789.496, 1.0, 0.0, 1.0, 0.0, 0.0))))) : 1.0))))) : _GLF_FUZZED(vec4(-3511.9312, 4.6, 138.307, 96.39)))), vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(-34.65, -789.496)) : 1.0)))))))))), uvec2(1u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0))).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0))).x, float(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0))).x, 0.0))) > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0))).x > injectionSwitch.y)), false), false, false))))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(true))) && (false)) || (_GLF_IDENTITY((false), false || ((false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, 1.0, 1.0, length(vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0)), 0.0, abs(0.0), 1.0), transpose(transpose(mat2x4(injectionSwitch.y, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), 0.0 + (abs(0.0))), abs(0.0))), 1.0)))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0))) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), false))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))))).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))))).y) / abs(1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))))).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))))).y) / abs(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))))).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))))).y) / abs(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))))).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))))).y) / abs(1.0))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_struct_replacement_7._f0.subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(19727u))), vec2(_GLF_FUZZED(8.1), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))))), false))), true))).y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-13.86, min(_GLF_IDENTITY(_GLF_IDENTITY(-13.86, min(-13.86, -13.86)), (_GLF_IDENTITY(-13.86, min(-13.86, -13.86))) - _GLF_ZERO(0.0, injectionSwitch.x)), -13.86)), float(mat2(-13.86, 1.0, 1.0, 1.0))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false) ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-13.86, float(mat2(-13.86, 1.0, 1.0, 1.0))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))) : _GLF_FUZZED(692.444))) : _GLF_FUZZED(4317.9515), (false ? _GLF_FUZZED(-461.776) : _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(39.96, 3.4)) : injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(19727u))), _GLF_IDENTITY(vec2(_GLF_FUZZED(8.1), (injectionSwitch)[_GLF_IDENTITY(1, int(int(1)))]), vec2(mat3x2(vec2(_GLF_FUZZED(8.1), (injectionSwitch)[_GLF_IDENTITY(1, int(int(1)))]), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0))), bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true))).y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-13.86, float(mat2(-13.86, 1.0, 1.0, 1.0))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-13.86, float(mat2(-13.86, 1.0, 1.0, 1.0))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_IDENTITY(_GLF_FUZZED(692.444), clamp(_GLF_FUZZED(692.444), _GLF_IDENTITY(_GLF_FUZZED(692.444), (true ? _GLF_FUZZED(692.444) : _GLF_FUZZED(0.5))), _GLF_FUZZED(692.444))))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(4317.9515), clamp(_GLF_FUZZED(4317.9515), _GLF_FUZZED(4317.9515), _GLF_FUZZED(4317.9515))), clamp(_GLF_IDENTITY(_GLF_FUZZED(4317.9515), clamp(_GLF_FUZZED(4317.9515), _GLF_FUZZED(4317.9515), _GLF_FUZZED(4317.9515))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(4317.9515), clamp(_GLF_FUZZED(4317.9515), _GLF_FUZZED(4317.9515), _GLF_FUZZED(4317.9515))), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(4317.9515), clamp(_GLF_FUZZED(4317.9515), _GLF_FUZZED(4317.9515), _GLF_FUZZED(4317.9515))))), _GLF_IDENTITY(_GLF_FUZZED(4317.9515), clamp(_GLF_FUZZED(4317.9515), _GLF_FUZZED(4317.9515), _GLF_FUZZED(4317.9515))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-13.86, float(_GLF_IDENTITY(mat2(-13.86, 1.0, 1.0, 1.0), (mat2(-13.86, 1.0, 1.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))))), (true ? float(_GLF_FUZZED(_GLF_IDENTITY(-13.86, float(_GLF_IDENTITY(mat2(-13.86, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, sqrt(1.0), 0.0), (mat2(1.0, 0.0, sqrt(1.0), 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)))), 1.0), (mat2(-13.86, 1.0, 1.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))))) : _GLF_FUZZED(float((-36541 | 84279))))), mix(float(_GLF_FUZZED(3866.0391)), float(float(_GLF_FUZZED(_GLF_IDENTITY(-13.86, float(mat2(-13.86, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, cos(0.0), log(1.0), abs(0.0), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0)))))), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))), float(injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, true)))) && true))))))))))) : _GLF_FUZZED(4317.9515)) / 1.0)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(0.0) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), mix(float(_GLF_FUZZED(5843.2727)), float((false ? _GLF_FUZZED(0.0) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), bool(true)))), injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(0.0) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), mix(float(_GLF_FUZZED(5843.2727)), float((_GLF_IDENTITY(false ? _GLF_FUZZED(0.0) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0 + (false ? _GLF_FUZZED(0.0) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), bool(true)))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) || false) || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 for(int _injected_loop_counter = (_GLF_IDENTITY((0 | 0) >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (1) >> 0))), (true ? (0 | 0) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), int(_GLF_IDENTITY(1, (1) >> 0))) : _GLF_FUZZED(-22942)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, int(_GLF_IDENTITY(int((1) | 0), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_IDENTITY((1) | 0, ((1) | 0) * 1)))))))); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ~ (~ (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))))), ~ (~ (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ~ (~ (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))))))))), ~ (~ ((_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ~ (~ (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))))), ~ (~ (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ~ (~ (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))))))))))))), _GLF_IDENTITY((_injected_loop_counter ++), ((_injected_loop_counter ++)) | _GLF_IDENTITY(0, (0) - 0)) / 1)), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))), (_injected_loop_counter ++) / _GLF_IDENTITY(1, (1) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))), (_injected_loop_counter ++) / _GLF_IDENTITY(1, (1) - 0))) ^ (1 ^ 1))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      continue;
     continue;
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))))), false || (_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))))))), false, true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))))), false || (_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))))))), false, true, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)), (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))) && true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))))), false || (_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))), (bool(_GLF_DEAD(false))) || false)))))))), false, true, true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (_GLF_IDENTITY(false, ! (! (false)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false || (false)), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9911.6661) : injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(bvec4(bool(_GLF_IDENTITY(false, true && (false))), true, false, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))), true, true))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, log(1.0)))).y)), false, false), false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[_GLF_struct_replacement_15._f5.virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), 0.0, 0.0), mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0)))), (true ? float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0), mat4(1.0) * (mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(78.89)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(6992.6687) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), bool(true))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 1.0)))) - 0.0), 0.0, 0.0)))) : _GLF_FUZZED(523.028)))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-356.300, -5.2)), min(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0), (mat4x2(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-356.300, -5.2)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-356.300, -5.2)))))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-356.300, -5.2)), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-356.300, -5.2)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-356.300, -5.2)))))).y) || false)) || false)))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(81.07, 2.9, 269.851, -907.553, -45.62, 52.04)) : mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(81.07, 2.9, 269.851, -907.553, -45.62, 52.04)) : mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0))))) * mat2(1.0), min((vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(81.07, 2.9, 269.851, -907.553, -45.62, 52.04)) : mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0))))) * mat2(1.0), (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(81.07, 2.9, 269.851, -907.553, -45.62, 52.04)) : mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0))))) * mat2(1.0))))).y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(81.07, 2.9, 269.851, -907.553, -45.62, 52.04)) : mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(81.07, 2.9, 269.851, -907.553, -45.62, 52.04)) : mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0))))) * mat2(1.0), min((vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(81.07, 2.9, 269.851, -907.553, -45.62, 52.04)) : mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0))))) * mat2(1.0), (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(81.07, 2.9, 269.851, -907.553, -45.62, 52.04)) : mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0))))) * mat2(1.0))))).y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(81.07, 2.9, 269.851, -907.553, -45.62, 52.04)) : mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(81.07, 2.9, 269.851, -907.553, -45.62, 52.04)) : mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0))))) * mat2(1.0), min((vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(81.07, 2.9, 269.851, -907.553, -45.62, 52.04)) : mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0))))) * mat2(1.0), (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(81.07, 2.9, 269.851, -907.553, -45.62, 52.04)) : mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0))))) * mat2(1.0))))).y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(checker[_GLF_struct_replacement_15._f5.virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0)), min(float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0)), float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0))))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))) ? _GLF_FUZZED(7541.4238) : _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_IDENTITY(_GLF_FUZZED(8.1), min(_GLF_IDENTITY(_GLF_FUZZED(8.1), mix(float(_GLF_FUZZED(5999.4506)), float(_GLF_FUZZED(8.1)), _GLF_IDENTITY(bool(true), true && (bool(true))))), _GLF_FUZZED(8.1)))))), 1.0 * ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))) ? _GLF_FUZZED(7541.4238) : _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_IDENTITY(_GLF_FUZZED(8.1), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(8.1), min(_GLF_FUZZED(8.1), _GLF_FUZZED(8.1))), mix(float(_GLF_FUZZED(5999.4506)), float(_GLF_FUZZED(8.1)), bool(true))), _GLF_FUZZED(8.1)))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), true && (! (true)))))), bool(bool(! (true)))))), true))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
