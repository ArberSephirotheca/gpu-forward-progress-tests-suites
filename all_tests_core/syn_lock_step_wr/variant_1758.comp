#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 uvec2 GLF_merged2_0_1_13_1_1_4num_workgroupread;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, log(1.0), 1.0, 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 uvec4 GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_base.y = subgroup_id;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((7519.5100 / 2.7))), vec2(_GLF_FUZZED(float((bvec3(false, true, false) == bvec3(true, true, false)))), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x = subgroup_size;
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(0.0), abs(0.0), 0.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, exp(0.0), 0.0)), float(mat3x2(float(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(0.0), abs(0.0), 0.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, exp(0.0), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, abs(1.0), 1.0, 0.0, cos(0.0), 0.0, 1.0, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, abs(1.0), 1.0, 0.0, cos(0.0), 0.0, 1.0, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0))))), (vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, abs(1.0), 1.0, 0.0, cos(0.0), 0.0, 1.0, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, abs(1.0), 1.0, 0.0, cos(0.0), 0.0, 1.0, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0)))))) * mat2(1.0))).y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.7), _GLF_FUZZED(float(false))), bvec2(false, false))).y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, injectionSwitch.y))))))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, true, false))))))
                {
                }
               else
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4742.4094)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         else
          {
          }
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), 1u * (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_NumWorkGroups.x), clamp((gl_NumWorkGroups.x), (gl_NumWorkGroups.x), (gl_NumWorkGroups.x))), uint(uvec3(~ (gl_NumWorkGroups.x), 0u, 1u))))))), (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))).x), 1u * (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), uint(uvec3(~ (gl_NumWorkGroups.x), 0u, 1u)))))))) | 0u);
 do
  {
   GLF_merged2_0_1_13_1_1_4num_workgroupread.x = num_workgroup;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat4x2(9.4, -1.8, 1.8, 5.2, 501.497, 10.61, _GLF_IDENTITY(-4.9, 1.0 * (-4.9)), -2.0)[2]) : injectionSwitch)).x > injectionSwitch.y))));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize))[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize)))), uvec3(0u, 0u, 0u) + (~ _GLF_IDENTITY((gl_WorkGroupSize), ~ (~ ((gl_WorkGroupSize))))))))[2], (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)))))[2], _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), max((~ (gl_WorkGroupSize)), (~ (gl_WorkGroupSize)))))[2]), ((_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), max((~ (gl_WorkGroupSize)), (~ (gl_WorkGroupSize)))))[2])) | 0u) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize), clamp((gl_WorkGroupSize), (gl_WorkGroupSize), (gl_WorkGroupSize))), (~ _GLF_IDENTITY((gl_WorkGroupSize), clamp((gl_WorkGroupSize), (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))))), (gl_WorkGroupSize)))) / uvec3(1u, 1u, 1u))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize), clamp((gl_WorkGroupSize), (gl_WorkGroupSize), (gl_WorkGroupSize))), (~ _GLF_IDENTITY((gl_WorkGroupSize), clamp((gl_WorkGroupSize), (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))))), (gl_WorkGroupSize)))) / uvec3(1u, 1u, 1u)))) | ((_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize), clamp((gl_WorkGroupSize), (gl_WorkGroupSize), (gl_WorkGroupSize))), (~ _GLF_IDENTITY((gl_WorkGroupSize), clamp((gl_WorkGroupSize), (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))))), (gl_WorkGroupSize)))) / uvec3(1u, 1u, 1u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ _GLF_IDENTITY((gl_WorkGroupSize), clamp(_GLF_IDENTITY((gl_WorkGroupSize), clamp((gl_WorkGroupSize), (gl_WorkGroupSize), (gl_WorkGroupSize))), (gl_WorkGroupSize), (gl_WorkGroupSize))))), max(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ _GLF_IDENTITY((gl_WorkGroupSize), clamp((gl_WorkGroupSize), (gl_WorkGroupSize), (gl_WorkGroupSize))))), _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ _GLF_IDENTITY((gl_WorkGroupSize), clamp((gl_WorkGroupSize), (gl_WorkGroupSize), (gl_WorkGroupSize))))))))))[2])))).x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y = workgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   else
    {
    }
  }
 uint workgroup_base = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y) >> 0u) * workgroup_id;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.0), _GLF_FUZZED(791.218)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(true, true))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_base.w = workgroup_base, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)) ^ (GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_base.w = _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base))));
 uint virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_base.w, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_base.w, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_base.w, (GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_base.w) | (GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_base.w))) - 0u)) / (1u | 0u)) + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_base.y * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, 0u | (GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_base.y * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)) + subgroup_local_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_base.z = virtual_gid;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_base.w + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_base, max(GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_base, GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_base)).y, 0u ^ (GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_base.y)) * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(53732) : 1)))), (1) << 0)) | (_GLF_IDENTITY(1, clamp(1, 1, 1))), min((_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (1))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (1))) << 0), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (1))) << 0), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, 0)))) | (1))) << 0)))) | 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 0 | (1)))), clamp(1, _GLF_IDENTITY(1, min(1, 1)), 1))))))))) % _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x), clamp(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x), ~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x), ~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)))))) / 1u), clamp(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), (true ? _GLF_IDENTITY(~ _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), (false ? _GLF_FUZZED(GLF_merged2_0_1_13_1_1_4num_workgroupread) : _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), uvec2(0u, 0u) + ((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size))))), ~ (~ (~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)))) : _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), min(_GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), (_GLF_FUZZED(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)) * uvec2(1u, 1u)), _GLF_FUZZED(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size))))))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), max(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), _GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), uvec2(uvec4(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), 1u, 1u))))))).x, max(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), max(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), ~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size))))).x, _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), max(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), ~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size))))).x)), (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x) - 0u), GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), uint(_GLF_IDENTITY(uvec4((subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, ((1) << 0) | ((1) << 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0 ^ (_GLF_IDENTITY(1, clamp(1, 1, 1))))), min((_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(int(1))))), 1))), (_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1))))))))))) % _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, clamp(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), (true ? ~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) : _GLF_FUZZED(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size))))).x, _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) | (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)), GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size))) ^ uvec2(0u, 0u)).x) - 0u), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x) | 0u))), 1u, 0u, 0u), ~ (~ (uvec4((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + (0 >> _GLF_IDENTITY(int(4), int(4)))), (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, clamp(1, 1, 1))), min((_GLF_IDENTITY(1, (1) << 0)) | _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), ((_GLF_IDENTITY(1, clamp(1, 1, 1)))) | ((_GLF_IDENTITY(1, clamp(1, 1, 1))))), (_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) * (_GLF_IDENTITY(1, clamp(1, 1, 1))))), min((_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), 0 ^ (clamp(1, 1, 1))))), (_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, clamp(1, 1, 1))), min((_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(1, 1, 1), (_GLF_IDENTITY(clamp(1, 1, 1), ~ (~ (clamp(1, 1, 1))))) >> (0 >> _GLF_IDENTITY(int(0), int(0))))), 0 | (~ (_GLF_IDENTITY(clamp(1, 1, 1), (_GLF_IDENTITY(clamp(1, 1, 1), ~ (~ (clamp(1, 1, 1))))) >> (0 >> _GLF_IDENTITY(int(0), int(0))))))))))), min((_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))), 0)), clamp(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(1, 1, 1), (_GLF_IDENTITY(clamp(1, 1, 1), ~ (~ (clamp(1, 1, 1))))) >> (0 >> _GLF_IDENTITY(int(0), int(0))))), 0 | (~ (_GLF_IDENTITY(clamp(1, 1, 1), (_GLF_IDENTITY(clamp(1, 1, 1), ~ (~ (clamp(1, 1, 1))))) >> (0 >> _GLF_IDENTITY(int(0), int(0))))))))))), min((_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))), 0)), int(ivec3(int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(1, 1, 1), (_GLF_IDENTITY(clamp(1, 1, 1), ~ (~ (clamp(1, 1, 1))))) >> (0 >> _GLF_IDENTITY(int(0), int(0))))), 0 | (~ (_GLF_IDENTITY(clamp(1, 1, 1), (_GLF_IDENTITY(clamp(1, 1, 1), ~ (~ (clamp(1, 1, 1))))) >> (0 >> _GLF_IDENTITY(int(0), int(0))))))))))), min((_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))), 0)), 0, 1))), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(1, 1, 1), (_GLF_IDENTITY(clamp(1, 1, 1), ~ (~ (clamp(1, 1, 1))))) >> (0 >> _GLF_IDENTITY(int(0), int(0))))), 0 | (~ (_GLF_IDENTITY(clamp(1, 1, 1), (_GLF_IDENTITY(clamp(1, 1, 1), ~ (~ (clamp(1, 1, 1))))) >> (0 >> _GLF_IDENTITY(int(0), int(0))))))))))), min((_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))), 0)), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(1, 1, 1), (_GLF_IDENTITY(clamp(1, 1, 1), ~ (~ (clamp(1, 1, 1))))) >> (0 >> _GLF_IDENTITY(int(0), int(0))))), 0 | (~ (_GLF_IDENTITY(clamp(1, 1, 1), (_GLF_IDENTITY(clamp(1, 1, 1), ~ (~ (clamp(1, 1, 1))))) >> (0 >> _GLF_IDENTITY(int(0), int(0))))))))))), min((_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))), 0))))))))))))) % _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, clamp(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), _GLF_IDENTITY((true ? ~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) : _GLF_FUZZED(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((true ? ~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) : _GLF_FUZZED(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)), clamp((true ? ~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) : _GLF_FUZZED(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)), _GLF_IDENTITY((true ? ~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) : _GLF_FUZZED(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)), ((true ? ~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) : _GLF_FUZZED(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size))) ^ uvec2(0u, 0u)), (true ? ~ (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) : _GLF_FUZZED(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size))))))))).x, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(_GLF_IDENTITY(uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u), uvec3(0u, 0u, 0u) + (uvec3(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, 1u))))).x, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x) - 0u), GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 1u, 0u, 0u))))))), min(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(1, (1 & 1), 1, 1)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec4(1, (1 & 1), 1, 1)))), 0 | ((_GLF_IDENTITY(1, int(ivec4(1, (1 & 1), 1, 1)))))), (_GLF_IDENTITY(1, int(ivec4(1, (1 & 1), 1, 1)))), (_GLF_IDENTITY(1, int(ivec4(1, (1 & 1), 1, 1)))))), clamp(~ (_GLF_IDENTITY(1, int(ivec4(1, (1 & 1), 1, 1)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(int(ivec4(1, (1 & 1), _GLF_IDENTITY(1, ~ (~ (1))), 1)), max(_GLF_IDENTITY(int(ivec4(1, (1 & 1), _GLF_IDENTITY(1, ~ (~ (1))), 1)), (int(ivec4(1, (1 & 1), _GLF_IDENTITY(1, ~ (~ (1))), 1))) | (int(ivec4(1, (1 & 1), _GLF_IDENTITY(1, ~ (~ (1))), 1)))), _GLF_IDENTITY(int(ivec4(1, (1 & 1), _GLF_IDENTITY(1, ~ (~ (1))), 1)), clamp(int(ivec4(1, (1 & 1), _GLF_IDENTITY(1, ~ (~ (1))), 1)), int(ivec4(1, (1 & 1), _GLF_IDENTITY(1, ~ (~ (1))), 1)), int(ivec4(1, (1 & 1), _GLF_IDENTITY(1, ~ (~ (1))), 1)))))))), ~ (_GLF_IDENTITY(1, int(ivec4(1, (_GLF_IDENTITY(1, max(1, 1)) & 1), 1, 1)))))))), (1) << 0)) ^ (0 | 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1)))) : _GLF_FUZZED(67287)))) * (_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))), max((_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (int(_GLF_ONE(1.0, injectionSwitch.y))))) << _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) << _GLF_IDENTITY(int(3), int(3))), min((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), min(int(3), int(3)))) | (int(3))))))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), (1) << 0))) - 0) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), clamp(1, 1, 1))))))), ((subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (1) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, int(ivec4(1, (1 & _GLF_IDENTITY(1, int(int(1)))), 1, 1)))), clamp(~ (_GLF_IDENTITY(1, int(ivec4(1, (1 & _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), 0 ^ (int(ivec2(1, 1))))), 1))), 1, 1)))), ~ (_GLF_IDENTITY(1, int(ivec4(1, (1 & 1), 1, 1)))), ~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, (1 & 1), 1, 1), max(ivec4(1, (1 & 1), 1, 1), ivec4(1, (1 & 1), 1, 1)))))))))), (1) << 0)) ^ (0 | 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1)))) : _GLF_FUZZED(67287)))) * (_GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))), max((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))), min((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))))))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))), max((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))), min((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))))))), (_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))), max((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))), min((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3)))))))) - 0), 0, 1)), int(ivec4(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))), max((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))), min((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))))))), (_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))), max((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))), _GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))), min((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3))), (int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), int(3)))))))) - 0), 0, 1)), 1, 0, 1)))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))), (1) << 0))) - 0) | (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0))))))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) % _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, clamp(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x) - 0u), GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x))), uint(uvec3(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED((false ? 51726 : -66444)) : 1)), 1, 1))))))) % _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size) | (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size)).x, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), clamp(_GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), clamp(_GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(uint(8u), uint(8u)))))), (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_base.x) : _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), clamp(_GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) >> (149048u & 0u)), uint(8u)), clamp(_GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(uint(8u), uint(8u)))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), clamp(_GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, max(8u, 8u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), clamp(_GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (_GLF_IDENTITY(uint(8u), (uint(8u)) >> 0u)) >> _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(virtual_gid) : 0u)))), _GLF_IDENTITY(uint(8u), uint(8u)))))), (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_base.x) : _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), clamp(_GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), clamp(_GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u))), uint(8u), uint(8u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) >> (149048u & 0u)), uint(8u)), clamp(_GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(uint(8u), uint(8u)))))))))))) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, min(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)))), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x) - 0u), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, uvec2(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size[0], GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size[1])).x))), _GLF_IDENTITY(1u, (1u) / 1u), 0u))), ((subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) >> 0)))), 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), min(clamp(1, 1, 1), _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) ^ 0))))))))))) % _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, clamp(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x) - 0u), GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 0u ^ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, clamp(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x) - 0u), GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)))))));
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true, false))))))));
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_base.x = next_virtual_gid, (GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_base.x = next_virtual_gid) ^ (0u << _GLF_IDENTITY(uint(6u), uint(6u))));
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 atomicStore(buf[GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_base.x], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(max(uint(1), uint(1)), min(max(uint(1), uint(1)), max(uint(1), uint(1)))))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), max(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))) >> 0u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))) >> 0u)), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(max(uint(1), uint(1)), min(max(uint(1), uint(1)), max(uint(1), uint(1)))))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), max(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))) >> 0u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))) >> 0u)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(max(uint(1), uint(1)), min(max(uint(1), uint(1)), max(uint(1), uint(1)))))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), max(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))) >> 0u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(max(uint(1), uint(1)), min(max(uint(1), uint(1)), max(uint(1), uint(1)))))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), max(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))) >> 0u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(max(uint(1), uint(1)), min(max(uint(1), uint(1)), max(uint(1), uint(1)))))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), max(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))) >> 0u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))) >> 0u)))), 1u))) | _GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), max(uint(1), uint(1)))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), clamp(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))) >> 0u)) | _GLF_IDENTITY(_GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), max(_GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), _GLF_IDENTITY(_GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), clamp(_GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), _GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), _GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1))))))))))), uint(_GLF_IDENTITY(uvec4(((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), max(uint(1), uint(1)))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), clamp(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))) >> 0u)) | _GLF_IDENTITY(_GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), max(_GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), _GLF_IDENTITY(_GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), clamp(_GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), _GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), _GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1))))))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), (true ? _GLF_IDENTITY(uvec4(((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), max(uint(1), uint(1)))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), clamp(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))) >> 0u)) | _GLF_IDENTITY(_GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), max(_GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), _GLF_IDENTITY(_GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), clamp(_GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), _GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), _GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1))))))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), max(uint(1), uint(1))), (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), max(uint(1), uint(1)))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), clamp(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))) >> 0u)) | _GLF_IDENTITY(_GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), max(_GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), _GLF_IDENTITY(_GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), clamp(_GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), _GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))), _GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1))))))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u))) : _GLF_FUZZED(GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_base))))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7.7) : injectionSwitch.x)))))), 4, 64, 4);
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_base, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_base)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (true ? ~ (0u) : _GLF_FUZZED(next_virtual_gid))))), 0u) << _GLF_IDENTITY(uvec4(6u), uvec4(6u))) ^ (uvec4(0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) - 0u))), 0u, 0u))) + (GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_base)).z], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     GLF_merged2_0_1_13_1_1_4num_workgroupread.y = read;
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), true && (! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), false)))))))))), ! (! (! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))))))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         atomicStore(checker[GLF_merged4_0_1_16_1_1_11_2_1_11_3_1_14next_virtual_gidsubgroup_idvirtual_gidworkgroup_base.z], _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_4num_workgroupread, min(GLF_merged2_0_1_13_1_1_4num_workgroupread, GLF_merged2_0_1_13_1_1_4num_workgroupread)).y, min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_4num_workgroupread, min(GLF_merged2_0_1_13_1_1_4num_workgroupread, GLF_merged2_0_1_13_1_1_4num_workgroupread)).y, _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_4num_workgroupread, min(GLF_merged2_0_1_13_1_1_4num_workgroupread, GLF_merged2_0_1_13_1_1_4num_workgroupread)).y)), _GLF_IDENTITY(4, (4) >> 0), 64, _GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), min(~ (4), ~ (4)))))) | (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, min(4, 4)) : _GLF_FUZZED(-53358))))))));
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}
