#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_24 {
 uint virtual_gid;
 mat4 _f0;
} ;

struct _GLF_struct_21 {
 mat4x2 _f0;
 mat2x4 _f1;
 bool _f2;
} ;

struct _GLF_struct_22 {
 _GLF_struct_21 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_19 {
 bvec3 _f0;
 int _f1;
} ;

struct _GLF_struct_18 {
 vec4 _f0;
 uvec3 _f1;
 mat4x2 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_17 {
 mat4x3 _f0;
 float _f1;
} ;

struct _GLF_struct_20 {
 _GLF_struct_17 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_19 _f2;
 uvec4 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_15 {
 vec4 _f0;
 mat3x4 _f1;
 mat3x2 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_16 {
 float _f0;
 _GLF_struct_15 _f1;
} ;

struct _GLF_struct_13 {
 uvec2 _f0;
 mat3x2 _f1;
 mat2 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_12 {
 bvec4 _f0;
 bvec4 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 uint _f1;
 _GLF_struct_13 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_10 {
 mat3x2 _f0;
 mat3x4 _f1;
 ivec2 _f2;
 uvec3 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_9 {
 mat4 _f0;
 bool _f1;
} ;

struct _GLF_struct_8 {
 mat2x4 _f0;
 mat4x3 _f1;
 mat4 _f2;
 uint _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_11 {
 vec4 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_10 _f3;
} ;

struct _GLF_struct_23 {
 _GLF_struct_11 _f0;
 uint subgroup_size;
 _GLF_struct_14 _f1;
 _GLF_struct_16 _f2;
 _GLF_struct_20 _f3;
 mat3 _f4;
 _GLF_struct_22 _f5;
} ;

struct _GLF_struct_5 {
 mat4x2 _f0;
} ;

struct _GLF_struct_4 {
 mat4x2 _f0;
 bvec2 _f1;
 vec2 _f2;
 uint subgroup_id;
 ivec4 _f3;
} ;

struct _GLF_struct_3 {
 uvec2 _f0;
 float _f1;
 mat4x2 _f2;
 ivec3 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_2 {
 bvec2 _f0;
 int _f1;
 bool _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 uint _f1;
 bool _f2;
 mat3x4 _f3;
 ivec2 _f4;
 float _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_7 {
 uvec2 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_6 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(uvec2(1u), _GLF_struct_1(_GLF_struct_0(mat2x3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2.3))), (1.0) * sqrt(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(false))), bool(false))), 1.0, 1.0)), 0.0 + (1.0)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)))) || false)) || false))) || false)) && true) ? _GLF_FUZZED(_GLF_IDENTITY(4988.3821, mix(float(_GLF_IDENTITY(4988.3821, (4988.3821) / 1.0)), float(_GLF_FUZZED(-49.02)), bool(false)))) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(72.72) : 1.0)), 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(72.72) : 1.0))))))), clamp(max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)))) || false)) || false))) || false)) && true) ? _GLF_FUZZED(4988.3821) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(72.72) : 1.0)), 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(72.72) : 1.0))))))), max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)))) || false)) || false))) || false)) && true) ? _GLF_FUZZED(4988.3821) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(72.72) : 1.0)), 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(72.72) : 1.0))))))), _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)))) || false)) || false))), ! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)))) || false)) || false)))))) || false)) && true) ? _GLF_FUZZED(4988.3821) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(72.72) : 1.0)), 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(72.72) : 1.0))))))), max(max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)))) || false)) || false, bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)))) || false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2((_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)))) || false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false)) && true) ? _GLF_FUZZED(4988.3821) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(72.72) : 1.0)), 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(72.72) : 1.0))))))), max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)))) || false)) || false))) || false)) && true) ? _GLF_FUZZED(4988.3821) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(72.72) : 1.0)), 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(72.72) : 1.0))))))))))))))), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, min(1u, 1u)))), true, mat3x4(1.0), ivec2(1), 1.0, ivec2(1)), bvec4(true)), _GLF_struct_6(_GLF_struct_2(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! (true && (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), true && (false || (true)))))))))))), 1, true, mat3x2(1.0)), _GLF_struct_3(uvec2(1u), 1.0, mat4x2(1.0), ivec3(1), mat2x4(1.0)), _GLF_struct_4(mat4x2(1.0), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((vec3(-121.139, 870.864, 2.1) - -5895.0548).t)), float(1.0), bool(true)))), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0), max(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(8532.2460, max(8532.2460, _GLF_IDENTITY(8532.2460, (8532.2460) - 0.0)))), _GLF_FUZZED(5.0)), vec2((vec2(1.0))[0], (vec2(1.0))[1]), bvec2(true, _GLF_IDENTITY(true, (true) && true)))))))[0], _GLF_IDENTITY(min(_GLF_IDENTITY((vec2(1.0)), mix(vec2(((vec2(1.0)))[0], _GLF_FUZZED(vec3(-4.6, 58.38, -1.7).s)), vec2(_GLF_FUZZED(-1.2), _GLF_IDENTITY(((vec2(1.0)))[1], float(mat2x3(((vec2(1.0)))[1], _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 1.0, 0.0)))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))[0], (vec2(1.0))[_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(4721)))))]), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(min((vec2(1.0))[0], (vec2(1.0))[0]), _GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, determinant(mat2(1.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), clamp(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))), exp(_GLF_ZERO(0.0, injectionSwitch.x))))), injectionSwitch.y), 1.0, abs(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)), min(float(mat4(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)), float(mat4(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)))))) / _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 1.0), transpose(transpose(mat2x3(_GLF_IDENTITY(min((vec2(1.0))[0], (vec2(1.0))[0]), (min((vec2(1.0))[0], (vec2(1.0))[0])) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(2.7)), bool(false))), abs(0.0), 1.0, 1.0))))), clamp(float(_GLF_IDENTITY(mat2x3(min((vec2(1.0))[0], (vec2(1.0))[0]), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), 1.0, 1.0), transpose(transpose(mat2x3(min((vec2(1.0))[0], (vec2(1.0))[0]), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), 1.0, 1.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(min((vec2(1.0))[0], (vec2(1.0))[0]), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), abs(0.0), 1.0, 1.0), transpose(transpose(mat2x3(min(_GLF_IDENTITY((vec2(1.0))[0], (false ? _GLF_FUZZED(438.971) : (vec2(1.0))[0])), (vec2(1.0))[0]), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackUnorm2x16(91720u)))).y), 1.0, abs(0.0), 1.0, 1.0))))), (false ? _GLF_FUZZED(-953.144) : _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(min((vec2(1.0))[0], (vec2(1.0))[0]), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), abs(0.0), 1.0, 1.0), transpose(transpose(mat2x3(min(_GLF_IDENTITY((vec2(1.0))[0], (false ? _GLF_FUZZED(438.971) : (vec2(1.0))[0])), (vec2(1.0))[0]), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackUnorm2x16(91720u)))).y), 1.0, abs(0.0), 1.0, 1.0))))), float(mat2(float(_GLF_IDENTITY(mat2x3(min((vec2(1.0))[0], (vec2(1.0))[0]), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), abs(0.0), 1.0, 1.0), transpose(transpose(mat2x3(min(_GLF_IDENTITY((vec2(1.0))[0], (false ? _GLF_FUZZED(438.971) : (vec2(1.0))[0])), (vec2(1.0))[0]), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackUnorm2x16(91720u)))).y), 1.0, abs(0.0), 1.0, 1.0))))), 1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(mat2x3(min((vec2(1.0))[0], (vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), clamp(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), mix(float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), float(_GLF_FUZZED(4.4)), bool(false))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), 0.0, 1.0)), max(_GLF_IDENTITY(float(mat4(1.0, 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), clamp(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), mix(float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), float(_GLF_FUZZED(4.4)), bool(false))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), 0.0, 1.0)), (true ? float(mat4(1.0, 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), clamp(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), mix(float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), float(_GLF_FUZZED(4.4)), bool(false))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), _GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), exp(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 1.0)) : _GLF_FUZZED(31.24))), float(mat4(1.0, 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), clamp(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), mix(float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), float(_GLF_FUZZED(4.4)), bool(false))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), 0.0, 1.0)))))))[0]), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), 1.0, 1.0), transpose(transpose(mat2x3(min((vec2(1.0))[0], (vec2(1.0))[0]), _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), 1.0, 1.0))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(86.21, mix(float(_GLF_IDENTITY(86.21, min(_GLF_IDENTITY(86.21, (true ? 86.21 : _GLF_FUZZED(-5.4))), 86.21))), float(_GLF_FUZZED(3.1)), bool(false)))) : _GLF_IDENTITY((vec2(1.0))[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) / 1)))))], min((_GLF_IDENTITY(vec2(1.0), vec2(mat2x4(_GLF_IDENTITY(vec2(1.0), max(vec2(1.0), vec2(1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))))[0], (vec2(1.0))[0])))), _GLF_FUZZED(-2.1)), vec2(_GLF_FUZZED(-30.31), (vec2(1.0))[1]), bvec2(false, true))), gl_SubgroupID, _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), ~ (~ (ivec4(1)))), max(_GLF_IDENTITY(ivec4(1), (ivec4(1)) ^ (ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) / 1), 0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 + (0))))) & ivec4(89628, -69401, -48799, 25528))), ivec4(1)))), _GLF_struct_5(mat4x2(1.0))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(_GLF_struct_11(vec4(1.0), _GLF_struct_8(mat2x4(1.0), mat4x3(1.0), mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0))), 1u, bvec4(true)), _GLF_struct_9(mat4(1.0), true), _GLF_struct_10(mat3x2(1.0), mat3x4(1.0), ivec2(1), uvec3(1u), bvec2(_GLF_IDENTITY(true, ! (! (true)))))), gl_SubgroupSize, _GLF_struct_14(_GLF_struct_12(bvec4(true), bvec4(true), bvec4(true)), 1u, _GLF_struct_13(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(113989u) : 1u))))) >> 0u)), mat3x2(1.0), mat2(1.0), _GLF_IDENTITY(mat3(1.0), mat3(mat3x4(_GLF_IDENTITY(mat3(1.0), mat3(0.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), (float(0.0)) - 0.0), _GLF_IDENTITY(float(_GLF_FUZZED(-12.22)), min(float(_GLF_FUZZED(-12.22)), float(_GLF_FUZZED(-12.22)))), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(float(vec3(0.0, 0.0, 1.0)), 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.8)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY(mat3(float(vec3(0.0, 0.0, 1.0)), 0.0, sqrt(1.0), _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(552.893) : 0.0)), 0.0, 0.0, 0.0, sin(tan(0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), tan(0.0)))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(refract(1822.9386, 9742.9587, -8058.4983))))), (false ? _GLF_FUZZED(mat3(6.4, -5.8, -79.16, 4120.0329, 48.06, -4809.7274, -6428.2142, 8429.8717, 1692.6370)) : mat3(float(vec3(0.0, 0.0, 1.0)), 0.0, sqrt(1.0), _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(552.893) : 0.0)), 0.0, 0.0, 0.0, sin(tan(0.0)), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), tan(0.0)))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(refract(1822.9386, 9742.9587, -8058.4983)))))))) * mat3(1.0))), min(float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(float(vec3(0.0, 0.0, 1.0)), 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 1.0, 1.0, abs(0.0), length(vec2(0.0, 0.0))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(1.0, 1.0)))), 1.0, 1.0, 0.0)), max(float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0)), float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0))))), 1.0, 1.0, 1.0), mat3(1.0) * (mat3(float(vec3(0.0, 0.0, 1.0)), 0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 1.0, 1.0, abs(0.0), length(vec2(0.0, 0.0))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(1.0, 1.0)))), 1.0, 1.0, 0.0)), max(float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0)), float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0))))), 1.0, 1.0, 1.0))), (mat3(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0), vec3(vec4(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0), 1.0)))), 0.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)) * mat3(1.0))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), mix(float(float(vec3(0.0, 0.0, 1.0))), float(_GLF_FUZZED(32.24)), bool(false))), 0.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat3(float(vec3(0.0, 0.0, 1.0)), 0.0, sqrt(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (1.0))) / 1.0), 1.0, 1.0, 1.0)) * _GLF_IDENTITY(mat3(1.0), mat3(1.0) * (mat3(1.0))))))))), 0.0) + (mat3(1.0))))))), _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(1u)), max((uvec3(1u)), (_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((uvec3(1u)) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) + 0u)), _GLF_IDENTITY(((uvec3(1u)) ^ uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(2u), _GLF_IDENTITY(uvec3(2u), max(uvec3(2u), uvec3(2u))))) * (((uvec3(1u)) ^ uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)))))))), (false ? _GLF_FUZZED(uvec3(189360u, 95665u, _GLF_IDENTITY(21883u, _GLF_IDENTITY((21883u), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((21883u), _GLF_IDENTITY(clamp((21883u), (21883u), (21883u)), ~ (~ (_GLF_IDENTITY(clamp((21883u), (21883u), (21883u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 0u)))) / 1u) ^ (clamp((21883u), _GLF_IDENTITY((21883u), (_GLF_IDENTITY((21883u), (false ? _GLF_FUZZED(10959u) : (21883u)))) | 0u), (21883u)))))))), (_GLF_IDENTITY((21883u), _GLF_IDENTITY(clamp((21883u), (21883u), (21883u)), ~ (~ (_GLF_IDENTITY(clamp((21883u), (21883u), (21883u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 0u)))) / 1u) ^ (clamp((21883u), _GLF_IDENTITY((21883u), (_GLF_IDENTITY((21883u), (false ? _GLF_FUZZED(10959u) : (21883u)))) | 0u), (21883u))))))))) >> 0u), 1u, 0u))) | 0u))) : (uvec3(_GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((1u), ((1u)) - 0u)))))) + uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), _GLF_struct_16(1.0, _GLF_struct_15(vec4(1.0), mat3x4(1.0), mat3x2(1.0), mat3x2(1.0))), _GLF_struct_20(_GLF_struct_17(mat4x3(1.0), 1.0), _GLF_struct_18(_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), _GLF_IDENTITY(vec4(1.0), vec4(mat4x3(vec4(1.0), 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(150753u) : 1u, min(false ? _GLF_FUZZED(150753u) : 1u, false ? _GLF_FUZZED(150753u) : _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(128449u))))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(150753u) : _GLF_IDENTITY(1u, (1u) + _GLF_IDENTITY(0u, ~ (~ (0u)))), min(false ? _GLF_FUZZED(150753u) : 1u, _GLF_IDENTITY(false ? _GLF_FUZZED(150753u) : _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(128449u))), (false ? _GLF_FUZZED(150753u) : _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(128449u)))) >> 0u)))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(150753u) : _GLF_IDENTITY(1u, (1u) + _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), uint(uint(_GLF_IDENTITY(0u, ~ (~ (0u))))))), min(false ? _GLF_FUZZED(150753u) : 1u, false ? _GLF_FUZZED(150753u) : _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(128449u))))))) + 0u) * 1u)))), mat4x2(1.0), mat2x4(1.0)), _GLF_struct_19(bvec3(true), 1), uvec4(_GLF_IDENTITY(1u, min(1u, 1u))), bvec3(true)), _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), _GLF_struct_22(_GLF_struct_21(mat4x2(1.0), mat2x4(1.0), true), mat2(1.0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-95.86, -641.990)) : injectionSwitch)).x, mix(float(_GLF_FUZZED((-4.4 / (- -4.8)))), float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-95.86, -641.990)) : injectionSwitch)).x), bool(true))) > injectionSwitch.y))) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.5), _GLF_FUZZED(66.56)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.1)), bool(false))) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec4(false, false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint subgroup_base = _GLF_struct_replacement_7._f2._f2.subgroup_id * _GLF_struct_replacement_23.subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, true)), ! (! (bool(bvec3((false), true, true))))))) || false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) && true)) && true))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(float(82660)), 1.0 * (_GLF_FUZZED(float(82660)))), _GLF_FUZZED(603.296)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat4x3(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(653.469)), bool(false))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0)))), bvec2(true, true))).y, injectionSwitch.y, injectionSwitch.y))))))))) || false))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(82660)), _GLF_FUZZED(603.296)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat4x3((injectionSwitch)[1], 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0)))), bvec2(true, true))).y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), injectionSwitch.y))))))))) || false))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(false), true), false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_24 _GLF_struct_replacement_24 = _GLF_struct_24(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))) + subgroup_base + subgroup_local_id, mat4(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-7328.8057, 48.34).s)), vec2(_GLF_FUZZED(-822.561), (injectionSwitch)[1]), bvec2(false, true))).y))) && true, (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))) && _GLF_IDENTITY(true, (true) || false)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u), (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u)) | (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u)))) >> 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u), (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u)) >> 0u), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) / 1u))), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) | (subgroup_base)), subgroup_base)), (subgroup_base) * 1u), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) / 1u))), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) | (subgroup_base)), subgroup_base), clamp(clamp(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) / 1u))), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) | (subgroup_base)), subgroup_base), clamp(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) / 1u))), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) | (subgroup_base)), subgroup_base), clamp(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) / 1u))), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) | (subgroup_base)), subgroup_base)))), (subgroup_base) * 1u)) / 1u))) + ((subgroup_local_id + 1) % _GLF_struct_replacement_23.subgroup_size), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u), (_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u))))), max(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u), workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u)) >> _GLF_IDENTITY(0u, max(0u, 0u))), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) / 1u))), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) | (subgroup_base)), subgroup_base)), (subgroup_base) * 1u))) + (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))) % _GLF_struct_replacement_23.subgroup_size), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u), min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u), (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u)) >> 0u), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) / 1u))), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) | (subgroup_base)), subgroup_base)), (subgroup_base) * 1u))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % _GLF_struct_replacement_23.subgroup_size)), (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u), min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u), (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u)) >> 0u), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) / 1u))), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) | (subgroup_base)), subgroup_base)), (subgroup_base) * 1u))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % _GLF_struct_replacement_23.subgroup_size))) ^ 0u))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) * 1u, clamp((subgroup_base) * 1u, (subgroup_base) * 1u, (subgroup_base) * 1u))), min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u), (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u)) >> _GLF_IDENTITY(0u, ~ (~ (0u)))), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) / 1u))), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) >> (0u | 0u)))), min(_GLF_IDENTITY(subgroup_base, max(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) >> (0u | 0u)))), _GLF_IDENTITY(subgroup_base, max(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) >> (0u | 0u))))))) | (subgroup_base)), subgroup_base)), (subgroup_base) * 1u))) + ((subgroup_local_id + 1) % _GLF_struct_replacement_23.subgroup_size), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u), min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) * _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u))), (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u)) >> 0u), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) / 1u))), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) | (subgroup_base)), subgroup_base)), (subgroup_base) * 1u))) + ((subgroup_local_id + 1) % _GLF_struct_replacement_23.subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)))), true && (bool(bvec4(false, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y), _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(clamp(injectionSwitch, injectionSwitch, (_GLF_IDENTITY(vec2(5.1, -8849.2621), (vec2(5.1, -8849.2621)) - vec2(0.0, 0.0)) + vec2(-825.783, -77.27)))) : injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)], uint(1), 4, _GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | 0)) * _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), int(_GLF_ONE(1.0, injectionSwitch.y)), 1)), clamp(int(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), int(_GLF_ONE(1.0, injectionSwitch.y)), 1)), int(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), int(_GLF_ONE(1.0, injectionSwitch.y)), 1)), int(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), int(_GLF_ONE(1.0, injectionSwitch.y)), 1))))), 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1))) ^ 0))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, true && (true)), false)), ! (! (bool(bvec2(_GLF_IDENTITY(true, true && (true)), false))))))))) ? min(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4) | 0, (false ? _GLF_FUZZED(33055) : (4) | 0)))) * 1)) : _GLF_FUZZED(-66038)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0), (mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, sqrt(1.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0)) - mat2x4(0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - 0.0), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0))))))))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_24.virtual_gid], uint(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((buf[_GLF_struct_replacement_24.virtual_gid]), ((buf[_GLF_struct_replacement_24.virtual_gid])) >> 0u)), 4, 64, 2);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) || false), false, true, true)), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) || false), false, true, true))) && true), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))))) || false), false, true, true)), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)))) || false), _GLF_IDENTITY(false, false || (false)), true, true))) && true)) && true)), bool(bvec2(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)))) || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))), false))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) || false), false, true, true)), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false))))), ((_GLF_IDENTITY(false, false || (false)))) || false), false, true, true))) && true), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_IDENTITY(false || (false), false || (false || (false)))))) || false), false, true, true)), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)))) || false), _GLF_IDENTITY(false, false || (false)), true, true))) && true)) && true)), bool(bvec2(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x < injectionSwitch.y)))))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)))) || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))), false))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec3((! (_GLF_IDENTITY(false, ! (! (false))))), true, false)))) || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))), false)))))) && true)))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 0.0))))).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((! ((injectionSwitch.x > injectionSwitch.y)))), (! ((! ((injectionSwitch.x > injectionSwitch.y))))) || false)))), false || (bool((! ((injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec2(-1181.5326, 718.571).s)), bool(false)))))))))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(checker[_GLF_struct_replacement_24.virtual_gid], _GLF_IDENTITY(read, (true ? read : _GLF_FUZZED(191248u))), _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, clamp(4, 4, 4)))), 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))) - vec2(0.0, 0.0))), injectionSwitch), mix(vec2(_GLF_FUZZED(6.5), _GLF_FUZZED(7.8)), vec2((max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) - vec2(0.0, 0.0))), injectionSwitch))[0], (max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) - _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-50.51), _GLF_FUZZED(5.0)), vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), bvec2(true, true))))), injectionSwitch))[1]), bvec2(true, true)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), true))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), true))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)))), true), true))))), (injectionSwitch.x > injectionSwitch.y))), false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, log(1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 1.0), mix(vec4(_GLF_FUZZED(float(192574u)), _GLF_FUZZED(-8.4), _GLF_FUZZED(-7.9), (vec4(1.0, 0.0, 1.0, 1.0))[3]), vec4((vec4(1.0, 0.0, 1.0, 1.0))[0], (vec4(1.0, 0.0, 1.0, 1.0))[1], (vec4(1.0, 0.0, 1.0, 1.0))[2], _GLF_FUZZED(float(true))), bvec4(true, true, true, false))))), tan(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)))), 0.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bool(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true)))))))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
