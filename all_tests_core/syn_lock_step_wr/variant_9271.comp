#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec4 GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size, _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size), uvec2(0u, 0u) ^ ((GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size))) * uvec2(1u, 1u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(23.92)), bool(false))), injectionSwitch[1])), vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(5.3)), float(injectionSwitch[0]), bool(true))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))[1])).y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(23.92)), bool(false))), injectionSwitch[1])), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(trunc(1.0)))), mix(float(_GLF_FUZZED(5.3)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(23.92)), bool(false))), injectionSwitch[1])), vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(5.3)), float(injectionSwitch[0]), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, true)))))))), injectionSwitch[1])).y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(23.92)), bool(false))), injectionSwitch[1])), vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(5.3)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])).y)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(int(_GLF_IDENTITY(0, (0) ^ 0))))], _GLF_FUZZED(47.71)), vec2(_GLF_FUZZED(63.79), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5225.8774)), vec2(_GLF_FUZZED(770.795), (injectionSwitch)[1]), bvec2(false, true))))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec4(false, false, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(pow(vec2(9.8, 7235.5985), injectionSwitch)))))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.w = _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) / 1u, ((subgroup_size) / 1u) | (_GLF_IDENTITY((subgroup_size) / 1u, min(_GLF_IDENTITY((subgroup_size) / 1u, 0u | ((subgroup_size) / 1u)), (subgroup_size) / 1u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) / 1u, ((subgroup_size) / 1u) | (_GLF_IDENTITY((subgroup_size) / 1u, min(_GLF_IDENTITY((subgroup_size) / 1u, 0u | ((subgroup_size) / 1u)), (subgroup_size) / 1u)))), 0u | (_GLF_IDENTITY((subgroup_size) / 1u, ((subgroup_size) / 1u) | (_GLF_IDENTITY((subgroup_size) / 1u, min(_GLF_IDENTITY((subgroup_size) / 1u, 0u | ((subgroup_size) / 1u)), (subgroup_size) / 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) / 1u, ((subgroup_size) / 1u) | (_GLF_IDENTITY((subgroup_size) / 1u, _GLF_IDENTITY(min(_GLF_IDENTITY((subgroup_size) / 1u, 0u | ((subgroup_size) / 1u)), (subgroup_size) / 1u), ~ (~ (min(_GLF_IDENTITY((subgroup_size) / 1u, 0u | ((subgroup_size) / 1u)), (subgroup_size) / 1u))))))), (0u ^ 0u) ^ (_GLF_IDENTITY((subgroup_size) / 1u, ((subgroup_size) / 1u) | (_GLF_IDENTITY((subgroup_size) / 1u, min(_GLF_IDENTITY((subgroup_size) / 1u, 0u | ((subgroup_size) / 1u)), (subgroup_size) / 1u)))))), _GLF_IDENTITY((subgroup_size) / 1u, ((subgroup_size) / 1u) | (_GLF_IDENTITY((subgroup_size) / 1u, min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) / 1u, 0u | ((subgroup_size) / 1u)), (subgroup_size) / 1u))))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) / 1u, ((subgroup_size) / 1u) | (_GLF_IDENTITY((subgroup_size) / 1u, min(_GLF_IDENTITY((subgroup_size) / 1u, 0u | ((subgroup_size) / 1u)), (subgroup_size) / 1u)))), 0u | (_GLF_IDENTITY((subgroup_size) / 1u, ((subgroup_size) / 1u) | (_GLF_IDENTITY((subgroup_size) / 1u, min(_GLF_IDENTITY((subgroup_size) / 1u, 0u | ((subgroup_size) / 1u)), (subgroup_size) / 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) / 1u, ((subgroup_size) / 1u) | (_GLF_IDENTITY((subgroup_size) / 1u, _GLF_IDENTITY(min(_GLF_IDENTITY((subgroup_size) / 1u, 0u | ((subgroup_size) / 1u)), (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), ~ (~ (uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))) / 1u), ~ (~ (min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) / 1u, ((subgroup_size) / 1u) | ((subgroup_size) / 1u)), 0u | ((subgroup_size) / 1u)), (subgroup_size) / 1u))))))), (0u ^ 0u) ^ (_GLF_IDENTITY((subgroup_size) / 1u, ((subgroup_size) / 1u) | (_GLF_IDENTITY((subgroup_size) / 1u, min(_GLF_IDENTITY((subgroup_size) / 1u, 0u | ((subgroup_size) / 1u)), (subgroup_size) / 1u)))))), _GLF_IDENTITY((subgroup_size) / 1u, _GLF_IDENTITY(((subgroup_size) / 1u) | (_GLF_IDENTITY((subgroup_size) / 1u, min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) / 1u, 0u | ((subgroup_size) / 1u)), (subgroup_size) / 1u))), max(((subgroup_size) / 1u) | (_GLF_IDENTITY((subgroup_size) / 1u, min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) / 1u, 0u | ((subgroup_size) / 1u)), (subgroup_size) / 1u))), _GLF_IDENTITY(((subgroup_size) / 1u) | (_GLF_IDENTITY((subgroup_size) / 1u, min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) / 1u, 0u | ((subgroup_size) / 1u)), (subgroup_size) / 1u))), min(((subgroup_size) / 1u) | (_GLF_IDENTITY((subgroup_size) / 1u, min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) / 1u, 0u | ((subgroup_size) / 1u)), (subgroup_size) / 1u))), ((subgroup_size) / 1u) | (_GLF_IDENTITY((subgroup_size) / 1u, min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) / 1u, 0u | ((subgroup_size) / 1u)), (subgroup_size) / 1u)))))))))) + 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), true, false, true))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), true)))))))), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (_GLF_IDENTITY(! ((_GLF_DEAD(false)) && true), _GLF_IDENTITY(bool(bool(! ((_GLF_DEAD(false)) && true))), ! (! (bool(bool(! ((_GLF_DEAD(false)) && true)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x = GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.w;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), (true ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), clamp(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), clamp(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), clamp(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))))))) : _GLF_FUZZED(injectionSwitch))), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))) + vec2(0.0, 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))) + vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))) + vec2(0.0, 0.0))).x)) > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))) + vec2(0.0, 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))) + vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))) + vec2(0.0, 0.0))).x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))) + vec2(0.0, 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))) + vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY((vec2(injectionSwitch)), mix(vec2(((vec2(injectionSwitch)))[0], ((vec2(injectionSwitch)))[1]), vec2(_GLF_FUZZED(-90.88), _GLF_FUZZED(4.9)), bvec2(false, false))) - vec2(0.0, 0.0))), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))) + vec2(0.0, 0.0))).x)) > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))) + vec2(0.0, 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))) + vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))) + vec2(0.0, 0.0))).x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))))) + vec2(0.0, 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))) + vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY((vec2(injectionSwitch)) - vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(float(20760u)), ((vec2(injectionSwitch)) - vec2(0.0, 0.0))[1]), vec2(((vec2(injectionSwitch)) - vec2(0.0, 0.0))[0], _GLF_FUZZED(88.08)), bvec2(true, false))))), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))) + vec2(0.0, 0.0))).x)) > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))) + vec2(0.0, 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))) + vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))) + vec2(0.0, 0.0))).x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))) + vec2(0.0, 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))) + vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY((vec2(injectionSwitch)), mix(vec2(((vec2(injectionSwitch)))[0], ((vec2(injectionSwitch)))[1]), vec2(_GLF_FUZZED(-90.88), _GLF_FUZZED(4.9)), bvec2(false, false))) - vec2(0.0, 0.0))), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))) + vec2(0.0, 0.0))).x)) > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))) + vec2(0.0, 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))) + vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))) + vec2(0.0, 0.0))).x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))))) + vec2(0.0, 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0))), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))) + vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY((vec2(injectionSwitch)) - vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(float(20760u)), ((vec2(injectionSwitch)) - vec2(0.0, 0.0))[1]), vec2(((vec2(injectionSwitch)) - vec2(0.0, 0.0))[0], _GLF_FUZZED(88.08)), bvec2(true, false))))), (vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))) + vec2(0.0, 0.0))).x)) > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), true, true, false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.5)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-80.65)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.z = num_workgroup;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))).y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8045.1341)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))), false))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))))), vec2(_GLF_FUZZED(-71.48), _GLF_FUZZED(562.667)), bvec2(false, false))).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 0.0)), (true ? vec2(mat4x2(injectionSwitch, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 0.0)) : _GLF_FUZZED(max(injectionSwitch, -915.194))))).x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8045.1341)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))), false)))))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) || false), (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8045.1341)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))), false)))))))))), true, true), bvec3(bvec3(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((! ((injectionSwitch.x > injectionSwitch.y)))), (! ((! ((injectionSwitch.x > injectionSwitch.y))))) && true)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8045.1341)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))), false)))))))))), true, true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), (bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(true, (true) || false)))))) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(459.122)), float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)) && true), false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)) && true))) ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-3395.6043)), min(_GLF_IDENTITY(float(_GLF_FUZZED(-3395.6043)), float(vec2(float(_GLF_FUZZED(-3395.6043)), 0.0))), float(_GLF_FUZZED(-3395.6043)))), float((injectionSwitch.x)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) * 1.0) : _GLF_FUZZED(cosh(-3.0))))), bool(true))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.2), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec2((injectionSwitch)[0], 1.0))), _GLF_FUZZED(-179.135)), bvec2(true, false))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.1)))))))
  barrier();
 GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.y = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false, true))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy, (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy, max(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy, GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy))) << uvec2(0u, 0u)).y * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 1u))), subgroup_id)) * _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size, (GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size) / uvec4(1u, 1u, 1u, 1u)).xy.x + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x, (GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x) | (GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x)), (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x, uint(uint(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x, (GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x) | (GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x, uint(uint(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x, uint(uint(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x))), ~ (~ (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x, uint(uint(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x, uint(uint(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x)))), min(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x, uint(uint(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x)))), min((_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x, uint(uint(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x)))), (_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x, uint(uint(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x, (GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), uint(uint(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x))))))) | (0u | 0u)) << 0u)) / 1u), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) << 0u))) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x, (GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x) / 1u))), (GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x) | (GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x, uint(uint(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size, (true ? GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size : _GLF_FUZZED(uvec4(100354u, 97860u, 192692u, 187460u)))).xy.x, uint(uint(GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_size.xy.x))))))) << 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4466.7719), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(59.49)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) / (1 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), ~ (_GLF_IDENTITY(~ (min(0, 0)), (~ (min(0, 0))) >> 0))))))))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (4))))), _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) ^ 0), 0, 0)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-97221) : _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) ^ 0), 0, 0)), (int(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) ^ 0), 0, 0))) - 0))), (int(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) ^ 0), 0, 0))) ^ 0)) * (_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(_GLF_IDENTITY(-8080, ~ (_GLF_IDENTITY(~ (-8080), ~ (~ (~ (-8080))))))) : 64)), 0))), (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(-8080) : 64), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED(-8080) : 64), (_GLF_IDENTITY((false ? _GLF_FUZZED(-8080) : 64), ((false ? _GLF_FUZZED(-8080) : 64)) | 0)) >> 0) : _GLF_FUZZED(89906)))), 0)))) | 0)), min(1 * (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-8080) : 64)), 0)))), _GLF_IDENTITY(1 * (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-8080) : 64)), 0)))), clamp(1 * (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-8080) : 64)), 0)))), _GLF_IDENTITY(1, (1) - 0) * (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-8080) : 64)), 0)))), 1 * (_GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-8080) : 64)), 0))))))))), max(64, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) - 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) - _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(11047)))), 0 | (_GLF_IDENTITY(64, (64) - 0))), _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec4(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-18289) : 64))))), 0, (0 | 0), 0))), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(64, 64, 64))) - 0)) >> 0)) - 0), _GLF_IDENTITY(64, _GLF_IDENTITY((64), 0 + ((64))) - 0))))))), 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) | (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))))) : virtual_gid, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) | (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))))) : virtual_gid) << 0u), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(9946u) : _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) | (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))))) : virtual_gid, min(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))), max(_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))), min(_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size)))) + 0u))))))) : _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) | (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))))) : virtual_gid) >> 0u, (_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) | (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))))) : virtual_gid) >> 0u, 0u | (_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) | (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))))) : virtual_gid), ((false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) | (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))))) : virtual_gid)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u))) ^ 0u)), false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) | (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))))) : virtual_gid))))))], 4, 64, 0);
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, 0u + (read)), 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, min(64, 64)), 64, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(10151) : 64)))), 4);
}
