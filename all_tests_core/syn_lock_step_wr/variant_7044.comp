#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
    }
  }
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
      return;
     break;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    break;
   for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
          {
           for(int _injected_loop_counter = (1 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0)), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), 1, 0)), (int(ivec3(_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) >> 0) : 0)), 1, 0))) / 1), (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), 1, 0)), (int(ivec3(_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) >> 0) : 0)), 1, 0))) / 1)) << 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                break;
               barrier();
              }
             if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                barrier();
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.y = subgroup_id;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      continue;
     break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      break;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9.0)), float(injectionSwitch.y), bool(true)))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_WRAPPED_IF_FALSE(false)))), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), ! (! (bool((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)))) + vec2(0.0, 0.0)).x < injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(false, true)))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))))))), false || (_GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))))))), ! (! ((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))))))))))))) || false)))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size, ~ (~ (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size)))), ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) + 0u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), min(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY((uint(1u)), 0u + ((uint(1u)))) - 0u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))))))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), min(uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), uint(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))), ~ (~ (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size)))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size, ~ (~ (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size, ~ (~ (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size)))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size) - 0u), ~ (~ (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size)))), ((_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), max(_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), 0u ^ (_GLF_IDENTITY(1u, max(1u, 1u)))))) << 0u), (_GLF_IDENTITY(1u, max(1u, 1u))))) + 0u) << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size), (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size), ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size)) / 1u)) >> 0u), 0u ^ (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size), (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size), ((GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size)) / 1u)) >> 0u)))))), _GLF_IDENTITY(0u, max(0u, 0u)) | ((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size, ~ (~ (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size)))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size, ~ (~ (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, max(1u, 1u))))), 0u ^ ((_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, max(1u, 1u))))))) + 0u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | 0u))), max((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) + 0u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) | 0u)), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY((uint(1u)), 0u ^ ((uint(1u)))) | 0u))), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) >> 0u)))) + 0u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(subgroup_id) : uint(1u)))) | 0u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY((_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), max(1u, _GLF_IDENTITY(1u, (1u) | 0u)))) + 0u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | 0u))), max((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) + 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(uvec3(uint(1u), 0u, 0u))), (uint(1u)) | 0u)), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(uvec3(uint(1u), 0u, 0u))), (uint(1u)) | 0u))) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) + 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) + 0u)) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) + 0u)))) | 0u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), _GLF_IDENTITY(uint(1u), (uint(1u)) | _GLF_IDENTITY(0u, (0u) >> 0u)))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) | (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) * 1u))), (_GLF_IDENTITY(1u, max(1u, 1u))) + 0u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | 0u))), max((_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) + 0u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))) | 0u)), uint(uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) + 0u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))) | 0u)))))), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) + 0u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), uint(uint(uint(1u))))) | 0u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) + 0u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | 0u))), max((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) + 0u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) / 1u)), _GLF_IDENTITY(uint(1u), (uint(1u)) | 0u))), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) + 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | 0u)), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | 0u))) | (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | 0u))))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))) | ((_GLF_IDENTITY((_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) >> 0u), 1u)), max(1u, 1u))) + 0u) << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, (1u & 1u)), (uvec2(1u, (1u & 1u))) ^ uvec2(0u, 0u))), (uint(_GLF_IDENTITY(uvec2(1u, (1u & 1u)), (uvec2(1u, (1u & 1u))) ^ uvec2(0u, 0u)))) >> 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))), (uint(1u)) | _GLF_IDENTITY(0u, max(0u, 0u))))), max((_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) + 0u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), (true ? max(1u, 1u) : _GLF_FUZZED(186019u))))) + 0u), 0u, 1u)), clamp(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) + 0u), 0u, 1u)), (uint(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) + 0u), 0u, 1u))) << 0u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) + 0u), 0u, 1u)), 0u | (uint(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) + 0u), 0u, 1u)))), uint(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) + 0u), 0u, 1u))))) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | 0u))), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) + 0u) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | 0u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))) * (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size, ~ (~ (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size)))), 0u | ((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size), ~ (~ (~ (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w = subgroup_size))))))))))))))))) - 0u);
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.6) : _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-86.11))), injectionSwitch.x)))) > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), length(0.0), 0.0, sqrt(1.0), 0.0, 1.0, cos(0.0), 0.0, 1.0, tan(0.0), sqrt(0.0), 1.0)), 1.0 * (float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), length(0.0), 0.0, sqrt(1.0), 0.0, 1.0, cos(0.0), 0.0, 1.0, tan(0.0), sqrt(0.0), 1.0))))), clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), length(0.0), 0.0, sqrt(1.0), 0.0, 1.0, cos(0.0), 0.0, 1.0, tan(0.0), sqrt(0.0), 1.0)), 1.0 * (float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), length(0.0), 0.0, sqrt(1.0), 0.0, 1.0, cos(0.0), 0.0, 1.0, tan(0.0), sqrt(0.0), 1.0))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), length(0.0), 0.0, sqrt(1.0), 0.0, 1.0, cos(0.0), 0.0, 1.0, tan(0.0), sqrt(0.0), 1.0)), 1.0 * (float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), length(0.0), 0.0, sqrt(1.0), 0.0, 1.0, cos(0.0), 0.0, 1.0, tan(0.0), sqrt(0.0), 1.0))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), length(0.0), 0.0, sqrt(1.0), 0.0, 1.0, cos(0.0), 0.0, 1.0, tan(0.0), sqrt(0.0), 1.0)), 1.0 * (float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), length(0.0), 0.0, sqrt(1.0), 0.0, 1.0, cos(0.0), 0.0, 1.0, tan(0.0), sqrt(0.0), 1.0))))))) < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(162.045)), float(injectionSwitch.x), bool(true))) < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 0.0), vec4(mat3(vec4(injectionSwitch.y, 0.0, 1.0, 0.0), sqrt(0.0), 1.0, 1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(3830.0224)), float(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(mat3(vec4(injectionSwitch.y, 0.0, 1.0, 0.0), sqrt(0.0), 1.0, 1.0, 1.0, 1.0), (mat3(vec4(injectionSwitch.y, 0.0, 1.0, 0.0), sqrt(0.0), 1.0, 1.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), bool(true)))), true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(162.045)), float(injectionSwitch.x), bool(true))) < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(mat3(vec4(injectionSwitch.y, 0.0, 1.0, 0.0), sqrt(0.0), 1.0, 1.0, 1.0, 1.0)), vec4(vec4(_GLF_IDENTITY(vec4(mat3(vec4(injectionSwitch.y, 0.0, 1.0, 0.0), sqrt(0.0), 1.0, 1.0, 1.0, 1.0)), mix(vec4((vec4(mat3(vec4(injectionSwitch.y, 0.0, 1.0, 0.0), sqrt(0.0), 1.0, 1.0, 1.0, 1.0)))[0], _GLF_FUZZED(6956.9050), _GLF_FUZZED(-922.982), _GLF_FUZZED(-1372.3311)), vec4(_GLF_FUZZED(9.2), (vec4(mat3(vec4(injectionSwitch.y, 0.0, 1.0, 0.0), sqrt(0.0), 1.0, 1.0, 1.0, 1.0)))[1], (vec4(mat3(vec4(injectionSwitch.y, 0.0, 1.0, 0.0), sqrt(0.0), 1.0, 1.0, 1.0, 1.0)))[2], (vec4(mat3(vec4(injectionSwitch.y, 0.0, 1.0, 0.0), sqrt(0.0), 1.0, 1.0, 1.0, 1.0)))[3]), bvec4(false, true, true, true)))))))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(3830.0224, (true ? 3830.0224 : _GLF_FUZZED(-28.54))))), float(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))).y, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(mat3(vec4(injectionSwitch.y, 0.0, 1.0, 0.0), sqrt(0.0), 1.0, 1.0, 1.0, 1.0), (mat3(vec4(injectionSwitch.y, 0.0, 1.0, 0.0), sqrt(0.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))))))))))))))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.z = subgroup_local_id;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))), (injectionSwitch.x > injectionSwitch.y) && true)))))
          return;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), true && (! (_GLF_WRAPPED_IF_TRUE(true)))))), false, false))))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), true && (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false)))))))), true && (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))))))))
      {
       do
        {
         return;
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false)))) && true));
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-7.5), mix(float(_GLF_FUZZED(-7.5)), float(_GLF_FUZZED((602.934))), bool(false)))), float(injectionSwitch.x), bool(true)), min(mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.x), bool(true)), _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-7.5)), (false ? _GLF_FUZZED(-9.7) : _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-7.5), 1.0 * (_GLF_FUZZED(-7.5)))), _GLF_IDENTITY(float(vec3(float(_GLF_FUZZED(-7.5)), 0.0, 0.0)), min(float(vec3(float(_GLF_FUZZED(-7.5)), 0.0, 0.0)), float(vec3(float(_GLF_FUZZED(-7.5)), 0.0, 0.0))))))), float(injectionSwitch.x), bool(true)), mix(float(mix(float(_GLF_FUZZED(-7.5)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x), (float(injectionSwitch.x)) - 0.0), bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))))), float(_GLF_FUZZED(2.5)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0))), injectionSwitch)).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.y) / 1.0)), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
       for(int _injected_loop_counter = ((((_GLF_IDENTITY(1, 0 | (1)) & 1) ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) << 0)) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, clamp(0, 0, 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).y))) || false)) || false)))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(-36.63))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(-36.63))), 1.0), (vec2(_GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(-36.63))), 1.0)) * mat2(1.0)))))).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bool(false))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bool(false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bool(false)))))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, true)), false, true, false)))) && true))))))) || false))))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(0.0)) > injectionSwitch.y))))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), true)), (bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), true))) || false)))))
        return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)))))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(5u), uvec3(0u, 0u, 0u) + (uvec3(5u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec3(5u)), (_GLF_IDENTITY(~ (uvec3(5u)), (~ (uvec3(5u))) | (~ (uvec3(5u))))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u))) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)))), (~ (uvec3(5u))) >> uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY((true ? uvec3(5u) : _GLF_FUZZED(_GLF_IDENTITY(uvec3(95468u, 8557u, _GLF_IDENTITY(38255u, min(38255u, 38255u))), uvec3(1u, 1u, 1u) * (uvec3(95468u, 8557u, _GLF_IDENTITY(38255u, min(38255u, 38255u))))))), max(_GLF_IDENTITY((true ? uvec3(5u) : _GLF_FUZZED(uvec3(95468u, 8557u, 38255u))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | ((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), (true && (true)) || false)))) ? uvec3(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, (5u) + 0u)))) : _GLF_FUZZED(uvec3(95468u, 8557u, 38255u))))), (true ? uvec3(5u) : _GLF_FUZZED(uvec3(95468u, 8557u, _GLF_IDENTITY(38255u, 0u ^ (38255u))))))))), ((uvec3(_GLF_IDENTITY(0u, (0u) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), 0u, 0u) ^ uvec3(0u, 0u, 0u)) >> _GLF_IDENTITY(uvec3(5u), _GLF_IDENTITY(uvec3(5u), (true ? uvec3(5u) : _GLF_FUZZED(uvec3(95468u, 8557u, _GLF_IDENTITY(38255u, (38255u) ^ (0u | 0u)))))))) - uvec3(0u, 0u, 0u)))).x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), max(_GLF_IDENTITY((injectionSwitch.x), max(_GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_FUZZED(270.051)), float((injectionSwitch.x)), bool(true))), (injectionSwitch.x))), (injectionSwitch.x))) / 1.0) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      continue;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       break;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, clamp(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size)).y * _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w, 1u * (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(-43547) : _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3)))) != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            return;
           return;
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(86.83), _GLF_FUZZED(-551.595)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))) && true)))
          continue;
         break;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (~ (0))), 0, 0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5264.1595))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-103.315)), float(injectionSwitch.y), bool(true))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5264.1595))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-103.315)), float(injectionSwitch.y), bool(true))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5264.1595))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-103.315)), float(injectionSwitch.y), bool(true))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (bool(_GLF_IDENTITY(bvec3(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5264.1595))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-103.315)), float(injectionSwitch.y), bool(true))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5264.1595))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-103.315)), float(injectionSwitch.y), bool(true))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             return;
            }
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec3(! (! (_GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0), mix(vec2(_GLF_FUZZED(718.185), _GLF_FUZZED(-7.8)), vec2((vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0))[0], (vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.5)), vec2(_GLF_FUZZED(73.01), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.5)), vec2(_GLF_FUZZED(73.01), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.5)), vec2(_GLF_FUZZED(73.01), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) || false, ! (_GLF_IDENTITY(! ((! (true)) || false), ! (! (_GLF_IDENTITY(! ((! (true)) || false), (! ((! (true)) || false)) && true)))))))))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), false || ((true)))) && (false))))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            break;
           barrier();
          }
         for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 | (int(_GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(54763) : _injected_loop_counter)) > (0 ^ (0 & 25982))); _injected_loop_counter --)
          {
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            continue;
           break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
  }
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.x = subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.x = subgroup_base));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.z;
 uint next_virtual_gid = workgroup_base + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.x + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size) + uvec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-98.09), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), _GLF_FUZZED(-0.7)), bvec2(true, false))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(4208.5816), _GLF_IDENTITY(float(vec4(_GLF_FUZZED(4208.5816), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0)), min(_GLF_IDENTITY(float(vec4(_GLF_FUZZED(4208.5816), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0)), (float(vec4(_GLF_FUZZED(4208.5816), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0))) - 0.0), float(vec4(_GLF_FUZZED(4208.5816), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0)))))), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(2.4), mix(float(_GLF_FUZZED(2.4)), float(_GLF_FUZZED(-2.8)), bool(false))) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0)), 0.0, abs(1.0), 1.0)), mix(float(float(mat2(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0)), 0.0, abs(1.0), 1.0))), float(_GLF_FUZZED(-1431.9231)), bool(false))))), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && true)))))))))), injectionSwitch.x))).z, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(4208.5816)), (float(_GLF_FUZZED(4208.5816))) - 0.0), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(-6.6)), float(min(injectionSwitch.x, injectionSwitch.x)), bool(true)))))) > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(2.4, mix(float(_GLF_FUZZED(495.427)), float(2.4), bool(true)))) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), injectionSwitch.x))).z, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0), (vec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0)) * mat2(1.0)))) < injectionSwitch.y))))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(3.9) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))).x)))))) > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), injectionSwitch.x))).z)) + 1), ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0)), clamp(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0)), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0)), min(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0)), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))))), float(_GLF_FUZZED(0.5)), bool(false)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), injectionSwitch.x))).z + 1, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0)), clamp(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0)), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0)), min(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0)), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))))), float(_GLF_FUZZED(0.5)), bool(false)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), injectionSwitch.x))).z + 1) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0)), clamp(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0)), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0)), min(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0)), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))))), float(_GLF_FUZZED(0.5)), bool(false)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), injectionSwitch.x))).z + 1)))) >> 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), injectionSwitch.x))).z + 1, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), injectionSwitch.x))).z + 1) ^ ((149493u & 0u) << _GLF_IDENTITY(uint(5u), uint(5u))))), ((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), sqrt(0.0))), clamp(float(mat3(injectionSwitch.x, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), sqrt(0.0))), float(mat3(injectionSwitch.x, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), sqrt(0.0))), float(mat3(injectionSwitch.x, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), sqrt(0.0))))))))).z + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) >> 0))), 1)))) >> 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))), max(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(4208.5816)), clamp(float(_GLF_FUZZED(4208.5816)), float(_GLF_FUZZED(4208.5816)), float(_GLF_FUZZED(4208.5816)))), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))), (! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))) && true)))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3.7)), bool(false))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(2.4), mix(float(_GLF_FUZZED(2.4)), float(_GLF_FUZZED(96.95)), bool(false))) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), injectionSwitch.x))).z + 1), ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, clamp(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (true ? GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size : _GLF_FUZZED(uvec4(161874u, 76147u, 73790u, 167051u)))), GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size))) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(4208.5816)), mix(float(_GLF_FUZZED(-5.7)), float(float(_GLF_FUZZED(4208.5816))), bool(true))), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), injectionSwitch.x))).z + 1, 0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, clamp(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (true ? GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size : _GLF_FUZZED(uvec4(161874u, 76147u, 73790u, 167051u)))), GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size))) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(4208.5816)), mix(float(_GLF_FUZZED(-5.7)), float(float(_GLF_FUZZED(4208.5816))), bool(true))), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), injectionSwitch.x))).z + 1)))) >> 0u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), injectionSwitch.x))).z + 1, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), injectionSwitch.x))).z + 1) ^ ((149493u & 0u) << _GLF_IDENTITY(uint(5u), uint(5u))))), ((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), sqrt(0.0))), clamp(float(mat3(injectionSwitch.x, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), sqrt(0.0))), float(mat3(injectionSwitch.x, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), sqrt(0.0))), float(mat3(injectionSwitch.x, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), sqrt(0.0))))))))).z + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) >> 0))), 1)))) >> 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))), max(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(4208.5816)), clamp(float(_GLF_FUZZED(4208.5816)), float(_GLF_FUZZED(4208.5816)), float(_GLF_FUZZED(4208.5816)))), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))), (! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))) && true)))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3.7)), bool(false))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(2.4), mix(float(_GLF_FUZZED(2.4)), float(_GLF_FUZZED(96.95)), bool(false))) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), injectionSwitch.x))).z + 1), ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, clamp(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (true ? GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size : _GLF_FUZZED(uvec4(161874u, 76147u, 73790u, 167051u)))), GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size))) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(4208.5816)), mix(float(_GLF_FUZZED(-5.7)), float(float(_GLF_FUZZED(4208.5816))), bool(true))), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), injectionSwitch.x))).z + 1, 0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, clamp(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (true ? GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size : _GLF_FUZZED(uvec4(161874u, 76147u, 73790u, 167051u)))), GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size))) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(4208.5816)), mix(float(_GLF_FUZZED(-5.7)), float(float(_GLF_FUZZED(4208.5816))), bool(true))), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), injectionSwitch.x))).z + 1)))) >> 0u))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), injectionSwitch.x))).z + 1, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(4208.5816), float(_GLF_IDENTITY(mat3x2(_GLF_FUZZED(4208.5816), 0.0, cos(0.0), 0.0, 0.0, 1.0), transpose(transpose(mat3x2(_GLF_FUZZED(4208.5816), 0.0, cos(0.0), 0.0, 0.0, 1.0))))))), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), injectionSwitch.x))).z + 1) ^ ((149493u & 0u) << _GLF_IDENTITY(uint(5u), uint(5u))))), _GLF_IDENTITY(((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), sqrt(0.0))), clamp(float(mat3(injectionSwitch.x, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), sqrt(0.0))), float(mat3(injectionSwitch.x, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), sqrt(0.0))), float(mat3(injectionSwitch.x, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), sqrt(0.0))))))))).z + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) >> 0))), 1)))) >> 0u, (((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), sqrt(0.0))), clamp(float(mat3(injectionSwitch.x, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), sqrt(0.0))), float(mat3(injectionSwitch.x, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), sqrt(0.0))), float(mat3(injectionSwitch.x, 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), sqrt(0.0))))))))).z + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) >> 0))), 1)))) >> 0u) | 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))), max(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(4208.5816)), clamp(float(_GLF_FUZZED(4208.5816)), float(_GLF_FUZZED(4208.5816)), float(_GLF_FUZZED(4208.5816)))), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))), (! (bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), false, true)))) && true)))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) - 0.0)) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)))) < injectionSwitch.y))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3.7)), bool(false))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(2.4), mix(float(_GLF_FUZZED(2.4)), float(_GLF_FUZZED(96.95)), bool(false))) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), injectionSwitch.x))).z + 1), ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, clamp(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (true ? GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size : _GLF_FUZZED(uvec4(161874u, 76147u, 73790u, 167051u)))), GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size))) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(4208.5816)), mix(float(_GLF_FUZZED(-5.7)), float(float(_GLF_FUZZED(4208.5816))), bool(true))), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(length(-316.734)) : 0.0)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) ? _GLF_FUZZED(2.4) : 0.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) ? _GLF_FUZZED(2.4) : 0.0) + 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0)), 0.0 + (_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)))).z + 1, 0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, clamp(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size, (true ? GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size : _GLF_FUZZED(uvec4(161874u, 76147u, 73790u, 167051u)))), GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size))) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(4208.5816)), mix(float(_GLF_FUZZED(-5.7)), float(float(_GLF_FUZZED(4208.5816))), bool(true))), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), bool(bvec3(! (false), true, true))))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4208.5816)), float(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), injectionSwitch.x))).z + 1)))) >> 0u)))))) - 0u)) + 0u))) % GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_13subgroup_basesubgroup_idsubgroup_local_idsubgroup_size.w);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), virtual_gid))]))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), min(64, 64)), 2);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   subgroupBarrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(626.148, -6321.4266, -5358.7306, 111.258).p), _GLF_FUZZED(float(7469))), bvec2(_GLF_IDENTITY(false, false || (false)), false))).y))))
          {
           if(_GLF_DEAD(false))
            break;
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / 1))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              break;
             atomicStore(checker[virtual_gid], read, 4, 64, 4);
            }
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             continue;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             return;
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  continue;
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false) && true)))))
                barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 return;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 barrier();
                }
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 continue;
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                barrier();
               barrier();
              }
             for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), ~ (~ (int(0)))), int(0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, 0 | (1)), ! (_GLF_IDENTITY(! (_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 | (1))), (! (_injected_loop_counter < _GLF_IDENTITY(1, 0 | (1)))) || false))), true && (_injected_loop_counter < _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 1 * (1))))))) && true)); _injected_loop_counter ++)
              {
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          break;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch, 0.0, 0.0))))) + mat2(0.0, 0.0, 0.0, 0.0)))))))).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(-1739.6445), _GLF_FUZZED(1.5)), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[1], (true ? ((injectionSwitch) * mat2(1.0))[1] : _GLF_FUZZED(5.6)))), bvec2(true, true)))).x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(-1739.6445), _GLF_FUZZED(1.5)), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[1], (true ? ((injectionSwitch) * mat2(1.0))[1] : _GLF_FUZZED(5.6)))), bvec2(true, true)))).x > injectionSwitch.y))))))), false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 1.0, abs(0.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(injectionSwitch, 1.0, 1.0, 1.0, abs(0.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 1.0))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 1.0, abs(0.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(injectionSwitch, 1.0, 1.0, 1.0, abs(0.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 1.0))))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 1.0, 1.0, abs(0.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(injectionSwitch, 1.0, 1.0, 1.0, abs(0.0), 1.0, sqrt(1.0), 1.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 1.0))))))[1]), vec2(_GLF_FUZZED(-8231.3664), _GLF_FUZZED(4.5)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0)))).y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), ! (! (! (bool(true)))))))), false || (bool(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(true)), ! (! (! _GLF_IDENTITY((bool(true)), ((bool(true))) && true))))), true && ((_GLF_IDENTITY(! (bool(true)), ! (_GLF_IDENTITY(! (! (bool(true))), true && (! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true))))))))))))))))), (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-5.9))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(abs(vec2(8397.8685, 8483.2887)))))[1])), vec2(0.0, 0.0) + (injectionSwitch)).y))), bool(bvec4(! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), (_GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), vec2(mat4(vec2(0.0, 0.0) + (injectionSwitch), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))) - vec2(0.0, 0.0))).y))), false, true, true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), true && (_GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true))))))) || (false))))) && true))))
      return;
     do
      {
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-55.87), _GLF_FUZZED((-714.164))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3x2((injectionSwitch) * mat2(1.0), 1.0, 1.0, 1.0, 0.0))), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3x2((injectionSwitch) * mat2(1.0), 1.0, 1.0, 1.0, 0.0))), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, false, true)))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), _GLF_IDENTITY(int(5), min(int(5), _GLF_IDENTITY(int(5), (int(5)) * 1))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(int(5), min(int(5), int(5))))), 1 * (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(5), min(int(5), int(5))))), ((~ (_GLF_IDENTITY(int(5), min(int(5), int(5)))))) / 1)))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 | 0) | 0)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              continue;
             return;
            }
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))))
        break;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = _GLF_IDENTITY(((0 | 0) << _GLF_IDENTITY(int(0), int(0))), 0 | (((0 | 0) << _GLF_IDENTITY(int(0), int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) / 1)), int(1))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) / 1) << _GLF_IDENTITY(int(1), int(1))), ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) | (1))))), int(1)))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), ((0 << _GLF_IDENTITY(int(1), int(1)))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), ((0 << _GLF_IDENTITY(int(1), int(1)))) | 0), 0 ^ (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), ((0 << _GLF_IDENTITY(int(1), int(1)))) | 0)))) >> 0)) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) + 0)) | (_GLF_IDENTITY(0, max(0, 0)))))) | (_GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, ~ (~ (1)))))), ~ (~ ((0 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, ~ (~ (1))))))))), 0 ^ ((0 << _GLF_IDENTITY(int(1), int(1))))))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (70467 & 0) | (int(5))), max(_GLF_IDENTITY(int(5), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 ^ (int(5))), (_GLF_IDENTITY(int(5), 0 ^ (int(5)))) - int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.7)), bool(false))), injectionSwitch.x)))) ^ 0))), _GLF_IDENTITY(int(5), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(5, (5) ^ (1 ^ 1)))), ~ (~ (~ (int(_GLF_IDENTITY(5, (5) ^ (1 ^ 1))))))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) - 0)); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = (0 & _GLF_IDENTITY(93255, max(93255, 93255))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-6.9))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))) * 1.0) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true, _GLF_IDENTITY(false, ! (! (false))), true))); _injected_loop_counter --)
    {
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
