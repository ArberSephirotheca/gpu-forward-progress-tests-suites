#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_52 {
 uint workgroup_size;
 vec2 _f0;
 uint _f1;
} ;

struct _GLF_struct_53 {
 mat3x2 _f0;
 _GLF_struct_52 _f1;
} ;

struct _GLF_struct_49 {
 uint _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_48 {
 mat4 _f0;
} ;

struct _GLF_struct_50 {
 ivec3 _f0;
 _GLF_struct_48 _f1;
 _GLF_struct_49 _f2;
} ;

struct _GLF_struct_46 {
 mat4x2 _f0;
 mat4 _f1;
 mat4 _f2;
 bvec4 _f3;
 bvec2 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_45 {
 mat3x4 _f0;
} ;

struct _GLF_struct_44 {
 mat3x2 _f0;
} ;

struct _GLF_struct_47 {
 _GLF_struct_44 _f0;
 bool _f1;
 _GLF_struct_45 _f2;
 _GLF_struct_46 _f3;
} ;

struct _GLF_struct_42 {
 vec4 _f0;
 mat3x4 _f1;
 ivec2 _f2;
 mat3x4 _f3;
 mat3x2 _f4;
 ivec2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_41 {
 mat3x4 _f0;
 mat4 _f1;
 uvec2 _f2;
 vec3 _f3;
 vec3 _f4;
 bvec3 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_43 {
 vec4 _f0;
 ivec3 _f1;
 uvec3 _f2;
 _GLF_struct_41 _f3;
 _GLF_struct_42 _f4;
} ;

struct _GLF_struct_51 {
 mat2 _f0;
 uint next_virtual_gid;
 bvec4 _f1;
 _GLF_struct_43 _f2;
 _GLF_struct_47 _f3;
 bvec4 _f4;
 mat2x3 _f5;
 _GLF_struct_50 _f6;
} ;

struct _GLF_struct_38 {
 mat4 _f0;
 mat3x2 _f1;
 uint _f2;
 uint _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_37 {
 uvec3 _f0;
 mat3x2 _f1;
 ivec3 _f2;
 vec3 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_39 {
 _GLF_struct_37 _f0;
 _GLF_struct_38 _f1;
 uvec4 _f2;
 bool _f3;
} ;

struct _GLF_struct_35 {
 vec4 _f0;
 uvec3 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_34 {
 bool _f0;
 vec3 _f1;
 vec4 _f2;
 uvec3 _f3;
 bool _f4;
} ;

struct _GLF_struct_33 {
 ivec3 _f0;
 mat4x2 _f1;
 uint _f2;
 mat4x3 _f3;
 vec2 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_32 {
 mat4 _f0;
 mat3x4 _f1;
 uvec4 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_31 {
 mat4 _f0;
 uvec2 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_36 {
 _GLF_struct_31 _f0;
 int _f1;
 _GLF_struct_32 _f2;
 _GLF_struct_33 _f3;
 _GLF_struct_34 _f4;
 _GLF_struct_35 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_29 {
 int _f0;
 mat3x2 _f1;
 ivec3 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_28 {
 uvec3 _f0;
} ;

struct _GLF_struct_27 {
 float _f0;
 mat4x3 _f1;
 mat3 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_30 {
 _GLF_struct_27 _f0;
 uvec4 _f1;
 mat3x2 _f2;
 _GLF_struct_28 _f3;
 _GLF_struct_29 _f4;
} ;

struct _GLF_struct_40 {
 _GLF_struct_30 _f0;
 _GLF_struct_36 _f1;
 uint virtual_gid;
 _GLF_struct_39 _f2;
 uvec3 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_24 {
 vec4 _f0;
 uvec2 _f1;
 mat2x4 _f2;
 uvec4 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_25 {
 uint _f0;
 uvec3 _f1;
 _GLF_struct_24 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_26 {
 ivec4 _f0;
 uint workgroup_id;
 _GLF_struct_25 _f1;
} ;

struct _GLF_struct_21 {
 mat2x3 _f0;
 int _f1;
} ;

struct _GLF_struct_20 {
 mat2 _f0;
 bool _f1;
} ;

struct _GLF_struct_19 {
 int _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_22 {
 int _f0;
 bool _f1;
 _GLF_struct_19 _f2;
 ivec2 _f3;
 _GLF_struct_20 _f4;
 _GLF_struct_21 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_18 {
 uint _f0;
} ;

struct _GLF_struct_16 {
 mat2x3 _f0;
 mat3 _f1;
 mat4 _f2;
 vec2 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_15 {
 uvec2 _f0;
 uvec2 _f1;
 float _f2;
 vec4 _f3;
} ;

struct _GLF_struct_17 {
 mat3x4 _f0;
 _GLF_struct_15 _f1;
 _GLF_struct_16 _f2;
 int _f3;
} ;

struct _GLF_struct_13 {
 vec2 _f0;
 mat3 _f1;
 vec3 _f2;
 bool _f3;
 uvec4 _f4;
 mat2x4 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_12 {
 vec3 _f0;
} ;

struct _GLF_struct_11 {
 bool _f0;
 mat3 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_14 {
 int _f0;
 _GLF_struct_11 _f1;
 mat3 _f2;
 vec4 _f3;
 _GLF_struct_12 _f4;
 _GLF_struct_13 _f5;
} ;

struct _GLF_struct_9 {
 uvec4 _f0;
} ;

struct _GLF_struct_8 {
 uint subgroup_id;
 ivec2 _f0;
 mat2x4 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_7 {
 vec4 _f0;
 bvec2 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_6 {
 bvec3 _f0;
 vec3 _f1;
 uint _f2;
} ;

struct _GLF_struct_10 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 bvec4 _f3;
 _GLF_struct_9 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_4 {
 mat4x2 _f0;
 uint _f1;
 bvec2 _f2;
 mat3x2 _f3;
 int _f4;
} ;

struct _GLF_struct_3 {
 mat2x4 _f0;
 bvec3 _f1;
 mat4 _f2;
 bvec3 _f3;
 uvec2 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_2 {
 int _f0;
 mat2 _f1;
 bvec3 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_1 {
 uint _f0;
 ivec4 _f1;
 uvec4 _f2;
 vec2 _f3;
 mat4x3 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
 bool _f1;
 mat4 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 mat4 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_23 {
 _GLF_struct_5 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_17 _f3;
 _GLF_struct_18 _f4;
 _GLF_struct_22 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_73_3_1_4GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_baseread;
 uvec4 GLF_merged3_0_2_56_2_1_13_3_1_17GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_local_id;
 uvec4 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup;
 uvec4 GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   barrier();
  }
 uvec4 GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readvirtual_gidworkgroup_baseworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)))).y))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
  }
 else
  {
   GLF_merged3_0_2_56_2_1_13_3_1_17GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_local_id.xy = GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.xy = GLF_merged3_0_2_56_2_1_13_3_1_17GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_local_id.xy;
  }
 uvec3 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base;
 GLF_merged2_0_3_73_3_1_4GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_baseread.xyz = GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_base;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz = GLF_merged2_0_3_73_3_1_4GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_baseread.xyz;
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(118.368), _GLF_FUZZED(7422.8796)), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(608.560)), bool(false))), (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.9), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-8.9)), bvec2(true, false))))) * mat2(1.0)))).y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), false, true, false))));
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(_GLF_struct_5(_GLF_struct_0(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(80.81) : 1.0)) : _GLF_FUZZED(-5012.3602)))) * 1.0)), float(_GLF_FUZZED((1.5 * -8.0))), bool(false)))), true, mat4(1.0), mat3(1.0)), _GLF_struct_1(1u, ivec4(_GLF_IDENTITY(1, (1) | 0)), uvec4(1u), _GLF_IDENTITY(vec2(1.0), max(_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(1.0), max(_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), _GLF_IDENTITY(vec2(1.0), vec2(mat2x3(vec2(1.0), 0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))), vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(-4164.0687))), _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0)))))))))), mat4x3(1.0), uvec2(1u)), mat4(1.0), _GLF_struct_2(1, mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bvec3(true), mat2(1.0)), _GLF_struct_3(mat2x4(1.0), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), mat4(1.0), bvec3(true), uvec2(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u | (~ (1u)))))))), _GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), (ivec2(1)) << ivec2(0, 0))) / ivec2(1, 1))), _GLF_struct_4(mat4x2(1.0), 1u, bvec2(true), mat3x2(1.0), 1), mat2(1.0)), _GLF_struct_10(_GLF_struct_6(bvec3(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! _GLF_IDENTITY((true), ! (! ((true))))), ((! _GLF_IDENTITY((true), ! (! ((true)))))) || false))), vec3(1.0), 1u), _GLF_struct_7(vec4(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), cos(0.0), 1.0, abs(0.0))))), bvec2(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), bvec2(true)), _GLF_struct_8(gl_SubgroupID, ivec2(1), mat2x4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - length(0.0)), 1.0))), mat4x3(1.0)), bvec4(true), _GLF_struct_9(uvec4(1u)), mat4(1.0)), _GLF_struct_14(1, _GLF_struct_11(true, mat3(1.0), mat3(1.0)), mat3(1.0), vec4(1.0), _GLF_struct_12(vec3(1.0)), _GLF_struct_13(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.1)), float(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))), bool(true)))), mat3(1.0), _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / exp(vec3(0.0, 0.0, 0.0))), true, uvec4(1u), mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(mat3x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), mat4x2(1.0))), _GLF_struct_17(mat3x4(1.0), _GLF_struct_15(uvec2(1u), uvec2(1u), 1.0, vec4(1.0)), _GLF_struct_16(mat2x3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), mat3(1.0), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y)) ? 1.0 : _GLF_FUZZED(9434.8747)))))), (_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9434.8747)))))), (false ? _GLF_FUZZED(mat4(5.8, -4315.0131, -362.040, -4.0, 695.977, 21.66, -8927.7841, 2.2, -1.4, 47.67, -712.169, -635.340, -2171.0750, -787.598, -2.8, 8.3)) : mat4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(9434.8747)))))))), (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(mat4(5152.1253, 5.6, 9.7, -76.82, 45.43, 537.880, -65.27, 58.63, 6.9, 714.895, -9.1, -882.309, -9.6, 0.4, -6056.2738, 3.2)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_FUZZED(mat4(5152.1253, 5.6, 9.7, -76.82, 45.43, 537.880, -65.27, 58.63, 6.9, 714.895, -9.1, -882.309, -9.6, 0.4, -6056.2738, 3.2)))), (false ? _GLF_FUZZED(mat4(-9942.0439, 8884.0979, 0.1, -8.3, -9138.0691, _GLF_IDENTITY(-4536.5792, clamp(_GLF_IDENTITY(-4536.5792, float(mat3(-4536.5792, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), -4536.5792, -4536.5792)), 0.9, -400.012, -4.8, 2.1, -2.2, _GLF_IDENTITY(0.8, max(0.8, _GLF_IDENTITY(0.8, (0.8) / 1.0))), -8.1, -992.069, 6.7, -75.10)) : _GLF_FUZZED(mat4(5152.1253, 5.6, 9.7, -76.82, 45.43, 537.880, -65.27, 58.63, 6.9, 714.895, -9.1, -882.309, -9.6, 0.4, -6056.2738, _GLF_IDENTITY(3.2, (3.2) - sqrt(0.0)))))) : mat4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), true && ((injectionSwitch.x < injectionSwitch.y)))) ? 1.0 : _GLF_FUZZED(9434.8747))))))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), vec2(1.0), mat4x3(1.0)), 1), _GLF_struct_18(1u), _GLF_struct_22(1, true, _GLF_struct_19(1, mat3x4(1.0)), ivec2(1), _GLF_struct_20(mat2(1.0), true), _GLF_struct_21(mat2x3(1.0), 1), bvec4(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))));
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w = subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_2_56_2_1_13_3_1_17GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_local_id.w = subgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))) || ((injectionSwitch.x > injectionSwitch.y))))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(-5.7)), float(max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), bool(true)))), injectionSwitch.x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x)) * 1.0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.xy.x = GLF_merged3_0_2_56_2_1_13_3_1_17GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_local_id.w;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), float(_GLF_IDENTITY(vec2(max(1.0, 1.0), 1.0), clamp(vec2(max(1.0, 1.0), 1.0), vec2(max(1.0, 1.0), 1.0), vec2(max(1.0, 1.0), 1.0)))))))), 1.0) * (injectionSwitch)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0) * (injectionSwitch)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0) * (injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(1.4)), vec2(_GLF_FUZZED(-999.606), ((injectionSwitch))[1]), bvec2(false, true))))))) * mat2(1.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(log(1.0), 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat2(log(1.0), 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0)))))))), 1.0) * (injectionSwitch)))))).x, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0) * (injectionSwitch)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.5), _GLF_FUZZED((3.4 + vec4(63.34, -758.464, 2283.5005, 9162.8805).x))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))))).x, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0) * (injectionSwitch)))).x)))) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))))));
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_2_56_2_1_13_3_1_17GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_local_id.z = num_workgroup;
 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.w = GLF_merged3_0_2_56_2_1_13_3_1_17GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_local_id.z;
 _GLF_struct_53 _GLF_struct_replacement_53 = _GLF_struct_53(mat3x2(1.0), _GLF_struct_52(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)).x, vec2(1.0), 1u));
 GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readvirtual_gidworkgroup_baseworkgroup_size.w = _GLF_struct_replacement_53._f1.workgroup_size;
 for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.xy.y = GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readvirtual_gidworkgroup_baseworkgroup_size.w;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.2)), vec2(_GLF_FUZZED(-385.603), (injectionSwitch)[1]), bvec2(false, true))).y), false, true))))))
      barrier();
     for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), false, true)))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
          barrier();
         barrier();
        }
      }
     for(int _injected_loop_counter = (int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.1))), injectionSwitch.x)) ^ _GLF_IDENTITY((0 | 0), ((0 | 0)) / 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, 0 ^ (1)))), clamp(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, 0 ^ (1)))), _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, 0 ^ (1)))), _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, 0 ^ (1))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, 0 ^ (1)))), clamp(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, 0 ^ (1)))), _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, 0 ^ (1)))), _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, 0 ^ (1))))))))) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & 29868)); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))), true, true)), (bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), true, true, true))) || false)))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-1445.7146), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], min((mat2(1.0) * (injectionSwitch))[1], (mat2(1.0) * (injectionSwitch))[1]))), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(5921.8599)), bvec2(true, false)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-1445.7146), _GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(152.183)), bool(false)))) * (injectionSwitch))[1], _GLF_IDENTITY(min((mat2(1.0) * (injectionSwitch))[1], (mat2(1.0) * (injectionSwitch))[1]), min(min((mat2(1.0) * (injectionSwitch))[1], (mat2(1.0) * (injectionSwitch))[1]), min((mat2(1.0) * (injectionSwitch))[1], (mat2(1.0) * (injectionSwitch))[1]))))), vec2((mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.6)), float(1.0), bool(true)))) * (injectionSwitch))[0], _GLF_FUZZED(5921.8599)), bvec2(_GLF_IDENTITY(true, (true) && true), false)))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 _GLF_struct_26 _GLF_struct_replacement_26 = _GLF_struct_26(_GLF_IDENTITY(ivec4(1), (ivec4(1)) | ivec4(0, 0, 0, 0)), gl_WorkGroupID.x, _GLF_struct_25(1u, uvec3(1u), _GLF_struct_24(vec4(1.0), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), _GLF_IDENTITY(uvec2(1u), ~ (~ (uvec2(1u)))), uvec2(1u))), mat2x4(1.0), uvec4(1u), mat4x2(1.0)), mat2x4(1.0)));
 uint workgroup_base = _GLF_IDENTITY(GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.xy.y * _GLF_struct_replacement_26.workgroup_id, (_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size, (uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (0u))) >> _GLF_IDENTITY(uvec4(8u), uvec4(8u))) | _GLF_IDENTITY((GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size), (_GLF_IDENTITY((GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size), clamp((GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size), (GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size), (GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size)))) * uvec4(1u, 1u, 1u, 1u))).xy.y * _GLF_IDENTITY(_GLF_struct_replacement_26.workgroup_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_26.workgroup_id, (_GLF_struct_replacement_26.workgroup_id) | (_GLF_struct_replacement_26.workgroup_id)), _GLF_IDENTITY(_GLF_struct_replacement_26.workgroup_id, (_GLF_struct_replacement_26.workgroup_id) | (_GLF_IDENTITY(_GLF_struct_replacement_26.workgroup_id, 1u * (_GLF_struct_replacement_26.workgroup_id)))), _GLF_IDENTITY(_GLF_struct_replacement_26.workgroup_id, (_GLF_struct_replacement_26.workgroup_id) - 0u)))) << _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)), 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 do
  {
   GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readvirtual_gidworkgroup_baseworkgroup_size.z = workgroup_base;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) : _GLF_FUZZED(distance(cos(vec4(-96.55, _GLF_IDENTITY(33.02, clamp(_GLF_IDENTITY(33.02, float(vec3(_GLF_IDENTITY(33.02, (false ? _GLF_FUZZED(415.330) : 33.02)), 1.0, 0.0))), 33.02, 33.02)), -3972.0375, 6.3)), vec4(-73.45, 8.4, 9.7, 853.129))))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(distance(cos(vec4(-96.55, 33.02, -3972.0375, 6.3)), vec4(_GLF_IDENTITY(-73.45, 0.0 + (-73.45)), 8.4, 9.7, 853.129))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))), (false ? _GLF_FUZZED(vec2(-8116.5830, -2.4)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))))).y, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(distance(cos(vec4(-96.55, 33.02, -3972.0375, 6.3)), vec4(-73.45, 8.4, 9.7, 853.129))), mix(float(_GLF_FUZZED(-4.0)), float(_GLF_FUZZED(distance(cos(vec4(-96.55, 33.02, _GLF_IDENTITY(-3972.0375, clamp(-3972.0375, -3972.0375, _GLF_IDENTITY(-3972.0375, (false ? _GLF_FUZZED(5890.0163) : -3972.0375)))), 6.3)), vec4(-73.45, 8.4, 9.7, 853.129)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))))))).y, (false ? _GLF_FUZZED(-4588.7125) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) / round(length(normalize(vec2(1.0, 1.0))))), (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(distance(cos(vec4(-96.55, 33.02, _GLF_IDENTITY(-3972.0375, mix(float(_GLF_FUZZED((5074.1444 * -94.18))), float(-3972.0375), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 6.3)), vec4(-73.45, 8.4, 9.7, 853.129))))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y))))), _GLF_IDENTITY(true, false || (true)), false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))).y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
           barrier();
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false), false, true))))))))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0), vec3(round(length(normalize(1.0))), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(round(length(normalize(1.0))), 0.0, 0.0))), 1.0, exp(sqrt(0.0)), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_ONE(1.0, injectionSwitch.y) * (1.0)), 1.0, cos(0.0)))).y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = ((_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY(int(ivec2(1 ^ 0, 0)), (int(ivec2(1 ^ 0, 0))) | (0 & -8294)))) | 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)) != (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z = GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readvirtual_gidworkgroup_baseworkgroup_size.z;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, 1.0)) * (injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 _GLF_struct_40 _GLF_struct_replacement_40 = _GLF_struct_40(_GLF_struct_30(_GLF_struct_27(1.0, mat4x3(1.0), mat3(1.0), mat4(1.0)), uvec4(1u), mat3x2(1.0), _GLF_struct_28(uvec3(1u)), _GLF_struct_29(1, mat3x2(1.0), ivec3(1), mat3x4(1.0))), _GLF_struct_36(_GLF_struct_31(mat4(1.0), uvec2(1u), mat2x3(1.0)), _GLF_IDENTITY(1, 1 * (1)), _GLF_struct_32(mat4(1.0), mat3x4(1.0), uvec4(_GLF_IDENTITY(1u, (1u) | (1u))), ivec3(1)), _GLF_struct_33(ivec3(1), mat4x2(1.0), 1u, mat4x3(1.0), vec2(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)))), ivec3(1)), _GLF_struct_34(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), true)), (bool(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), true))) && true)), vec3(1.0), vec4(1.0), uvec3(1u), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! _GLF_IDENTITY((true), bool(bvec2((true), false))))))), true, true)))))), _GLF_struct_35(vec4(1.0), uvec3(1u), ivec4(1)), _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz, min(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz, GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz)).z + _GLF_struct_replacement_23._f1._f2.subgroup_id * GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w, 0u + (_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz, min(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz, GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz)).z + _GLF_struct_replacement_23._f1._f2.subgroup_id * GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w)) + GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.xy.x, _GLF_struct_39(_GLF_struct_37(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(~ (~ (1u)), 1u * (~ (~ _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), (false ? _GLF_FUZZED(workgroup_base) : (1u)))) << 0u))))) | (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u)))))))) | 0u)), mat3x2(1.0), ivec3(1), vec3(1.0), uvec4(1u)), _GLF_struct_38(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mat3x2(1.0), 1u, 1u, ivec3(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 0 ^ (1)))))), uvec4(1u), true), uvec3(1u), uvec3(1u));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readvirtual_gidworkgroup_baseworkgroup_size.y = _GLF_struct_replacement_40.virtual_gid;
 _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.y = GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readvirtual_gidworkgroup_baseworkgroup_size.y, (false ? _GLF_FUZZED(GLF_merged3_0_2_56_2_1_13_3_1_17GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_local_id.z) : GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.y = GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readvirtual_gidworkgroup_baseworkgroup_size.y));
 _GLF_struct_51 _GLF_struct_replacement_51 = _GLF_struct_51(mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz, (true ? _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz, clamp(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz, _GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup, uvec4(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup[0], GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup[1], GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup[2], GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup[3])).xyz, GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz)) : _GLF_FUZZED(uvec3(34903u, 184385u, 60451u)))).z + _GLF_struct_replacement_23._f1._f2.subgroup_id * GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z + _GLF_struct_replacement_23._f1._f2.subgroup_id * GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z + _GLF_struct_replacement_23._f1._f2.subgroup_id * GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w, (true ? GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z + _GLF_struct_replacement_23._f1._f2.subgroup_id * GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w : _GLF_FUZZED(subgroup_size))))))) / _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, 1u * (1u)))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z + _GLF_struct_replacement_23._f1._f2.subgroup_id * GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z + _GLF_struct_replacement_23._f1._f2.subgroup_id * GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w, (true ? GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z + _GLF_struct_replacement_23._f1._f2.subgroup_id * GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w : _GLF_FUZZED(subgroup_size))))))) / _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, 1u * (1u)))))), uint(uvec2((_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z + _GLF_struct_replacement_23._f1._f2.subgroup_id * GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z + _GLF_struct_replacement_23._f1._f2.subgroup_id * GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w, (true ? GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z + _GLF_struct_replacement_23._f1._f2.subgroup_id * GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w : _GLF_FUZZED(subgroup_size))))))) / _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, 1u * (1u)))))), 0u))))))) + ((GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.xy.x + 1) % GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z, (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z) ^ 0u) + _GLF_struct_replacement_23._f1._f2.subgroup_id * GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w + ((GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.xy.x + 1) % _GLF_IDENTITY(GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w, (GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w) - (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u)))))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(7u), uint(7u)), max(0u << _GLF_IDENTITY(uint(7u), uint(7u)), 0u << _GLF_IDENTITY(uint(7u), uint(7u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z, (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.z) ^ 0u) + _GLF_struct_replacement_23._f1._f2.subgroup_id * GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w + ((GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.xy.x + 1) % _GLF_IDENTITY(GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w, (GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.w) - (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | 0u)), uint(2u)))))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(7u), uint(7u)), max(0u << _GLF_IDENTITY(uint(7u), uint(7u)), 0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))), bvec4(true), _GLF_struct_43(vec4(1.0), ivec3(1), uvec3(1u), _GLF_struct_41(mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(mat4(1.0), mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0)))) / mat4(1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), uvec2(1u), vec3(1.0), vec3(1.0), bvec3(true), mat2x3(1.0)), _GLF_struct_42(vec4(1.0), mat3x4(1.0), ivec2(1), mat3x4(1.0), mat3x2(1.0), ivec2(1), mat2(1.0))), _GLF_struct_47(_GLF_struct_44(mat3x2(1.0)), true, _GLF_struct_45(mat3x4(1.0)), _GLF_struct_46(mat4x2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5850.3257)), bool(false)))), mat4(1.0), mat4(1.0), bvec4(true), bvec2(true), mat3x4(1.0))), bvec4(true), mat2x3(1.0), _GLF_struct_50(ivec3(1), _GLF_struct_48(mat4(1.0)), _GLF_struct_49(1u, mat4x2(1.0))));
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_FALSE(false))), ! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false))))))))))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec4(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, true, false))))))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bvec4(bool(bvec2(true, false)), true, true, true)))), _GLF_IDENTITY((true) && true, ! (! ((true) && true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.x = _GLF_struct_replacement_51.next_virtual_gid, (_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.x = _GLF_struct_replacement_51.next_virtual_gid, (true ? GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.x = _GLF_struct_replacement_51.next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup, (_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup, uvec4(0u, 0u, 0u, 0u) | _GLF_IDENTITY((GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY((GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup), max((GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup), (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup))))))) >> _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u))).w)))) | 0u), (_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.x = _GLF_struct_replacement_51.next_virtual_gid, (_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.x = _GLF_struct_replacement_51.next_virtual_gid, (true ? GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.x = _GLF_struct_replacement_51.next_virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup, (_GLF_IDENTITY(GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup, uvec4(0u, 0u, 0u, 0u) | (GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup))) >> _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) - uvec4(0u, 0u, 0u, 0u))).w)))) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), 0u)))) >> 0u);
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 | 0), (_GLF_IDENTITY((0 | 0), ((0 | 0)) << 0)) * 1)); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-83.55, -56.20)))), injectionSwitch)).y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-14.26))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec2(_GLF_WRAPPED_LOOP(false), true))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 ^ (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec4(bool(bool(_GLF_DEAD(false))), true, true, true))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec4(bool(bool(_GLF_DEAD(false))), true, true, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec4(bool(bool(_GLF_DEAD(false))), true, true, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec4(bool(bool(_GLF_DEAD(false))), true, true, true)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec4(bool(bool(_GLF_DEAD(false))), true, true, true)))), true, true))))))))))) || false))))
    barrier();
   atomicStore(buf[GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.x], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.y], max(_GLF_IDENTITY(_GLF_IDENTITY(buf[GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.y], (true ? buf[GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.y] : _GLF_FUZZED(workgroup_base))), clamp(_GLF_IDENTITY(buf[GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.y], (true ? buf[GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.y] : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(buf[GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.y], (true ? buf[GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.y] : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(buf[GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.y], (true ? buf[GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.y] : _GLF_FUZZED(workgroup_base))))), buf[GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.y])), 4, 64, 0);
 GLF_merged2_0_3_73_3_1_4GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_baseread.w = _GLF_IDENTITY(read, (read) | 0u);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size.z = GLF_merged2_0_3_73_3_1_4GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_baseread.w;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readvirtual_gidworkgroup_baseworkgroup_size.x = _GLF_IDENTITY(GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size, _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) * (GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size), (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) * (GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size), min(uvec4(1u, 1u, 1u, 1u) * (GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size), uvec4(1u, 1u, 1u, 1u) * (GLF_merged3_0_2_56_2_1_4_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizereadsubgroup_size)))) ^ uvec4(0u, 0u, 0u, 0u))).z;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (~ (0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) | ((_injected_loop_counter))))), ((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) | ((_injected_loop_counter)))))) | ((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) | ((_injected_loop_counter))))))) | 0) < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4)))), (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))) | (int(4))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ ((0 >> _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(0), int(0))))), _GLF_IDENTITY(int(4), (int(4)) | (int(4)))))), _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) - 0), (int(4)) | (int(4)))))))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) + int(_GLF_ZERO(0.0, injectionSwitch.x))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, log(1.0) + (injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(faceforward(-5.5, 873.717, -680.342)))), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(faceforward(-5.5, 873.717, -680.342)))))))), false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(checker[GLF_merged2_0_3_73_3_1_13GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidvirtual_gidworkgroup_basenum_workgroup.xyz.y], GLF_merged4_0_1_4_1_1_11_2_1_14_3_1_14readvirtual_gidworkgroup_baseworkgroup_size.x, 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, 0 | (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
  }
}
