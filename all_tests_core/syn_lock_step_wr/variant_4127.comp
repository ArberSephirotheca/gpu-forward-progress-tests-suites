#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 mat2x4 _f0;
 bvec4 _f1;
 bool _f2;
 mat2 _f3;
 mat2x3 _f4;
 int _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 bvec2 _f1;
 uvec2 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 uvec3 _f1;
 vec4 _f2;
 _GLF_struct_0 _f3;
 mat2x3 _f4;
 _GLF_struct_1 _f5;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 uint virtual_gid;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, bool(bool(false))))), (! (true && (_GLF_IDENTITY(false, bool(bool(false)))))) && true)) || false))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))), false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.8)), bool(false)))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u)))).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), false || ((_GLF_IDENTITY(false, bool(bool(false)))))), true && ((_GLF_IDENTITY(false, bool(bool(false))))))) || false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(length(vec2(-5.0, 6.9))) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6452.8209) : injectionSwitch.x)))) > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) << 0)])), injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))) || false))))))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, abs(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, sqrt(1.0) * (0.0)), 1.0))), 1.0), min(vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, abs(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- 9933.3743))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, abs(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), 1.0)))))) / 1.0) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), float(mat2((injectionSwitch.x), 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0))) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, sin(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.5))) : _GLF_FUZZED(797.132)))), 0.0, 0.0), (mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(16.64), mix(float(_GLF_IDENTITY(_GLF_FUZZED(16.64), (false ? _GLF_FUZZED(sqrt(-2.9)) : _GLF_FUZZED(16.64)))), float(_GLF_FUZZED(334.403)), bool(false)))), float(0.0), bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))))))) > injectionSwitch.y), false, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3611.6531) : 1.0)), max(1.0, 1.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5.8) : 0.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0), sin(0.0), 0.0, 0.0), (mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))))) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(16.64)), float(0.0), bool(true))))))) > injectionSwitch.y), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0), (mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(16.64)), float(0.0), bool(true)))))), float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0), (mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(16.64)), float(0.0), bool(true)))))), 0.0, 0.0, 0.0, cos(log(1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0))))) > injectionSwitch.y), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0), (mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(16.64)), float(0.0), bool(true)))))), ((injectionSwitch.x) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0), (mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(16.64)), float(0.0), _GLF_IDENTITY(bool(true), (bool(true)) || false))))))) - 0.0)) > injectionSwitch.y), false, false), true)), true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), 1.0), (_GLF_IDENTITY(max(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), 1.0), mix(float(_GLF_FUZZED(8.9)), float(max(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), 1.0)), bool(true)))) - 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0))), max(1.0, 1.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0), (mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(-3382.6911, 631.913, -1046.7917).y)), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true))) * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(16.64)), float(0.0), bool(true))))))) > injectionSwitch.y), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 0.0, 0.0, 0.0)), (true ? float(vec4(1.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-2058.8814)))), 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(sin(0.0), min(sin(0.0), _GLF_IDENTITY(sin(0.0), float(mat2x3(_GLF_IDENTITY(sin(0.0), clamp(sin(0.0), sin(0.0), sin(0.0))), 1.0, 1.0, 0.0, 1.0, 0.0))))), 0.0, 0.0), (mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(16.64)), float(0.0), bool(true))))))) > injectionSwitch.y), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), 1.0)), max(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (_GLF_IDENTITY(max(1.0, 1.0), clamp(max(1.0, 1.0), max(1.0, 1.0), max(1.0, 1.0)))) + 0.0)), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0), (mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(16.64)), float(0.0), bool(true))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(16.64)), float(0.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(16.64)), float(0.0), bool(true))), clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(16.64)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(16.64)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(16.64)), float(0.0), bool(true))))))))))) > injectionSwitch.y), false, false), true)), true)))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0)))))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, (workgroup_id) / _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u + (1u)), _GLF_IDENTITY(1u, ~ (~ (1u)))))))), 0u ^ (workgroup_size * workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, abs(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), true && ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))
  barrier();
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(bvec3(true), uvec3(_GLF_IDENTITY(1u, (1u) ^ (18252u & 0u))), vec4(1.0), _GLF_struct_0(ivec2(1), bvec2(true), uvec2(1u), bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bool(_GLF_IDENTITY(true, false || (true)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bool(_GLF_IDENTITY(true, false || (true))))))) && true))))), mat2x3(1.0), _GLF_struct_1(mat2x4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(determinant(mat3(0.3, 5.2, 2342.0576, -4262.8125, -807.448, -35.65, -327.046, -3.5, -9.8))) : 1.0))), bvec4(true), true, mat2(1.0), mat2x3(1.0), 1, ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), max(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) | (0)) ^ (1)), _GLF_IDENTITY(1, 0 ^ (1))))) ^ 0)))), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size) ^ 0u), 0u ^ (subgroup_id * subgroup_size))) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), (_GLF_IDENTITY((subgroup_id * subgroup_size), clamp((subgroup_id * subgroup_size), (subgroup_id * subgroup_size), (subgroup_id * subgroup_size)))) | ((subgroup_id * subgroup_size)))) << (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) | _GLF_IDENTITY((6u), max(_GLF_IDENTITY((6u), ((6u)) | ((6u))), (6u))))), min(uint(_GLF_IDENTITY(6u, (6u) | _GLF_IDENTITY((6u), max(_GLF_IDENTITY((6u), ((6u)) | ((6u))), (6u))))), uint(_GLF_IDENTITY(6u, (6u) | _GLF_IDENTITY((6u), max(_GLF_IDENTITY((6u), ((6u)) | ((6u))), (6u))))))), uint(6u)))), ((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), min(~ (~ (subgroup_size)), ~ (~ (subgroup_size)))))) | ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) * 1u)) : _GLF_FUZZED(num_workgroup))) + subgroup_local_id);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), ! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), bool(bvec2((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))), bool(bvec4(_GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), bool(bvec2((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))), bool(bvec2((! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), bool(bvec2((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))), false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).x, (false ? _GLF_FUZZED(3461.2766) : injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4464.8420)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0), (mat3x4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4464.8420)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4464.8420)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0), (mat3x4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4464.8420)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4464.8420)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0), (mat3x4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4464.8420)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))).x, (false ? _GLF_FUZZED(3461.2766) : injectionSwitch.x)) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).x, (false ? _GLF_FUZZED(3461.2766) : injectionSwitch.x)) > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(3461.2766), min(_GLF_IDENTITY(_GLF_FUZZED(3461.2766), float(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(3461.2766), (_GLF_FUZZED(3461.2766)) - 0.0), 0.0, 1.0, 0.0, 1.0, 1.0))), _GLF_FUZZED(3461.2766))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(3461.2766), min(_GLF_IDENTITY(_GLF_FUZZED(3461.2766), float(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(3461.2766), (_GLF_FUZZED(3461.2766)) - 0.0), 0.0, 1.0, 0.0, 1.0, 1.0))), _GLF_FUZZED(3461.2766))), float(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(3461.2766), min(_GLF_IDENTITY(_GLF_FUZZED(3461.2766), float(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(3461.2766), (_GLF_FUZZED(3461.2766)) - 0.0), 0.0, 1.0, 0.0, 1.0, 1.0))), _GLF_FUZZED(3461.2766))), 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_FUZZED(3461.2766), min(_GLF_IDENTITY(_GLF_FUZZED(3461.2766), float(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(3461.2766), (_GLF_FUZZED(3461.2766)) - 0.0), 0.0, 1.0, 0.0, 1.0, 1.0))), _GLF_FUZZED(3461.2766))))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x)) > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(vec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), determinant(mat4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)))), 0.0 + (float(vec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), determinant(mat4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)))))), max(_GLF_IDENTITY(float(vec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), determinant(mat4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)))), 0.0 + (float(vec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), determinant(mat4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(float(vec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), determinant(mat4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)))), 0.0 + (float(vec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), determinant(mat4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(float(vec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), determinant(mat4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)))), 0.0 + (float(vec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), determinant(mat4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)))))), (true ? _GLF_IDENTITY(float(vec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), determinant(mat4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)))), 0.0 + (float(vec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), determinant(mat4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0)))))) : _GLF_FUZZED(63.54)))) * 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) - length(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(vec2(874.998, -47.72).x) : (injectionSwitch.x))) / 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) / 1.0)), determinant(mat4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-611.104), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-265.794)), bvec2(true, false))).x), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0))), (vec2((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) / 1.0)), determinant(mat4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-611.104), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-265.794)), bvec2(true, false))).x), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0)))) / vec2(1.0, 1.0))), 0.0 + (float(vec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), determinant(mat4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec2(7.7, 0.3).x)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))))), (mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec2(7.7, 0.3).x)), bool(false))))) / mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(roundEven(-49.56)))), 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0)))))))) > injectionSwitch.y, true)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), (true ? float(mat2x4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-6.9))))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5107.9730)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x))), bool(true))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x))) * 1.0) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x))) * 1.0) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))))))))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5644.0678)), vec2(_GLF_FUZZED(-775.824), (injectionSwitch)[1]), bvec2(false, true)))) + sqrt(vec2(0.0, 0.0))).y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) && true)), (true && (_GLF_IDENTITY(false, (false) && true))) || false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], clamp(buf[_GLF_struct_replacement_3.virtual_gid], _GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], 0u + (buf[_GLF_struct_replacement_3.virtual_gid])), _GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], min(_GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], (true ? buf[_GLF_struct_replacement_3.virtual_gid] : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) >> 0u))))), _GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], max(buf[_GLF_struct_replacement_3.virtual_gid], buf[_GLF_struct_replacement_3.virtual_gid])))))), min(_GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], clamp(buf[_GLF_struct_replacement_3.virtual_gid], _GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], 0u + (buf[_GLF_struct_replacement_3.virtual_gid])), _GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], min(_GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], (true ? buf[_GLF_struct_replacement_3.virtual_gid] : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) >> 0u))))), _GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], max(buf[_GLF_struct_replacement_3.virtual_gid], buf[_GLF_struct_replacement_3.virtual_gid])))))), _GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], clamp(buf[_GLF_struct_replacement_3.virtual_gid], _GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], 0u + (buf[_GLF_struct_replacement_3.virtual_gid])), _GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], min(_GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], (true ? buf[_GLF_struct_replacement_3.virtual_gid] : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) >> 0u))))), _GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], max(buf[_GLF_struct_replacement_3.virtual_gid], buf[_GLF_struct_replacement_3.virtual_gid])))))), (true ? _GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], clamp(buf[_GLF_struct_replacement_3.virtual_gid], _GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], 0u + (buf[_GLF_struct_replacement_3.virtual_gid])), _GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], min(_GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], (true ? buf[_GLF_struct_replacement_3.virtual_gid] : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) >> 0u))))), _GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], max(buf[_GLF_struct_replacement_3.virtual_gid], buf[_GLF_struct_replacement_3.virtual_gid])))))) : _GLF_FUZZED(subgroup_size))))), (_GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], clamp(buf[_GLF_struct_replacement_3.virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], 0u + (buf[_GLF_struct_replacement_3.virtual_gid])), ~ (~ (_GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], 0u + (buf[_GLF_struct_replacement_3.virtual_gid]))))), _GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], min(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], (true ? buf[_GLF_struct_replacement_3.virtual_gid] : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], max(buf[_GLF_struct_replacement_3.virtual_gid], buf[_GLF_struct_replacement_3.virtual_gid])), (true ? buf[_GLF_struct_replacement_3.virtual_gid] : _GLF_FUZZED(num_workgroup)))) | (_GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], (true ? buf[_GLF_struct_replacement_3.virtual_gid] : _GLF_FUZZED(num_workgroup))))), _GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], max(buf[_GLF_struct_replacement_3.virtual_gid], buf[_GLF_struct_replacement_3.virtual_gid]))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], clamp(buf[_GLF_struct_replacement_3.virtual_gid], _GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], 0u + (buf[_GLF_struct_replacement_3.virtual_gid])), _GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], min(_GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], (true ? buf[_GLF_struct_replacement_3.virtual_gid] : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], (_GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], (buf[_GLF_struct_replacement_3.virtual_gid]) | (_GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], clamp(buf[_GLF_struct_replacement_3.virtual_gid], buf[_GLF_struct_replacement_3.virtual_gid], buf[_GLF_struct_replacement_3.virtual_gid]))))) << 0u), max(buf[_GLF_struct_replacement_3.virtual_gid], buf[_GLF_struct_replacement_3.virtual_gid])), min(_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], max(buf[_GLF_struct_replacement_3.virtual_gid], buf[_GLF_struct_replacement_3.virtual_gid])), ~ (~ (_GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], max(buf[_GLF_struct_replacement_3.virtual_gid], buf[_GLF_struct_replacement_3.virtual_gid]))))), _GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], max(buf[_GLF_struct_replacement_3.virtual_gid], buf[_GLF_struct_replacement_3.virtual_gid])))))))), (_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_struct_replacement_3.virtual_gid, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_3.virtual_gid, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_base, 99169, -50107)) : _GLF_struct_replacement_3.virtual_gid)), (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), (true ? _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_3.virtual_gid, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_base, 99169, -50107)) : _GLF_struct_replacement_3.virtual_gid)), (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), ~ (~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.virtual_gid, (_GLF_struct_replacement_3.virtual_gid) | (_GLF_IDENTITY(_GLF_struct_replacement_3.virtual_gid, clamp(_GLF_struct_replacement_3.virtual_gid, _GLF_struct_replacement_3.virtual_gid, _GLF_struct_replacement_3.virtual_gid)))), (false ? _GLF_FUZZED(bitfieldExtract(workgroup_base, 99169, -50107)) : _GLF_struct_replacement_3.virtual_gid)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))) : _GLF_FUZZED(uvec2(103965u, 196052u))))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_3.virtual_gid, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_base, 99169, -50107)) : _GLF_struct_replacement_3.virtual_gid)), (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), (true ? _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_3.virtual_gid, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_base, 99169, -50107)) : _GLF_struct_replacement_3.virtual_gid)), (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), ~ (~ (uvec2(_GLF_IDENTITY(_GLF_struct_replacement_3.virtual_gid, (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(workgroup_base, 99169, -50107)) : _GLF_struct_replacement_3.virtual_gid, clamp(false ? _GLF_FUZZED(bitfieldExtract(workgroup_base, 99169, -50107)) : _GLF_struct_replacement_3.virtual_gid, false ? _GLF_FUZZED(bitfieldExtract(workgroup_base, 99169, -50107)) : _GLF_struct_replacement_3.virtual_gid, false ? _GLF_FUZZED(bitfieldExtract(workgroup_base, 99169, -50107)) : _GLF_struct_replacement_3.virtual_gid)))), (_GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, ~ (~ (0u))))) << _GLF_IDENTITY(uint(2u), uint(2u))))))) : _GLF_FUZZED(uvec2(103965u, 196052u)))))), _GLF_IDENTITY((~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_3.virtual_gid, clamp(_GLF_struct_replacement_3.virtual_gid, _GLF_struct_replacement_3.virtual_gid, _GLF_struct_replacement_3.virtual_gid))) | (_GLF_struct_replacement_3.virtual_gid)), (false ? _GLF_FUZZED(bitfieldExtract(workgroup_base, 99169, -50107)) : _GLF_struct_replacement_3.virtual_gid)), (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), (true ? _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_3.virtual_gid, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_base, 99169, _GLF_IDENTITY(-50107, (-50107) | 0))) : _GLF_struct_replacement_3.virtual_gid)), (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))) << _GLF_IDENTITY(uint(2u), uint(2u)))), ~ (~ (uvec2(_GLF_IDENTITY(_GLF_struct_replacement_3.virtual_gid, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_base, 99169, -50107)) : _GLF_struct_replacement_3.virtual_gid)), (_GLF_IDENTITY(0u, (0u) << 0u) << _GLF_IDENTITY(uint(2u), uint(2u))))))) : _GLF_FUZZED(uvec2(103965u, 196052u))))))), ((~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3.virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_3.virtual_gid, clamp(_GLF_struct_replacement_3.virtual_gid, _GLF_struct_replacement_3.virtual_gid, _GLF_struct_replacement_3.virtual_gid))) | (_GLF_struct_replacement_3.virtual_gid)), (false ? _GLF_FUZZED(bitfieldExtract(workgroup_base, 99169, -50107)) : _GLF_struct_replacement_3.virtual_gid)), (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), (true ? _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_3.virtual_gid, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_base, 99169, _GLF_IDENTITY(-50107, (-50107) | 0))) : _GLF_struct_replacement_3.virtual_gid)), (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))) << _GLF_IDENTITY(uint(2u), uint(2u)))), ~ (~ (uvec2(_GLF_IDENTITY(_GLF_struct_replacement_3.virtual_gid, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_base, 99169, -50107)) : _GLF_struct_replacement_3.virtual_gid)), (_GLF_IDENTITY(0u, (0u) << 0u) << _GLF_IDENTITY(uint(2u), uint(2u))))))) : _GLF_FUZZED(uvec2(103965u, 196052u)))))))) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) | (~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_3.virtual_gid, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_base, 99169, -50107)) : _GLF_struct_replacement_3.virtual_gid)), (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), (true ? _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_3.virtual_gid, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_base, 99169, -50107)) : _GLF_struct_replacement_3.virtual_gid)), (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), ~ (~ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_3.virtual_gid, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_base, 99169, -50107)) : _GLF_struct_replacement_3.virtual_gid)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), uint(uint(_GLF_IDENTITY(uint(2u), uint(2u)))))))))))), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(_GLF_struct_replacement_3.virtual_gid, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_base, 99169, -50107)) : _GLF_struct_replacement_3.virtual_gid)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), uint(uint(_GLF_IDENTITY(uint(2u), uint(2u))))))))))))))))) : _GLF_FUZZED(uvec2(103965u, 196052u)))))))))))], clamp(buf[_GLF_struct_replacement_3.virtual_gid], _GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], 0u + (buf[_GLF_struct_replacement_3.virtual_gid])), _GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], min(_GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], (true ? buf[_GLF_struct_replacement_3.virtual_gid] : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(buf[_GLF_struct_replacement_3.virtual_gid], max(buf[_GLF_struct_replacement_3.virtual_gid], buf[_GLF_struct_replacement_3.virtual_gid]))))))) << 0u))), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bvec3(bvec3(bvec3(true, false, false)))))), false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))), false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.3)))) / 1.0) > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))), _GLF_IDENTITY(false, bool(bool(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(checker[_GLF_struct_replacement_3.virtual_gid], read, 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64), clamp((64), (64), (64))) << _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (0)))))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
