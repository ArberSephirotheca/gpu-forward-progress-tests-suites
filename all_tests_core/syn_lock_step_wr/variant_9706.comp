#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 uint workgroup_base;
 vec2 _f0;
 uvec3 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_14 {
 ivec4 _f0;
 mat3x2 _f1;
 mat3 _f2;
 bvec2 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_16 {
 _GLF_struct_14 _f0;
 mat4x2 _f1;
 _GLF_struct_15 _f2;
} ;

struct _GLF_struct_12 {
 uvec4 _f0;
 ivec3 _f1;
 int _f2;
 bvec3 _f3;
 mat2 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_13 {
 _GLF_struct_12 _f0;
 mat3x2 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_10 {
 float _f0;
 ivec2 _f1;
 uvec4 _f2;
 int _f3;
 float _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_9 {
 mat4 _f0;
 mat3 _f1;
 mat2x3 _f2;
 int _f3;
} ;

struct _GLF_struct_11 {
 float _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_10 _f2;
} ;

struct _GLF_struct_17 {
 mat3x2 _f0;
 uint _f1;
 _GLF_struct_11 _f2;
 _GLF_struct_13 _f3;
 _GLF_struct_16 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_6 {
 vec4 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_5 {
 vec3 _f0;
 uint _f1;
 ivec2 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 vec2 _f1;
 uvec3 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_7 {
 _GLF_struct_3 _f0;
 uint _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
 mat3x2 _f4;
 uvec3 _f5;
 _GLF_struct_6 _f6;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 mat4x2 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_0 {
 mat3x2 _f0;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 ivec3 _f1;
 mat2x4 _f2;
 bvec2 _f3;
 _GLF_struct_1 _f4;
 mat3x4 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_8 {
 ivec4 _f0;
 uint subgroup_local_id;
 _GLF_struct_2 _f1;
 _GLF_struct_7 _f2;
 uvec2 _f3;
 uvec3 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(9.8), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], float(mat2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], 0.0, 0.0, 1.0)))), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(-354.187)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0)))).y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(9.8), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], float(mat2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], 0.0, 0.0, 1.0)))), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(-354.187)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0)))).y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(9.8), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], float(mat2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], 0.0, 0.0, 1.0)))), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(-354.187)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + vec2(0.0, 0.0)))).y))))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true, true, true))), true, false, false))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))), true, false, false))))))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6502.5018, -61.69)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, true))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), false)))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))) && _GLF_IDENTITY(true, true && (true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.4)))) - sqrt(0.0)))) && (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)), false, true)))) && true))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-338.717)), bool(false))))) > injectionSwitch.y)), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-338.717)), bool(false))))) > injectionSwitch.y)), false, true))), true)))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, true)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) && true))) && true)))))) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0))).y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x), max(min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))), bool(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))), bool(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))))))), false || (_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))), bool(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))))))), bool(bvec3(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))), bool(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))))))), true, true))))), ! (! (bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec4(bvec2(! (false), false), false, false)))))))), bool(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false), true, true)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false), true, true)))))))))))))))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))), bool(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))))))), false || (_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))), bool(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))))))), bool(bvec3(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))), bool(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))))))), true, true))))), ! (! (bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec4(bvec2(! (false), false), false, false)))))))), bool(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false), true, true)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false), true, true)))))))))))))))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))), bool(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))))))), false || (_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))), bool(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))))))), bool(bvec3(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))), bool(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))))))), true, true))))), ! (! (bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec4(bvec2(! (false), false), false, false)))))))), bool(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false), true, true)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false), true, true)))))))))))))))))))))))))))), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), _GLF_IDENTITY(false, ! (! (false))))))) && true)))), bool(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))))))), ! (! (_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))), bool(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec2(! (false), false))))))))))), false || (bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))), bool(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec2(! (false), false)))))))))))))))))) || false))), bool(bool((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))), bool(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))), bool(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec3(bvec2(! (false), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))))))), ! (! (bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), false || (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))), bool(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))))))))))), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))), bool(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))))))), ! (! (bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))), bool(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))))))))))) || false))))))), (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), bool(bvec2(bool((false)), false))))))), (! _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false))))))) || false)), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), false || (! (false))), false)))))), (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), bool(bool(! (false)))), true, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), bool(bool(! (false)))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(! (false), bool(bool(! (false)))), true, false, false))) || false)) || false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), bool(bool(! (false)))), true, false, false)))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec2(! (false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), bool(bool(! (false)))), true, false, false)))))))))), true && (bool(bvec2(! (false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), bool(bool(! (false)))), true, false, false)))))))))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(bool(bvec2(! (false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), bool(bool(! (false)))), true, false, false)))))))))), true && (bool(bvec2(! (false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), bool(bool(! (false)))), true, false, false)))))))))))), true)))))), true && (_GLF_IDENTITY(bool(bvec2(! (false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false))), bool(bool(! (false)))), true, false, false)))))))))), ! (! (bool(bvec2(! (false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_IDENTITY(! (false), bool(bool(! (false)))), true, false, false))))))))))))))), false, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), true, true)), true && (bool(bvec3(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), true, true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))) && true, bool(bvec4((false) && true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), true)))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), false || ((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), bool(bvec2((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))))))))))))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), bool(bvec3((bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))))))))))))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), false || ((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), bool(bvec2((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), false || ((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), bool(bvec2((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), false || ((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), bool(bvec2((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false)))))))))))), (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))))))))))) || false)))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), bool(bvec3((bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))))))))))))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)).y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), false, false)))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 0.0, abs(1.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.8)), bool(false))), 1.0)), (float(mat4x2(injectionSwitch.x, 0.0, abs(1.0), 0.0, 1.0, 0.0, 1.0, 1.0))) + 0.0)) > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), true, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size.w = subgroup_size;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-86621) : _GLF_IDENTITY(1, clamp(1, 1, 1))))), gl_SubgroupInvocationID, _GLF_struct_2(_GLF_struct_0(mat3x2(1.0)), ivec3(1), mat2x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6.5)))), _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true))), false, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true))), false, true)), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true))), false, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true))), false, true)), true))), false, true)))), _GLF_struct_1(uvec4(_GLF_IDENTITY(1u, (1u) | 0u)), mat4x2(1.0), mat4x3(1.0)), mat3x4(_GLF_IDENTITY(1.0, float(vec3(1.0, round(length(normalize(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(90.76) : 1.0))))), 0.0)))), mat4(1.0)), _GLF_struct_7(_GLF_struct_3(mat4(1.0), mat4x3(_GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.9)), float(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0)))), bool(true))), 0.0)), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))), 1u, _GLF_struct_4(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), 1u * (1u))), vec2(1.0), uvec3(1u), vec4(1.0)), _GLF_struct_5(vec3(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(dot(vec3(_GLF_IDENTITY(5.4, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(60.03), mix(float(_GLF_FUZZED(60.03)), float(_GLF_FUZZED(8.8)), bool(false))) : _GLF_IDENTITY(5.4, min(5.4, 5.4)), float(mat2x3(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(60.03), mix(float(_GLF_FUZZED(60.03)), float(_GLF_FUZZED(8.8)), bool(false))) : _GLF_IDENTITY(5.4, min(5.4, 5.4)), min(false ? _GLF_IDENTITY(_GLF_FUZZED(60.03), mix(float(_GLF_FUZZED(60.03)), float(_GLF_FUZZED(8.8)), bool(false))) : _GLF_IDENTITY(5.4, min(5.4, 5.4)), _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(60.03), mix(float(_GLF_FUZZED(60.03)), float(_GLF_FUZZED(8.8)), bool(false))) : _GLF_IDENTITY(5.4, min(5.4, 5.4)), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(60.03), mix(float(_GLF_FUZZED(60.03)), float(_GLF_FUZZED(8.8)), bool(false))) : _GLF_IDENTITY(5.4, min(5.4, 5.4)), false ? _GLF_IDENTITY(_GLF_FUZZED(60.03), mix(float(_GLF_FUZZED(60.03)), float(_GLF_FUZZED(8.8)), bool(false))) : _GLF_IDENTITY(5.4, min(5.4, 5.4)), false ? _GLF_IDENTITY(_GLF_FUZZED(60.03), mix(float(_GLF_FUZZED(60.03)), float(_GLF_FUZZED(8.8)), bool(false))) : _GLF_IDENTITY(5.4, min(5.4, 5.4)))))), _GLF_IDENTITY(dot(vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, cos(0.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, cos(0.0)), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0))))), -61.79, _GLF_IDENTITY(3775.7488, min(3775.7488, 3775.7488))), (mat4x3(-6.7, -4.3, -2.0, 6608.3116, -58.66, -2.1, 41.50, 6501.8637, -5724.9873, 884.064, 2257.6227, 4.9) * vec4(3.0, -2.8, -26.91, -772.432)))))))) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), float(_GLF_FUZZED(39.14)), bool(false))), (true ? 1.0 : _GLF_FUZZED(-1.0)))), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(float(true), mix(float(float(true)), float(_GLF_IDENTITY(_GLF_FUZZED(-8893.9337), (_GLF_FUZZED(-8893.9337)) + 0.0)), bool(_GLF_IDENTITY(false, ! (! (false)))))))), mix(float(_GLF_FUZZED(90.61)), float(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(float(true), mix(float(float(true)), float(_GLF_IDENTITY(_GLF_FUZZED(-8893.9337), (_GLF_FUZZED(-8893.9337)) + 0.0)), bool(_GLF_IDENTITY(false, ! (! (false)))))))), min(float(_GLF_FUZZED(_GLF_IDENTITY(float(true), mix(float(float(true)), float(_GLF_IDENTITY(_GLF_FUZZED(-8893.9337), (_GLF_FUZZED(-8893.9337)) + 0.0)), bool(_GLF_IDENTITY(false, ! (! (false)))))))), float(_GLF_FUZZED(_GLF_IDENTITY(float(true), mix(float(float(true)), float(_GLF_IDENTITY(_GLF_FUZZED(-8893.9337), (_GLF_FUZZED(-8893.9337)) + 0.0)), bool(_GLF_IDENTITY(false, ! (! (false))))))))))), bool(true))), bool(false)))), 1u, ivec2(1), bvec4(true)), mat3x2(1.0), uvec3(1u), _GLF_struct_6(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(0.0, tan(0.0), 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(0.0, tan(0.0), 1.0, 0.0)))), (true ? _GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(distance(vec4(4.1, -6.4, -0.2, 386.051), exp2(vec4(26.67, -1.2, 17.51, -54.04)))))), 0.0, 1.0, _GLF_IDENTITY(sin(0.0), (sin(0.0)) - determinant(mat4(0.0, 0.0, log(1.0), 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0)))), vec4(0.0, tan(0.0), 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, sin(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, abs(0.0), 1.0), vec4(0.0, 0.0, 0.0, abs(1.0))), dot(vec4(0.0, 0.0, abs(0.0), 1.0), vec4(0.0, 0.0, 0.0, abs(1.0)))), 0.0, 0.0), mat3x2(mat4(mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, abs(0.0), 1.0), vec4(0.0, 0.0, 0.0, abs(1.0))), dot(vec4(0.0, 0.0, abs(0.0), 1.0), vec4(0.0, 0.0, 0.0, abs(1.0)))), 0.0, 0.0)))))))), vec4(0.0, tan(0.0), 1.0, 0.0)))) : _GLF_FUZZED(reflect(7927.5836, 3.5))))), bvec4(true))), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))), _GLF_IDENTITY(uvec3(1u), ~ (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((uvec3(1u)) | uvec3(0u, 0u, 0u), (true ? _GLF_IDENTITY((uvec3(1u)) | uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u), ((uvec3(1u)) | uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(74335u, 127520u, 64755u)))))), ((_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((uvec3(1u)) | uvec3(0u, 0u, 0u), (true ? _GLF_IDENTITY((uvec3(1u)) | uvec3(0u, 0u, 0u), ((uvec3(1u)) | uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(74335u, 127520u, 64755u))))))) >> uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), mix(float(_GLF_FUZZED(-9.4)), float(_GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (false ? _GLF_FUZZED(3462.2375) : float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), bool(true))))))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) && true))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7758.9327) : injectionSwitch.y))) - 0.0))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7758.9327) : injectionSwitch.y))) - 0.0)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec4((! (_GLF_DEAD(false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(false || (! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (false || (! (! (_GLF_DEAD(false))))), true && (! (false || (! (! (_GLF_DEAD(false))))))))))), bool(bvec4(_GLF_DEAD(false), false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))), true && (! (bool(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))))))))))))
  return;
 GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size.z = _GLF_struct_replacement_8.subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), false || (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))) || false))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bool(false)))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size.x = num_workgroup;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), ! (! (_GLF_DEAD(false)))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)), gl_WorkGroupSize))), uvec3(0u, 0u, 0u) ^ ((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))))) + uvec3(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))), 0u)))), _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u)))))) ^ (gl_WorkGroupSize), uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, min(0u, 0u)))), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u)), 0u)), 0u)), 0u, 0u) ^ (uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0) + (injectionSwitch.y), 0.0, 1.0, 0.0)), 1.0 * (_GLF_IDENTITY(float(vec4(0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, cos(0.0), 1.0, 1.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-27.84)), float(0.0), bool(true))))), 1.0, 0.0, 0.0)), (true ? vec2(mat4x3(injectionSwitch, cos(0.0), 1.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(vec2(-712.845, 167.046))))).y), 0.0, 1.0, 0.0)), min(float(vec4(0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, cos(0.0), 1.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 0.0)), (true ? vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(cos(0.0), (cos(0.0)) + sin(0.0)), 1.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(vec2(-712.845, 167.046))))).y), 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(vec4(0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, cos(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(36.89) : 1.0)))), cos(0.0), 0.0, 1.0, 0.0, 0.0)), (true ? vec2(mat4x3(injectionSwitch, cos(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3560.5567)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0))), float(_GLF_FUZZED(-3.4)), bool(false))), 1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), cos(0.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, 0.0, 0.0)) : _GLF_FUZZED(_GLF_IDENTITY(vec2(-712.845, 167.046), (true ? _GLF_IDENTITY(vec2(-712.845, _GLF_IDENTITY(167.046, clamp(_GLF_IDENTITY(167.046, max(167.046, 167.046)), 167.046, _GLF_IDENTITY(167.046, float(_GLF_IDENTITY(vec3(167.046, 0.0, 1.0), min(vec3(167.046, 0.0, 1.0), vec3(167.046, 0.0, 1.0)))))))), mix(vec2(_GLF_FUZZED(-0.9), _GLF_FUZZED(439.336)), vec2((vec2(-712.845, 167.046))[0], (vec2(-712.845, 167.046))[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch))))))).y), 0.0, 1.0, 0.0)), float(mat2(float(vec4(0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(cos(0.0), float(_GLF_IDENTITY(vec2(cos(0.0), 0.0), clamp(vec2(cos(0.0), 0.0), _GLF_IDENTITY(vec2(cos(0.0), 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(cos(0.0), 0.0))), vec2(cos(0.0), 0.0))))), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), (true ? vec2(mat4x3(injectionSwitch, cos(0.0), 1.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))) : _GLF_FUZZED(vec2(-712.845, 167.046))))).y), 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-66.95), _GLF_FUZZED(-2215.7588)), bvec2(false, false))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(((mat3x2(2.3, -3.2, 3.9, -6.0, -2.1, 3.5) == mat3x2(-9.2, 4869.2882, -9399.3087, -7.8, 1.9, 8.6)) ? 66.65 : 1977.5270))), bool(false))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(0.2, min(0.2, 0.2))) : injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), mix(float(float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(6.8)), bool(false)))) : _GLF_FUZZED(29.00))), injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(mat3x2(1.0), 1u, _GLF_struct_11(1.0, _GLF_struct_9(mat4(1.0), mat3(1.0), mat2x3(1.0), 1), _GLF_struct_10(_GLF_IDENTITY(1.0, min(1.0, 1.0)), ivec2(1), uvec4(1u), 1, 1.0, mat2x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-4.9)), max((true ? _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(313.386)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), 1.0)) : _GLF_FUZZED(-4.9)), (true ? 1.0 : _GLF_FUZZED(-4.9)))))))), _GLF_struct_13(_GLF_struct_12(_GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), min(uvec4(1u), uvec4(1u))))), ivec3(1), 1, bvec3(true), mat2(1.0), uvec3(1u)), mat3x2(1.0), mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((- 5.3))), bool(false))), min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((- 5.3))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY((- 5.3), min(_GLF_IDENTITY((- 5.3), max((- 5.3), (_GLF_IDENTITY(- 5.3, min(- 5.3, - 5.3))))), _GLF_IDENTITY((- 5.3), (true ? (- 5.3) : _GLF_FUZZED(-2298.7386))))))), bool(false))), clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED((- 5.3)), 0.0 + (_GLF_FUZZED((- 5.3))))), _GLF_IDENTITY(bool(false), (bool(false)) || false))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((- 5.3))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((- 5.3))), bool(false))), (_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), mix(float(_GLF_IDENTITY(float(1.0), (true ? _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))) : _GLF_FUZZED(mod(-0.6, -23.07))))), float(_GLF_FUZZED(-25.83)), bool(false))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), float(vec2(float(1.0), 1.0)))) * 1.0), mix(float(_GLF_IDENTITY(float(1.0), (true ? _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))) : _GLF_FUZZED(mod(-0.6, -23.07))))), float(_GLF_FUZZED(-25.83)), bool(false))))), float(_GLF_FUZZED((- 5.3))), bool(false)))) - 0.0))))))), _GLF_struct_16(_GLF_struct_14(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) / 1)), mat3x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), (_GLF_IDENTITY(1.0 * (1.0), mix(float(_GLF_IDENTITY(1.0 * (1.0), clamp(1.0 * (1.0), 1.0 * (1.0), 1.0 * (1.0)))), float(_GLF_FUZZED((-190.481 + 4.1))), bool(false)))) - sin(0.0)))), mat3(1.0), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true)))), (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true))))))), (true) || false), true, false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true)))), (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true))))))), (true) || false), true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)) || (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true && (true), ! (! (true && (true))))))))), (true) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, true && (true)))), (true) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, true && (true)))), (true) || false), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, true && (true)))), (true) || false), true, false, true)), false)))), true, false)))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), false || (true && (true)))))) && true)), (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), false, true)), (bool(bvec4(false, true, false, true))) && true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true && (true)))), _GLF_IDENTITY((true) || false, bool(bvec2((true) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false)))), false, true)))) && true), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true))))))), (true) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), ((true)) && true), true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (mat4x3(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) * mat4(1.0)))) < injectionSwitch.y))))) || false, ! (! ((true) || false)))), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))))) || false)))), mat4x3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-399.647, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(580.740) : -399.647)))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), mat4x2(1.0), _GLF_struct_15(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u | (uint(2u)))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0))))), (_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0))))), (_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0))))), min(max(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0))))), max(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0)))))))) + 0.0)) - tan(0.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0))))), (_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0))))), (_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0))))), min(max(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0))))), max(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0)))))))) + 0.0)) - tan(0.0))), mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0))))), (_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0))))), (_GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0))))), min(max(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0))))), max(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0)))))))) + 0.0)) - tan(0.0)))), float(_GLF_FUZZED(847.119)), bool(false)))), float(_GLF_FUZZED(-6.9)), bool(false)))), uvec3(1u), vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0)))), mat2(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  return;
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (uint(uvec3(subgroup_id, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) * GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size.w, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(4233.6757), clamp(_GLF_FUZZED(4233.6757), _GLF_IDENTITY(_GLF_FUZZED(4233.6757), mix(float(_GLF_FUZZED(float(194232u))), float(_GLF_FUZZED(4233.6757)), bool(true))), _GLF_IDENTITY(_GLF_FUZZED(4233.6757), (true ? _GLF_FUZZED(4233.6757) : _GLF_FUZZED(-4.6))))), _GLF_FUZZED(-1.7)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))) * 1.0)), bvec2(true, true))))).x)))), uint(uvec4(uint(uvec3(subgroup_id, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4233.6757), _GLF_FUZZED(-1.7)), vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0))[0], (injectionSwitch)[1]), bvec2(true, true))))).x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))), ~ (~ (_GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u ^ (uint(uvec3(subgroup_id, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) * GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size.w, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x)))), ~ (~ (uint(uvec3(subgroup_id, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) * GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size.w) >> 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, true))), bool(bool(false))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false))))))) || false), false || (false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, true))), bool(bool(false))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false))))))) || false), false || (false))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, true))), bool(bool(false))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false))))))) || false), false || (false)))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(25.83), float(_GLF_IDENTITY(mat4x2(_GLF_FUZZED(25.83), 1.0, 1.0, determinant(mat4(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))) * (0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), cos(0.0), 1.0, 0.0, 0.0), (mat4x2(_GLF_FUZZED(25.83), 1.0, 1.0, determinant(mat4(determinant(mat2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), mix(float(_GLF_IDENTITY(float(vec2(0.0, 0.0)), (float(vec2(0.0, 0.0))) + 0.0)), float(_GLF_FUZZED(vec4(-8.6, -8296.8382, -8.5, 811.277).t)), bool(false)))), _GLF_IDENTITY(0.0, (0.0) - tan(0.0)), 0.0, 0.0)), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-9.0)), bool(false))))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), cos(0.0), 1.0, 0.0, 0.0)) * mat4(1.0))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat2x3(mat2(1.0))), transpose(transpose(_GLF_IDENTITY(mat2(mat2x3(mat2(1.0))), transpose(transpose(mat2(mat2x3(mat2(1.0)))))))))) * (injectionSwitch)).y, mix(float(_GLF_FUZZED(25.83)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(5508.0629) : injectionSwitch.y, min(_GLF_IDENTITY(false ? _GLF_FUZZED(5508.0629) : injectionSwitch.y, (false ? _GLF_FUZZED(5508.0629) : injectionSwitch.y) / 1.0), false ? _GLF_FUZZED(5508.0629) : injectionSwitch.y)))) : _GLF_FUZZED(2.7)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, mix(float(_GLF_FUZZED(25.83)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, mix(float(_GLF_FUZZED(25.83)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))))), true, false))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, mix(float(_GLF_FUZZED(25.83)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(25.83)), clamp(float(_GLF_FUZZED(25.83)), float(_GLF_FUZZED(25.83)), float(_GLF_FUZZED(25.83)))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((30.01 / -5.4))), bvec2(true, false))).y))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, mix(float(_GLF_FUZZED(25.83)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))))))))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, mix(float(_GLF_FUZZED(25.83)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, mix(float(_GLF_FUZZED(25.83)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true, false))), true))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size.y = _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u)) - 0u);
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_17._f4._f2.workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size.y, (true ? GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size.y : _GLF_FUZZED(min(workgroup_id, workgroup_id)))), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_17._f4._f2.workgroup_base, (_GLF_struct_replacement_17._f4._f2.workgroup_base) - 0u) + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size, (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size) >> uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size, clamp(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size, GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size, GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size))) >> uvec4(0u, 0u, 0u, 0u)).y : _GLF_FUZZED(min(workgroup_id, workgroup_id))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_17._f4._f2.workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size.y, (true ? GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size.y : _GLF_IDENTITY(_GLF_FUZZED(min(workgroup_id, workgroup_id)), min(_GLF_FUZZED(min(workgroup_id, workgroup_id)), _GLF_IDENTITY(_GLF_FUZZED(min(workgroup_id, workgroup_id)), 0u ^ (_GLF_FUZZED(min(workgroup_id, workgroup_id)))))))), (_GLF_struct_replacement_17._f4._f2.workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size.y, (true ? GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size.y : _GLF_IDENTITY(_GLF_FUZZED(min(workgroup_id, workgroup_id)), min(_GLF_FUZZED(min(workgroup_id, workgroup_id)), _GLF_IDENTITY(_GLF_FUZZED(min(workgroup_id, workgroup_id)), 0u ^ (_GLF_FUZZED(min(workgroup_id, workgroup_id))))))))) * 1u), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_17._f4._f2.workgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_17._f4._f2.workgroup_base), max(_GLF_IDENTITY((_GLF_struct_replacement_17._f4._f2.workgroup_base), 1u * ((_GLF_struct_replacement_17._f4._f2.workgroup_base))), (_GLF_struct_replacement_17._f4._f2.workgroup_base))) - 0u) + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size, clamp(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size, GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size, GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size))) >> uvec4(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))) | (0u)), 0u)), (true ? _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size, clamp(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size, GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size, GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size))) >> uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), uint(_GLF_IDENTITY(uvec3(clamp(0u, 0u, 0u), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u), uvec3(uvec3(uvec3(clamp(0u, 0u, 0u), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u)))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)), 0u, 0u, 0u)) : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size))).y : _GLF_FUZZED(min(workgroup_id, workgroup_id)))))))) * 1u) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size.z, _GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size.z), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size.z), clamp(0u + (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size.z), 0u + (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size.z), 0u + (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size.z))) : _GLF_FUZZED(workgroup_size)))), 0u + (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size.z, 0u + (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size.z)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size, uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size, (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size) | (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size)))), (GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size) - uvec4(0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 0u)), 0u, 0u)).z));
 uint next_virtual_gid = _GLF_struct_replacement_17._f4._f2.workgroup_base + GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size.y + ((GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size.z + 1) % GLF_merged4_0_1_13_1_1_13_2_1_17_3_1_13num_workgroupsubgroup_basesubgroup_local_idsubgroup_size.w);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (4) >> 0));
 if(_GLF_DEAD(false))
  barrier();
 uint read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), clamp(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, 0 + _GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), ((_GLF_IDENTITY(64, (64) >> 0))) | ((_GLF_IDENTITY(64, (64) >> 0))))), _GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(39379)))), atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), virtual_gid))))], (true ? buf[virtual_gid] : _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), clamp(_GLF_FUZZED(virtual_gid), _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), 0u | (_GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), clamp(_GLF_FUZZED(virtual_gid), _GLF_FUZZED(virtual_gid), _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), 0u ^ (_GLF_FUZZED(virtual_gid)))))))))))) | 0u), 4, _GLF_IDENTITY(64, 1 * (_GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, (64) << 0))))), 2)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
  return;
 subgroupBarrier();
 atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), (false ? _GLF_FUZZED(read) : _GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))))) ^ 0u)], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-557.191)), vec2(_GLF_FUZZED(63.81), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1]), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / 1.0) < injectionSwitch.y)))), (true ? _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-557.191)), vec2(_GLF_FUZZED(63.81), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1]), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / 1.0) < injectionSwitch.y)))), vec2(mat4x2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-557.191)), vec2(_GLF_FUZZED(63.81), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1]), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / 1.0) < injectionSwitch.y)))), 0.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(1.0)))))) : _GLF_FUZZED(injectionSwitch)))).y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
