#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(-6.4)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 1.0, 0.0), (mat4(injectionSwitch, 0.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 1.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, true))) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 1.0))), injectionSwitch)).y)))))), (bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-4845.1453))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.6))), 0.0, 0.0))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))))) || false))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 1.0))), injectionSwitch)).y)))))), (bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-4845.1453))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.6))), 0.0, 0.0))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))))) || false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))) || false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, true, true), true)))))))))))), true, true)))) && true)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)) && true)))))), false))), true)))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y))))), false))), _GLF_IDENTITY(true, ! (! (true))))))))), (bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED((-5453.1772))), bool(false))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))))).y)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(986.042), _GLF_FUZZED(vec3(5.4, 1564.3114, -678.725).p)), bvec2(false, false))).y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))), true))))))) && true))), true, true)))) && true)) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))))), (injectionSwitch.x > injectionSwitch.y)), false), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))))))))))))), true, true)))) && true)) && true), true && (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, false, true)))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))).y, (injectionSwitch.x < injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (true)))))))), true && (bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))))) || false))), _GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) : _GLF_FUZZED(mat2(-4.4, 4528.3055, 525.368, _GLF_IDENTITY(3.6, (true ? 3.6 : _GLF_FUZZED(-8.2)))))))))), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).y))))))), true, true)))) && true)) && true)))))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.0) : injectionSwitch.x))) / 1.0), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.0) : injectionSwitch.x))), mix(float((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.0) : injectionSwitch.x)))), float(_GLF_FUZZED(float(-73900))), bool(false))) / 1.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) * 1.0))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), false || ((! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(382.366) : injectionSwitch.y)))))), false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(fma(vec2(7.8), injectionSwitch, injectionSwitch)))).x < injectionSwitch.y))))))), true, true)))) && true)) && true)) || false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.9)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, tan(0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0), (mat4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, 0.0, 1.0, abs(1.0), cos(0.0), abs(0.0), 1.0, 1.0, round(length(normalize(1.0))), length(vec3(0.0, 0.0, 0.0)), 1.0, tan(0.0), 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), max(_GLF_IDENTITY(float(mat4(1.0, 1.0, 0.0, 1.0, abs(1.0), cos(0.0), abs(0.0), 1.0, 1.0, round(length(normalize(1.0))), length(vec3(0.0, 0.0, 0.0)), 1.0, tan(0.0), 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0, 1.0)), 0.0)), (false ? _GLF_FUZZED(-2.4) : float(mat4(1.0, 1.0, 0.0, 1.0, abs(1.0), cos(0.0), abs(0.0), 1.0, 1.0, round(length(normalize(1.0))), length(vec3(0.0, 0.0, 0.0)), 1.0, tan(0.0), 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)))), _GLF_IDENTITY(float(mat4(1.0, 1.0, 0.0, 1.0, abs(1.0), cos(0.0), abs(0.0), 1.0, 1.0, round(length(normalize(1.0))), length(vec3(0.0, 0.0, 0.0)), 1.0, tan(0.0), 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), float(mat2(float(mat4(1.0, 1.0, 0.0, 1.0, abs(1.0), cos(0.0), abs(0.0), 1.0, 1.0, round(length(normalize(1.0))), length(vec3(0.0, 0.0, 0.0)), 1.0, tan(0.0), 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), 1.0, 0.0, 1.0)))))), 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)) * (1.0))))), 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(75.14)))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true, true))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, (((injectionSwitch.x > injectionSwitch.y)) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), (injectionSwitch) * abs(vec2(1.0, 1.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(847.803), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(375.157)), bvec2(true, false))))).y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)))), min(float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.y = num_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-2122.0303)))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x) / 1.0) > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (false) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.w = subgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))), min(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))))))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base) / ((_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, 1u))))), ((_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, 1u)))))) >> uvec2(0u, 0u)) << uvec2(0u, 0u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u), ~ (~ (uvec2(1u, 1u))))), ((_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, 1u)))))) >> uvec2(0u, 0u)) << uvec2(0u, 0u))), ~ _GLF_IDENTITY((~ (uint(_GLF_IDENTITY(uvec2(1u, 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, 1u))))), ((_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, 1u)))))) >> uvec2(0u, 0u)) << uvec2(0u, 0u))))), 0u ^ ((~ (uint(_GLF_IDENTITY(uvec2(1u, 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, 1u))))), ((_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, 1u)))))) >> uvec2(0u, 0u)) << uvec2(0u, 0u)))))))) : _GLF_FUZZED(num_workgroup)))), 1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u)), (uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 1u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, _GLF_IDENTITY(1u, max(1u, 1u)))))), uvec2(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, _GLF_IDENTITY(1u, max(1u, 1u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, _GLF_IDENTITY(1u, max(1u, 1u)))))), max(_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, _GLF_IDENTITY(1u, max(1u, 1u)))))), _GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, _GLF_IDENTITY(1u, max(1u, 1u)))))))), _GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, _GLF_IDENTITY(1u, max(1u, 1u)))))))), 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_base))))))), ((_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, 1u)))))) >> uvec2(0u, 0u)) << uvec2(0u, 0u))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(fract(-8.9)))))) ? _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, 1u))))), _GLF_IDENTITY(((_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, 1u)))))) >> uvec2(0u, 0u), (((_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, 1u)))))) >> uvec2(0u, 0u)) ^ uvec2(0u, 0u))) << uvec2(0u, 0u)), max(_GLF_IDENTITY(uvec2(1u, 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, 1u))))), _GLF_IDENTITY(((_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, 1u)))))) >> uvec2(0u, 0u), (((_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, 1u)))))) >> uvec2(0u, 0u)) ^ uvec2(0u, 0u))) << uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(1u, 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, 1u))))), _GLF_IDENTITY(((_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, 1u)))))) >> uvec2(0u, 0u), (((_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, 1u)))))) >> uvec2(0u, 0u)) ^ uvec2(0u, 0u))) << uvec2(0u, 0u))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(1u, 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, 1u))))), ((_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, 1u)))))) >> uvec2(0u, 0u)) << uvec2(0u, 0u)))))) : _GLF_FUZZED(num_workgroup)))), 1u, 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(4u), max(uvec4(4u), uvec4(4u))), uvec4(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(4u), max(uvec4(4u), uvec4(4u))), uvec4(4u))) - uvec4(0u, 0u, 0u, 0u))) >> _GLF_IDENTITY(uvec4(4u), uvec4(4u)))), uvec4(0u, 0u, 0u, 0u) ^ _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base), ((GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base)) | uvec4(0u, 0u, 0u, 0u))).w + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), true, false, false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(219.396), _GLF_FUZZED(9.5)), bvec2(false, false))).x, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(219.396), _GLF_FUZZED(9.5)), bvec2(false, false))).x), float(_GLF_FUZZED(-1106.3263)), bool(false))) > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true, false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat2(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))))))))).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! ((false)))))) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(true && (! ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (! ((false))), bool(bool(true && (! ((false))))))), ! (! (! (_GLF_IDENTITY(true && (! ((false))), bool(bool(true && (_GLF_IDENTITY(! ((false)), false || (! ((false))))))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (! ((false))), bool(bool(true && (! ((false))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) && (! ((false))), bool(bool(true && (! ((false)))))))))))))))))), ! (! ((false)))) || false)) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(337.066), _GLF_FUZZED(vec2(93.00, 4712.3833).t)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((- 417.411)), _GLF_FUZZED(_GLF_IDENTITY(float(-65196), (float(-65196)) * 1.0))), bvec2(false, false))).x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint next_virtual_gid = workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.w + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3220.2723), _GLF_FUZZED(5.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)) ? 1 : _GLF_FUZZED(-91932)))) | 0), 0), (ivec2(1, 0)) * ivec2(1, 1)), clamp(ivec2(1, 0), ivec2(1, 0), _GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) * ivec2(1, 1)))))), (0 ^ 0) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3220.2723), _GLF_FUZZED(5.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)) ? 1 : _GLF_FUZZED(-91932)))) | 0), 0), (ivec2(1, 0)) * ivec2(1, 1)), clamp(ivec2(1, 0), ivec2(1, 0), _GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) * ivec2(1, 1))))))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size))) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(_GLF_IDENTITY((mat4(-7900.4673, -3629.0815, -640.302, 77.41, -717.404, 84.22, 7.7, 2.6, -9.1, -125.204, -6.4, -363.553, 0.4, -9.0, -1382.1613, 592.024) , workgroup_size), min(_GLF_IDENTITY((mat4(-7900.4673, -3629.0815, -640.302, 77.41, -717.404, 84.22, 7.7, 2.6, -9.1, -125.204, -6.4, -363.553, 0.4, -9.0, -1382.1613, 592.024) , workgroup_size), ~ (~ ((mat4(-7900.4673, -3629.0815, -640.302, 77.41, -717.404, 84.22, 7.7, 2.6, -9.1, -125.204, -6.4, -363.553, 0.4, -9.0, -1382.1613, 592.024) , workgroup_size)))), (mat4(-7900.4673, -3629.0815, -640.302, 77.41, -717.404, 84.22, 7.7, 2.6, -9.1, -125.204, -6.4, -363.553, 0.4, -9.0, -1382.1613, 592.024) , workgroup_size))))))));
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.x = _GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(num_workgroup) : next_virtual_gid));
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base, clamp(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base, GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base, (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base) | (GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base)))).x], uint(1), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY((64), ~ (_GLF_IDENTITY(~ ((64)), (~ ((64))) << (0 | 0)))) | (64))) ^ 0), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(764.934)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(48.97)))), bool(true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) && true))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0)) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0)) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(1.0)).y)))))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 1.0), mat4x3(mat4(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0, 1.0)))))) : _GLF_FUZZED(vec2(-57.16, -49.70)))).x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (0u | 0u))], 4, 64, 2);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.z = read;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) - 0.0)) / 1.0), _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 0.0 + (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), max(min(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 0.0 + (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 0.0 + (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bool(! (_GLF_IDENTITY(false, (false) || false)))))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false), ! (_GLF_IDENTITY(! ((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false)), (! ((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false))) || false))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false), ! (_GLF_IDENTITY(! ((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false)), (! ((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false))) || false))), ! (! (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false), ! (_GLF_IDENTITY(! ((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false)), (! ((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false))) || false))))))))) && true), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))), bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false)))))))))) && true))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec3(true && (false), false, true), bvec3(bvec4(bvec3(true && (false), false, true), true))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(checker[virtual_gid], GLF_merged4_0_1_16_1_1_13_2_1_4_3_1_13next_virtual_gidnum_workgroupreadsubgroup_base.z, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | (4)), 4)), 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
}
