#version 460
struct _GLF_struct_18 {
 mat3x2 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_17 {
 vec3 _f0;
 ivec4 _f1;
 bvec3 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_16 {
 mat3x2 _f0;
 uvec4 _f1;
 ivec2 _f2;
 float _f3;
 bool _f4;
 bool _f5;
 vec4 _f6;
} ;

struct _GLF_struct_15 {
 mat3x2 _f0;
 vec4 _f1;
 mat4x3 _f2;
 mat3x4 _f3;
 mat3 _f4;
 uvec4 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_19 {
 _GLF_struct_15 _f0;
 vec2 _f1;
 _GLF_struct_16 _f2;
 mat3 _f3;
 _GLF_struct_17 _f4;
 _GLF_struct_18 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_13 {
 uint _f0;
 uint _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_12 {
 vec2 _f0;
 uvec2 _f1;
 vec4 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_11 {
 bvec4 _f0;
} ;

struct _GLF_struct_14 {
 _GLF_struct_11 _f0;
 uint next_virtual_gid;
 int _f1;
 _GLF_struct_12 _f2;
 _GLF_struct_13 _f3;
} ;

struct _GLF_struct_9 {
 mat2x4 _f0;
 mat4 _f1;
 vec2 _f2;
 uvec4 _f3;
 mat3x4 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_8 {
 mat2x3 _f0;
 bvec4 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_10 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
} ;

struct _GLF_struct_20 {
 _GLF_struct_10 _f0;
 uvec3 _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_19 _f3;
} ;

struct _GLF_struct_5 {
 bvec2 _f0;
} ;

struct _GLF_struct_4 {
 uint workgroup_size;
 mat2 _f0;
 ivec3 _f1;
 mat3 _f2;
 uint _f3;
} ;

struct _GLF_struct_6 {
 bool _f0;
 _GLF_struct_4 _f1;
 mat2x3 _f2;
 _GLF_struct_5 _f3;
 bvec4 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_7 {
 vec4 _f0;
 _GLF_struct_6 _f1;
 mat2x4 _f2;
 bvec4 _f3;
 mat2x4 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_3 {
 uint virtual_gid;
 mat3x2 _f0;
} ;

struct _GLF_struct_0 {
 mat4 _f0;
 float _f1;
 ivec3 _f2;
 mat4x2 _f3;
 ivec3 _f4;
 mat3 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 mat4 _f1;
 uint subgroup_local_id;
 vec4 _f2;
 mat4x2 _f3;
 bool _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(_GLF_struct_0(mat4(1.0), 1.0, ivec3(1), mat4x2(1.0), ivec3(1), mat3(1.0), bvec3(true)), uvec3(1u)), mat4(1.0), gl_SubgroupInvocationID, vec4(1.0), mat4x2(1.0), true);
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(vec4(1.0), _GLF_struct_6(true, _GLF_struct_4(gl_WorkGroupSize.x, mat2(1.0), ivec3(1), mat3(1.0), 1u), mat2x3(1.0), _GLF_struct_5(bvec2(true)), bvec4(true), vec3(1.0)), mat2x4(1.0), bvec4(true), mat2x4(1.0), uvec4(1u));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_struct_replacement_7._f1._f1.workgroup_size * workgroup_id;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_2.subgroup_local_id, mat3x2(1.0));
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(_GLF_struct_10(_GLF_struct_8(mat2x3(1.0), bvec4(true), mat4x2(1.0)), _GLF_struct_9(mat2x4(1.0), mat4(1.0), vec2(1.0), uvec4(1u), mat3x4(1.0), bvec3(true))), uvec3(1u), _GLF_struct_14(_GLF_struct_11(bvec4(true)), workgroup_base + subgroup_id * subgroup_size + ((_GLF_struct_replacement_2.subgroup_local_id + 1) % subgroup_size), 1, _GLF_struct_12(vec2(1.0), uvec2(1u), vec4(1.0), bvec2(true)), _GLF_struct_13(1u, 1u, uvec4(1u))), _GLF_struct_19(_GLF_struct_15(mat3x2(1.0), vec4(1.0), mat4x3(1.0), mat3x4(1.0), mat3(1.0), uvec4(1u), mat4x3(1.0)), vec2(1.0), _GLF_struct_16(mat3x2(1.0), uvec4(1u), ivec2(1), 1.0, true, true, vec4(1.0)), mat3(1.0), _GLF_struct_17(vec3(1.0), ivec4(1), bvec3(true), bvec3(true)), _GLF_struct_18(mat3x2(1.0), mat2x3(1.0)), vec2(1.0)));
 atomicStore(buf[_GLF_struct_replacement_20._f2.next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[_GLF_struct_replacement_3.virtual_gid], 4, 64, 0);
 atomicStore(checker[_GLF_struct_replacement_3.virtual_gid], read, 4, 64, 4);
}
