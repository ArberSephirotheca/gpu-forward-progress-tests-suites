#version 460
struct _GLF_struct_22 {
 vec4 _f0;
 uint virtual_gid;
} ;

struct _GLF_struct_19 {
 uvec4 _f0;
 mat4x2 _f1;
 uint workgroup_base;
} ;

struct _GLF_struct_18 {
 mat4 _f0;
 mat2x4 _f1;
 bool _f2;
 ivec3 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_20 {
 _GLF_struct_18 _f0;
 mat3x4 _f1;
 _GLF_struct_19 _f2;
} ;

struct _GLF_struct_21 {
 _GLF_struct_20 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_17 {
 ivec4 _f0;
 uint workgroup_id;
} ;

struct _GLF_struct_14 {
 mat2x3 _f0;
 mat2x3 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_13 {
 uint num_workgroup;
 vec2 _f0;
 ivec2 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_12 {
 mat2x4 _f0;
 bvec3 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_15 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
 _GLF_struct_14 _f2;
} ;

struct _GLF_struct_16 {
 _GLF_struct_15 _f0;
} ;

struct _GLF_struct_9 {
 uvec4 _f0;
} ;

struct _GLF_struct_10 {
 _GLF_struct_9 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_7 {
 vec2 _f0;
 mat4 _f1;
 bvec3 _f2;
 bvec4 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_6 {
 bvec2 _f0;
 mat3x4 _f1;
 vec4 _f2;
 ivec3 _f3;
 uvec3 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_8 {
 mat4x2 _f0;
 mat2 _f1;
 _GLF_struct_6 _f2;
 vec3 _f3;
 uvec2 _f4;
 _GLF_struct_7 _f5;
} ;

struct _GLF_struct_4 {
 bvec3 _f0;
 mat2x4 _f1;
 bool _f2;
 bvec3 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_5 {
 uvec4 _f0;
 _GLF_struct_4 _f1;
 int _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
 vec3 _f1;
 bvec2 _f2;
 mat3x2 _f3;
 bvec2 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 uvec4 _f1;
 float _f2;
 float _f3;
 vec3 _f4;
 bvec2 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 int _f3;
 _GLF_struct_2 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_11 {
 _GLF_struct_3 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_10 _f3;
 uint subgroup_size;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_3(mat4(1.0), _GLF_struct_0(mat2x3(1.0), uvec4(1u), 1.0, 1.0, vec3(1.0), bvec2(true), mat4x3(1.0)), _GLF_struct_1(mat2x4(1.0), vec3(1.0), bvec2(true), mat3x2(1.0), bvec2(true), ivec2(1)), 1, _GLF_struct_2(ivec4(1)), uvec2(1u)), _GLF_struct_5(uvec4(1u), _GLF_struct_4(bvec3(true), mat2x4(1.0), true, bvec3(true), bvec3(true)), 1, ivec4(1)), _GLF_struct_8(mat4x2(1.0), mat2(1.0), _GLF_struct_6(bvec2(true), mat3x4(1.0), vec4(1.0), ivec3(1), uvec3(1u), mat2(1.0)), vec3(1.0), uvec2(1u), _GLF_struct_7(vec2(1.0), mat4(1.0), bvec3(true), bvec4(true), ivec4(1))), _GLF_struct_10(_GLF_struct_9(uvec4(1u)), vec4(1.0)), gl_SubgroupSize);
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_15(_GLF_struct_12(mat2x4(1.0), bvec3(true), mat4x2(1.0)), _GLF_struct_13(gl_NumWorkGroups.x, vec2(1.0), ivec2(1), ivec3(1)), _GLF_struct_14(mat2x3(1.0), mat2x3(1.0), bvec4(true))));
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(ivec4(1), gl_WorkGroupID.x);
 _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(_GLF_struct_20(_GLF_struct_18(mat4(1.0), mat2x4(1.0), true, ivec3(1), mat3x4(1.0)), mat3x4(1.0), _GLF_struct_19(uvec4(1u), mat4x2(1.0), workgroup_size * _GLF_struct_replacement_17.workgroup_id)), vec2(1.0));
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(vec4(1.0), _GLF_struct_replacement_21._f0._f2.workgroup_base + subgroup_id * _GLF_struct_replacement_11.subgroup_size + subgroup_local_id);
 uint next_virtual_gid = _GLF_struct_replacement_21._f0._f2.workgroup_base + subgroup_id * _GLF_struct_replacement_11.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_11.subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[_GLF_struct_replacement_22.virtual_gid], 4, 64, 0);
 atomicStore(checker[_GLF_struct_replacement_22.virtual_gid], read, 4, 64, 4);
}
