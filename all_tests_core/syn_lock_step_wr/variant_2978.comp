#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(70.97)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - 0.0)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec2(bool(bool(_GLF_DEAD(false))), false)))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(357.177)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), bool(true))), injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))) || false)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(55.83)), bool(false))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || (bool(false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.2)), bool(false))) : _GLF_FUZZED(acosh(43.85))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.2)), bool(false))) : _GLF_FUZZED(acosh(43.85)))))))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), float(_GLF_FUZZED(-8.8)), bool(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7.3) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7.3) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7.3) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), false, true)))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && true))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) || false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))))))), bvec3(bvec4(bvec3(false, true, false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9.2)), float(injectionSwitch.y), bool(true)))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true)))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true)))), false)))), true)))))), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))) && true)))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.3)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))), injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((false ? 0.3 : 1.4))), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)) : _GLF_FUZZED(7.2)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7110.7947)), float(injectionSwitch.y), bool(true)))) && true, ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7110.7947)), float(injectionSwitch.y), bool(true)))) && true) && true), false || ((injectionSwitch.x > injectionSwitch.y) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3842.3491) : injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bool(bool(bvec4(false, false, false, false))))))))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), workgroup_id));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) && true, _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, false || (false))) && true, true, true)), false || (bool(bvec3((_GLF_IDENTITY(false, false || (false))) && true, true, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, ! (! (false))), false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), false || (! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true), (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) && true)) && true))), false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), max(uint(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), uint(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))))) + subgroup_local_id, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)) + subgroup_local_id) * 1u), ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), min(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))) * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), min(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size))))), ~ (subgroup_id * subgroup_size))))))), min(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size, ~ (~ (false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id * subgroup_size)))))), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) | 0u, ((subgroup_id * subgroup_size) | 0u) | ((subgroup_id * subgroup_size) | 0u)))), min(~ (subgroup_id * subgroup_size), ~ (subgroup_id * subgroup_size))))))), min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << 0u)) + 0u) + subgroup_local_id)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.1), _GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], min(_GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], float(mat3x4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), mix(vec2(((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[0], _GLF_FUZZED(-4021.0519)), vec2(_GLF_FUZZED(-1.0), ((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[1]), bvec2(false, true)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(8.4)), float(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], float(mat3x4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), mix(vec2(((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[0], _GLF_FUZZED(-4021.0519)), vec2(_GLF_FUZZED(-1.0), ((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[1]), bvec2(false, true)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1]))), vec2(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(1.0, 1.0) * ((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))[0], _GLF_FUZZED((452.622))), bvec2(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true ? mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.1), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), clamp(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(mat4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), (false ? _GLF_FUZZED(vec2(-233.353, -81.27)) : vec2(vec4(injectionSwitch, cos(0.0), 1.0))))), (false ? _GLF_FUZZED(vec2(-2.9, 7.7)) : (_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), (false ? _GLF_FUZZED(vec2(-233.353, -81.27)) : vec2(vec4(injectionSwitch, cos(0.0), 1.0))))))), 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))[1], min(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.6) : _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(3570.3826, (false ? _GLF_FUZZED(-6.8) : 3570.3826))))))))))[1], float(mat3x4((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1]))), max(vec2(_GLF_FUZZED(-7.1), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), clamp(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(mat4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(mat3x2((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, sqrt(sqrt(1.0)), 0.0, 1.0, 0.0))), injectionSwitch.y), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))[1], min(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.6) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3570.3826))))))))[1], float(mat3x4((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1]))), vec2(_GLF_FUZZED(-7.1), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), clamp(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), ((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))) / vec2(1.0, 1.0)), vec2(mat3x2((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))[1], min(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.6) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3570.3826))))))))[1], float(mat3x4((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1]))))), vec2((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[0], _GLF_FUZZED((452.622))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) : _GLF_FUZZED(max(vec2(-1903.4667, -5749.6900), 8.0))))), (_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.1), _GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 0 ^ (1))))], min(_GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], float(mat3x4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), mix(vec2(((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[0], _GLF_FUZZED(-4021.0519)), vec2(_GLF_FUZZED(-1.0), ((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[1]), bvec2(false, true)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(8.4)), float(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], float(mat3x4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), mix(vec2(((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[0], _GLF_FUZZED(-4021.0519)), vec2(_GLF_FUZZED(-1.0), ((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[1]), bvec2(false, true)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(8.4)), float(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], float(mat3x4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), mix(vec2(((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[0], _GLF_FUZZED(-4021.0519)), vec2(_GLF_FUZZED(-1.0), ((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[1]), bvec2(false, true)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true)), (mix(float(_GLF_FUZZED(8.4)), float(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], float(mat3x4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), mix(vec2(((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[0], _GLF_FUZZED(-4021.0519)), vec2(_GLF_FUZZED(-1.0), ((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[1]), bvec2(false, true)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true))) - 0.0), _GLF_IDENTITY(mix(float(_GLF_FUZZED(8.4)), float(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], float(mat3x4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), mix(vec2(((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[0], _GLF_FUZZED(-4021.0519)), vec2(_GLF_FUZZED(-1.0), ((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[1]), bvec2(false, true)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true)), sqrt(1.0) * (mix(float(_GLF_FUZZED(8.4)), float(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], float(mat3x4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), mix(vec2(((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[0], _GLF_FUZZED(-4021.0519)), vec2(_GLF_FUZZED(-1.0), ((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[1]), bvec2(false, true)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true)))), mix(float(_GLF_FUZZED(8.4)), float(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], float(mat3x4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), mix(vec2(((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[0], _GLF_FUZZED(-4021.0519)), vec2(_GLF_FUZZED(-1.0), ((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[1]), bvec2(false, true)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true))))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1]))), vec2(_GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(1.0, 1.0) * ((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))[0], (_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(1.0, 1.0) * ((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))[0]) - 0.0), _GLF_FUZZED((452.622))), bvec2(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true ? mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.1), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), clamp(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(mat4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-233.353, _GLF_IDENTITY(-81.27, (_GLF_IDENTITY(-81.27, _GLF_IDENTITY(float(mat3x4(-81.27, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)), (float(mat3x4(-81.27, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))) + 0.0))) / 1.0))) : vec2(vec4(injectionSwitch, cos(0.0), 1.0)), (true ? false ? _GLF_FUZZED(vec2(-233.353, _GLF_IDENTITY(-81.27, (_GLF_IDENTITY(-81.27, _GLF_IDENTITY(float(mat3x4(-81.27, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)), (float(mat3x4(-81.27, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))) + 0.0))) / 1.0))) : vec2(vec4(injectionSwitch, cos(0.0), 1.0)) : _GLF_FUZZED(unpackSnorm2x16(workgroup_id))))))), (false ? _GLF_FUZZED(vec2(-2.9, 7.7)) : (_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), (false ? _GLF_FUZZED(vec2(-233.353, -81.27)) : vec2(vec4(injectionSwitch, cos(0.0), 1.0))))))), 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))[1], min(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.6) : _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(3570.3826, (false ? _GLF_FUZZED(-6.8) : 3570.3826))), clamp(_GLF_FUZZED(_GLF_IDENTITY(3570.3826, (false ? _GLF_FUZZED(-6.8) : 3570.3826))), _GLF_FUZZED(_GLF_IDENTITY(3570.3826, (false ? _GLF_FUZZED(-6.8) : 3570.3826))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(3570.3826, (false ? _GLF_FUZZED(-6.8) : 3570.3826))), (_GLF_FUZZED(_GLF_IDENTITY(3570.3826, (false ? _GLF_FUZZED(-6.8) : 3570.3826)))) - 0.0))))))))))[1], float(mat3x4((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1]))), max(vec2(_GLF_FUZZED(-7.1), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), clamp(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 1.0))), vec2(mat4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(mat3x2((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, sqrt(sqrt(1.0)), 0.0, 1.0, 0.0))), injectionSwitch.y), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))[1], min(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.6) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3570.3826))))))))[1], float(mat3x4((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, cos(0.0), 1.0), max(vec4(injectionSwitch, cos(0.0), 1.0), vec4(injectionSwitch, cos(0.0), 1.0)))))[1]))), vec2(_GLF_FUZZED(-7.1), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), clamp(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), ((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))) / vec2(1.0, 1.0)), vec2(mat3x2((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(dot(injectionSwitch, injectionSwitch)))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))[1], min(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.6) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3570.3826))))))))[1], float(mat3x4((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1]))))), vec2((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[0], _GLF_FUZZED((452.622))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) : _GLF_FUZZED(max(vec2(-1903.4667, -5749.6900), 8.0)))))) + vec2(0.0, 0.0))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.1), _GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], min(_GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], float(mat3x4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), mix(vec2(((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[0], _GLF_FUZZED(-4021.0519)), vec2(_GLF_FUZZED(-1.0), ((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[1]), bvec2(false, true)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(8.4)), float(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], float(mat3x4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), mix(vec2(((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[0], _GLF_FUZZED(-4021.0519)), vec2(_GLF_FUZZED(-1.0), ((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[1]), bvec2(false, true)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1]))), vec2(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(1.0, 1.0) * ((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))[0], _GLF_FUZZED((452.622))), bvec2(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true ? mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.1), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), clamp(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(mat4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), (false ? _GLF_FUZZED(vec2(-233.353, -81.27)) : vec2(vec4(injectionSwitch, cos(0.0), 1.0))))), (false ? _GLF_FUZZED(vec2(-2.9, 7.7)) : (_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), (false ? _GLF_FUZZED(vec2(-233.353, -81.27)) : vec2(vec4(injectionSwitch, cos(0.0), 1.0))))))), 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))[1], min(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.6) : _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(3570.3826, (false ? _GLF_FUZZED(-6.8) : 3570.3826))))))))))[1], float(mat3x4((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1]))), max(vec2(_GLF_FUZZED(-7.1), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), clamp(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(mat4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(mat3x2((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, sqrt(sqrt(1.0)), 0.0, 1.0, 0.0))), injectionSwitch.y), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))[1], min(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.6) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3570.3826))))))))[1], float(mat3x4((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1]))), vec2(_GLF_FUZZED(-7.1), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), clamp(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), ((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))) / vec2(1.0, 1.0)), vec2(mat3x2((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))[1], min(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.6) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3570.3826))))))))[1], float(mat3x4((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1]))))), vec2((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[0], _GLF_FUZZED((452.622))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) : _GLF_FUZZED(max(vec2(-1903.4667, -5749.6900), 8.0))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.1), _GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], min(_GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], float(mat3x4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), mix(vec2(((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[0], _GLF_FUZZED(-4021.0519)), vec2(_GLF_FUZZED(-1.0), ((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[1]), bvec2(false, true)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(8.4)), float(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], float(mat3x4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), mix(vec2(((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[0], _GLF_FUZZED(-4021.0519)), vec2(_GLF_FUZZED(-1.0), ((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[1]), bvec2(false, true)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4967.6784) : _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-833.425)), bool(false))))), 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1]))), vec2(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(1.0, 1.0) * ((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))[0], _GLF_FUZZED((452.622))), _GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)) || false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)) || false))), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)) || false))), false, false))), _GLF_IDENTITY(true, ! (! (true))))))), (true ? mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.1), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), clamp(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(mat4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), (false ? _GLF_FUZZED(vec2(-233.353, -81.27)) : vec2(vec4(injectionSwitch, cos(0.0), 1.0))))), (false ? _GLF_FUZZED(vec2(-2.9, 7.7)) : _GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), (false ? _GLF_FUZZED(vec2(-233.353, -81.27)) : vec2(vec4(injectionSwitch, cos(0.0), 1.0))))), ((_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), (false ? _GLF_FUZZED(vec2(-233.353, -81.27)) : vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))) / vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0)), max(_GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), (false ? _GLF_FUZZED(vec2(-233.353, -81.27)) : vec2(vec4(injectionSwitch, cos(0.0), 1.0))))), (false ? _GLF_FUZZED(vec2(-2.9, 7.7)) : _GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), (false ? _GLF_FUZZED(vec2(-233.353, -81.27)) : vec2(vec4(injectionSwitch, cos(0.0), 1.0))))), ((_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), (false ? _GLF_FUZZED(vec2(-233.353, -81.27)) : vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))) / vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), (false ? _GLF_FUZZED(vec2(-233.353, -81.27)) : vec2(vec4(injectionSwitch, cos(0.0), 1.0))))), (false ? _GLF_FUZZED(vec2(-2.9, 7.7)) : _GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), (false ? _GLF_FUZZED(vec2(-233.353, -81.27)) : vec2(vec4(injectionSwitch, cos(0.0), 1.0))))), ((_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), (false ? _GLF_FUZZED(vec2(-233.353, -81.27)) : vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))) / vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0)), (vec2(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), (false ? _GLF_FUZZED(vec2(-233.353, -81.27)) : vec2(vec4(injectionSwitch, cos(0.0), 1.0))))), (false ? _GLF_FUZZED(vec2(-2.9, 7.7)) : _GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), (false ? _GLF_FUZZED(vec2(-233.353, -81.27)) : vec2(vec4(injectionSwitch, cos(0.0), 1.0))))), ((_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), (false ? _GLF_FUZZED(vec2(-233.353, -81.27)) : vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))) / vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0))) - vec2(0.0, 0.0)))), vec2(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), (false ? _GLF_FUZZED(vec2(-233.353, -81.27)) : vec2(vec4(injectionSwitch, cos(0.0), 1.0))))), (false ? _GLF_FUZZED(vec2(-2.9, 7.7)) : _GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), (false ? _GLF_FUZZED(vec2(-233.353, -81.27)) : vec2(vec4(injectionSwitch, cos(0.0), 1.0))))), ((_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), (false ? _GLF_FUZZED(vec2(-233.353, -81.27)) : vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))) / vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))[1], min(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.6) : _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(3570.3826, (false ? _GLF_FUZZED(-6.8) : 3570.3826))))))))))[1], float(mat3x4((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1]))), _GLF_IDENTITY(max(vec2(_GLF_FUZZED(-7.1), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), clamp(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(mat4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(mat3x2((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, sqrt(sqrt(1.0)), 0.0, 1.0, 0.0))), injectionSwitch.y), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))[1], min(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.6) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3570.3826))))))))[1], float(mat3x4((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1]))), vec2(_GLF_FUZZED(-7.1), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), clamp(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), ((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))) / vec2(1.0, 1.0)), vec2(mat3x2((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))[1], min(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.6) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3570.3826))))))))[1], float(mat3x4((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1])))), max(max(vec2(_GLF_FUZZED(-7.1), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), clamp(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(mat4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(mat3x2((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, sqrt(sqrt(1.0)), 0.0, 1.0, 0.0))), injectionSwitch.y), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))[1], min(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.6) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3570.3826))))))))[1], float(mat3x4((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1]))), vec2(_GLF_FUZZED(-7.1), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), clamp(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), ((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))) / vec2(1.0, 1.0)), vec2(mat3x2((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))[1], min(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.6) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3570.3826))))))))[1], float(mat3x4((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1])))), max(vec2(_GLF_FUZZED(-7.1), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), clamp(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(mat4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(mat3x2((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, sqrt(sqrt(1.0)), 0.0, 1.0, 0.0))), injectionSwitch.y), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))[1], min(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.6) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3570.3826))))))))[1], float(mat3x4((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1]))), vec2(_GLF_FUZZED(-7.1), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), clamp(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), ((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))) / vec2(1.0, 1.0)), vec2(mat3x2((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))[1], min(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.6) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3570.3826))))))))[1], float(mat3x4((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1]))))))), vec2((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[0], _GLF_FUZZED((452.622))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) : _GLF_FUZZED(max(vec2(-1903.4667, -5749.6900), 8.0))))))), (_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.1), _GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 0 ^ (1))))], min(_GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], float(mat3x4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), mix(vec2(((_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), vec2(vec3(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), 0.0)))))[0], _GLF_FUZZED(-4021.0519)), vec2(_GLF_FUZZED(-1.0), ((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[1]), bvec2(false, true)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(8.4)), float(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], float(mat3x4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), _GLF_IDENTITY(mix(vec2(((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[0], _GLF_FUZZED(-4021.0519)), vec2(_GLF_FUZZED(-1.0), ((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[1]), bvec2(false, true)), mix(vec2(_GLF_FUZZED(-171.646), _GLF_FUZZED(-6.7)), vec2((mix(vec2(((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[0], _GLF_FUZZED(-4021.0519)), vec2(_GLF_FUZZED(-1.0), ((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[1]), bvec2(false, true)))[0], (mix(vec2(((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[0], _GLF_FUZZED(-4021.0519)), vec2(_GLF_FUZZED(-1.0), ((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[1]), bvec2(false, true)))[1]), bvec2(true, true))))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(8.4)), float(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], float(mat3x4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), mix(vec2(((vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))), cos(0.0), 1.0))))[0], _GLF_FUZZED(-4021.0519)), vec2(_GLF_FUZZED(-1.0), ((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[1]), bvec2(false, true)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true)), (mix(float(_GLF_FUZZED(8.4)), _GLF_IDENTITY(float(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], float(mat3x4(_GLF_IDENTITY((vec2(_GLF_IDENTITY(vec4(injectionSwitch, cos(0.0), 1.0), (true ? _GLF_IDENTITY(vec4(injectionSwitch, cos(0.0), 1.0), (vec4(injectionSwitch, cos(0.0), 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(fract(vec4(-60.49, -223.705, -651.692, -9.6))))))), mix(vec2(((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[0], _GLF_FUZZED(-4021.0519)), vec2(_GLF_FUZZED(-1.0), ((vec2(vec4(injectionSwitch, cos(_GLF_IDENTITY(0.0, (0.0) * abs(1.0))), 1.0))))[1]), bvec2(false, true)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], float(mat3x4(_GLF_IDENTITY((vec2(_GLF_IDENTITY(vec4(injectionSwitch, cos(0.0), 1.0), (true ? _GLF_IDENTITY(vec4(injectionSwitch, cos(0.0), 1.0), (vec4(injectionSwitch, cos(0.0), 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(fract(vec4(-60.49, -223.705, -651.692, -9.6))))))), mix(vec2(((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[0], _GLF_FUZZED(-4021.0519)), vec2(_GLF_FUZZED(-1.0), ((vec2(vec4(injectionSwitch, cos(_GLF_IDENTITY(0.0, (0.0) * abs(1.0))), 1.0))))[1]), bvec2(false, true)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), (true ? float(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], float(mat3x4(_GLF_IDENTITY((vec2(_GLF_IDENTITY(vec4(injectionSwitch, cos(0.0), 1.0), (true ? _GLF_IDENTITY(vec4(injectionSwitch, cos(0.0), 1.0), (vec4(injectionSwitch, cos(0.0), 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(fract(vec4(-60.49, -223.705, -651.692, -9.6))))))), mix(vec2(((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[0], _GLF_FUZZED(-4021.0519)), vec2(_GLF_FUZZED(-1.0), ((vec2(vec4(injectionSwitch, cos(_GLF_IDENTITY(0.0, (0.0) * abs(1.0))), 1.0))))[1]), bvec2(false, true)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))) : _GLF_FUZZED(radians(-8286.4453)))), float(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], float(mat3x4(_GLF_IDENTITY((vec2(_GLF_IDENTITY(vec4(injectionSwitch, cos(0.0), 1.0), (true ? _GLF_IDENTITY(vec4(injectionSwitch, cos(0.0), 1.0), (vec4(injectionSwitch, cos(0.0), 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(fract(vec4(-60.49, -223.705, -651.692, -9.6))))))), mix(vec2(((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[0], _GLF_FUZZED(-4021.0519)), vec2(_GLF_FUZZED(-1.0), ((vec2(vec4(injectionSwitch, cos(_GLF_IDENTITY(0.0, (0.0) * abs(1.0))), 1.0))))[1]), bvec2(false, true)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), float(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], float(mat3x4(_GLF_IDENTITY((vec2(_GLF_IDENTITY(vec4(injectionSwitch, cos(0.0), 1.0), (true ? _GLF_IDENTITY(vec4(injectionSwitch, cos(0.0), 1.0), (vec4(injectionSwitch, cos(0.0), 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(fract(vec4(-60.49, -223.705, -651.692, -9.6))))))), mix(vec2(((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[0], _GLF_FUZZED(-4021.0519)), vec2(_GLF_FUZZED(-1.0), ((vec2(vec4(injectionSwitch, cos(_GLF_IDENTITY(0.0, (0.0) * abs(1.0))), 1.0))))[1]), bvec2(false, true)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))), bool(true))) - 0.0), _GLF_IDENTITY(mix(float(_GLF_FUZZED(8.4)), float(_GLF_IDENTITY((vec2(_GLF_IDENTITY(vec4(injectionSwitch, cos(0.0), 1.0), mix(vec4((vec4(injectionSwitch, cos(0.0), 1.0))[0], _GLF_FUZZED(8.5), _GLF_FUZZED(-249.471), (vec4(injectionSwitch, cos(0.0), 1.0))[3]), vec4(_GLF_FUZZED(4762.8801), (vec4(injectionSwitch, cos(0.0), 1.0))[1], (vec4(injectionSwitch, cos(0.0), 1.0))[2], _GLF_FUZZED(-913.336)), bvec4(false, true, _GLF_IDENTITY(true, ! (! (true))), false)))))[1], float(mat3x4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), mix(vec2(((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[0], _GLF_FUZZED(-4021.0519)), vec2(_GLF_FUZZED(-1.0), ((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[1]), bvec2(false, true)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true)), sqrt(1.0) * (mix(float(_GLF_FUZZED(8.4)), float(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], float(mat3x4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), mix(vec2(((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[0], _GLF_FUZZED(-4021.0519)), vec2(_GLF_FUZZED(-1.0), ((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[1]), bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(_GLF_IDENTITY(bvec3(bool(bool(true)), false, false), bvec3(bvec3(bvec3(bool(bool(true)), false, false))))))))))[1], 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true)))), mix(float(_GLF_FUZZED(8.4)), float(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], float(mat3x4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), mix(vec2(((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[0], _GLF_FUZZED(-4021.0519)), vec2(_GLF_FUZZED(-1.0), ((vec2(vec4(injectionSwitch, cos(0.0), 1.0))))[1]), bvec2(false, true)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), bool(true))))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1]))), vec2(_GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(1.0, 1.0) * ((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))[0], (_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(1.0, 1.0) * ((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))[0]) - 0.0), _GLF_FUZZED((452.622))), bvec2(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, false)))))))), (true ? mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-7.1), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), clamp(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(mat4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-233.353, _GLF_IDENTITY(-81.27, (_GLF_IDENTITY(-81.27, _GLF_IDENTITY(float(mat3x4(-81.27, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)), (float(mat3x4(-81.27, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 1.0, log(1.0), 0.0, 0.0, 1.0, 1.0)), 0.0, sin(0.0))))))) + 0.0))) / 1.0))) : vec2(vec4(injectionSwitch, cos(0.0), 1.0)), (true ? false ? _GLF_FUZZED(vec2(-233.353, _GLF_IDENTITY(-81.27, (_GLF_IDENTITY(-81.27, _GLF_IDENTITY(float(mat3x4(-81.27, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)), (float(mat3x4(-81.27, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))) + 0.0))) / 1.0))) : vec2(vec4(injectionSwitch, cos(0.0), 1.0)) : _GLF_FUZZED(unpackSnorm2x16(workgroup_id))))))), (false ? _GLF_FUZZED(vec2(-2.9, 7.7)) : (_GLF_IDENTITY(vec2(vec4(injectionSwitch, cos(0.0), 1.0)), (false ? _GLF_FUZZED(vec2(-233.353, -81.27)) : vec2(vec4(injectionSwitch, cos(0.0), 1.0))))))), 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))[1], min(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.6) : _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(3570.3826, (false ? _GLF_FUZZED(-6.8) : 3570.3826))), clamp(_GLF_FUZZED(_GLF_IDENTITY(3570.3826, (false ? _GLF_FUZZED(-6.8) : 3570.3826))), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(3570.3826, (false ? _GLF_FUZZED(-6.8) : 3570.3826)), min(_GLF_IDENTITY(3570.3826, (false ? _GLF_FUZZED(-6.8) : 3570.3826)), _GLF_IDENTITY(3570.3826, (false ? _GLF_FUZZED(-6.8) : 3570.3826))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(3570.3826, (false ? _GLF_FUZZED(-6.8) : 3570.3826))), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(3570.3826, (false ? _GLF_FUZZED(-6.8) : 3570.3826))), (_GLF_FUZZED(_GLF_IDENTITY(3570.3826, (false ? _GLF_FUZZED(-6.8) : 3570.3826)))) / 1.0)) - 0.0))))))))))[1], float(mat3x4((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1]))), max(vec2(_GLF_FUZZED(-7.1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), clamp(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 1.0))), vec2(mat4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(mat3x2((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, sqrt(sqrt(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))), 0.0, 1.0, 0.0))), injectionSwitch.y), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))[1], (true ? _GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), clamp(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 1.0))), vec2(mat4(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), vec2(mat3x2((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, sqrt(sqrt(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))), 0.0, 1.0, 0.0))), injectionSwitch.y), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))[1] : _GLF_FUZZED(6.1))), min(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.6) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3570.3826))))), mix(float(_GLF_FUZZED(-233.451)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.6) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3570.3826))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.6) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3570.3826))))), (false ? _GLF_FUZZED(-2.0) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.6) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3570.3826))))))) : _GLF_FUZZED(9.8)))), bool(true))))))[1], float(mat3x4((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, cos(0.0), 1.0), max(vec4(injectionSwitch, cos(0.0), 1.0), vec4(injectionSwitch, cos(0.0), 1.0)))))[1]))), vec2(_GLF_FUZZED(-7.1), _GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), clamp(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), ((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))) / vec2(1.0, 1.0)), vec2(mat3x2((vec2(vec4(injectionSwitch, cos(0.0), 1.0))), 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(dot(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(dot(injectionSwitch, injectionSwitch), _GLF_IDENTITY(float(mat2(dot(injectionSwitch, injectionSwitch), exp(0.0), 0.0, 1.0)), clamp(float(mat2(dot(injectionSwitch, injectionSwitch), exp(0.0), 0.0, 1.0)), float(mat2(dot(injectionSwitch, injectionSwitch), exp(0.0), 0.0, 1.0)), float(mat2(dot(injectionSwitch, injectionSwitch), exp(0.0), 0.0, 1.0))))), dot(injectionSwitch, injectionSwitch), dot(injectionSwitch, injectionSwitch)))))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))))[1], min(_GLF_IDENTITY((vec2(vec4(injectionSwitch, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / 1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.6) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3570.3826))))))))[1], float(mat3x4((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), (vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[1]))))), vec2((vec2(vec4(injectionSwitch, cos(0.0), 1.0)))[0], _GLF_FUZZED((452.622))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) : _GLF_FUZZED(max(vec2(-1903.4667, -5749.6900), 8.0)))))) + vec2(0.0, 0.0))).x > injectionSwitch.y) && true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4924.8480)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.8)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3.8)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) && true))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec3(true, true, false))) && (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-202.297)), float(injectionSwitch.x), bool(true))))), injectionSwitch.x)), 0.0, 0.0, 1.0), mat2(mat4(mat2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-202.297)), float(injectionSwitch.x), bool(true))))), injectionSwitch.x)), 0.0, 0.0, 1.0)))), (mat2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).x, injectionSwitch.x), float(mat2x3(max(injectionSwitch.x, injectionSwitch.x), sqrt(1.0), 1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2368.1974)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x), bool(true))))), 0.0, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], float(mat3x2(injectionSwitch[1], 1.0, 0.0, 1.0, 0.0, 0.0)))) / 1.0))).x))) / 1.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))), true)), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))), true)))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1687.5139)), float(injectionSwitch.y), bool(true)))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-64.17)), float(injectionSwitch.y), bool(true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < injectionSwitch.y))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0), (mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y)) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), true, true)), true, true))))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (false ? _GLF_FUZZED(vec2(-78.15, -9422.4396)) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (false ? _GLF_FUZZED(vec2(-78.15, -9422.4396)) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (false ? _GLF_FUZZED(vec2(-78.15, -9422.4396)) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))) * vec2(1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (false ? _GLF_FUZZED(vec2(-78.15, -9422.4396)) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (false ? _GLF_FUZZED(vec2(-78.15, -9422.4396)) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))) / vec2(1.0, 1.0))))).x < injectionSwitch.y))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)), (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec2(-8626.6536, -3278.9765)) : injectionSwitch)).y), false, false, false))) && true)))))
      barrier();
    }
   return;
  }
}
