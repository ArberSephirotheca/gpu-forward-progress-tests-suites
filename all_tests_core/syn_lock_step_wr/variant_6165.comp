#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(true && (false))))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)) && true))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.3), _GLF_FUZZED(-24.28)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), min(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]))), bvec2(true, _GLF_IDENTITY(true, (true) || false))))) * vec2(1.0, 1.0)).y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch)).y)))) || false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-23.29), _GLF_FUZZED(-5.6)), bvec2(false, false))).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))) || false, bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false, true, true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2191.7781) : injectionSwitch.x)) : _GLF_FUZZED(588.150))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8289.8134)), float(injectionSwitch.y), bool(true))), 1.0, 1.0, 1.0), mat2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8289.8134)), float(injectionSwitch.y), bool(true))), 1.0, 1.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8289.8134)), float(injectionSwitch.y), bool(true))), 1.0, 1.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), transpose(transpose(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8289.8134)), float(injectionSwitch.y), bool(true))), 1.0, 1.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(8289.8134)), float(injectionSwitch.y), bool(true)), 1.0 * (mix(float(_GLF_FUZZED(8289.8134)), float(injectionSwitch.y), bool(true))))), 1.0, 1.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0))), (mat2x4(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(8289.8134)), (float(_GLF_FUZZED(8289.8134))) * determinant(mat2(1.0, log(1.0), 1.0, 1.0))), float(injectionSwitch.y), bool(true))), 1.0, 1.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8289.8134)), float(injectionSwitch.y), bool(true))), 1.0, 1.0, 1.0)) / mat2(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) / 1.0), 1.0)))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), (injectionSwitch.x > injectionSwitch.y) && true)))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || false)))), (_GLF_IDENTITY(false, (false) || false)) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true) ? _GLF_FUZZED(abs(-5.2)) : 1.0)), 1.0)).y, mix(float(_GLF_FUZZED(669.248)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), bool(true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) / uvec3(1u, 1u, 1u))) ^ uvec3(0u, 0u, 0u)) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u)))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5.7, -610.011)) : injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || (! (false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! _GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! _GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! _GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! _GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! _GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, abs(sqrt(0.0)), abs(1.0))), mix(float(_GLF_IDENTITY(float(mat4x2(0.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, abs(sqrt(0.0)), abs(1.0))), max(float(mat4x2(0.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, abs(sqrt(0.0)), abs(1.0))), float(mat4x2(0.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, abs(sqrt(0.0)), abs(1.0)))))), float(_GLF_FUZZED(132.691)), bool(false)))) + (injectionSwitch.x)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, true, false)), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false))))))), (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).y, true, _GLF_IDENTITY(false, false || (false))))) && _GLF_IDENTITY(true, ! (! (true))))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, false || (false)))), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, false || (false))))) && true)), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, false || (false)))), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, false || (false))))) && true))), bool(bvec2(! (true && (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, true && (false)))))), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, false || (false))))) && true))), false)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.4)), bool(false)), min(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.4)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.4)), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(880.109))))), injectionSwitch.y, injectionSwitch.y)), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 1.0, abs(1.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))), (false ? _GLF_FUZZED(mat3x4(-9904.8372, -4.5, -1.8, -9.0, -3.9, 55.24, 2449.7169, 3.3, -7.2, 3.4, -1176.8406, 39.88)) : mat3x4(injectionSwitch.y, 1.0, 1.0, abs(1.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(928.516, 7790.8455)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7464.4700), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(576.877)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.4)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(880.109))), (false ? _GLF_FUZZED(-1.3) : _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(880.109))))))), injectionSwitch.y, injectionSwitch.y)), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 1.0, abs(1.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat3x4(-9904.8372, -4.5, -1.8, -9.0, -3.9, 55.24, 2449.7169, _GLF_IDENTITY(3.3, _GLF_IDENTITY(float(float(3.3)), (float(float(3.3))) / 1.0)), -7.2, 3.4, -1176.8406, 39.88)) : mat3x4(injectionSwitch.y, 1.0, 1.0, abs(1.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))), (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.4)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (true ? injectionSwitch.y : _GLF_FUZZED(880.109))))), injectionSwitch.y, injectionSwitch.y)), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 1.0, abs(1.0), tan(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(888.513) : 1.0)), 0.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, abs(1.0)))), 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat3x4(-9904.8372, -4.5, -1.8, -9.0, -3.9, 55.24, 2449.7169, 3.3, -7.2, 3.4, -1176.8406, 39.88)) : mat3x4(injectionSwitch.y, 1.0, 1.0, abs(1.0), tan(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5707.4580)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(110.238)), float(0.0), bool(true)))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(110.238)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(110.238)), float(0.0), bool(true)))) + _GLF_ZERO(0.0, injectionSwitch.x))), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(110.238)), float(0.0), bool(true))), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(110.238)), float(0.0), bool(true))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, sqrt(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, sqrt(0.0)), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(110.238)), float(0.0), bool(true))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, sqrt(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, sqrt(0.0)), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(110.238)), float(0.0), bool(true))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, sqrt(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, sqrt(0.0)), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))))))), bool(true)))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))), false || (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5733.7621), _GLF_FUZZED(89.03)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.4)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(880.109), min(_GLF_IDENTITY(_GLF_FUZZED(880.109), (_GLF_FUZZED(880.109)) / 1.0), _GLF_FUZZED(880.109))))))), injectionSwitch.y, injectionSwitch.y)), float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 1.0, abs(1.0), tan(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6.4) : 1.0)), 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat3x4(-9904.8372, -4.5, -1.8, -9.0, _GLF_IDENTITY(-3.9, clamp(-3.9, -3.9, -3.9)), 55.24, 2449.7169, 3.3, -7.2, 3.4, -1176.8406, 39.88)) : mat3x4(injectionSwitch.y, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.2)), float(1.0), bool(true))), 1.0)), 1.0, abs(1.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))))))) && true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)), false || (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))), false, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)), false || (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))), false, true, true))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)), false || (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))), false, true, true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))), true))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), (injectionSwitch.x > injectionSwitch.y))), true, true, false)), false || (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true, true, false)))), false, true, true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), bool(bool(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), bool(bool(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), true, false, false))))) && (false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(false, false || (false)))), (false || ((_GLF_IDENTITY(false, false || (false))))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), false || (false)))), bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), false)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(false || (false), ! (! (false || (false)))))))))), bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), false))))))))))), true && (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9890.4368)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, false || (true)))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9890.4368)), float(injectionSwitch.y), bool(true)))))))), ! (! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9890.4368)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9890.4368)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, false || (true)))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9890.4368)), float(injectionSwitch.y), bool(true)))))))), ! (! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9890.4368)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))))))))) && true)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-9890.4368), mix(float(_GLF_FUZZED(vec3(19.41, 127.441, -8.0).r)), float(_GLF_FUZZED(-9890.4368)), bool(true)))), float(injectionSwitch.y), bool(true)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9890.4368)), float(injectionSwitch.y), bool(true)))))))), ! _GLF_IDENTITY((! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9890.4368)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))))))))), _GLF_IDENTITY(true, ! (! (true))) && ((! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9890.4368)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))))))))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0], injectionSwitch[1])))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, 1u * (_GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u))) * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) << 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(5.9, -434.974)) : injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false) && true), false || (false))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u)), clamp((workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base)))) * 1u), 0u + ((workgroup_base))))), _GLF_IDENTITY(clamp((workgroup_base), (workgroup_base), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))), (clamp((workgroup_base), (workgroup_base), (workgroup_base))) ^ 0u)), _GLF_IDENTITY((workgroup_base), ~ _GLF_IDENTITY((~ ((workgroup_base))), ((~ ((workgroup_base)))) | (_GLF_IDENTITY((~ ((workgroup_base))), ((~ ((workgroup_base)))) | ((~ ((workgroup_base)))))))))) + 0u, (_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))))) + 0u) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u)))), clamp((workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u), ((workgroup_base)) - 0u), _GLF_IDENTITY(clamp((workgroup_base), (workgroup_base), (workgroup_base)), clamp(clamp((workgroup_base), (workgroup_base), (workgroup_base)), clamp((workgroup_base), (workgroup_base), (workgroup_base)), clamp((workgroup_base), (workgroup_base), (workgroup_base))))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) / 1u), ~ (~ ((workgroup_base)))))) + 0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), ~ (~ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u)))), clamp((workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u), clamp((workgroup_base), (workgroup_base), (workgroup_base))), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))))) + 0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u)))), clamp((workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u), clamp((workgroup_base), (workgroup_base), (workgroup_base))), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))))) + 0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u)))), clamp((workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u), clamp((workgroup_base), (workgroup_base), (workgroup_base))), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))))) + 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u)))), clamp((workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u), clamp((workgroup_base), (workgroup_base), (workgroup_base))), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))))) + 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u)))), clamp((workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u), clamp((workgroup_base), (workgroup_base), (workgroup_base))), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))))) + 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u)))), clamp((workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u), clamp((workgroup_base), (workgroup_base), (workgroup_base))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), min(_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))))))) + 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u)))), clamp((workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u), clamp((workgroup_base), (workgroup_base), (workgroup_base))), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))))) + 0u, min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u)))), clamp((workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u), clamp((workgroup_base), (workgroup_base), (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(num_workgroup)))))), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))))) + 0u, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u)))), clamp((workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u), clamp((workgroup_base), (workgroup_base), (workgroup_base))), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))))) + 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u)))), clamp((workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base)))) - 0u), clamp((workgroup_base), (workgroup_base), (workgroup_base))), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))))) + 0u, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u)), clamp(~ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u)), ~ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u)))))), clamp((workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u), clamp((workgroup_base), (workgroup_base), (workgroup_base))), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))))) + 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u)))), clamp((workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u), clamp((workgroup_base), (workgroup_base), (workgroup_base))), (false ? _GLF_FUZZED(177531u) : _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u), clamp((workgroup_base), (workgroup_base), (workgroup_base))))), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))))) + 0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u)))), clamp((workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), ((workgroup_base)) - 0u), clamp((_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, _GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, ~ (~ (0u))), 1u)))), (workgroup_base), (workgroup_base))), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))))) + 0u, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u)))), clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u), clamp((workgroup_base), (workgroup_base), (workgroup_base))), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))))) + 0u, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) << 0u)))), clamp((workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) - 0u), clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), (workgroup_base), _GLF_IDENTITY((workgroup_base), (false ? _GLF_FUZZED(87487u) : (workgroup_base))))), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))))) + 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), _GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))), 0u ^ (~ ((_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))))))))) + 0u, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))) << 0u)), clamp((workgroup_base), _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), (true ? (workgroup_base) : _GLF_FUZZED(104482u)))) ^ 0u)))))) + 0u), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))) << 0u), 0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))) << 0u)))), clamp((workgroup_base), _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))))) + 0u)) ^ 0u)), min((~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))) << 0u)), clamp((workgroup_base), _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), _GLF_IDENTITY((workgroup_base), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY((true ? (workgroup_base) : _GLF_FUZZED(104482u)), max(_GLF_IDENTITY((true ? (workgroup_base) : _GLF_FUZZED(104482u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((true ? (workgroup_base) : _GLF_FUZZED(104482u)), ((true ? (workgroup_base) : _GLF_FUZZED(104482u))) + 0u))), (true ? (workgroup_base) : _GLF_FUZZED(104482u)))))) ^ 0u)), ((_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY((true ? (workgroup_base) : _GLF_FUZZED(104482u)), max(_GLF_IDENTITY((true ? (workgroup_base) : _GLF_FUZZED(104482u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((true ? (workgroup_base) : _GLF_FUZZED(104482u)), ((true ? (workgroup_base) : _GLF_FUZZED(104482u))) + 0u))), (true ? (workgroup_base) : _GLF_FUZZED(104482u)))))) ^ 0u))) | ((_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY((true ? (workgroup_base) : _GLF_FUZZED(104482u)), max(_GLF_IDENTITY((true ? (workgroup_base) : _GLF_FUZZED(104482u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((true ? (workgroup_base) : _GLF_FUZZED(104482u)), ((true ? (workgroup_base) : _GLF_FUZZED(104482u))) + 0u))), (true ? (workgroup_base) : _GLF_FUZZED(104482u)))))) ^ 0u)))))))) + 0u), ((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))), max((_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))), (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))))) << 0u)), clamp((workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), clamp(_GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 1u))), (workgroup_base), (workgroup_base))), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))))) + 0u)) ^ 0u)), (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))) << 0u)), clamp((workgroup_base), _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_base))), (_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY(true ? (workgroup_base) : _GLF_FUZZED(104482u), clamp(_GLF_IDENTITY(true ? (workgroup_base) : _GLF_FUZZED(104482u), clamp(_GLF_IDENTITY(true ? (workgroup_base) : _GLF_FUZZED(104482u), (true ? (workgroup_base) : _GLF_FUZZED(104482u)) >> 0u), true ? (workgroup_base) : _GLF_FUZZED(104482u), true ? (workgroup_base) : _GLF_FUZZED(104482u))), _GLF_IDENTITY(true ? (workgroup_base) : _GLF_FUZZED(104482u), uint(uvec2(_GLF_IDENTITY(true ? (workgroup_base) : _GLF_FUZZED(104482u), (true ? (workgroup_base) : _GLF_FUZZED(104482u)) - 0u), 1u))), true ? (workgroup_base) : _GLF_FUZZED(104482u)))))) ^ 0u)))))) + 0u), ((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))) << 0u)), clamp((workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))), uint(uint(_GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base)))))), _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))))) + 0u)) ^ 0u)))))))))) + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) + 0u) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1))))) ^ 0u), (_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))))), (_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size)))), ((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))))) ^ 0u))))) + 1)))))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(roundEven(vec2(4.4, 3.8))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))) && true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), determinant(mat3(0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec2(745.809, -5.7).y)), bool(false))), 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y) && true)) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(579.161) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), float(mat3(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), 1.0, 1.0, tan(abs(0.0)), 1.0, 0.0, sin(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, length(vec2(0.0, 0.0))), (vec3(injectionSwitch.y, 1.0, length(vec2(0.0, 0.0)))) / vec3(1.0, 1.0, 1.0))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false)), (bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), false || (! (false))), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(! (false), false || (! (false))), true, false)), false, false, false)))), bool(_GLF_IDENTITY(bvec3(! (false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-272))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y))), bvec3(bvec3(bvec3(! (false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-272))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))), false || (! (false)))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, true && (false)) || (! (false)))), true && ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)) || (! (false))))))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-272))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y))))), (! (false)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-272))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y))))), (! (false)) && true)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, true && (false)) || (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, true && (false)) || (! (false))), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, true && (false)) || (! (false)))) && true))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-272))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))) < injectionSwitch.y))))), (! (false)) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_IDENTITY(false, true && (false)) || (! (false)))))))))) || false))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-272))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y))))), (! (false)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(float(-272), min(float(-272), float(-272))))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y))))), (! (false)) && true)) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, true && (false)) || (! (false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, true && (false)) || (! (false))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-272))), float(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y))))), (! (false)) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, true && (false)) || (! (false)))))))))) || false))), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-272))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y))))), (! (false)) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, true && (false)) || (! (false))), false || (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, true && (false)) || (! (false))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-272))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y))))), (! (false)) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, true && (false)) || (! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))))) || false)), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-272))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y))))), (! (false)) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, true && (false)) || (! (false))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), bool(bvec3(! (false), false, _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-272))), float(injectionSwitch.x), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))).y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))).y)))))))) < injectionSwitch.y))))), (! (false)) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, true && (false)) || (! (false)))))))))) || false))) || false)), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(5), int(5))) + (0)))) << 0)), 4, _GLF_IDENTITY(64, max(64, 64)), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(-35.40)), float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), bool(true))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(754.524))), injectionSwitch.y, injectionSwitch.y)))))) && true)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), true && (! (_GLF_IDENTITY(false, bool(bool(false)))))), (! (false)) && _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(clamp(_GLF_IDENTITY(-36566, clamp(-36566, -36566, -36566)), -83231, 92131)) : 64)), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bool(! (_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(true))), mix(float(_GLF_FUZZED(19.65)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.6)), float(injectionSwitch.x), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(_GLF_IDENTITY(_GLF_FUZZED(-9385.0168), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_FUZZED(-9385.0168), mix(float(_GLF_FUZZED(-9385.0168)), float(_GLF_FUZZED(20.71)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))), 0.0, 1.0, 1.0), _GLF_IDENTITY(vec4(mat3(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_FUZZED(-9385.0168), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9385.0168)), float(_GLF_FUZZED(20.71)), bool(false)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-9385.0168)), float(_GLF_FUZZED(20.71)), bool(false)), max(mix(float(_GLF_FUZZED(-9385.0168)), float(_GLF_FUZZED(20.71)), bool(false)), mix(float(_GLF_FUZZED(-9385.0168)), float(_GLF_FUZZED(20.71)), bool(false)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9385.0168)), float(_GLF_FUZZED(20.71)), bool(false)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-9385.0168)), float(_GLF_FUZZED(20.71)), bool(false)), mix(float(_GLF_FUZZED(3714.3156)), float(mix(float(_GLF_FUZZED(-9385.0168)), float(_GLF_FUZZED(20.71)), bool(false))), bool(true))), mix(float(_GLF_FUZZED(-9385.0168)), float(_GLF_FUZZED(20.71)), bool(false)), mix(float(_GLF_FUZZED(-9385.0168)), float(_GLF_FUZZED(20.71)), bool(false)))), mix(float(_GLF_FUZZED(-9385.0168)), float(_GLF_FUZZED(20.71)), bool(false))))), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(vec4(-126.521, 3.4, -49.08, -71.19)) : _GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_FUZZED(-9385.0168), mix(float(_GLF_FUZZED(-9385.0168)), float(_GLF_FUZZED(20.71)), bool(false))), 0.0, 1.0, 1.0), (vec4(_GLF_IDENTITY(_GLF_FUZZED(-9385.0168), mix(float(_GLF_FUZZED(-9385.0168)), float(_GLF_FUZZED(20.71)), bool(false))), 0.0, 1.0, 1.0)) - tan(vec4(0.0, 0.0, 0.0, 0.0))))), 1.0, determinant(mat2(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), determinant(mat2(1.0, 0.0, cos(0.0), 1.0)), 1.0, 1.0)), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(mat3(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_FUZZED(-9385.0168), mix(float(_GLF_FUZZED(-9385.0168)), float(_GLF_FUZZED(_GLF_IDENTITY(20.71, clamp(20.71, 20.71, _GLF_IDENTITY(20.71, min(20.71, 20.71)))))), bool(false))), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(vec4(-126.521, 3.4, -49.08, -71.19)) : vec4(_GLF_IDENTITY(_GLF_FUZZED(-9385.0168), mix(float(_GLF_FUZZED(-9385.0168)), float(_GLF_FUZZED(20.71)), bool(false))), 0.0, 1.0, 1.0))), 1.0, determinant(mat2(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), determinant(_GLF_IDENTITY(mat2(1.0, 0.0, cos(0.0), 1.0), mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2(1.0, 0.0, cos(0.0), 1.0)))), 1.0, 1.0)))))))), bool(false))) > injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-607.872) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-88.64))), 1.0))), injectionSwitch.y)))))))), bool(bvec4(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y) / 1.0, float(vec2(_GLF_IDENTITY((injectionSwitch.y) / 1.0, max((injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, _GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, (true ? _GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, max(((injectionSwitch.y) / 1.0) / 1.0, _GLF_IDENTITY(((injectionSwitch.y) / 1.0), float(mat4x2(_GLF_IDENTITY(((injectionSwitch.y) / 1.0), (((injectionSwitch.y) / 1.0)) + 0.0), _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), 1.0, 1.0, 1.0, 0.0, 0.0))) / 1.0)) : _GLF_FUZZED(sin(-24.23))))))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6045.6496)))))), mix(float(_GLF_IDENTITY((injectionSwitch.y) / 1.0, float(vec2(_GLF_IDENTITY((injectionSwitch.y) / 1.0, max((injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, _GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, (true ? _GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, max(((injectionSwitch.y) / 1.0) / 1.0, ((injectionSwitch.y) / 1.0) / 1.0)) : _GLF_FUZZED(sin(-24.23))))))), 0.0)))), float(_GLF_FUZZED(-0.0)), bool(false)))), injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, float(vec2(_GLF_IDENTITY((injectionSwitch.y) / 1.0, _GLF_IDENTITY(max((injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8438.1976)), float(1.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, (true ? _GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, max(((injectionSwitch.y) / 1.0) / 1.0, ((injectionSwitch.y) / 1.0) / 1.0)) : _GLF_FUZZED(sin(-24.23)))), max(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, (true ? _GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, max(((injectionSwitch.y) / 1.0) / 1.0, ((injectionSwitch.y) / 1.0) / 1.0)) : _GLF_FUZZED(sin(-24.23)))), (_GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, (true ? _GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, max(((injectionSwitch.y) / 1.0) / 1.0, ((injectionSwitch.y) / 1.0) / 1.0)) : _GLF_FUZZED(sin(-24.23))))) * 1.0), _GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, max(((injectionSwitch.y) / 1.0) / 1.0, ((injectionSwitch.y) / 1.0) / 1.0)) : _GLF_FUZZED(sin(-24.23))), ((true ? _GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, max(((injectionSwitch.y) / 1.0) / 1.0, ((injectionSwitch.y) / 1.0) / 1.0)) : _GLF_FUZZED(sin(-24.23)))) * 1.0)))))), (false ? _GLF_FUZZED(7.8) : _GLF_IDENTITY(max((injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, (true ? _GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, max(((injectionSwitch.y) / 1.0) / 1.0, ((injectionSwitch.y) / 1.0) / 1.0)) : _GLF_FUZZED(sin(-24.23)))), max(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, (true ? _GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, max(((injectionSwitch.y) / 1.0) / 1.0, ((injectionSwitch.y) / 1.0) / 1.0)) : _GLF_FUZZED(sin(-24.23)))), (_GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, (true ? _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.y) / 1.0, 1.0 * ((injectionSwitch.y) / 1.0))) / 1.0, max(((injectionSwitch.y) / 1.0) / 1.0, ((injectionSwitch.y) / 1.0) / 1.0)) : _GLF_FUZZED(sin(-24.23))))) * 1.0), _GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, (true ? _GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, max(((injectionSwitch.y) / 1.0) / 1.0, ((injectionSwitch.y) / 1.0) / 1.0)) : _GLF_FUZZED(sin(-24.23)))))))), min(_GLF_IDENTITY(max((injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, (true ? _GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, max(((injectionSwitch.y) / 1.0) / 1.0, ((injectionSwitch.y) / 1.0) / 1.0)) : _GLF_FUZZED(sin(-24.23)))), max(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, (true ? _GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, max(((injectionSwitch.y) / 1.0) / 1.0, ((injectionSwitch.y) / 1.0) / 1.0)) : _GLF_FUZZED(sin(-24.23)))), (_GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, (true ? _GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, max(((injectionSwitch.y) / 1.0) / 1.0, (_GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(5.8)), float((injectionSwitch.y)), bool(true))) / 1.0) / 1.0)) : _GLF_FUZZED(sin(-24.23))))) * 1.0), _GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, (true ? _GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, max(((injectionSwitch.y) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3632.3327)), bool(false)))) / 1.0, ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0)), 0.0, sin(0.0), log(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(mat2x4(5.4, -4.2, 14.09, -5699.2868, 303.173, -816.555, -6.2, -3959.3053)) : mat2x4(injectionSwitch, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0)), 0.0, sin(0.0), log(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))))), (vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0)), 0.0, sin(0.0), log(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(mat2x4(5.4, -4.2, 14.09, -5699.2868, 303.173, -816.555, -6.2, -3959.3053)) : mat2x4(injectionSwitch, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0)), 0.0, sin(0.0), log(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))))))) / vec2(1.0, 1.0))).y) / 1.0) / 1.0)) : _GLF_FUZZED(sin(-24.23)))))))), 0.0 + (max((injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, (true ? _GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, max(((injectionSwitch.y) / 1.0) / 1.0, ((injectionSwitch.y) / 1.0) / 1.0)) : _GLF_FUZZED(sin(-24.23)))), max(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, (true ? _GLF_IDENTITY(((injectionSwitch.y) / _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.6))), 1.0, exp(0.0), log(1.0), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY((mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.6))), 1.0, exp(0.0), log(1.0), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0)) * mat3(1.0), mat3x4(mat4((mat3x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.6))), 1.0, exp(0.0), log(1.0), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0)) * mat3(1.0)))))))) / 1.0, max(((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0) / 1.0, ((injectionSwitch.y) / 1.0) / 1.0)) : _GLF_FUZZED(sin(-24.23)))), (_GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, (true ? _GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, max(((injectionSwitch.y) / 1.0) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) + 0.0), ((injectionSwitch.y) / 1.0) / 1.0)) : _GLF_FUZZED(sin(-24.23))))) * 1.0), _GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, (true ? _GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, max(((injectionSwitch.y) / 1.0) / 1.0, ((injectionSwitch.y) / 1.0) / 1.0)) : _GLF_FUZZED(sin(-24.23)))))))))), max((injectionSwitch.y) / 1.0, _GLF_IDENTITY((injectionSwitch.y) / 1.0, _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, (true ? _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) / 1.0) / 1.0, max(((injectionSwitch.y) / 1.0) / 1.0, ((injectionSwitch.y) / 1.0) / 1.0)) : _GLF_FUZZED(sin(-24.23)))), max(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, (true ? _GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, max(((injectionSwitch.y) / 1.0) / 1.0, ((injectionSwitch.y) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0)) : _GLF_FUZZED(sin(-24.23)))), (_GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.y) / 1.0), min(_GLF_IDENTITY(((injectionSwitch.y) / 1.0), clamp(((injectionSwitch.y) / 1.0), ((injectionSwitch.y) / 1.0), ((injectionSwitch.y) / 1.0))), ((injectionSwitch.y) / 1.0))) / 1.0, max(((injectionSwitch.y) / 1.0) / 1.0, ((injectionSwitch.y) / 1.0) / 1.0)) : _GLF_FUZZED(sin(-24.23))))) * 1.0), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(765.988)), bool(false))) / 1.0) / 1.0, (true ? _GLF_IDENTITY(((injectionSwitch.y) / 1.0) / 1.0, max(((injectionSwitch.y) / 1.0) / 1.0, ((injectionSwitch.y) / 1.0) / 1.0)) : _GLF_FUZZED(sin(-24.23))))))))))))), 0.0)))), injectionSwitch.y, injectionSwitch.y))))) || false))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat4x2(192.752, -351.551, 7.8, -8.2, -3.0, 8.8, -98.37, -903.543) * vec4(1.0, 3.5, 7.8, 820.676))) : injectionSwitch)).x < injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-645.803)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(_GLF_FUZZED(8.6)), bool(false))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)) && (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, int(ivec4(64, (-96832 & (0 ^ 0)), 0, 0))), _GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(4, 0, 1), ivec3(1, 1, 1) * _GLF_IDENTITY((ivec3(4, 0, 1)), (_GLF_IDENTITY((ivec3(4, 0, 1)), ((ivec3(4, _GLF_IDENTITY(0, (0) | (0)), 1))) * ivec3(1, 1, _GLF_IDENTITY(1, (1) / 1)))) | ((ivec3(4, 0, 1)))))), clamp(int(_GLF_IDENTITY(ivec3(4, 0, 1), ivec3(1, 1, 1) * (ivec3(4, 0, 1)))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 0, 1), ivec3(0, 0, 0) + (_GLF_IDENTITY(ivec3(4, 0, 1), min(_GLF_IDENTITY(ivec3(4, 0, 1), (ivec3(4, 0, 1)) / ivec3(1, 1, 1)), ivec3(4, 0, 1))))), ivec3(1, 1, 1) * (ivec3(4, 0, 1)))), int(_GLF_IDENTITY(ivec3(4, 0, 1), ivec3(1, 1, 1) * (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(4, 0, 1), ivec3(ivec3(ivec3(4, 0, 1)))), max(_GLF_IDENTITY(ivec3(4, 0, 1), ivec3(ivec3(ivec3(4, 0, 1)))), _GLF_IDENTITY(ivec3(4, 0, 1), ivec3(ivec3(ivec3(4, 0, 1)))))))))))));
}
