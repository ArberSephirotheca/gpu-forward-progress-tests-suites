#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4728.7255), _GLF_FUZZED(461.762)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2((injectionSwitch)[0], (injectionSwitch)[1]))), bvec2(true, true)))) - vec2(0.0, 0.0)).y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0), vec2(mat4x2(vec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0), vec2(mat4x2(vec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0), vec2(mat4x2(vec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y)), true)))) && true))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), false || ((false))))), false || (! (! (_GLF_IDENTITY((false), false || ((false))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) : _GLF_FUZZED(699.149))) > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false, false))), true, true))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false, true, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false, true, false))))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))))) || false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(6009.7669, -2.4).x), _GLF_FUZZED(-9.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(333.034), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(81.45)), bvec2(true, false))).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((bool(! (injectionSwitch.x > injectionSwitch.y))), true && ((bool(! (injectionSwitch.x > injectionSwitch.y))))) && true)))))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, 1u * (workgroup_id));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), true, false), false))))), true, true, false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (0u & 139205u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-954.091)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3922.6417) : injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false)), false || (bool(bvec4(false, true, false, false)))), false || (bool(bvec4(false, true, false, false)))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7.2) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec3(bool(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false))))), ! (! (_GLF_DEAD(false)))), false, false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-54.91))))))).y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3075.1547)), bool(false))), 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-54.91))))))).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), false, true))), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), false, true), false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), _GLF_IDENTITY(false, true && (false)), true))), false, true, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), false, true), false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), _GLF_IDENTITY(false, true && (false)), true))), false, true, true)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), false, true), false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), _GLF_IDENTITY(false, true && (false)), true))), false, true, true)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), false, true), false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), _GLF_IDENTITY(false, true && (false)), true))), false, true, true)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), false, true), false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), _GLF_IDENTITY(false, true && (false)), true))), false, true, true)))))), false, true), true)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), false, true), false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), _GLF_IDENTITY(false, true && (false)), true))), false, true, true)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), false, true), false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), _GLF_IDENTITY(false, true && (false)), true))), false, true, true)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), false, true), false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), _GLF_IDENTITY(false, true && (false)), true))), false, true, true)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), false, true), false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), _GLF_IDENTITY(false, true && (false)), true))), false, true, true)))))), false, true), true))))))), (true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, 1))])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, 1))])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, 1))])), 1.0, sin(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(ivec2(1, 0)))))))])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y)), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) && true), false, true))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), false, true), false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) << (0 << _GLF_IDENTITY(int(1), int(1)))), 0))], injectionSwitch[1])).x) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, false, true)))) && true))))), false, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) << (0 << _GLF_IDENTITY(int(1), int(1)))), 0))], injectionSwitch[1])).x) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, false, true)))) && true))))), false, true)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) << (0 << _GLF_IDENTITY(int(1), int(1)))), 0))], injectionSwitch[1])).x) / 1.0) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))).y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, false, true)))) && true))))), false, true))))))))), false, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec2(bool(bvec2(_GLF_DEAD(false), false)), true))))))), ! (! ((_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.4)), float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.3), _GLF_FUZZED((vec2(5875.1941, -3294.6145) * mat3x2(-2.3, -0.7, -0.6, -95.70, 45.57, 2.0)).r)), bvec2(false, false))).y))) || false)))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true), true, true, true))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY((~ (virtual_gid)), max((_GLF_IDENTITY(~ (virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : ~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) ^ 0u))))))), (~ (virtual_gid))))) - 0u))), max(uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY((~ (virtual_gid)), uint(uvec2((~ (virtual_gid)), 1u))), max((_GLF_IDENTITY(~ (virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : ~ (virtual_gid)))), (~ (virtual_gid))))) - 0u))), uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), _GLF_IDENTITY((_GLF_IDENTITY((~ (virtual_gid)), max((_GLF_IDENTITY(~ (virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : ~ (virtual_gid)))), (~ (virtual_gid))))) - 0u, min((_GLF_IDENTITY((~ (virtual_gid)), max((_GLF_IDENTITY(~ (virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : ~ (virtual_gid)))), (~ (virtual_gid))))) - 0u, (_GLF_IDENTITY((~ (virtual_gid)), max((_GLF_IDENTITY(~ (virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : ~ (virtual_gid)))), (~ (virtual_gid))))) - 0u))))))), (false ? _GLF_FUZZED(80918u) : _GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY((~ (virtual_gid)), max((_GLF_IDENTITY(~ (virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : ~ (virtual_gid)))), (~ (virtual_gid))))) - 0u))), max(uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (virtual_gid)), ((~ (virtual_gid))) - 0u), (_GLF_IDENTITY((~ (virtual_gid)), max((_GLF_IDENTITY(~ (virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid)))))), (~ (virtual_gid))))) - 0u))), uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY((~ (virtual_gid)), _GLF_IDENTITY(max((_GLF_IDENTITY(~ (virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : ~ (virtual_gid)))), (~ (virtual_gid))), (max((_GLF_IDENTITY(~ (virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : ~ (virtual_gid)))), (~ (virtual_gid)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))) - 0u))))))), clamp(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY((~ (virtual_gid)), min((~ _GLF_IDENTITY((virtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (virtual_gid) : _GLF_FUZZED(workgroup_size)))), (~ (virtual_gid))))) | ((_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((~ (virtual_gid))) / 1u))), uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))))), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), ~ _GLF_IDENTITY((~ (virtual_gid)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(~ (virtual_gid), min(~ (virtual_gid), ~ (virtual_gid)))))))), uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), min((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), ~ (~ ((~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) * (1u & 1u))))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), min(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))), uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), _GLF_IDENTITY(1u, (1u) / 1u) * (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))), uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec4(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), 0u, 1u, 0u))), ~ (~ (virtual_gid))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY((~ (virtual_gid)), max((_GLF_IDENTITY(~ (virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : ~ (virtual_gid)))), (~ (virtual_gid))))) - 0u))), max(uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY((~ (virtual_gid)), max((_GLF_IDENTITY(~ (virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : ~ (virtual_gid)))), (~ (virtual_gid))))) - _GLF_IDENTITY(0u, min(0u, 0u))))), uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY((~ (virtual_gid)), max((_GLF_IDENTITY(~ (virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : ~ (virtual_gid)))), (~ (virtual_gid))))) - 0u))))), (false ? _GLF_FUZZED(80918u) : _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY((~ (virtual_gid)), max((_GLF_IDENTITY(~ (virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : ~ (virtual_gid)))), (~ (virtual_gid))))) - 0u)), (_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY((~ (virtual_gid)), max((_GLF_IDENTITY(~ (virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : ~ (virtual_gid)))), (~ (virtual_gid))))) - 0u))) | (_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY((~ (virtual_gid)), max((_GLF_IDENTITY(~ (virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : ~ (virtual_gid)))), (~ (virtual_gid))))) - 0u))))), max(uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (virtual_gid)), ((~ (virtual_gid))) - 0u), (_GLF_IDENTITY((~ (virtual_gid)), max((_GLF_IDENTITY(~ (virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : ~ (virtual_gid)))), (~ (virtual_gid))))) - 0u))), uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY((~ (virtual_gid)), max((_GLF_IDENTITY(~ (virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : ~ (virtual_gid)))), (~ (virtual_gid))))) - 0u))))))), clamp(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (virtual_gid)), _GLF_IDENTITY((_GLF_IDENTITY((~ (virtual_gid)), min((~ _GLF_IDENTITY((virtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (virtual_gid) : _GLF_FUZZED(workgroup_size)))), (~ (virtual_gid))))), ((_GLF_IDENTITY((~ (virtual_gid)), min((~ _GLF_IDENTITY((virtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (virtual_gid) : _GLF_FUZZED(workgroup_size)))), (~ (virtual_gid)))))) + (0u & 184066u)) | ((_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((~ (virtual_gid))) / 1u))), uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))))), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u, 0u | (0u)) | (virtual_gid)), ~ _GLF_IDENTITY((~ (virtual_gid)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((~ (virtual_gid)))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), min((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), ~ (~ ((~ (virtual_gid)))))))), (true ? _GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), min((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), ~ (~ ((~ (virtual_gid)))))))) : _GLF_FUZZED(workgroup_base)))), uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED((-- workgroup_base))))))), _GLF_IDENTITY(1u, (1u) / 1u) * (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))), uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec4(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), 0u, 1u, 0u))), ~ (~ (virtual_gid)))))))))), uint(_GLF_IDENTITY(uint(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY((~ (virtual_gid)), max((_GLF_IDENTITY(~ (virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : ~ (virtual_gid)))), (~ (virtual_gid))))) - 0u))), max(uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY((~ (virtual_gid)), max((_GLF_IDENTITY(~ (virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : ~ (virtual_gid)))), (~ (virtual_gid))))) - 0u))), uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY((~ (virtual_gid)), max((_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) ? _GLF_FUZZED(workgroup_id) : ~ (virtual_gid)))), (~ (virtual_gid))))) - 0u))))), (false ? _GLF_FUZZED(80918u) : _GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (virtual_gid)), 0u + ((~ (virtual_gid)))), (_GLF_IDENTITY((~ (virtual_gid)), max((_GLF_IDENTITY(~ (virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : ~ (virtual_gid)))), (~ (virtual_gid))))) - 0u))), max(uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (virtual_gid)), ((~ (virtual_gid))) - 0u), (_GLF_IDENTITY((~ (virtual_gid)), max((_GLF_IDENTITY(~ (virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : ~ (virtual_gid)))), (~ (virtual_gid))))) - 0u))), uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY((~ (virtual_gid)), max((_GLF_IDENTITY(~ (virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : ~ (virtual_gid)))), (~ (virtual_gid))))) - 0u))))))), clamp(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY((~ (virtual_gid)), min((~ _GLF_IDENTITY((virtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (virtual_gid) : _GLF_FUZZED(workgroup_size)))), (~ (virtual_gid))))) | ((_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((~ (virtual_gid))) / 1u))), uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))))), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u | _GLF_IDENTITY((virtual_gid), 0u | ((virtual_gid)))), ~ _GLF_IDENTITY((~ (virtual_gid)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((~ (virtual_gid)))))), uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), min((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), _GLF_IDENTITY(~ (~ ((~ (virtual_gid)))), min(~ (~ ((~ (virtual_gid)))), ~ (~ ((~ (virtual_gid))))))))))), uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), _GLF_IDENTITY(1u, (1u) / 1u) * (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))), uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec4(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), 0u, 1u, 0u))), ~ (~ (virtual_gid))))))))))), (true ? uint(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY((~ (virtual_gid)), max((_GLF_IDENTITY(~ (virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : ~ (virtual_gid)))), (~ (virtual_gid))))) - 0u))), max(uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY((~ _GLF_IDENTITY((virtual_gid), ((virtual_gid)) + 0u)), max((_GLF_IDENTITY(~ (virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : ~ (virtual_gid)))), (~ (virtual_gid))))) - 0u))), uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY((~ (virtual_gid)), max((_GLF_IDENTITY(~ (virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : ~ (virtual_gid)))), (~ (virtual_gid))))) - 0u))))), (false ? _GLF_FUZZED(80918u) : _GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY((~ (virtual_gid)), max((_GLF_IDENTITY(~ (virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : ~ (virtual_gid)))), (~ (virtual_gid))))) - 0u))), max(uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (virtual_gid)), ((~ (virtual_gid))) - 0u), _GLF_IDENTITY((_GLF_IDENTITY((~ (virtual_gid)), max((_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(workgroup_id) : ~ (virtual_gid)))), (~ (virtual_gid))))), uint(uint((_GLF_IDENTITY((~ (virtual_gid)), max((_GLF_IDENTITY(~ (virtual_gid), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(workgroup_id) : ~ (virtual_gid)))), (~ (virtual_gid)))))))) - 0u))), uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY((~ (virtual_gid)), max((_GLF_IDENTITY(~ (virtual_gid), (false ? _GLF_FUZZED(workgroup_id) : ~ (virtual_gid)))), (~ (virtual_gid))))) - 0u))))))), clamp(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (virtual_gid)), (_GLF_IDENTITY((~ (virtual_gid)), min((_GLF_IDENTITY(~ _GLF_IDENTITY((virtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (virtual_gid) : _GLF_FUZZED(workgroup_size))), min(~ _GLF_IDENTITY((virtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (virtual_gid) : _GLF_FUZZED(workgroup_size))), ~ _GLF_IDENTITY((virtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (virtual_gid) : _GLF_FUZZED(workgroup_size)))))), (~ (virtual_gid))))) | ((_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((~ (virtual_gid))) / 1u))), uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))))), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), ~ _GLF_IDENTITY((~ (virtual_gid)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((~ (virtual_gid)), ((~ (virtual_gid))) / (1u | 1u)))))), uint(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), min((~ (virtual_gid)), _GLF_IDENTITY((~ (virtual_gid)), ~ (~ ((~ (virtual_gid))))))))), uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u) * (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u) * (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), max(_GLF_IDENTITY(1u, (1u) / 1u) * (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), _GLF_IDENTITY(1u, (1u) / 1u) * (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))), _GLF_IDENTITY(1u, (1u) / 1u) * (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), _GLF_IDENTITY(1u, (1u) / 1u) * (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))))), uint(_GLF_IDENTITY(virtual_gid, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_base))), virtual_gid))) / 1u)), ~ (~ ((_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_base))), virtual_gid))) / 1u)))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec4(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), 0u, 1u, 0u))), ~ (~ (virtual_gid))))))))))) : _GLF_FUZZED(148147u))))))))], 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1508.5198), _GLF_FUZZED(-6.5)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))), bvec2(true, true))).y, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), bool(bvec2(! (_GLF_IDENTITY((false), true && ((false)))), false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), true, true, true)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) || (false))), (_GLF_DEAD(false)) || false)) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))), bool(bool(_GLF_DEAD(false)))), false, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false, true, true))) || false)))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, int(int(64))), 4);
 if(_GLF_DEAD(false))
  return;
}
