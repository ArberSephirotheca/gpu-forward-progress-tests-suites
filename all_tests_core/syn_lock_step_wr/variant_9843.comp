#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 | _GLF_IDENTITY((_injected_loop_counter), (_GLF_IDENTITY((_injected_loop_counter), max((_injected_loop_counter), (_injected_loop_counter)))) - 0)) != 0); _GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((_injected_loop_counter --), ((_injected_loop_counter --)) ^ 0) * 1))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), max(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((bvec2(true, true) , mat2(4575.0535, -9.7, -7.6, -9.1))) : mat2(1.0))) * (injectionSwitch), (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch))))), mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(127.008), (min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))[1]), vec2((min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(1.6)), bvec2(true, false))))) + _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))), mix(vec2(((_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))))[0], _GLF_FUZZED(54.05)), vec2(_GLF_FUZZED(-1.3), ((_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0)))) + 0.0))), max((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(127.008), (min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))[1]), vec2((min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(1.6)), bvec2(true, false))))) + _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))), mix(vec2(((_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))))[0], _GLF_FUZZED(54.05)), vec2(_GLF_FUZZED(-1.3), ((_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0)))) + 0.0))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(127.008), (min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))[1]), vec2((min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(1.6)), bvec2(true, false))))) + _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))), mix(vec2(((_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))))[0], _GLF_FUZZED(54.05)), vec2(_GLF_FUZZED(-1.3), ((_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0)))) + 0.0))))))).y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), (mat2(1.0) * (clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))) + vec2(0.0, 0.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(23.07, 13.93, -7.5, 474.505)) : mat2(1.0)))) + mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch), (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))) + vec2(0.0, 0.0)), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))) - vec2(0.0, 0.0)))), _GLF_IDENTITY(min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(127.008), (min(mat2(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) - 0.0)))) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))[1]), vec2((min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(1.6)), bvec2(true, false))))) + _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))), mix(vec2(((_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))))[0], _GLF_FUZZED(54.05)), vec2(_GLF_FUZZED(-1.3), ((_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))))), 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0)))) + 0.0))))).y, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0), mat2x4(mat2x4(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))) + vec2(0.0, 0.0)), mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), vec2(_GLF_FUZZED(-7.2), _GLF_FUZZED(float(true))), bvec2(false, false))), mat2(1.0) * (injectionSwitch))))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(min(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * 1.0)) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(127.008), _GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], clamp(_GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], clamp(_GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], mix(float(_GLF_FUZZED(-93.09)), float((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1]), bool(true))), (min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], _GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], (false ? _GLF_FUZZED(4.0) : (min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1])))), (min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], _GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], ((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1]) - 0.0)))), _GLF_IDENTITY(vec2((min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(1.6)), mix(vec2(_GLF_FUZZED(-301.067), _GLF_FUZZED(-5.9)), vec2((vec2((min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(1.6)))[0], (vec2((min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(1.6)))[1]), bvec2(true, true))), bvec2(true, false))))) + _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))), mix(vec2(((_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))))[0], _GLF_FUZZED(54.05)), vec2(_GLF_FUZZED(-1.3), ((_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0)))) + 0.0))))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))) + vec2(0.0, 0.0)), mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), vec2(_GLF_FUZZED(-7.2), _GLF_FUZZED(float(true))), bvec2(false, false))), mat2(1.0) * (injectionSwitch))))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(min(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * 1.0)) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(127.008), _GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], clamp(_GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], clamp(_GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], mix(float(_GLF_FUZZED(-93.09)), float((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1]), bool(true))), (min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], _GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], (false ? _GLF_FUZZED(4.0) : (min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1])))), (min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], _GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], ((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1]) - 0.0)))), _GLF_IDENTITY(vec2((min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(1.6)), mix(vec2(_GLF_FUZZED(-301.067), _GLF_FUZZED(-5.9)), vec2((vec2((min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(1.6)))[0], (vec2((min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(1.6)))[1]), bvec2(true, true))), bvec2(true, false))))) + _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))), mix(vec2(((_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))))[0], _GLF_FUZZED(54.05)), vec2(_GLF_FUZZED(-1.3), ((_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0)))) + 0.0))))).y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))) + vec2(0.0, 0.0)), mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), vec2(_GLF_FUZZED(-7.2), _GLF_FUZZED(float(true))), bvec2(false, false))), mat2(1.0) * (injectionSwitch))))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(min(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * 1.0)) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(127.008), _GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], clamp(_GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], clamp(_GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], mix(float(_GLF_FUZZED(-93.09)), float((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1]), bool(true))), (min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], _GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], (false ? _GLF_FUZZED(4.0) : (min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1])))), (min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], _GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], ((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1]) - 0.0)))), _GLF_IDENTITY(vec2((min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(1.6)), mix(vec2(_GLF_FUZZED(-301.067), _GLF_FUZZED(-5.9)), vec2((vec2((min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(1.6)))[0], (vec2((min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(1.6)))[1]), bvec2(true, true))), bvec2(true, false))))) + _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))), mix(vec2(((_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))))[0], _GLF_FUZZED(54.05)), vec2(_GLF_FUZZED(-1.3), ((_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0)))) + 0.0))))).y, 0.0)), clamp(float(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))) + vec2(0.0, 0.0)), mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), vec2(_GLF_FUZZED(-7.2), _GLF_FUZZED(float(true))), bvec2(false, false))), mat2(1.0) * (injectionSwitch))))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(min(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * 1.0)) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(127.008), _GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], clamp(_GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], clamp(_GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], mix(float(_GLF_FUZZED(-93.09)), float((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1]), bool(true))), (min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], _GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], (false ? _GLF_FUZZED(4.0) : (min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1])))), (min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], _GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], ((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1]) - 0.0)))), _GLF_IDENTITY(vec2((min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(1.6)), mix(vec2(_GLF_FUZZED(-301.067), _GLF_FUZZED(-5.9)), vec2((vec2((min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(1.6)))[0], (vec2((min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(1.6)))[1]), bvec2(true, true))), bvec2(true, false))))) + _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))), mix(vec2(((_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))))[0], _GLF_FUZZED(54.05)), vec2(_GLF_FUZZED(-1.3), ((_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0)))) + 0.0))))).y, 0.0)), float(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))) + vec2(0.0, 0.0)), mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), vec2(_GLF_FUZZED(-7.2), _GLF_FUZZED(float(true))), bvec2(false, false))), mat2(1.0) * (injectionSwitch))))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(min(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * 1.0)) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(127.008), _GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], clamp(_GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], clamp(_GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], mix(float(_GLF_FUZZED(-93.09)), float((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1]), bool(true))), (min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], _GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], (false ? _GLF_FUZZED(4.0) : (min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1])))), (min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], _GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], ((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1]) - 0.0)))), _GLF_IDENTITY(vec2((min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(1.6)), mix(vec2(_GLF_FUZZED(-301.067), _GLF_FUZZED(-5.9)), vec2((vec2((min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(1.6)))[0], (vec2((min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(1.6)))[1]), bvec2(true, true))), bvec2(true, false))))) + _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))), mix(vec2(((_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))))[0], _GLF_FUZZED(54.05)), vec2(_GLF_FUZZED(-1.3), ((_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0)))) + 0.0))))).y, 0.0)), float(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))) + vec2(0.0, 0.0)), mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), vec2(_GLF_FUZZED(-7.2), _GLF_FUZZED(float(true))), bvec2(false, false))), mat2(1.0) * (injectionSwitch))))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(min(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * 1.0)) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(127.008), _GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], clamp(_GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], clamp(_GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], mix(float(_GLF_FUZZED(-93.09)), float((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1]), bool(true))), (min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], _GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], (false ? _GLF_FUZZED(4.0) : (min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1])))), (min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], _GLF_IDENTITY((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1], ((min(mat2(1.0) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-231.597, -496.372, -5446.9390), vec3(4.7, 726.364, -346.518)))))) * (injectionSwitch)))[1]) - 0.0)))), _GLF_IDENTITY(vec2((min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(1.6)), mix(vec2(_GLF_FUZZED(-301.067), _GLF_FUZZED(-5.9)), vec2((vec2((min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(1.6)))[0], (vec2((min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(1.6)))[1]), bvec2(true, true))), bvec2(true, false))))) + _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))), mix(vec2(((_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))))[0], _GLF_FUZZED(54.05)), vec2(_GLF_FUZZED(-1.3), ((_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 0.0)))) + 0.0))))).y, 0.0)))))), float(_GLF_FUZZED(4781.8742)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0))), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0)), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(132.096, 985.141)))))), injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) + _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)))), _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, 0.0), mat2(1.0) * (mat2(1.0, 1.0, 0.0, 0.0)))), max(float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, 0.0), mat2(1.0) * (mat2(1.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, 0.0), mat2(1.0) * (mat2(1.0, 1.0, 0.0, 0.0)))))))) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0)), mat2(1.0) * (injectionSwitch))), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2((injectionSwitch), 1.0, 0.0, determinant(mat3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY((mat3x2((injectionSwitch), 1.0, 0.0, determinant(mat3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)) * mat3(1.0), (true ? (mat3x2((injectionSwitch), 1.0, 0.0, determinant(mat3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)) * mat3(1.0) : _GLF_FUZZED(mat3x2(2030.3099, -3.1, -4516.6642, -150.397, 7568.0777, -226.461)))))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3x2((injectionSwitch), 1.0, 0.0, determinant(mat3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY((mat3x2((injectionSwitch), 1.0, 0.0, determinant(mat3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)) * mat3(1.0), (true ? (mat3x2((injectionSwitch), 1.0, 0.0, determinant(mat3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)) * mat3(1.0) : _GLF_FUZZED(mat3x2(2030.3099, -3.1, -4516.6642, -150.397, 7568.0777, -226.461))))))) * mat2(1.0), (false ? _GLF_FUZZED(vec2(-89.19, -8998.3806)) : (vec2(_GLF_IDENTITY(mat3x2((injectionSwitch), 1.0, 0.0, determinant(mat3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY((mat3x2((injectionSwitch), 1.0, 0.0, determinant(mat3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)) * mat3(1.0), (true ? (mat3x2((injectionSwitch), 1.0, 0.0, determinant(mat3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)) * mat3(1.0) : _GLF_FUZZED(mat3x2(2030.3099, -3.1, -4516.6642, -150.397, 7568.0777, -226.461))))))) * mat2(1.0))))))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) + _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)))).y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)))), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED((2.6 * 55.71))), vec2(_GLF_FUZZED(3863.4121), ((injectionSwitch))[1]), bvec2(false, true)))) + vec2(0.0, 0.0)), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) + _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(3.6, -4.2, 2907.7588, -894.346))))) * mat2(1.0)) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.6, -7.9))))) + vec2(0.0, 0.0))))), mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4615.9891) : 1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))) * (injectionSwitch)))) + _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)))).y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0)), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(132.096, 985.141)))))), injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) + _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)))), _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, 0.0), mat2(1.0) * (mat2(1.0, 1.0, 0.0, 0.0)))), max(float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, 0.0), mat2(1.0) * (mat2(1.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, 0.0), mat2(1.0) * (mat2(1.0, 1.0, 0.0, 0.0)))))))) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0)), mat2(1.0) * (injectionSwitch))), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2((injectionSwitch), 1.0, 0.0, determinant(mat3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY((mat3x2((injectionSwitch), 1.0, 0.0, determinant(mat3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)) * mat3(1.0), (true ? (mat3x2((injectionSwitch), 1.0, 0.0, determinant(mat3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)) * mat3(1.0) : _GLF_FUZZED(mat3x2(2030.3099, -3.1, -4516.6642, -150.397, 7568.0777, -226.461)))))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3x2((injectionSwitch), 1.0, 0.0, determinant(mat3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY((mat3x2((injectionSwitch), 1.0, 0.0, determinant(mat3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)) * mat3(1.0), (true ? (mat3x2((injectionSwitch), 1.0, 0.0, determinant(mat3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)) * mat3(1.0) : _GLF_FUZZED(mat3x2(2030.3099, -3.1, -4516.6642, -150.397, 7568.0777, -226.461))))))) * mat2(1.0), (false ? _GLF_FUZZED(vec2(-89.19, -8998.3806)) : (vec2(_GLF_IDENTITY(mat3x2((injectionSwitch), 1.0, 0.0, determinant(mat3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY((mat3x2((injectionSwitch), 1.0, 0.0, determinant(mat3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)) * mat3(1.0), (true ? (mat3x2((injectionSwitch), 1.0, 0.0, determinant(mat3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)) * mat3(1.0) : _GLF_FUZZED(mat3x2(2030.3099, -3.1, -4516.6642, -150.397, 7568.0777, -226.461))))))) * mat2(1.0))))))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) + _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)))).y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)))), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED((2.6 * 55.71))), vec2(_GLF_FUZZED(3863.4121), ((injectionSwitch))[1]), bvec2(false, true)))) + vec2(0.0, 0.0)), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) + _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(3.6, -4.2, 2907.7588, -894.346))))) * mat2(1.0)) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.6, -7.9))))) + vec2(0.0, 0.0))))), mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4615.9891) : 1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))) * (injectionSwitch)))) + _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)))).y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0)), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(132.096, 985.141)))))), injectionSwitch, injectionSwitch))))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) + _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)))), _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, 0.0), mat2(1.0) * (mat2(1.0, 1.0, 0.0, 0.0)))), max(float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, 0.0), mat2(1.0) * (mat2(1.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, 0.0), mat2(1.0) * (mat2(1.0, 1.0, 0.0, 0.0)))))))) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0)), mat2(1.0) * (injectionSwitch))), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2((injectionSwitch), 1.0, 0.0, determinant(mat3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY((mat3x2((injectionSwitch), 1.0, 0.0, determinant(mat3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)) * mat3(1.0), (true ? (mat3x2((injectionSwitch), 1.0, 0.0, determinant(mat3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)) * mat3(1.0) : _GLF_FUZZED(mat3x2(2030.3099, -3.1, -4516.6642, -150.397, 7568.0777, -226.461)))))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3x2((injectionSwitch), 1.0, 0.0, determinant(mat3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY((mat3x2((injectionSwitch), 1.0, 0.0, determinant(mat3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)) * mat3(1.0), (true ? (mat3x2((injectionSwitch), 1.0, 0.0, determinant(mat3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)) * mat3(1.0) : _GLF_FUZZED(mat3x2(2030.3099, -3.1, -4516.6642, -150.397, 7568.0777, -226.461))))))) * mat2(1.0), (false ? _GLF_FUZZED(vec2(-89.19, -8998.3806)) : (vec2(_GLF_IDENTITY(mat3x2((injectionSwitch), 1.0, 0.0, determinant(mat3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY((mat3x2((injectionSwitch), 1.0, 0.0, determinant(mat3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)) * mat3(1.0), (true ? (mat3x2((injectionSwitch), 1.0, 0.0, determinant(mat3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0)) * mat3(1.0) : _GLF_FUZZED(mat3x2(2030.3099, -3.1, -4516.6642, -150.397, 7568.0777, -226.461))))))) * mat2(1.0))))))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) + _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)))).y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)))), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED((2.6 * 55.71))), vec2(_GLF_FUZZED(3863.4121), ((injectionSwitch))[1]), bvec2(false, true)))) + vec2(0.0, 0.0)), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) + _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(3.6, -4.2, 2907.7588, -894.346))))) * mat2(1.0)) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.6, -7.9))))) + vec2(0.0, 0.0))))), mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)) * (injectionSwitch), mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4615.9891) : 1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))) * (injectionSwitch)))) + _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) / vec2(1.0, 1.0)))).y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))))))))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))) || false), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))) || false), true, false)), true, false, true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))), false))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), false))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), false)))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))), ! (! (true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false))))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), false))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_WRAPPED_IF_FALSE(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), false))), false)))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))), _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec4(bool(bvec4(false, true, true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false))), _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec4(bool(bvec4(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))) || false), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(acosh(4.6)) : injectionSwitch.x))))); _injected_loop_counter --)
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(((1 ^ 0) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), (((1 ^ 0) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) | (((1 ^ 0) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), bool(bvec3(_GLF_IDENTITY(_injected_loop_counter != ((_GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) >> 0) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), max(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) ^ 0)))), ! (! (_injected_loop_counter != (_GLF_IDENTITY(((1 ^ 0) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (_GLF_IDENTITY(int(2), (int(2)) - 0))))) >> _GLF_IDENTITY(int(2), int(2)), max((_GLF_IDENTITY((1 ^ 0) << _GLF_IDENTITY(int(2), int(2)), int(ivec3((1 ^ 0) << _GLF_IDENTITY(int(2), int(2)), 0, 0)))) >> _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(((1 ^ 0) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY(((1 ^ 0) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), (((1 ^ 0) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) << 0), ((1 ^ 0) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, ~ (~ (2))))))))))))), false, false)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, round(_GLF_IDENTITY(length(normalize(1.0)), max(length(normalize(1.0)), length(normalize(1.0))))) * (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0))), injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch.y, round(_GLF_IDENTITY(length(normalize(1.0)), max(length(normalize(1.0)), length(normalize(1.0))))) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.4)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(true, true && (true))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0))), min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0))))), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, round(_GLF_IDENTITY(length(normalize(1.0)), max(length(normalize(1.0)), length(normalize(1.0))))) * (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-697.961) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 0.0), (vec4(injectionSwitch.y, 0.0, 1.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(_GLF_IDENTITY(vec2(injectionSwitch), min(vec2(injectionSwitch), vec2(injectionSwitch))), vec2(injectionSwitch))))).y)))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, round(_GLF_IDENTITY(length(_GLF_IDENTITY(_GLF_IDENTITY(normalize(1.0), float(mat4x2(_GLF_IDENTITY(normalize(1.0), 0.0 + (normalize(1.0))), 0.0, 0.0, cos(0.0), sqrt(1.0), 1.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(normalize(1.0), float(mat4x2(_GLF_IDENTITY(normalize(1.0), 0.0 + (normalize(1.0))), 0.0, 0.0, cos(0.0), sqrt(1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(normalize(1.0), float(mat4x2(_GLF_IDENTITY(normalize(1.0), 0.0 + (normalize(1.0))), 0.0, 0.0, cos(0.0), sqrt(1.0), 1.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(normalize(1.0), float(mat4x2(_GLF_IDENTITY(normalize(1.0), 0.0 + (normalize(1.0))), 0.0, 0.0, cos(0.0), sqrt(1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(normalize(1.0), float(mat4x2(_GLF_IDENTITY(normalize(1.0), 0.0 + (normalize(1.0))), 0.0, 0.0, cos(0.0), sqrt(1.0), 1.0, 1.0, 0.0))), _GLF_IDENTITY(normalize(1.0), float(mat4x2(_GLF_IDENTITY(normalize(1.0), 0.0 + (normalize(1.0))), 0.0, 0.0, cos(0.0), sqrt(1.0), 1.0, 1.0, 0.0))))), _GLF_IDENTITY(normalize(1.0), float(mat4x2(_GLF_IDENTITY(normalize(1.0), 0.0 + (normalize(1.0))), 0.0, 0.0, cos(0.0), sqrt(1.0), 1.0, 1.0, 0.0)))))), max(length(normalize(1.0)), length(normalize(1.0))))) * (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)), float(_GLF_FUZZED(-1888.9660)), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).y)))))), max(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), float(_GLF_FUZZED(_GLF_IDENTITY(-1888.9660, (-1888.9660) - sqrt(0.0)))), bool(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), (injectionSwitch.x > injectionSwitch.y)))))), vec4(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), float(_GLF_FUZZED(-1888.9660)), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), _GLF_IDENTITY(vec2(_GLF_FUZZED(3.1), _GLF_FUZZED(-85.92)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(floor(injectionSwitch)) : _GLF_IDENTITY(vec2(_GLF_FUZZED(3.1), _GLF_FUZZED(-85.92)), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(3.1), _GLF_FUZZED(-85.92)), max(vec2(_GLF_FUZZED(3.1), _GLF_FUZZED(-85.92)), vec2(_GLF_FUZZED(3.1), _GLF_FUZZED(-85.92)))), vec2(_GLF_FUZZED(3.1), _GLF_FUZZED(-85.92)), vec2(_GLF_FUZZED(3.1), _GLF_FUZZED(-85.92)))))), bvec2(false, false))).y)))), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.4)), float(injectionSwitch.y), bool(true))), round(_GLF_IDENTITY(length(normalize(1.0)), max(length(normalize(1.0)), length(normalize(1.0))))) * (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 0.0, 1.0, 0.0))), injectionSwitch.y)))), false, _GLF_IDENTITY(false, (false) && true), true)))) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)).x)), (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)).x))) >> (0u ^ 0u));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0)))) - 0.0))) < injectionSwitch.y)) && (false))))
      barrier();
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-790.704)), float(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))), bool(true)))) - 0.0)))))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_injected_loop_counter != 0))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false))))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)))))))))) && true))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), sqrt(0.0), 1.0, 0.0, log(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0)), 0.0)), clamp(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, log(1.0), 0.0)), float(mat3x2(float(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)))).y, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, log(1.0), 0.0)), 0.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))))), float(mat2x4(injectionSwitch.y, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, log(1.0), 0.0)), float(mat2x4(injectionSwitch.y, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, log(1.0), 0.0)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, tan(0.0)), (mat4x2(injectionSwitch.x, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, tan(0.0))) * mat4(1.0)))) > injectionSwitch.y))))
        continue;
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))
        {
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
        }
       else
        {
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          continue;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(clamp(8, 8, 8), min(_GLF_IDENTITY(clamp(8, 8, 8), min(_GLF_IDENTITY(clamp(8, 8, 8), 0 + (clamp(8, 8, 8))), clamp(8, 8, 8))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(8, clamp(8, 8, 8)), 8, 8), (clamp(8, 8, 8)) >> 0))))), int(ivec3(int(_GLF_IDENTITY(8, _GLF_IDENTITY(clamp(8, 8, 8), min(clamp(8, 8, 8), _GLF_IDENTITY(clamp(8, 8, 8), (clamp(8, 8, 8)) >> 0))))), 1, (0 >> _GLF_IDENTITY(int(7), int(7)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0))), injectionSwitch)).y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0))), injectionSwitch)).y))), true)), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0))), injectionSwitch)).y))), true))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 1), (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(0), ivec4(0))) ^ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 1), ivec4(0, 0, 0, 0) ^ (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 1)))))), (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 1), (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(0), ivec4(0))) ^ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 1), ivec4(0, 0, 0, 0) ^ (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 1))))))) / 1)) + (int(7))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false)))), bool(_GLF_IDENTITY(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false))))), (_GLF_IDENTITY(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false))))), (bool(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false)))))) || false)) || false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(41138u, 120986u, 109530u)))).x, gl_WorkGroupID.x));
 for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, 1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))));
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), (bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), false))) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-41.79)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      continue;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_size))) + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_size))) + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_size))) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_size))) + subgroup_id * subgroup_size) ^ 0u))) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0), mat2(1.0) * (vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0))), vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0))))).y, max(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0), mat2(1.0) * (vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0))), vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0))))).y, max(injectionSwitch.y, injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-178.546), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7351.9931)), bvec2(true, false))).y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-178.546), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7351.9931)), bvec2(true, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-178.546), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7351.9931)), bvec2(true, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-178.546), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7351.9931)), bvec2(true, false))).y)))))))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(77625) : _GLF_IDENTITY((1 ^ 1), _GLF_IDENTITY(((1 ^ _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1))))) | (1)))), min(((1 ^ _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1))))) | (1)))), ((1 ^ _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1))))) | (1)))))) + 0))), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1))) ^ 1), (false ? _GLF_FUZZED(77625) : _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) + 0))), 0))) >> _GLF_IDENTITY(int(0), int(0)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(77625) : _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) + 0))), int(ivec2(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(77625) : _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) + 0))), 0))) >> _GLF_IDENTITY(int(0), int(0))), ((_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(77625) : _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) + 0))), int(ivec2(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(77625) : _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) + 0))), 0))) >> _GLF_IDENTITY(int(0), int(0)))) >> (0 | 0))), true), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(77625) : _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (1)))))) ^ 1), ((1 ^ 1)) + 0))), int(ivec2(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(77625), (_GLF_IDENTITY(_GLF_FUZZED(77625), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_FUZZED(77625)))) | (_GLF_FUZZED(77625))) : _GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) | ((1 ^ 1)))) + 0))), 0))) >> _GLF_IDENTITY(int(0), int(0))), clamp((_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(77625) : _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (1)))))) ^ 1), ((1 ^ 1)) + 0))), int(ivec2(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(77625), (_GLF_IDENTITY(_GLF_FUZZED(77625), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_FUZZED(77625)))) | (_GLF_FUZZED(77625))) : _GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) | ((1 ^ 1)))) + 0))), 0))) >> _GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(77625) : _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (1)))))) ^ 1), ((1 ^ 1)) + 0))), int(ivec2(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(77625), (_GLF_IDENTITY(_GLF_FUZZED(77625), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_FUZZED(77625)))) | (_GLF_FUZZED(77625))) : _GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) | ((1 ^ 1)))) + 0))), 0))) >> _GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(77625) : _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | (1)))))) ^ 1), ((1 ^ 1)) + 0))), int(ivec2(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(77625), (_GLF_IDENTITY(_GLF_FUZZED(77625), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_FUZZED(77625)))) | (_GLF_FUZZED(77625))) : _GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) | ((1 ^ 1)))) + 0))), 0))) >> _GLF_IDENTITY(int(0), int(0)))))), true), true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(77625) : _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) + 0))), int(ivec2(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(77625) : _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) + 0))), 0))) >> _GLF_IDENTITY(int(0), int(0)))), true), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(77625) : _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) + 0))), int(ivec2(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(77625) : _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) + 0))), 0))) >> _GLF_IDENTITY(int(0), int(0)))), true), true, false))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(77625) : _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) + 0))), int(ivec2(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(77625) : _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) + 0))), 0))) >> _GLF_IDENTITY(int(0), int(0)))), true), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(77625) : _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) + 0))), int(ivec2(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(77625) : _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) + 0))), 0))) >> _GLF_IDENTITY(int(0), int(0)))), true), true, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(77625) : _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) + 0))), int(ivec2(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(77625) : _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) + 0))), 0))) >> _GLF_IDENTITY(int(0), int(0)))), true), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(77625) : _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) + 0))), int(ivec2(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(77625) : _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) + 0))), 0))) >> _GLF_IDENTITY(int(0), int(0)))), true), true, false))), false)))))))))); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(0, 1 * (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, float(mat2(injectionSwitch.y, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), min(normalize(vec4(1.0, 1.0, 1.0, 1.0)), normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 0.0, 1.0)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(float(workgroup_id))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))))), injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))))), _GLF_IDENTITY(bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true)), ! (! (bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true)))))))))))))))), false || ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat4x3(injectionSwitch[1], 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0)))))).y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat4x3(injectionSwitch[1], 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0)))))).y), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat4x3(injectionSwitch[1], 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0)))))).y), false, true), bvec3(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat4x3(injectionSwitch[1], 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0)))))).y), false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), false, false, true)), true))))))))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true)), ! (! (bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true)))))))))))))))))))), false || ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true)), true))))))))))))), true), false, false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(836.699))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(836.699))) > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)), injectionSwitch)).y), false, false, true)), true))))))))))), false || ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))))))))))))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true)))))), bool(bvec2(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true)))))), false))))), false, false))))))))), _GLF_IDENTITY(false || ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true)))))))))))), (false || ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))))))))))))) && true)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true)))))), bool(bvec2(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true)))))), false))))), false, false))))))))), _GLF_IDENTITY(false || ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true)))))))))))), (false || ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))))))))))))) && true)), true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true)))))), bool(bvec2(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true)))))), false))))), false, false))))))))), _GLF_IDENTITY(false || ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true)))))))))))), (false || ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))))))))))))) && true)), true))), true), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true)))))), bool(bvec2(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true)))))), false))))), false, false))))))))), _GLF_IDENTITY(false || ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true)))))))))))), (false || ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))))))))))))) && true)), true))), true), true)))))), false, false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(836.699))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(836.699))) > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)), injectionSwitch)).y), false, false, true)), true))))))))))), false || ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))))))))))))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true)))))), bool(bvec2(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true)))))), false))))), false, false))))))))), _GLF_IDENTITY(false || ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true)))))))))))), (false || ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))))))))))))) && true)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true)))))), bool(bvec2(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true)))))), false))))), false, false))))))))), _GLF_IDENTITY(false || ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true)))))))))))), (false || ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))))))))))))) && true)), true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true)))))), bool(bvec2(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true)))))), false))))), false, false))))))))), _GLF_IDENTITY(false || ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true)))))))))))), (false || ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))))))))))))) && true)), true))), true), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true)))))), bool(bvec2(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))), true)))))), false))))), false, false))))))))), _GLF_IDENTITY(false || ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true)))))))))))), (false || ((! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)), true))))))))))))) && true)), true))), true), true)))))), false, false))))) || false))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.1)), vec2(_GLF_FUZZED(-2641.6688), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
      barrier();
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id)) + 1) | 0u), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)))) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / 1.0)))))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_injected_loop_counter, int(ivec2(_GLF_IDENTITY(_injected_loop_counter, int(ivec4(_injected_loop_counter, 1, 0, 0))), (0 << _GLF_IDENTITY(int(7), int(7)))))), (_GLF_IDENTITY(0 | 0, (_GLF_IDENTITY(0 | 0, clamp(0 | 0, 0 | 0, 0 | 0))) - 0)), 1, 0), min(ivec4(_injected_loop_counter, (0 | 0), 1, 0), ivec4(_injected_loop_counter, (0 | 0), 1, 0))))) < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), min(_GLF_IDENTITY(1 * (4), (true ? 1 * (4) : _GLF_FUZZED(30918))), 1 * (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(int(ivec2(4, 0)), max(int(ivec2(4, 0)), int(ivec2(4, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(4, max(4, 4))) - 0)) | (_GLF_IDENTITY(4, max(4, 4)))))))), 64, 4);
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
}
