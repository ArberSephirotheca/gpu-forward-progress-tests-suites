#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_14 {
 ivec2 _f0;
 float _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_12 {
 vec2 _f0;
} ;

struct _GLF_struct_11 {
 mat4x3 _f0;
 mat3x2 _f1;
 float _f2;
} ;

struct _GLF_struct_10 {
 bvec2 _f0;
 bvec3 _f1;
 mat3x2 _f2;
 mat4x2 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_9 {
 mat3x2 _f0;
 int _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_13 {
 uvec2 _f0;
 _GLF_struct_9 _f1;
 vec2 _f2;
 uvec4 _f3;
 _GLF_struct_10 _f4;
 _GLF_struct_11 _f5;
 _GLF_struct_12 _f6;
 uint subgroup_id;
} ;

struct _GLF_struct_7 {
 uvec3 _f0;
 bvec3 _f1;
 ivec3 _f2;
 bvec4 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_6 {
 uint _f0;
} ;

struct _GLF_struct_5 {
 mat3x2 _f0;
 mat3x4 _f1;
 uint _f2;
 int _f3;
 mat4x2 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_4 {
 bvec2 _f0;
 vec2 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_8 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 int _f2;
 int _f3;
 _GLF_struct_6 _f4;
 _GLF_struct_7 _f5;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 bool _f1;
 ivec3 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_1 {
 int _f0;
 mat3x2 _f1;
 mat3 _f2;
 bvec2 _f3;
 bool _f4;
 vec4 _f5;
 bool _f6;
} ;

struct _GLF_struct_0 {
 bool _f0;
 ivec4 _f1;
 bvec2 _f2;
 bvec4 _f3;
 mat3x4 _f4;
 mat4x3 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
} ;

struct _GLF_struct_15 {
 _GLF_struct_3 _f0;
 mat3x4 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_13 _f3;
 _GLF_struct_14 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), false))), false)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), false))), false))) && true))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec3(-4.1, -3972.7791, 4.6).zx) : injectionSwitch)).y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec3(-4.1, -3972.7791, 4.6).zx) : injectionSwitch)).y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))))), ! (! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec3(-4.1, -3972.7791, 4.6).zx) : injectionSwitch)).y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
  return;
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_3(_GLF_struct_0(true, _GLF_IDENTITY(ivec4(1), min(_GLF_IDENTITY(ivec4(1), max(ivec4(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-78178) : _GLF_IDENTITY(1, max(1, 1))))), ivec4(1))), ivec4(1))), bvec2(true), bvec4(true), mat3x4(1.0), mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), (_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))) + tan(0.0))), ivec3(1)), _GLF_struct_1(1, mat3x2(1.0), mat3(1.0), bvec2(true), true, _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7.7)), bool(false)))), vec4(vec4(vec4(1.0)))), true), _GLF_struct_2(mat3x4(1.0), true, ivec3(1), uvec3(1u))), mat3x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-676.593)), bool(false)), (_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-676.593)), bool(false)), (false ? _GLF_FUZZED(3.5) : mix(float(1.0), float(_GLF_FUZZED(-676.593)), bool(false))))) - 0.0))), _GLF_struct_8(_GLF_struct_4(bvec2(true), _GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(vec2(1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY((vec2(1.0)) * mat2(1.0), mix(vec2(_GLF_FUZZED(-0.6), _GLF_IDENTITY((_GLF_IDENTITY((vec2(1.0)) * mat2(1.0), min((vec2(1.0)) * mat2(1.0), (vec2(1.0)) * mat2(1.0))))[1], (true ? ((vec2(1.0)) * mat2(1.0))[1] : _GLF_FUZZED(4.1)))), vec2(((vec2(1.0)) * mat2(1.0))[0], _GLF_FUZZED(-7.8)), bvec2(true, false)))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, determinant(mat3(0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-51.66)))))), (true ? vec2(_GLF_IDENTITY(1.0, determinant(mat3(0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-51.66)))))) : _GLF_FUZZED(vec2(7.3, -0.3))))) * mat2(1.0), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), 0.0 + (_GLF_FUZZED(-0.6))), _GLF_IDENTITY(((vec2(1.0)) * mat2(1.0))[1], (true ? ((vec2(1.0)) * mat2(1.0))[1] : _GLF_FUZZED(4.1)))), vec2(((vec2(1.0)) * mat2(1.0))[0], _GLF_FUZZED(-7.8)), bvec2(true, false)))))[0], max((_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, determinant(mat3(0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-51.66)))))), (true ? vec2(_GLF_IDENTITY(1.0, determinant(mat3(0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-51.66)))))) : _GLF_FUZZED(vec2(7.3, -0.3))))) * mat2(1.0), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), 0.0 + (_GLF_FUZZED(-0.6))), _GLF_IDENTITY(((vec2(1.0)) * mat2(1.0))[1], (true ? ((vec2(1.0)) * mat2(1.0))[1] : _GLF_FUZZED(4.1)))), vec2(((vec2(1.0)) * mat2(1.0))[0], _GLF_FUZZED(-7.8)), bvec2(true, false)))))[0], _GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, determinant(mat3(0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-51.66)))))), (true ? vec2(_GLF_IDENTITY(1.0, determinant(mat3(0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-51.66)))))) : _GLF_FUZZED(vec2(7.3, -0.3))))) * mat2(1.0), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), 0.0 + (_GLF_FUZZED(-0.6))), _GLF_IDENTITY(((vec2(1.0)) * mat2(1.0))[1], (true ? ((vec2(1.0)) * mat2(1.0))[1] : _GLF_FUZZED(4.1)))), vec2(((vec2(1.0)) * mat2(1.0))[0], _GLF_FUZZED(-7.8)), bvec2(true, false)))))[0], min((_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, determinant(mat3(0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-51.66)))))), (true ? vec2(_GLF_IDENTITY(1.0, determinant(mat3(0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-51.66)))))) : _GLF_FUZZED(vec2(7.3, -0.3))))) * mat2(1.0), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), 0.0 + (_GLF_FUZZED(-0.6))), _GLF_IDENTITY(((vec2(1.0)) * mat2(1.0))[1], (true ? ((vec2(1.0)) * mat2(1.0))[1] : _GLF_FUZZED(4.1)))), vec2(((vec2(1.0)) * mat2(1.0))[0], _GLF_FUZZED(-7.8)), bvec2(true, false)))))[0], _GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, determinant(mat3(0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-51.66)))))), (true ? vec2(_GLF_IDENTITY(1.0, determinant(mat3(0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-51.66)))))) : _GLF_FUZZED(vec2(7.3, -0.3))))) * mat2(1.0), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), 0.0 + (_GLF_FUZZED(-0.6))), _GLF_IDENTITY(((vec2(1.0)) * mat2(1.0))[1], (true ? ((vec2(1.0)) * mat2(1.0))[1] : _GLF_FUZZED(4.1)))), vec2(((vec2(1.0)) * mat2(1.0))[0], _GLF_FUZZED(-7.8)), bvec2(true, false)))))[0], 0.0 + ((_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, determinant(mat3(0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-51.66)))))), (true ? vec2(_GLF_IDENTITY(1.0, determinant(mat3(0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-51.66)))))) : _GLF_FUZZED(vec2(7.3, -0.3))))) * mat2(1.0), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), 0.0 + (_GLF_FUZZED(-0.6))), _GLF_IDENTITY(((vec2(1.0)) * mat2(1.0))[1], (true ? ((vec2(1.0)) * mat2(1.0))[1] : _GLF_FUZZED(4.1)))), vec2(((vec2(1.0)) * mat2(1.0))[0], _GLF_FUZZED(-7.8)), bvec2(true, false)))))[0])))))), _GLF_FUZZED(_GLF_IDENTITY(-45.50, (-45.50) + 0.0))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-3.5, clamp(-3.5, -3.5, -3.5))), (_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY((vec2(1.0)) * mat2(1.0), mix(vec2(_GLF_FUZZED(-0.6), _GLF_IDENTITY(((vec2(1.0)) * mat2(1.0))[1], (true ? ((vec2(1.0)) * mat2(1.0))[1] : _GLF_FUZZED(4.1)))), vec2(((vec2(1.0)) * mat2(1.0))[0], _GLF_FUZZED(_GLF_IDENTITY(-7.8, clamp(_GLF_IDENTITY(-7.8, (-7.8) / 1.0), _GLF_IDENTITY(-7.8, clamp(_GLF_IDENTITY(-7.8, mix(float(-7.8), float(_GLF_FUZZED(29.24)), bool(false))), -7.8, -7.8)), -7.8)))), bvec2(true, false)))))[1]), bvec2(false, true))), _GLF_IDENTITY(vec2(1.0), mix(vec2((vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))))[0], (vec2(1.0))[1]), vec2(_GLF_FUZZED(-64.15), _GLF_FUZZED(8.9)), bvec2(false, false)))))) + vec2(0.0, 0.0)), mat2x4(_GLF_IDENTITY(1.0, float(float(1.0))))), _GLF_struct_5(mat3x2(1.0), mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8433.1674) : 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.9) : 1.0))))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1, mat4x2(1.0), ivec2(1)), _GLF_IDENTITY(1, (1) ^ 0), 1, _GLF_struct_6(1u), _GLF_struct_7(uvec3(1u), bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), bool(bvec3(bool(bvec3(true, true, true)), true, false))))), false || (bool(true)))))), ivec3(_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), ((1)) / 1))), bvec4(true), vec4(1.0))), _GLF_struct_13(uvec2(1u), _GLF_struct_9(mat3x2(1.0), 1, mat2x3(1.0)), vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(dot(vec3(determinant(mat3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(float(0.0))))))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, exp(_GLF_IDENTITY(0.0, (0.0) * cos(0.0)))), vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6048.9572)), float(0.0), bool(true))))), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), mix(float(_GLF_FUZZED(805.640)), float(0.0), bool(true))), 0.0)), sqrt(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-12.79)), bool(false)))))))), dot(vec3(determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) + 0.0, max(_GLF_IDENTITY(_GLF_IDENTITY((0.0) + 0.0, ((0.0) + 0.0) + 0.0), min((_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0, (0.0) + 0.0)), (0.0) + 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, exp(0.0)), _GLF_IDENTITY(vec3(1.0, 0.0, sqrt(0.0)), mix(vec3((vec3(1.0, 0.0, sqrt(0.0)))[0], (vec3(1.0, 0.0, sqrt(0.0)))[1], (vec3(1.0, 0.0, sqrt(0.0)))[2]), vec3(_GLF_FUZZED((3.5 * -26.97)), _GLF_FUZZED(-361.474), _GLF_FUZZED(-28.24)), bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, false))))), 0.0), (false ? _GLF_FUZZED(vec3(0.0, 1652.4371, -2717.2946)) : _GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, exp(0.0)), _GLF_IDENTITY(vec3(mat4(_GLF_IDENTITY(vec3(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, exp(0.0)), (vec3(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, exp(0.0))) - vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, abs(0.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), (vec3(mat4(_GLF_IDENTITY(vec3(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, exp(0.0)), (vec3(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, exp(0.0))) - vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, abs(0.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))) * mat3(1.0))), vec3(1.0, 0.0, sqrt(0.0))), dot(vec3(determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 0.0, 0.0)), 1.0, exp(0.0)), vec3(1.0, 0.0, sqrt(0.0)))), 0.0), vec3(1.0, 1.0, 1.0) * (vec3(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, exp(0.0)), _GLF_IDENTITY(vec3(mat4(_GLF_IDENTITY(vec3(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, exp(0.0)), (vec3(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, exp(0.0))) - vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, abs(0.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), (vec3(mat4(_GLF_IDENTITY(vec3(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, exp(0.0)), (vec3(determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, exp(0.0))) - vec3(0.0, 0.0, 0.0)), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, abs(0.0), abs(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))) * mat3(1.0))), vec3(1.0, 0.0, sqrt(0.0))), dot(vec3(determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 0.0, 0.0)), 1.0, exp(0.0)), vec3(1.0, 0.0, sqrt(0.0)))), 0.0)))))))), uvec4(_GLF_IDENTITY(1u, uint(uint(1u)))), _GLF_struct_10(bvec2(true), bvec3(true), mat3x2(1.0), mat4x2(1.0), ivec4(1)), _GLF_struct_11(mat4x3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-520.746) : 1.0))))), mat3x2(1.0), 1.0), _GLF_struct_12(vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-83.66) : 1.0)), 1.0)))), gl_SubgroupID), _GLF_struct_14(ivec2(_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), (1.0) / 1.0), ivec2(1)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(_GLF_IDENTITY(vec2(-59.52, -4.3), mix(vec2((vec2(-59.52, -4.3))[0], (vec2(-59.52, -4.3))[1]), vec2(_GLF_FUZZED(-28.46), _GLF_FUZZED(3.8)), bvec2(false, false)))))) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 0.0)), (vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 0.0))) - vec2(0.0, 0.0))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((false ? -8954.0045 : (3930.9455 + -9278.3714))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4961.1686)), bvec2(true, false))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-994.936)), bool(false))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(-9462.9696) : _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0), max(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0), max(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0), (false ? _GLF_FUZZED(-9872.0999) : _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0))))))), float(_GLF_FUZZED(97.62)), bool(false))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-9462.9696) : _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0), float(_GLF_FUZZED(97.62)), bool(false))), (false ? _GLF_FUZZED(-1.1) : false ? _GLF_IDENTITY(_GLF_FUZZED(-9462.9696), (_GLF_FUZZED(-9462.9696)) - 0.0) : _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0), float(_GLF_FUZZED(97.62)), bool(false)))))) - 0.0))) > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))))).y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1562.9021) : injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1562.9021) : injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), false)), ! (! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1562.9021) : injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))), true && (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), false, false, false)))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), (false || (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))) || false)), bool(bvec4(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))), false, false, false)))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(false, false, true))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y))))) && true))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, false)), false || (bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), false || (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), false, false, true)))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), false)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)))))))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true))), false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))), false))))) || false), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))), ((! (bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, true, false), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(false, true, false), true))), true)))))))))) || false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4.9) : injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))))) / sqrt(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, ! (! ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9.4))), 1.0, 1.0))))), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, (1.0) - log(1.0)), _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (true ? vec3(1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(vec3(91.40, -7.5, 0.4)))))), cos(0.0))))) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)))))))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, cos(0.0)), (false ? _GLF_FUZZED(vec2(-1.0, 4.3)) : vec2(1.0, cos(0.0))))))) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), _GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat4x3(vec2(1.0, 1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), vec2(1.0, 1.0))))) * (_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, cos(0.0)), (vec2(1.0, cos(0.0))) / vec2(1.0, 1.0))))) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mix(vec2(_GLF_FUZZED(-1646.4169), (vec2(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, cos(0.0)), (vec2(1.0, cos(0.0))) / vec2(1.0, 1.0))))) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[1]), vec2((vec2(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, cos(0.0)), (vec2(1.0, cos(0.0))) / vec2(1.0, 1.0))))) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[0], _GLF_FUZZED((false ? -33.00 : -5.2))), bvec2(true, false)))))).y, _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, cos(0.0))))) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.0)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) && true))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(cos(vec2(0.0, 0.0)))).x), float(_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(-5002.4696 * 7.9, float(vec4(-5002.4696 * 7.9, 1.0, 0.0, 0.0))), (true ? -5002.4696 * _GLF_IDENTITY(7.9, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(7.9, 0.0, 1.0), mix(vec3(_GLF_FUZZED(70.39), _GLF_FUZZED(908.466), _GLF_FUZZED(155.155)), vec3((vec3(7.9, 0.0, 1.0))[0], _GLF_IDENTITY((vec3(7.9, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0))[1], ((vec3(7.9, 0.0, 1.0))[1]) * 1.0), (vec3(7.9, 0.0, 1.0))[2]), bvec3(true, true, true)))), (float(_GLF_IDENTITY(vec3(7.9, 0.0, 1.0), mix(vec3(_GLF_FUZZED(70.39), _GLF_FUZZED(908.466), _GLF_FUZZED(155.155)), vec3((vec3(7.9, 0.0, 1.0))[0], _GLF_IDENTITY((vec3(7.9, 0.0, 1.0))[1], ((vec3(7.9, 0.0, 1.0))[1]) * 1.0), (vec3(7.9, 0.0, 1.0))[2]), bvec3(true, true, true))))) * 1.0)) : _GLF_FUZZED(22.15)))))), bool(false))))), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(0.4) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(intBitsToFloat(ivec2(46571, -20473))))).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, abs(0.0))), (true ? vec2(vec4(injectionSwitch, 1.0, abs(0.0))) : _GLF_FUZZED(vec2(-124.024, -839.751))))).y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), mix(float(float(injectionSwitch.x)), float(_GLF_FUZZED(-5.7)), bool(false))), float(_GLF_IDENTITY(_GLF_FUZZED(9.0), clamp(_GLF_IDENTITY(_GLF_FUZZED(9.0), 1.0 * (_GLF_FUZZED(9.0))), _GLF_FUZZED(9.0), _GLF_FUZZED(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec2(9.0, 1.0), mix(vec2((vec2(9.0, 1.0))[0], _GLF_FUZZED(-584.124)), vec2(_GLF_FUZZED(1.1), (vec2(9.0, 1.0))[1]), bvec2(false, true))))), 0.0, log(1.0), 0.0), max(vec4(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec2(9.0, 1.0), mix(vec2((vec2(9.0, 1.0))[0], _GLF_FUZZED(-584.124)), vec2(_GLF_FUZZED(1.1), (vec2(9.0, 1.0))[1]), bvec2(false, true))))), 0.0, log(1.0), 0.0), vec4(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec2(9.0, 1.0), mix(vec2((vec2(9.0, 1.0))[0], _GLF_FUZZED(-584.124)), vec2(_GLF_FUZZED(1.1), (vec2(9.0, 1.0))[1]), bvec2(false, true))))), 0.0, log(1.0), 0.0))))))))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0), injectionSwitch.x)) > injectionSwitch.y), (true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.0)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec2(bvec2(bool(false), true)))))), ! (! (_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(bool(false), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), false, true))))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), false, true))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), false, true))))))), false, false))), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), false, true))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), false, true))))))), false, false))), false)), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), false, true))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), false, true))))))), false, false))), false)), true, true)), true))))))))))))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), _GLF_IDENTITY(false || (bool(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true))))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (false || (bool(false))), (! (false || (bool(false)))) || false)))), false || (! (_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (false || (bool(false))), (! (false || (bool(false)))) || false))))))))), true))))), true, false), false))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true))))), true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || (bool(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))))), bool(bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))))), (bool(bool((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true))))))) || false)))))) && true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false || (bool(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))))), bool(bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))))), (bool(bool((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true))))))) || false)))))) && true)), true, false), true))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (false || _GLF_IDENTITY((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(false))))), bool(bvec2(! (false || (bool(false))), true))))), true, false), _GLF_IDENTITY(false, false || (false)))))))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), _GLF_IDENTITY(false || (bool(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true))))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (false || (bool(false))), (! (false || (bool(false)))) || false)))), false || (! (_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (false || (bool(false))), (! (false || (bool(false)))) || false))))))))), true))))), true, false), false))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true))))), true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || (bool(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))))), bool(bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))))), (bool(bool((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true))))))) || false)))))) && true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false || (bool(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))))), bool(bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))))), (bool(bool((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true))))))) || false)))))) && true)), true, false), true))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (false || _GLF_IDENTITY((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(false))))), bool(bvec2(! (false || (bool(false))), true))))), true, false), _GLF_IDENTITY(false, false || (false))))))))))))))))), true, true, true))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0), injectionSwitch.x)) > injectionSwitch.y)) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.0)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) && true))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / abs(cos(vec2(0.0, 0.0))), mix(vec2(((injectionSwitch) / abs(cos(vec2(0.0, 0.0))))[0], ((injectionSwitch) / abs(cos(vec2(0.0, 0.0))))[1]), vec2(_GLF_FUZZED(3.7), _GLF_FUZZED(261.451)), bvec2(false, false)))).x), float(_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(-5002.4696 * 7.9, float(vec4(-5002.4696 * 7.9, 1.0, 0.0, 0.0))), (true ? -5002.4696 * _GLF_IDENTITY(7.9, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(7.9, 0.0, 1.0), mix(vec3(_GLF_FUZZED(70.39), _GLF_FUZZED(908.466), _GLF_FUZZED(155.155)), vec3((vec3(7.9, 0.0, 1.0))[0], _GLF_IDENTITY((vec3(7.9, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0))[1], ((vec3(7.9, 0.0, 1.0))[_GLF_IDENTITY(1, int(ivec3(1, 0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))))]) * 1.0), (vec3(7.9, 0.0, 1.0))[_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(2, 0, 1)), int(ivec2(_GLF_IDENTITY(int(ivec3(2, 0, 1)), (false ? _GLF_FUZZED(-70775) : int(ivec3(2, 0, 1)))), 1))))]), bvec3(true, true, true)))), (float(_GLF_IDENTITY(vec3(7.9, 0.0, 1.0), mix(vec3(_GLF_FUZZED(70.39), _GLF_FUZZED(908.466), _GLF_FUZZED(155.155)), vec3((vec3(7.9, 0.0, 1.0))[0], _GLF_IDENTITY((vec3(7.9, 0.0, 1.0))[1], ((vec3(7.9, 0.0, 1.0))[1]) * 1.0), (vec3(7.9, 0.0, 1.0))[2]), bvec3(true, true, true))))) * 1.0)) : _GLF_FUZZED(22.15)))))), bool(false))))), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(0.4) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))) : _GLF_FUZZED(intBitsToFloat(ivec2(46571, -20473))))).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, abs(0.0))), (true ? vec2(vec4(injectionSwitch, 1.0, abs(_GLF_IDENTITY(0.0, (0.0) + 0.0)))) : _GLF_FUZZED(vec2(-124.024, -839.751))))).y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), mix(float(float(injectionSwitch.x)), float(_GLF_FUZZED(-5.7)), bool(false))), float(_GLF_IDENTITY(_GLF_FUZZED(9.0), clamp(_GLF_IDENTITY(_GLF_FUZZED(9.0), 1.0 * (_GLF_FUZZED(9.0))), _GLF_FUZZED(9.0), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec2(9.0, 1.0), mix(vec2((vec2(9.0, 1.0))[0], _GLF_FUZZED(-584.124)), vec2(_GLF_FUZZED(1.1), (vec2(9.0, 1.0))[1]), bvec2(false, true))))), 0.0, log(1.0), 0.0), max(vec4(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec2(9.0, 1.0), mix(vec2((vec2(9.0, 1.0))[0], _GLF_FUZZED(-584.124)), vec2(_GLF_FUZZED(1.1), (vec2(9.0, 1.0))[1]), bvec2(false, true))))), 0.0, log(1.0), 0.0), vec4(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec2(9.0, 1.0), mix(vec2((vec2(9.0, 1.0))[0], _GLF_FUZZED(-584.124)), vec2(_GLF_FUZZED(1.1), (vec2(9.0, 1.0))[1]), bvec2(false, true))))), 0.0, log(1.0), 0.0))))), max(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec2(9.0, 1.0), mix(vec2((vec2(9.0, 1.0))[0], _GLF_FUZZED(-584.124)), vec2(_GLF_FUZZED(1.1), (vec2(9.0, 1.0))[1]), bvec2(false, true))))), 0.0, log(1.0), 0.0), max(vec4(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec2(9.0, 1.0), mix(vec2((vec2(9.0, 1.0))[0], _GLF_FUZZED(-584.124)), vec2(_GLF_FUZZED(1.1), (vec2(9.0, 1.0))[1]), bvec2(false, true))))), 0.0, log(1.0), 0.0), vec4(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec2(9.0, 1.0), mix(vec2((vec2(9.0, 1.0))[0], _GLF_FUZZED(-584.124)), vec2(_GLF_FUZZED(1.1), (vec2(9.0, 1.0))[1]), bvec2(false, true))))), 0.0, log(1.0), 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec2(9.0, 1.0), mix(vec2((vec2(9.0, 1.0))[0], _GLF_FUZZED(-584.124)), vec2(_GLF_FUZZED(1.1), (vec2(9.0, 1.0))[1]), bvec2(false, true))))), 0.0, log(1.0), 0.0), max(vec4(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec2(9.0, 1.0), mix(vec2((vec2(9.0, 1.0))[0], _GLF_FUZZED(-584.124)), vec2(_GLF_FUZZED(1.1), (vec2(9.0, 1.0))[1]), bvec2(false, true))))), 0.0, log(1.0), 0.0), vec4(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec2(9.0, 1.0), mix(vec2((vec2(9.0, 1.0))[0], _GLF_FUZZED(-584.124)), vec2(_GLF_FUZZED(1.1), (vec2(9.0, 1.0))[1]), bvec2(false, true))))), 0.0, log(1.0), 0.0))))), max(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec2(9.0, 1.0), mix(vec2((vec2(9.0, 1.0))[0], _GLF_FUZZED(-584.124)), vec2(_GLF_FUZZED(1.1), (vec2(9.0, 1.0))[1]), bvec2(false, true))))), 0.0, log(1.0), 0.0), max(vec4(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec2(9.0, 1.0), mix(vec2((vec2(9.0, 1.0))[0], _GLF_FUZZED(-584.124)), vec2(_GLF_FUZZED(1.1), (vec2(9.0, 1.0))[1]), bvec2(false, true))))), 0.0, log(1.0), 0.0), vec4(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec2(9.0, 1.0), mix(vec2((vec2(9.0, 1.0))[0], _GLF_FUZZED(-584.124)), vec2(_GLF_FUZZED(1.1), (vec2(9.0, 1.0))[1]), bvec2(false, true))))), 0.0, log(1.0), 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec2(9.0, 1.0), mix(vec2((vec2(9.0, 1.0))[0], _GLF_FUZZED(-584.124)), vec2(_GLF_FUZZED(1.1), (vec2(9.0, 1.0))[1]), bvec2(false, true))))), 0.0, log(1.0), 0.0), max(vec4(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec2(9.0, 1.0), mix(vec2((vec2(9.0, 1.0))[0], _GLF_FUZZED(-584.124)), vec2(_GLF_FUZZED(1.1), (vec2(9.0, 1.0))[1]), bvec2(false, true))))), 0.0, log(1.0), 0.0), vec4(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec2(9.0, 1.0), mix(vec2((vec2(9.0, 1.0))[0], _GLF_FUZZED(-584.124)), vec2(_GLF_FUZZED(1.1), (vec2(9.0, 1.0))[1]), bvec2(false, true))))), 0.0, log(1.0), 0.0))))), max(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec2(9.0, 1.0), mix(vec2((vec2(9.0, 1.0))[0], _GLF_FUZZED(-584.124)), vec2(_GLF_FUZZED(1.1), (vec2(9.0, 1.0))[1]), bvec2(false, true))))), 0.0, log(1.0), 0.0), max(vec4(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec2(9.0, 1.0), mix(vec2((vec2(9.0, 1.0))[0], _GLF_FUZZED(-584.124)), vec2(_GLF_FUZZED(1.1), (vec2(9.0, 1.0))[1]), bvec2(false, true))))), 0.0, log(1.0), 0.0), vec4(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec2(9.0, 1.0), mix(vec2((vec2(9.0, 1.0))[0], _GLF_FUZZED(-584.124)), vec2(_GLF_FUZZED(1.1), (vec2(9.0, 1.0))[1]), bvec2(false, true))))), 0.0, log(1.0), 0.0))))), _GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec2(9.0, 1.0), mix(vec2((vec2(9.0, 1.0))[0], _GLF_FUZZED(-584.124)), vec2(_GLF_FUZZED(1.1), (vec2(9.0, 1.0))[1]), bvec2(false, true))))), 0.0, log(1.0), 0.0), max(vec4(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec2(9.0, 1.0), mix(vec2((vec2(9.0, 1.0))[0], _GLF_FUZZED(-584.124)), vec2(_GLF_FUZZED(1.1), (vec2(9.0, 1.0))[1]), bvec2(false, true))))), 0.0, log(1.0), 0.0), vec4(_GLF_IDENTITY(9.0, float(_GLF_IDENTITY(vec2(9.0, 1.0), mix(vec2((vec2(9.0, 1.0))[0], _GLF_FUZZED(-584.124)), vec2(_GLF_FUZZED(1.1), (vec2(9.0, 1.0))[1]), bvec2(false, true))))), 0.0, log(1.0), 0.0))))))))))))))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))).x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x))) - 0.0), injectionSwitch.x)) > injectionSwitch.y), (true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (false ? _GLF_FUZZED((81312 - 59387)) : 0))], injectionSwitch[_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-10116)))))])))).x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.0)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec2(bvec2(bool(false), true)))))), ! (! (_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(bool(false), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false))), false, false)))), false, true))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false))), false, false)))), false, true))))), false))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), true), false, true))), false, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, false || (false))), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, _GLF_IDENTITY(false, ! (! (false))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), false, true))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), _GLF_IDENTITY(false, ! (! (false))), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(false), (bool(false)) && true), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), false, true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), _GLF_IDENTITY(false, ! (! (false))), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(false), (bool(false)) && true), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), false, true)))))))))), false, false))), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), false, true))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(false), (bool(false)) && true), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), false, true))))))), false, false))), false)), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true)))))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true)))))))))), false, true))))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), false, true))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), false, true))))))), false, false))), false)), true, true)), true)))))))))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec2(bvec2(bool(false), true)))))), ! (! (_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(bool(false), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false))), false, false)))), false, true))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false))), false, false)))), false, true))))), false))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), true), false, true))), false, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, false || (false))), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, _GLF_IDENTITY(false, ! (! (false))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), false, true))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), _GLF_IDENTITY(false, ! (! (false))), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(false), (bool(false)) && true), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), false, true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), _GLF_IDENTITY(false, ! (! (false))), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(false), (bool(false)) && true), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), false, true)))))))))), false, false))), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), false, true))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(false), (bool(false)) && true), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), false, true))))))), false, false))), false)), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true)))))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true)))))))))), false, true))))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), false, true))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), false, true))))))), false, false))), false)), true, true)), true)))))))))))), true, true)), ! (! (bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec2(bvec2(bool(false), true)))))), ! (! (_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(bool(false), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false))), false, false)))), false, true))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false))), false, false)))), false, true))))), false))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), true), false, true))), false, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, false || (false))), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, _GLF_IDENTITY(false, ! (! (false))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), false, true))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), _GLF_IDENTITY(false, ! (! (false))), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(false), (bool(false)) && true), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), false, true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), _GLF_IDENTITY(false, ! (! (false))), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(false), (bool(false)) && true), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), false, true)))))))))), false, false))), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), false, true))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(false), (bool(false)) && true), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), false, true))))))), false, false))), false)), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true)))))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true)))))))))), false, true))))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), false, true))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(false), true), bvec2(bvec4(bvec2(bool(false), true), false, true))), false, false)))), false, true))))))), false, false))), false)), true, true)), true)))))))))))), true, true))))))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (bool(_GLF_IDENTITY(false, bool(bool(false))))))), _GLF_IDENTITY(false || (bool(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true))))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false || (bool(_GLF_IDENTITY(false, (false) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (bool(false)), false || (false || (bool(false))))), bool(bvec2(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(bool(false), false || (bool(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (false || (bool(false))), (! (false || (bool(false)))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(false || (bool(false)), bool(bvec3(_GLF_IDENTITY(false || (bool(false)), (false || (bool(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))), ! (_GLF_IDENTITY(! (false || (bool(false))), (! (false || (bool(false)))) || false)))) && true)), false || (! (_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (false || (bool(false))), (! (_GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true)))))))) || false))))))))), true))))), true, false), false))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true))))), true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || (bool(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))))), bool(bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))))), (bool(bool((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true))))))) || false)))), ! (! (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))))), bool(bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))))), (bool(bool((_GLF_IDENTITY(! (false || (bool(_GLF_IDENTITY(false, false || (false))))), bool(bvec2(! (false || (bool(false))), true))))))) || false))))))))) && true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false || (bool(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (false || (bool(_GLF_IDENTITY(false, (false) || false)))), bool(bvec2(! (false || (bool(false))), true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))))), bool(bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))))), (bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false))) || (bool(false))), bool(bvec2(! (false || (bool(false))), true))))))) || false)))))) && true)), true, false), true))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (false || _GLF_IDENTITY((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(false))))), bool(bvec2(! (false || (bool(false))), true))))), true, false), _GLF_IDENTITY(false, false || (false)))))))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((bool(false)), ((bool(false))) && true))), _GLF_IDENTITY(false || (bool(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true))))) || (bool(false))), bool(_GLF_IDENTITY(bvec2(! (false || (bool(false))), true), bvec2(bvec2(bvec2(! (false || (bool(false))), true)))))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true))))), true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false || (bool(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false || (bool(false))), ! (! ((false || (bool(false)))))), bool(bvec2(! (_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (false || (bool(false))), (! (false || (bool(_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))) || false)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || (! (_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (false || (bool(false))), (! (false || _GLF_IDENTITY((bool(false)), bool(bvec4(_GLF_IDENTITY((bool(false)), false || ((bool(false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) || false))))))))), true)))), true && ((_GLF_IDENTITY(! _GLF_IDENTITY((false || (bool(false))), ! (! ((false || (bool(false)))))), bool(bvec2(! (_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (false || (bool(false))), (! (false || (bool(_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))) || false)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || (! (_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (false || (bool(false))), (! (false || _GLF_IDENTITY((bool(false)), bool(bvec4(_GLF_IDENTITY((bool(false)), false || ((bool(false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) || false))))))))), true))))))), true, false), false))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || (bool(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) && true))))), true)))), ((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) && true))))), true))))) || false)), true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || (bool(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))))), bool(bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))))), (bool(bool((_GLF_IDENTITY(! (false || (_GLF_IDENTITY(bool(false), (bool(false)) || false))), bool(bvec2(! (false || (bool(false))), true))))))) || false)))))) && true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false || (bool(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true)))), (! _GLF_IDENTITY((_GLF_IDENTITY(! (false || _GLF_IDENTITY((bool(false)), ! (! ((bool(false)))))), bool(bvec2(! (false || (bool(false))), true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false || (_GLF_IDENTITY(bool(false), true && (bool(false))))), bool(bvec2(! (false || (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, false))))), true)))))), bool(bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true))), (_GLF_IDENTITY(! (false || _GLF_IDENTITY((bool(false)), bool(_GLF_IDENTITY(bvec3((bool(false)), false, true), bvec3(bvec4(bvec3((bool(false)), false, true), false)))))), bool(bvec2(! (false || (bool(false))), true)))) || false)) && true)))), (bool(bool((_GLF_IDENTITY(! (false || (bool(false))), bool(bvec2(! (false || (bool(false))), true))))))) || false)))))) && true)), true, false), true))), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (false || _GLF_IDENTITY((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(false))))), bool(bvec2(! (false || (bool(false))), true))))), true, false), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false)))))), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false || (bool(false)), ! (_GLF_IDENTITY(! (false || _GLF_IDENTITY((bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(false))))), bool(bvec2(! (false || (bool(false))), true))))), true, false), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false)))))))))))))))))))))), true, true, true))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5.7))), min(injectionSwitch.x, injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x))) - 0.0), injectionSwitch.x)) > injectionSwitch.y)) && true))) || false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8853.6853)), bool(false)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec2(bvec2(bvec2(bvec2(false, true)))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), max(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, (0) * 1)], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), ((_GLF_IDENTITY(1u, (1u) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(uvec3(uint(4u), 0u, 0u))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (0u & 135088u) ^ (_GLF_IDENTITY(4u, min(4u, 4u)))))))))), (uvec3(_GLF_IDENTITY(0u, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? 0u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) + 0u))), 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, clamp(0, 0, 0))], _GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 1u)))))) - uvec3(0u, 0u, 0u))[1], gl_WorkGroupSize[2])), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), uint(uvec2(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u)))))))).x, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (gl_WorkGroupSize.x), _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) * (1u | 1u))) / ((1u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) | (6u))) >> 0u)))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(clamp((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) * (1u | 1u))) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) * (1u | 1u))) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) * (1u | 1u))) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (clamp((_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) * (1u | 1u))) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) * (1u | 1u))) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (~ (gl_WorkGroupSize.x)) * (1u | 1u))) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) ^ 0u))), (~ (gl_WorkGroupSize.x)) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), min(gl_WorkGroupSize, gl_WorkGroupSize)), (false ? _GLF_FUZZED(uvec3(108443u, 80164u, 151851u)) : gl_WorkGroupSize))), uvec3(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), min(gl_WorkGroupSize, gl_WorkGroupSize)), (false ? _GLF_FUZZED(uvec3(108443u, 80164u, 151851u)) : gl_WorkGroupSize))))))).x), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), (false ? _GLF_FUZZED(uvec3(108443u, 80164u, 151851u)) : gl_WorkGroupSize)))).x)) * 1u) + 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), (false ? _GLF_FUZZED(uvec3(108443u, 80164u, 151851u)) : gl_WorkGroupSize)))).x), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), (false ? _GLF_FUZZED(uvec3(108443u, 80164u, 151851u)) : gl_WorkGroupSize)))).x)) * 1u) + 0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), (false ? _GLF_FUZZED(uvec3(108443u, 80164u, 151851u)) : gl_WorkGroupSize)))).x), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), (false ? _GLF_FUZZED(uvec3(108443u, 80164u, 151851u)) : gl_WorkGroupSize)))).x)) * 1u) + 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), (false ? _GLF_FUZZED(uvec3(108443u, 80164u, 151851u)) : gl_WorkGroupSize)))).x), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), (false ? _GLF_FUZZED(uvec3(108443u, 80164u, 151851u)) : gl_WorkGroupSize)))).x)) * 1u) + 0u, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), (false ? _GLF_FUZZED(uvec3(108443u, 80164u, 151851u)) : gl_WorkGroupSize)))).x), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), (false ? _GLF_FUZZED(uvec3(108443u, 80164u, 151851u)) : gl_WorkGroupSize)))).x)) * 1u) + 0u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), (false ? _GLF_FUZZED(uvec3(108443u, 80164u, 151851u)) : gl_WorkGroupSize))), (uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), (false ? _GLF_FUZZED(uvec3(108443u, 80164u, 151851u)) : gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u))).x), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), (false ? _GLF_FUZZED(uvec3(108443u, 80164u, 151851u)) : gl_WorkGroupSize)))).x)) * 1u) + 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))), bool(bvec2(_GLF_DEAD(false), true)))) || false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))), bool(bvec2(_GLF_DEAD(false), true)))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(false, false || (false)) || (true)))))), true)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(false, false || (false)) || (true)))))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(true, false || (true)))))), true)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)))))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))), bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))), bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))), true, true))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))), bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))), true, true))))), false, true))))))), true)))))), true))))))))), bool(bool((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)))))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)))))), true)))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)))))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)))))), true)))))), true))))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))))))), bool(bvec4(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))))))), false || (bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))))))))), false, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))))))), bool(bvec4(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))))))), false || (bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))))))))), false, true, false))), bool(bvec4(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))))))), bool(bvec4(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))))))), false || (bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))))))))), false, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))), ! (! (bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, false))))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))))))), true && (_GLF_IDENTITY(bool(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)))))))))), bool(bvec4(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, false || (true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, false || (true)))), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(true, false || (true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false || (bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))))))))), _GLF_IDENTITY(false, bool(bool(false))), true, false))))), ! (! (bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))))))), true && (_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))))))), bool(bvec4(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(false, true && (false)) || (true))))))), false || (bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))))))))), false, true, false))))), ! (! (bool(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))))))) && true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false) && true)))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    return;
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))), (~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))))) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))), 0u))) << uvec3(0u, 0u, 0u))), ~ (~ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_IDENTITY(uvec3(gl_WorkGroupID), clamp(uvec3(gl_WorkGroupID), uvec3(gl_WorkGroupID), uvec3(gl_WorkGroupID)))) | (uvec3(gl_WorkGroupID)))))), (~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))))) >> uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u))))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))), (~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))))) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))), 0u))) << uvec3(0u, 0u, 0u))), ~ (~ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_IDENTITY(uvec3(gl_WorkGroupID), clamp(uvec3(gl_WorkGroupID), uvec3(gl_WorkGroupID), uvec3(gl_WorkGroupID)))) | (uvec3(gl_WorkGroupID)))))), (~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))))) >> uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u))))))))))), (gl_WorkGroupID) * uvec3(1u, 1u, 1u)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), _GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), true && ((false))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), true), bvec3(bvec3(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), ((bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), true), bvec3(bvec3(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))) || false))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), true && ((false))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), true), false))), bvec3(bvec3(bvec3((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))), false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), true && (bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), false || ((! (! (false))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0))), min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0))), max(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0))), _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0))))), _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0)))))))) - 0.0) < injectionSwitch.y)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true))))), bvec3(bvec3(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))), ! (! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, true && ((_GLF_IDENTITY(false, (false) && true)) && true))))), bool(bool(false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), (! (_GLF_IDENTITY((false), ((false)) || false))) || false))), false || (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), (! (_GLF_IDENTITY((false), ((false)) || false))) || false)))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), (! (_GLF_IDENTITY((false), ((false)) || false))) || false))), false || (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), (! (_GLF_IDENTITY((false), ((false)) || false))) || false)))))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), (! (_GLF_IDENTITY((false), ((false)) || false))) || false))), false || (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), (! (_GLF_IDENTITY((false), ((false)) || false))) || false)))))), true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), (! (_GLF_IDENTITY((false), ((false)) || false))) || false))), false || (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), (! (_GLF_IDENTITY((false), ((false)) || false))) || false)))))), true, true), true)), true)))))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(9.5) : injectionSwitch.x)), (false ? _GLF_FUZZED(-14.06) : injectionSwitch.x)) : _GLF_FUZZED(-246.088))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false, false, false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (injectionSwitch.x > injectionSwitch.y)) && true))) || false), false, false, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-14.06) : injectionSwitch.x)) : _GLF_FUZZED(-246.088))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))) || false), false, false, false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-14.06) : injectionSwitch.x)) : _GLF_FUZZED(-246.088))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))) || false), false, false, false)))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, (false) || false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), false || ((! (_GLF_IDENTITY(false, (false) && true)))))), true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_15._f3.subgroup_id, max(_GLF_struct_replacement_15._f3.subgroup_id, _GLF_struct_replacement_15._f3.subgroup_id)) * subgroup_size, (_GLF_struct_replacement_15._f3.subgroup_id * subgroup_size) - 0u) + _GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_id))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (false) && true), true))))))))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_15._f3.subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), _GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_base) : subgroup_local_id + 1))))) | (subgroup_local_id + 1))) ^ 0u)) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.5)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-699.842)), float(injectionSwitch.x), bool(true))))), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), min(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), min(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (vec2(injectionSwitch.x, 1.0)) - vec2(0.0, 0.0)))), _GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), _GLF_IDENTITY((vec2(injectionSwitch.x, 1.0)), max((vec2(injectionSwitch.x, 1.0)), (vec2(injectionSwitch.x, 1.0)))) / vec2(1.0, 1.0)))), vec2(injectionSwitch.x, 1.0))))) > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))), true)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true)), ! (! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true))))))), bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true)), ! (! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, false)))))), true)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))), true && (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), true, true))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), ! (! (bool(bool(_GLF_IDENTITY(false, true && (false))))))))))) && true))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)))], _GLF_IDENTITY(uint(1), max(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u | (uint(1))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u | (_GLF_IDENTITY(uint(1), min(uint(1), _GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(83425u) : uint(1))))))), (_GLF_IDENTITY(uint(1), 0u | (_GLF_IDENTITY(uint(1), min(uint(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))), uint(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-50061))))))))) | (_GLF_IDENTITY(uint(1), 0u | (uint(_GLF_IDENTITY(1, (1) - 0)))))), 1u, 0u, 0u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u | (uint(1))), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), 0u | (uint(1)))) | (_GLF_IDENTITY(uint(1), 0u | (uint(1)))), uint(uvec2((_GLF_IDENTITY(uint(1), 0u | (uint(1)))) | (_GLF_IDENTITY(uint(1), 0u | (uint(1)))), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u | (uint(1))), min(_GLF_IDENTITY(uint(1), 0u | (uint(1))), _GLF_IDENTITY(uint(1), 0u | (uint(1))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), 0u | (uint(1)))), (true ? (_GLF_IDENTITY(uint(1), 0u | (uint(1)))) : _GLF_FUZZED(subgroup_size))) | (_GLF_IDENTITY(uint(1), 0u | (uint(1)))), uint(uvec2((_GLF_IDENTITY(uint(1), 0u | (uint(1)))) | (_GLF_IDENTITY(uint(1), 0u | (uint(1)))), 0u))))) * 1u), 1u, 0u, 0u))) | (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) >> (1 ^ 1))), 0u | (_GLF_IDENTITY(uint(1), max(uint(1), uint(1))))), (_GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((uint(1)), ((uint(1))) - 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> (0u ^ 0u))) >> 0u) | (uint(1))), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 1u)), (uint(uvec4(0u, 1u, 1u, 1u))) ^ 0u)), (_GLF_IDENTITY(0u, (0u) >> (0u ^ 0u))) >> 0u) | (uint(1)))) / 1u))), 1u, 0u, 0u))))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) << 0), 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0)))) - 0.0))), injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- 5.6))), float(injectionSwitch.y), bool(true))), max(injectionSwitch.y, injectionSwitch.y))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, min(0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0)))) - 0.0), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0)))) - 0.0)) / 1.0))), injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), (bool(bool((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))) && true)))), bool(bvec3(bool(bool(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), false, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((injectionSwitch[0]) + 0.0, (_GLF_IDENTITY((injectionSwitch[0]) + 0.0, mix(float((injectionSwitch[0]) + 0.0), float(_GLF_FUZZED(654.549)), bool(false)))) - 0.0)), injectionSwitch[1])).y)) || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3x2(_GLF_IDENTITY((injectionSwitch), cos(vec2(0.0, 0.0)) * ((injectionSwitch))) * mat2(1.0), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)))).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y)))), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / determinant(mat2(1.0, sqrt(1.0), 0.0, 1.0))) > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(31088u)), _GLF_FUZZED((-339.510 / vec4(-2.2, -88.00, 8.2, -503.958).g))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / determinant(mat2(1.0, sqrt(1.0), 0.0, 1.0))) > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(31088u)), _GLF_FUZZED((-339.510 / vec4(-2.2, -88.00, 8.2, -503.958).g))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))))))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-855.639), _GLF_FUZZED(114.873)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y)))))), false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))))) && true))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))) && true)))))))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(5242.8392)), sqrt(0.0) + (float(_GLF_FUZZED(5242.8392)))), float(injectionSwitch.y), bool(true))))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(5242.8392)), sqrt(0.0) + (float(_GLF_FUZZED(5242.8392)))), float(injectionSwitch.y), bool(true))))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5242.8392)), float(injectionSwitch.y), bool(true))))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((- vec2(-874.147, -508.225))) : injectionSwitch)).y, mix(float(_GLF_FUZZED(5242.8392)), float(injectionSwitch.y), bool(true))))))), false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, tan(0.0), 1.0, 1.0, 1.0, sqrt(1.0)), transpose(transpose(mat4x2(injectionSwitch, 0.0, tan(0.0), 1.0, 1.0, 1.0, sqrt(1.0))))))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, tan(0.0), 1.0, 1.0, 1.0, sqrt(1.0)), transpose(transpose(mat4x2(injectionSwitch, 0.0, tan(0.0), 1.0, 1.0, 1.0, sqrt(1.0))))))).y), (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, tan(0.0), 1.0, 1.0, 1.0, sqrt(1.0)), transpose(transpose(mat4x2(injectionSwitch, 0.0, tan(0.0), 1.0, 1.0, 1.0, sqrt(1.0))))))).y)) || false))))))), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))) && true))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 1.0, abs(0.0), 1.0)), 1.0, 1.0, abs(1.0))), clamp(float(mat2x3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 1.0, abs(0.0), 1.0)), 1.0, 1.0, abs(1.0))), float(mat2x3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 1.0, abs(0.0), 1.0)), 1.0, 1.0, abs(1.0))), float(mat2x3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(1.0, 1.0, abs(0.0), 1.0)), 1.0, 1.0, abs(1.0)))))) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (4) * 1), 64, 4);
}
