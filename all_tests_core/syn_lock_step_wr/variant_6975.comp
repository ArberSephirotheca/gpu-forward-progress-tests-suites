#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_11 {
 bvec4 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_10 {
 vec2 _f0;
 mat4x3 _f1;
 float _f2;
} ;

struct _GLF_struct_9 {
 vec3 _f0;
 ivec4 _f1;
 mat2 _f2;
 mat2 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_12 {
 _GLF_struct_9 _f0;
 ivec2 _f1;
 _GLF_struct_10 _f2;
 vec4 _f3;
 uint virtual_gid;
 mat4x2 _f4;
 _GLF_struct_11 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_7 {
 mat4x2 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 mat4x3 _f1;
 mat3x2 _f2;
 mat3x4 _f3;
 int _f4;
 float _f5;
} ;

struct _GLF_struct_5 {
 uvec2 _f0;
 vec4 _f1;
 vec3 _f2;
 mat4 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_4 {
 mat3x2 _f0;
 ivec2 _f1;
 uvec3 _f2;
 ivec3 _f3;
 bvec3 _f4;
 bool _f5;
 mat2 _f6;
} ;

struct _GLF_struct_3 {
 float _f0;
 mat4x3 _f1;
 ivec2 _f2;
 mat3x4 _f3;
 mat4 _f4;
 bool _f5;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
} ;

struct _GLF_struct_8 {
 mat2 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
 _GLF_struct_6 _f5;
 _GLF_struct_7 _f6;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 ivec3 _f1;
 mat2x3 _f2;
 uvec4 _f3;
 mat4x2 _f4;
 float _f5;
 mat3 _f6;
} ;

struct _GLF_struct_1 {
 int _f0;
 ivec4 _f1;
 mat3 _f2;
 _GLF_struct_0 _f3;
} ;

struct _GLF_struct_13 {
 ivec4 _f0;
 mat2x4 _f1;
 _GLF_struct_1 _f2;
 mat4x3 _f3;
 _GLF_struct_8 _f4;
 _GLF_struct_12 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) || false))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(7.8, -6.6)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(vec2(-667.332, 2868.3223)))).x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.9)), bool(false))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))) && true)))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))) || false))))
          return;
         return;
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(1.0, injectionSwitch.y))))))
          return;
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0))).x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_IDENTITY(false, ! (! (false))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(39834)), _GLF_FUZZED(61.73)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x), _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupSize.x), max(_GLF_IDENTITY((gl_WorkGroupSize.x), ((_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x)) >> 0u), (gl_WorkGroupSize.x))) | (gl_WorkGroupSize.x)) | 0u, clamp(((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) | 0u, (_GLF_IDENTITY((gl_WorkGroupSize.x), 0u + ((gl_WorkGroupSize.x))) | (gl_WorkGroupSize.x)) | 0u, _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))))) | (_GLF_IDENTITY((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x), ((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))))) | 0u, max(((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) | 0u, ((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) | 0u))))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, cos(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0))), 1.0, 0.0), mat2x4(mat4(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, _GLF_IDENTITY(cos(0.0), max(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), cos(0.0))), 1.0, 0.0))))), (false ? _GLF_FUZZED(mix(injectionSwitch, injectionSwitch, 7027.7113)) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, cos(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0))), 1.0, 0.0), mat2x4(mat4(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, _GLF_IDENTITY(cos(0.0), max(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), cos(0.0))), 1.0, 0.0))))), max(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, cos(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0))), 1.0, 0.0), mat2x4(mat4(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, _GLF_IDENTITY(cos(0.0), max(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), cos(0.0))), 1.0, 0.0))))), vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, cos(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0))), 1.0, 0.0), mat2x4(mat4(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, _GLF_IDENTITY(cos(0.0), max(_GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), cos(0.0))), 1.0, 0.0)))))))))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, cos(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), 1.0, 0.0), mat2x4(mat4(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / cos(0.0)), 1.0, 0.0)))))).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, cos(0.0), 1.0, 0.0), mat2x4(mat4(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, cos(0.0), 1.0, 0.0)))))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), 0.0, 1.0, 1.0, cos(0.0), 1.0, 0.0), mat2x4(mat4(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, cos(0.0), 1.0, 0.0))))))) * exp(vec2(0.0, 0.0))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, cos(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(73.96) : 0.0)))), 0.0))), 1.0, 0.0), mat2x4(mat4(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-43.85) : 1.0)), 1.0)), cos(0.0), 1.0, 0.0)))))).y)))))), (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), min(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, cos(0.0), 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.7))), 0.0, 0.0))), mat2x4(mat4(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, cos(0.0), 1.0, 0.0)))))).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, cos(0.0), 1.0, 0.0), mat2x4(mat4(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, cos(0.0), 1.0, 0.0)))))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(vec2(4573.7770, 5.8)) : min(injectionSwitch, injectionSwitch)))), 0.0, 1.0, 1.0, cos(0.0), 1.0, 0.0), mat2x4(mat4(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), (false ? _GLF_FUZZED(vec2(-0.4, 3.8)) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), vec2(mat4(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))), 1.0, cos(0.0), 1.0, 0.0)))))).y))))))) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-857.291))), injectionSwitch[1]), (false ? _GLF_FUZZED(vec2(4.5, 1773.5852)) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-857.291))), injectionSwitch[1]), mix(vec2(_GLF_FUZZED(-9930.5430), (vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-857.291))), injectionSwitch[1]))[1]), vec2((vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-857.291))), injectionSwitch[1]))[0], _GLF_FUZZED(-1.4)), bvec2(true, false)))))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.4)), bool(false))))), injectionSwitch.y)), bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (true ? uint(uvec3(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) : _GLF_FUZZED(69125u)))), _GLF_IDENTITY(0u, max(0u, 0u)))))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))))) | (gl_WorkGroupID)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), false || (bool(bool((! (false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((true ? 850.079 : 1.2)), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-2.9, -81.95)) : injectionSwitch), min((false ? _GLF_FUZZED(vec2(-2.9, -81.95)) : injectionSwitch), (false ? _GLF_FUZZED(vec2(-2.9, -81.95)) : injectionSwitch)))))[0], _GLF_FUZZED((-0.7 - -21.24))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))))
    barrier();
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | 0u), 0u + (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | 0u)))) + 0u))))), (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | 0u), 0u + (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | 0u)))) + 0u)))))) ^ 0u), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_id), ~ (_GLF_IDENTITY(~ (~ (workgroup_id)), (_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ _GLF_IDENTITY((0u | 0u), (true ? (0u | 0u) : _GLF_FUZZED(subgroup_id)))))), uint(uvec2(~ (workgroup_id), 1u)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_id), ~ (_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ (0u | 0u)))), uint(uvec2(~ (workgroup_id), 1u)))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_id), ~ (_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ (0u | 0u)))), uint(uvec2(~ (workgroup_id), 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_id), ~ (_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ (0u | 0u)))), uint(uvec2(~ (workgroup_id), 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_id), ~ (_GLF_IDENTITY(~ (~ (workgroup_id)), (~ (~ (workgroup_id))) ^ (0u | 0u)))), uint(uvec2(~ (workgroup_id), 1u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | 0u))), ~ (~ (_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) >> 0u)) << (0u | (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), (_GLF_IDENTITY(~ (workgroup_id), max(_GLF_IDENTITY(~ (workgroup_id), min(~ (workgroup_id), ~ (workgroup_id))), _GLF_IDENTITY(~ (workgroup_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (workgroup_id) : _GLF_FUZZED(workgroup_size)))))) | 0u))))))) | 0u))), max(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), ~ (_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), min(~ (workgroup_id), ~ (workgroup_id)))) | 0u))))))) | 0u))), _GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | 0u))), ~ (~ (_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | 0u))))))) | 0u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), max(~ (~ (workgroup_id)), ~ (~ (workgroup_id)))), 0u ^ (_GLF_IDENTITY(~ (~ (workgroup_id)), max(~ (~ (workgroup_id)), ~ (~ (workgroup_id))))))), 0u | (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_id)), max(~ (~ (workgroup_id)), ~ (~ (workgroup_id)))), 0u ^ (_GLF_IDENTITY(~ (~ (workgroup_id)), max(~ (~ (workgroup_id)), ~ (~ (workgroup_id)))))))))), ~ (_GLF_IDENTITY(~ (~ (workgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_id)), ((~ (workgroup_id))) | ((~ (workgroup_id)))), max(~ (~ (workgroup_id)), ~ (~ _GLF_IDENTITY((workgroup_id), ((workgroup_id)) ^ (0u ^ 0u))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(~ (~ (workgroup_id)), max(~ (~ (workgroup_id)), ~ (~ (workgroup_id)))))), 0u ^ (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(~ (~ (workgroup_id)), max(~ (~ (workgroup_id)), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_id), 0u ^ ((workgroup_id)))), (true ? (~ _GLF_IDENTITY((workgroup_id), 0u ^ ((workgroup_id)))) : _GLF_FUZZED(subgroup_local_id))))))), (uint(uint(_GLF_IDENTITY(~ (~ (workgroup_id)), max(~ (~ _GLF_IDENTITY((workgroup_id), max((workgroup_id), (workgroup_id)))), ~ (~ (workgroup_id))))))) << 0u))))) ^ (0u | 0u)))), uint(uvec2(~ _GLF_IDENTITY((workgroup_id), 0u | ((workgroup_id))), 1u)))))) * _GLF_IDENTITY((1u | 1u), 0u | ((1u | 1u))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, mix(float(_GLF_FUZZED(58.81)), float(injectionSwitch.y), bool(true))), bool(bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, mix(float(_GLF_FUZZED(58.81)), float(injectionSwitch.y), bool(true))))))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, round(length(normalize(1.0))))), (float(mat2x4(injectionSwitch.x, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, round(length(normalize(1.0)))))) + 0.0))) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(exp(0.0), round(length(normalize(1.0))), cos(0.0))), dot(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(((mat4(-159.488, -3056.7128, 3.8, -46.98, -976.624, -13.11, 4589.4970, 5615.0687, -9325.9397, 6.0, 2208.1351, 0.1, -4.9, -437.628, 2.6, -682.725) == mat4(96.58, -8359.3874, -7.3, -4452.8579, -33.48, -425.728, 1.9, -67.61, 70.48, -5.4, 55.95, -6267.8237, -9.7, -35.79, 7.2, -0.1)) ? 1.9 : -6.9))), bool(false))), 0.0), vec3(exp(0.0), _GLF_IDENTITY(round(length(normalize(1.0))), clamp(round(length(normalize(1.0))), round(length(normalize(1.0))), round(length(normalize(1.0))))), cos(0.0))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), true, true, true)))) || false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) && _GLF_IDENTITY(true, (true) || false), ((bool(false)) && true) && true)), true, false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(ivec4(1), mat2x4(1.0), _GLF_struct_1(1, _GLF_IDENTITY(ivec4(1), (ivec4(1)) ^ ivec4(0, 0, 0, 0)), mat3(1.0), _GLF_struct_0(mat3x4(1.0), ivec3(1), mat2x3(1.0), uvec4(1u), mat4x2(1.0), 1.0, mat3(1.0))), mat4x3(1.0), _GLF_struct_8(mat2(1.0), _GLF_struct_2(bvec3(true)), _GLF_struct_3(1.0, mat4x3(1.0), ivec2(1), mat3x4(1.0), mat4(1.0), _GLF_IDENTITY(true, ! (! (true)))), _GLF_struct_4(mat3x2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), ivec2(1), uvec3(1u), ivec3(1), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))))), bvec3(bvec4(bvec3(true), false))), true, mat2(1.0)), _GLF_struct_5(uvec2(1u), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2408.1879) : 1.0))), mix(vec4(_GLF_FUZZED(-38.16), _GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0))[1], min((_GLF_IDENTITY(vec4(1.0), clamp(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(1.0), _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0)))))[1], (vec4(1.0))[1])), (false ? _GLF_FUZZED(tanh(-9389.0983)) : _GLF_IDENTITY((vec4(1.0))[1], min((_GLF_IDENTITY(vec4(1.0), clamp(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(1.0), _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) - vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)))))[1], (_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), _GLF_IDENTITY(vec4(1.0), vec4(mat4x2(vec4(1.0), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))))))[1])))), (vec4(1.0))[2], _GLF_FUZZED(7973.1249)), vec4((vec4(1.0))[0], _GLF_FUZZED(5690.9506), _GLF_FUZZED(-5903.6508), _GLF_IDENTITY((_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(min(vec4(1.0), vec4(1.0)), clamp(min(vec4(1.0), vec4(1.0)), _GLF_IDENTITY(min(vec4(1.0), vec4(1.0)), (min(vec4(1.0), vec4(1.0))) * mat4(1.0)), min(vec4(1.0), vec4(1.0))))))[3], min((_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(min(vec4(1.0), vec4(1.0)), clamp(min(vec4(1.0), vec4(1.0)), _GLF_IDENTITY(min(vec4(1.0), vec4(1.0)), (min(vec4(1.0), vec4(1.0))) * mat4(1.0)), min(vec4(1.0), vec4(1.0))))))[3], (_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(min(vec4(1.0), vec4(1.0)), clamp(min(vec4(1.0), vec4(1.0)), _GLF_IDENTITY(min(vec4(1.0), vec4(1.0)), (min(vec4(1.0), vec4(1.0))) * mat4(1.0)), min(vec4(1.0), vec4(1.0))))))[3]))), bvec4(true, false, false, true))), vec3(1.0), mat4(1.0), ivec2(1)), _GLF_struct_6(mat2x4(1.0), mat4x3(1.0), mat3x2(1.0), mat3x4(1.0), 1, 1.0), _GLF_struct_7(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0), (vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)) - vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), 0.0)), vec2(1.0, 1.0))))))), clamp(vec3(0.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0)), vec2(1.0, 1.0))))))), vec3(0.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0)), vec2(1.0, 1.0))))))), vec3(0.0, 0.0, round(length(normalize(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-83.78), _GLF_FUZZED(vec4(9.0, -66.76, 15.06, 840.715).p)), bvec2(false, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch))), vec2(1.0, 1.0))), (vec2(1.0, 1.0)) - vec2(0.0, 0.0)), vec2(1.0, 1.0))))))))), vec3(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, determinant(mat2(1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((4.9))), bool(false))))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0)))), max(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0)))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))))))) + 0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0)))))), 0.0, 0.0))), 1.0)), dot(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-0.7)), 1.0 * (float(_GLF_FUZZED(-0.7)))), float(0.0), bool(true)))) / 1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.7) : _GLF_IDENTITY(0.0, (0.0) / abs(1.0)))), round(length(normalize(vec2(1.0, 1.0))))), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, exp(0.0)))), float(mat3x4(_GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, log(1.0), sqrt(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0)), exp(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 0.0, length(vec2(0.0, 0.0)))), 1.0 * (_GLF_IDENTITY(float(mat4(0.0, log(1.0), sqrt(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0)), exp(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 0.0, length(vec2(0.0, 0.0)))), mix(float(_GLF_FUZZED(678.902)), float(float(mat4(0.0, log(1.0), sqrt(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0)), exp(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 0.0, length(vec2(0.0, 0.0))))), bool(true)))))), 1.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6654.6108)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(-1.7)))), max(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6654.6108)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(-1.7)))), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6654.6108)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(-1.7)))), float(vec3(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6654.6108)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(-1.7)))), 0.0, length(vec3(0.0, 0.0, 0.0))))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), mat3(1.0) * (vec3(0.0, 0.0, 1.0)))), dot(vec3(0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, exp(0.0)))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), clamp(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(0.0, (0.0) * exp(0.0)), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0))), mix(float(_GLF_FUZZED(6.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0), (vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)) - vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))), 0.0, 0.0)), 0.0)), vec2(1.0, 1.0))))))), clamp(vec3(0.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0)), vec2(1.0, 1.0))))))), vec3(0.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0)), vec2(1.0, 1.0))))))), vec3(0.0, 0.0, round(length(normalize(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-83.78), _GLF_FUZZED(vec4(9.0, -66.76, 15.06, 840.715).p)), bvec2(false, false))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch))), vec2(1.0, 1.0))), (vec2(1.0, 1.0)) - vec2(0.0, 0.0)), vec2(1.0, 1.0))))))))), vec3(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, determinant(mat2(1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((4.9))), bool(false))))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0)))), max(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0)))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))))))) + 0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, tan(0.0)))))), 0.0, 0.0))), 1.0)), dot(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-0.7)), 1.0 * (float(_GLF_FUZZED(-0.7)))), float(0.0), bool(true)))) / 1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.7) : _GLF_IDENTITY(0.0, (0.0) / abs(1.0)))), round(length(normalize(vec2(1.0, 1.0))))), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, exp(0.0)))), float(mat3x4(_GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, log(1.0), sqrt(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0)), exp(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 0.0, length(vec2(0.0, 0.0)))), 1.0 * (_GLF_IDENTITY(float(mat4(0.0, log(1.0), sqrt(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0)), exp(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 0.0, length(vec2(0.0, 0.0)))), mix(float(_GLF_FUZZED(678.902)), float(float(mat4(0.0, log(1.0), sqrt(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0)), exp(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 0.0, length(vec2(0.0, 0.0))))), bool(true)))))), 1.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6654.6108)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(-1.7)))), max(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6654.6108)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(-1.7)))), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6654.6108)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(-1.7)))), float(vec3(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6654.6108)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(-1.7)))), 0.0, length(vec3(0.0, 0.0, 0.0))))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), mat3(1.0) * (vec3(0.0, 0.0, 1.0)))), dot(vec3(0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, exp(0.0)))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), clamp(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(0.0, (0.0) * exp(0.0)), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0)))), bool(true)))), ivec2(1))), _GLF_struct_12(_GLF_struct_9(vec3(_GLF_IDENTITY(1.0, round(length(normalize(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(1.0, min(1.0, 1.0))))), ivec4(1), mat2(1.0), mat2(1.0), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) - uvec3(0u, 0u, 0u))), _GLF_IDENTITY(ivec2(1), (ivec2(1)) - _GLF_IDENTITY(ivec2(0, 0), ivec2(1, 1) * _GLF_IDENTITY((ivec2(0, 0)), ivec2(ivec4((ivec2(0, 0)), 1, 0))))), _GLF_struct_10(vec2(1.0), mat4x3(1.0), 1.0), vec4(1.0), workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), mat4x2(1.0), _GLF_struct_11(bvec4(true), mat4x3(1.0)), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(71.67)), bool(false))), 1.0))), transpose(transpose(mat4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(71.67)), bool(false))), 1.0))))))));
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)) % subgroup_size), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : uint(1u))), (uint(1u)) >> 0u), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY((uint(1u)) >> 0u, ((uint(1u)) >> 0u) / 1u))) / 1u))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u), (_GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u)) / 1u)))), ((false ? _GLF_FUZZED(workgroup_size) : (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u), (_GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u)) / 1u))))) | ((false ? _GLF_FUZZED(workgroup_size) : (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u), (_GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u)) / 1u))))))) ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), clamp((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))), max(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), clamp((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), clamp((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))))) + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1)))) | ((subgroup_local_id + 1))) % subgroup_size), max((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))) - 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(19.64))))).x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.7)), bvec2(true, false))) : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)), sin(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(mat2(-7.6, -807.147, -28.64, 3623.4029)[0])), _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3x2(vec2(0.0, 0.0), 0.0, 0.0, 0.0, 1.0))))) + ((true ? injectionSwitch : _GLF_FUZZED(mat2(-7.6, -807.147, -28.64, 3623.4029)[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 | (0))))])))), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) : _GLF_FUZZED(mat2(-7.6, -807.147, -28.64, 3623.4029)[0])), vec2(0.0, 0.0) + ((true ? injectionSwitch : _GLF_FUZZED(mat2(-7.6, -807.147, -28.64, 3623.4029)[0])))), _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(mat2(-7.6, -807.147, -28.64, 3623.4029), (mat2(-7.6, -807.147, -28.64, 3623.4029)) / mat2(1.0, 1.0, 1.0, 1.0))[0])), vec2(0.0, 0.0) + ((true ? injectionSwitch : _GLF_FUZZED(mat2(-7.6, -807.147, -28.64, 3623.4029)[0]))))))))).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))), true)), (bool(bvec2(! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))), true))) || false)))), ! (_GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), true, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(321.169)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.4)), bool(false))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! ((! (! (false)))), bool(bvec4(! ((! (! (false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, (true ? (1) | 0 : _GLF_FUZZED(49068))))), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, false || (true)), true)), ! (! _GLF_IDENTITY((bool(bvec3(false, true, true))), _GLF_IDENTITY(bool(bvec3((bool(bvec3(false, true, true))), true, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec3((bool(bvec3(false, true, true))), true, false)), true, false), bvec3(bvec4(bvec3(bool(bvec3((bool(bvec3(false, true, true))), true, false)), true, false), false)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0)), (vec2(mat3(injectionSwitch, 0.0, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0))) / vec2(1.0, 1.0))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, determinant(mat3(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, sin(0.0), log(1.0), 0.0, sin(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), 1.0, sqrt(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), (vec2(mat4(injectionSwitch, determinant(mat3(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, float(float(0.0))), 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)))), 1.0)), 1.0, sin(0.0), log(1.0), 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + tan(0.0)), 1.0, 0.0, 1.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))) / vec2(1.0, 1.0))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, determinant(mat3(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, sin(0.0), log(1.0), 0.0, sin(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), 1.0, sqrt(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), (vec2(mat4(injectionSwitch, determinant(mat3(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, float(float(0.0))), 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)))), 1.0)), 1.0, sin(0.0), log(1.0), 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + tan(0.0)), 1.0, 0.0, 1.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))) / vec2(1.0, 1.0))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, determinant(mat3(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, sin(0.0), log(1.0), 0.0, sin(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), 1.0, sqrt(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), (vec2(mat4(injectionSwitch, determinant(mat3(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, float(float(0.0))), 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)))), 1.0)), 1.0, sin(0.0), log(1.0), 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + tan(0.0)), 1.0, 0.0, 1.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))) / vec2(1.0, 1.0))).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, determinant(mat3(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, sin(0.0), log(1.0), 0.0, sin(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), 1.0, sqrt(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), (vec2(mat4(injectionSwitch, determinant(mat3(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, float(float(0.0))), 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)))), 1.0)), 1.0, sin(0.0), log(1.0), 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + tan(0.0)), 1.0, 0.0, 1.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))) / vec2(1.0, 1.0))).x > injectionSwitch.y)), true, false, false)))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, determinant(mat3(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, sin(0.0), log(1.0), 0.0, sin(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), 1.0, sqrt(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), (vec2(mat4(injectionSwitch, determinant(mat3(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, float(float(0.0))), 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)))), 1.0)), 1.0, sin(0.0), log(1.0), 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + tan(0.0)), 1.0, 0.0, 1.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))) / vec2(1.0, 1.0))).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, determinant(mat3(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, sin(0.0), log(1.0), 0.0, sin(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0)), 1.0, sqrt(0.0), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), (vec2(mat4(injectionSwitch, determinant(mat3(1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, float(float(0.0))), 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)))), 1.0)), 1.0, sin(0.0), log(1.0), 0.0, sin(0.0), _GLF_IDENTITY(0.0, (0.0) + tan(0.0)), 1.0, 0.0, 1.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))) / vec2(1.0, 1.0))).x > injectionSwitch.y)), true, false, false)))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false, true)), (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false, true))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, sqrt(1.0)), (false ? _GLF_FUZZED(vec4(4282.0287, -672.935, -53.54, 77.49)) : _GLF_IDENTITY(vec4(injectionSwitch, 1.0, sqrt(1.0)), max(vec4(injectionSwitch, 1.0, sqrt(1.0)), vec4(injectionSwitch, 1.0, sqrt(1.0)))))))).x, (false ? _GLF_FUZZED(74.25) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, sqrt(1.0)), (false ? _GLF_FUZZED(vec4(4282.0287, -672.935, -53.54, 77.49)) : _GLF_IDENTITY(vec4(injectionSwitch, 1.0, sqrt(1.0)), max(vec4(injectionSwitch, 1.0, sqrt(1.0)), vec4(injectionSwitch, 1.0, sqrt(1.0)))))))).x)), injectionSwitch.x)) > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), false, false))))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-24.49, -1.9)))).x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(326.406), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-381.774)), bvec2(true, false))))), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false))))), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false))))), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))) && true))), bool(bvec3(bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(true, false, false))))), (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))) && true))), false, false)))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false))))), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false))))), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))) && true))), bool(bvec3(bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(true, false, false))))), (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))) && true))), false, false))))))) && true) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-1.7, 855.085)[0]) : injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), min(vec4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), min(vec4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0)))))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), min(vec4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0)))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), min(vec4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), min(vec4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0)))))), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), min(vec4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0)))))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), (true ? mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), min(vec4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0), vec4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0)))))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(mat3(-83.07, 861.205, -79.89, 5.0, 34.98, -3.3, 3.2, -6.9, 231.572)))))))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), (float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0))) + 0.0)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - length(0.0)) > injectionSwitch.y)))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), (float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0))) + 0.0)) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), (float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0))) + 0.0)) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), (float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0))) + 0.0)) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), (float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0))) + 0.0)) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true), true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), (float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0))) + 0.0)) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), (float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0))) + 0.0)) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true), true))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), (float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0))) + 0.0)) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), (float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0))) + 0.0)) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true), true)))) && true)) && true)), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), (float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0))) + 0.0)) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), (float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0))) + 0.0)) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true), true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), (float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0))) + 0.0)) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), (float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0))) + 0.0)) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true), true))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), (float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0))) + _GLF_IDENTITY(0.0, min(0.0, 0.0)))) > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))))) && true), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0)), (float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0))) + 0.0), (_GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)))), (float(mat3x2(injectionSwitch.x, 0.0, abs(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, 0.0))) + 0.0)) / 1.0)) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true), true)))) && true)) && true)))))))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)) && true)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
          return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))))))) || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, true, false))))))) || _GLF_IDENTITY((false), ((false)) || false)), (_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, true, false))))))) || _GLF_IDENTITY((false), ((false)) || false))) && true)), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, 1.0), _GLF_IDENTITY(mat3(1.0) * (mat4x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, 1.0)), (false ? _GLF_FUZZED(mat4x3(-897.511, -620.323, 7.2, 8494.7353, -8.2, 383.013, 1.0, -1.4, 6.7, 2959.9950, 6.6, -86.95)) : mat3(1.0) * (mat4x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, 1.0))))))).y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || ((injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)))))), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)))))), false))), bvec2(bvec2(bvec2(bvec2(bvec2(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)))))), false)))))))))))))) || _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (_GLF_IDENTITY(! ((false)), false || (! ((false))))))))))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false)))))), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_struct_replacement_13._f5.virtual_gid, (_GLF_struct_replacement_13._f5.virtual_gid) ^ 0u)], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, clamp(4, 4, 4))))) + 0), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[_GLF_struct_replacement_13._f5.virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, round(length(normalize(1.0))), 1.0, abs(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), 1.0, 1.0)), min(vec2(mat4x2(injectionSwitch, 1.0, round(length(normalize(1.0))), 1.0, abs(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), 1.0, 1.0)), vec2(mat4x2(injectionSwitch, 1.0, round(length(normalize(1.0))), 1.0, abs(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), 1.0, 1.0))))).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_IDENTITY(! (! (true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), true && (_GLF_IDENTITY(! (! (true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true)))), (! (! (true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))) && true))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1638.9953)), bool(false))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1638.9953)), bool(false))) > injectionSwitch.y))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true, true)))), true && (true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0)), float(mat4x3(float(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), sqrt(0.0), 1.0))), 0.0, 0.0, abs(0.0), 0.0)))), min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, true && (true)))) && true))))))))))) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
}
