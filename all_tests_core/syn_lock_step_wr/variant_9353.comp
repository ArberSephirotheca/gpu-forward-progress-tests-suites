#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_20 {
 int _f0;
 uvec4 _f1;
 uint _f2;
 ivec3 _f3;
 mat3x2 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_19 {
 uvec3 _f0;
 bvec3 _f1;
 mat4 _f2;
 mat4x2 _f3;
 ivec2 _f4;
 vec4 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_18 {
 ivec3 _f0;
 mat4x2 _f1;
 bvec2 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_21 {
 _GLF_struct_18 _f0;
 _GLF_struct_19 _f1;
 ivec4 _f2;
 _GLF_struct_20 _f3;
} ;

struct _GLF_struct_16 {
 int _f0;
 vec4 _f1;
 mat4 _f2;
 uvec2 _f3;
 bvec4 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_15 {
 vec2 _f0;
 vec2 _f1;
 ivec3 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_17 {
 _GLF_struct_15 _f0;
 _GLF_struct_16 _f1;
} ;

struct _GLF_struct_22 {
 uvec3 _f0;
 ivec3 _f1;
 mat4 _f2;
 vec3 _f3;
 _GLF_struct_17 _f4;
 _GLF_struct_21 _f5;
 uint workgroup_base;
} ;

struct _GLF_struct_12 {
 mat2x3 _f0;
 float _f1;
 mat4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_13 {
 _GLF_struct_12 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_11 {
 mat3x4 _f0;
 uint workgroup_id;
} ;

struct _GLF_struct_9 {
 uvec2 _f0;
 ivec4 _f1;
 vec3 _f2;
 mat3x4 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_8 {
 mat4 _f0;
 uint _f1;
 mat2x3 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_7 {
 uvec2 _f0;
 ivec3 _f1;
 mat4 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_10 {
 uvec4 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
 uvec2 _f4;
 mat4x3 _f5;
 float _f6;
} ;

struct _GLF_struct_14 {
 uvec4 _f0;
 _GLF_struct_10 _f1;
 vec3 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_13 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_4 {
 int _f0;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
} ;

struct _GLF_struct_2 {
 mat2x4 _f0;
 uvec2 _f1;
 uvec3 _f2;
 mat2x3 _f3;
 bvec2 _f4;
 mat3x4 _f5;
 int _f6;
} ;

struct _GLF_struct_1 {
 float _f0;
 uvec4 _f1;
 vec2 _f2;
 int _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_3 {
 vec2 _f0;
 vec3 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 mat2x4 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 mat2x4 _f1;
 vec3 _f2;
 uvec2 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_0 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_5 _f2;
 uint workgroup_size;
 mat2x3 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, true, true))) && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ((_GLF_IDENTITY(true, true && (true)))) && true)) && true)), (! (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ((_GLF_IDENTITY(true, true && (true)))) && true)) && true))) || false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, ! (! (true))))), ! _GLF_IDENTITY((! (bool(bvec2(false, true)))), ((! (bool(bvec2(false, true))))) && true))), ! (! (! (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))))), ! (! (_GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false)), false))))), ! (! (bool(bvec2(false, true))))))), (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), false))))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false)), false))))), ! (! (bool(bvec2(false, true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))), (bool(bvec2(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))) && true))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(! (! (bool(bvec2(false, true)))), false || (_GLF_IDENTITY(! (! (bool(bvec2(false, true)))), bool(bvec3(! (! (bool(bvec2(false, true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! (! (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! _GLF_IDENTITY((bool(bvec2(false, true))), false || (_GLF_IDENTITY((bool(bvec2(false, true))), bool(bool((bool(bvec2(false, true))))))))))))))))))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x2(29.81, 4694.1205, -56.49, 30.61, -8.6, -539.957, 8861.1844, -95.47)) : mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))).x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))) && true) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec4(bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), true, true)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_0(mat3(1.0), mat2x4(1.0), _GLF_IDENTITY(vec3(1.0), clamp(_GLF_IDENTITY(vec3(1.0), vec3(0.0, 0.0, 0.0) + _GLF_IDENTITY((vec3(1.0)), clamp(_GLF_IDENTITY((vec3(1.0)), ((vec3(1.0))) / vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((vec3(1.0)), ((vec3(1.0))) - vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((vec3(1.0)), ((vec3(1.0))) - vec3(0.0, 0.0, 0.0))))), vec3(1.0), _GLF_IDENTITY(vec3(1.0), mix(vec3((vec3(1.0))[0], (vec3(1.0))[1], _GLF_FUZZED((- -5.2))), vec3(_GLF_FUZZED(11.76), _GLF_FUZZED(float(125703u)), (_GLF_IDENTITY(vec3(1.0), mix(vec3(_GLF_FUZZED(-318.965), _GLF_FUZZED(724.962), (vec3(1.0))[2]), vec3((vec3(1.0))[0], (vec3(1.0))[1], _GLF_FUZZED(908.341)), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))[2]), bvec3(false, false, true))))), uvec2(1u), bvec2(true)), _GLF_struct_3(vec2(1.0), vec3(1.0), _GLF_struct_1(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(roundEven(-2.9)) : 1.0)), uvec4(1u), _GLF_IDENTITY(vec2(1.0), mat2(1.0) * (vec2(1.0))), 1, mat2x3(1.0)), _GLF_struct_2(mat2x4(1.0), uvec2(1u), uvec3(1u), mat2x3(1.0), bvec2(true), mat3x4(1.0), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) << 0)))), mat2x4(1.0), uvec2(_GLF_IDENTITY(1u, (1u) >> 0u))), _GLF_struct_5(_GLF_struct_4(1)), gl_WorkGroupSize.x, mat2x3(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(uvec4(1u), _GLF_struct_10(uvec4(1u), _GLF_struct_7(uvec2(1u), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), (ivec3(1)) << ivec3(0, 0, 0))) | ivec3(0, 0, 0)), (false ? _GLF_FUZZED(ivec3(31111, -56975, -9097)) : _GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), (ivec3(1)) << ivec3(0, 0, 0))) | ivec3(0, 0, 0)))), _GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(_GLF_IDENTITY(6.4, min(6.4, 6.4)), -3342.7732, 7.8, 69.37, -932.410, -4394.1188, -8728.4165, -6.0, -852.694, _GLF_IDENTITY(-19.43, max(-19.43, -19.43)), 0.0, 74.68, 73.00, -52.14, 8036.4186, 2837.5784)) : mat4(1.0))), mat4x3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), _GLF_struct_8(mat4(1.0), 1u, mat2x3(1.0), uvec3(1u)), _GLF_struct_9(uvec2(1u), ivec4(1), _GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0)), min(vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0)), vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0)))), max(vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0)), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0)), mix(vec3((vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0)))[0], (vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0)))[1], _GLF_FUZZED(-0.0)), vec3(_GLF_FUZZED(-22.10), _GLF_FUZZED(-9.5), (vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0)))[2]), bvec3(false, false, true))))), mat3x4(1.0), mat3x4(1.0)), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))), mat4x3(1.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (1.0) + 0.0), 1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))))), vec3(1.0), _GLF_struct_11(mat3x4(1.0), gl_WorkGroupID.x), _GLF_struct_13(_GLF_struct_12(mat2x3(1.0), 1.0, _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0)), mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), uvec4(1u)), uvec2(1u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(uvec3(1u), ivec3(1), mat4(1.0), vec3(1.0), _GLF_struct_17(_GLF_struct_15(vec2(1.0), vec2(1.0), ivec3(1), mat3(1.0)), _GLF_struct_16(1, vec4(1.0), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), uvec2(1u), bvec4(true), ivec3(1))), _GLF_struct_21(_GLF_struct_18(ivec3(1), mat4x2(1.0), bvec2(true), bvec2(true)), _GLF_struct_19(uvec3(1u), bvec3(true), _GLF_IDENTITY(mat4(1.0), (true ? mat4(1.0) : _GLF_FUZZED(mat4(-27.11, -410.264, 645.928, _GLF_IDENTITY(-6.5, min(-6.5, -6.5)), 4.2, -71.69, -33.23, -1540.4110, 7064.8801, -79.64, -0.9, -1.9, 539.834, 4222.6648, 867.031, _GLF_IDENTITY(4.5, (false ? _GLF_FUZZED(519.837) : 4.5)))))), mat4x2(1.0), _GLF_IDENTITY(ivec2(1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), (_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(~ (~ (ivec2(1))), (~ (~ (ivec2(1)))) | ivec2(0, 0)))) >> ivec2(0, 0)), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(ivec2(1)), _GLF_IDENTITY(ivec2(0, 0) | (ivec2(ivec2(1))), (ivec2(0, 0) | (ivec2(ivec2(1)))) >> ivec2(0, 0)))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(ivec2(1)), ivec2(0, 0) | (ivec2(ivec2(1))))), ivec2(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, _GLF_IDENTITY((false ? _GLF_FUZZED(-43019) : 0), ((false ? _GLF_FUZZED(-43019) : 0)) >> 0)), 1), ivec2(ivec4(ivec2(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-43019) : 0)), 1), 1, 1))))), 0) | (ivec2(_GLF_IDENTITY(ivec2(ivec2(_GLF_IDENTITY(1, (1) + 0))), _GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) | ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) | (ivec2(ivec2(1)))))))) | _GLF_IDENTITY(_GLF_IDENTITY((ivec2(_GLF_IDENTITY(ivec2(ivec2(1)), ivec2(0, 0) | _GLF_IDENTITY((_GLF_IDENTITY(ivec2(ivec2(1)), (ivec2(ivec2(1))) / ivec2(1, 1))), ((_GLF_IDENTITY(ivec2(ivec2(1)), (ivec2(ivec2(1))) / ivec2(1, 1)))) | ((_GLF_IDENTITY(ivec2(ivec2(1)), (ivec2(ivec2(1))) / ivec2(1, 1)))))))), _GLF_IDENTITY(ivec2(1, 1), (ivec2(1, 1)) | (_GLF_IDENTITY(ivec2(1, 1), ivec2(ivec3(ivec2(1, 1), 1))))) * _GLF_IDENTITY(((ivec2(_GLF_IDENTITY(ivec2(ivec2(1)), ivec2(0, 0) | (ivec2(ivec2(1))))))), (((ivec2(_GLF_IDENTITY(ivec2(ivec2(1)), ivec2(0, 0) | (ivec2(ivec2(1)))))))) * ivec2(1, 1))), (_GLF_IDENTITY((ivec2(_GLF_IDENTITY(ivec2(ivec2(1)), ivec2(0, 0) | (ivec2(ivec2(1)))))), ivec2(1, 1) * ((ivec2(_GLF_IDENTITY(ivec2(ivec2(1)), ivec2(0, 0) | _GLF_IDENTITY(_GLF_IDENTITY((ivec2(ivec2(1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((ivec2(ivec2(1))), ivec2(0, 0) ^ ((ivec2(ivec2(1))))), 0), (ivec3(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(ivec2(1)), (_GLF_IDENTITY(ivec2(ivec2(1)), max(ivec2(ivec2(1)), ivec2(ivec2(1))))) | (ivec2(ivec2(1))))), ivec2(0, 0) ^ ((ivec2(ivec2(1))))), 0)) | ivec3(0, 0, 0))), (ivec2(0, 0) << _GLF_IDENTITY(ivec2(7), ivec2(7))) ^ (ivec2(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((ivec2(ivec2(1))), ivec2(0, _GLF_IDENTITY(0, (0) ^ 0)) ^ ((ivec2(ivec2(1))))), 0), (ivec3(_GLF_IDENTITY((ivec2(ivec2(1))), ivec2(0, 0) ^ ((ivec2(ivec2(1))))), 0)) | ivec3(0, 0, 0)))))), max(_GLF_IDENTITY((ivec2(ivec2(1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((ivec2(ivec2(1))), ivec2(0, 0) ^ ((ivec2(ivec2(1))))), 0), (ivec3(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(ivec2(1)), (_GLF_IDENTITY(ivec2(ivec2(1)), max(ivec2(ivec2(1)), ivec2(ivec2(1))))) | (ivec2(ivec2(1))))), ivec2(0, 0) ^ ((ivec2(ivec2(1))))), 0)) | ivec3(0, 0, 0))), _GLF_IDENTITY((ivec2(0, 0) << _GLF_IDENTITY(ivec2(7), ivec2(7))) ^ (ivec2(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((ivec2(ivec2(1))), ivec2(0, _GLF_IDENTITY(0, (0) ^ 0)) ^ ((ivec2(ivec2(1))))), 0), (ivec3(_GLF_IDENTITY((ivec2(ivec2(1))), ivec2(0, 0) ^ ((ivec2(ivec2(1))))), 0)) | ivec3(0, 0, 0)))), ((ivec2(0, 0) << _GLF_IDENTITY(ivec2(7), ivec2(7))) ^ (ivec2(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((ivec2(ivec2(1))), ivec2(0, _GLF_IDENTITY(0, (0) ^ 0)) ^ ((ivec2(ivec2(1))))), 0), (ivec3(_GLF_IDENTITY((ivec2(ivec2(1))), ivec2(0, 0) ^ ((ivec2(ivec2(1))))), 0)) | ivec3(0, _GLF_IDENTITY(0, (0) | 0), 0))))) / ivec2(1, 1)))), _GLF_IDENTITY(_GLF_IDENTITY((ivec2(ivec2(1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((ivec2(ivec2(1))), ivec2(0, 0) ^ ((ivec2(ivec2(1))))), 0), (ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec2(ivec2(1)), (ivec2(ivec2(1))) ^ ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(ivec2(ivec2(_GLF_IDENTITY(1, 0 + (1)))), max(ivec2(ivec2(1)), ivec2(ivec2(1))))) | (ivec2(ivec2(1))))), ivec2(0, 0) ^ ((ivec2(ivec2(1))))), 0)) | ivec3(0, 0, 0))), (ivec2(0, 0) << _GLF_IDENTITY(ivec2(7), ivec2(7))) ^ (ivec2(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((ivec2(ivec2(1))), _GLF_IDENTITY(ivec2(0, _GLF_IDENTITY(0, (0) ^ 0)) ^ ((ivec2(ivec2(1)))), (ivec2(0, _GLF_IDENTITY(0, (0) ^ 0)) ^ ((ivec2(ivec2(1))))) + ivec2(0, 0))), 0), (ivec3(_GLF_IDENTITY((ivec2(ivec2(1))), _GLF_IDENTITY(ivec2(0, 0), ivec2(ivec4(_GLF_IDENTITY(ivec2(0, 0), ~ (~ (ivec2(0, 0)))), 1, 1))) ^ ((ivec2(ivec2(1))))), 0)) | ivec3(0, 0, 0)))))), (_GLF_IDENTITY((ivec2(ivec2(1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((ivec2(ivec2(1))), ivec2(0, 0) ^ ((ivec2(ivec2(1))))), 0), (ivec3(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(ivec2(1)), (_GLF_IDENTITY(ivec2(ivec2(1)), max(ivec2(ivec2(1)), ivec2(ivec2(1))))) | (ivec2(ivec2(1))))), ivec2(0, 0) ^ ((ivec2(ivec2(1))))), 0)) | ivec3(0, 0, 0))), (ivec2(0, 0) << _GLF_IDENTITY(ivec2(7), ivec2(7))) ^ (ivec2(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((ivec2(ivec2(1))), ivec2(0, _GLF_IDENTITY(0, (0) ^ 0)) ^ ((ivec2(ivec2(1))))), 0), (ivec3(_GLF_IDENTITY((ivec2(ivec2(1))), ivec2(0, 0) ^ ((ivec2(ivec2(1))))), 0)) | ivec3(0, 0, 0))))))) << ivec2(0, 0)))))))))) / ivec2(1, _GLF_IDENTITY(1, (1) + 0))))), _GLF_IDENTITY(ivec2(1), (ivec2(1)) - _GLF_IDENTITY(ivec2(0, 0), (_GLF_IDENTITY(ivec2(0, 0), min(_GLF_IDENTITY(ivec2(0, 0), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(0, 0) | (ivec2(0, 0)), clamp(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, int(ivec4(0, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), 0, 1))))), _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))) | (ivec2(0, 0)), (ivec2(0, 0) | (ivec2(0, 0))) * ivec2(1, 1)), ivec2(0, 0) | (ivec2(0, 0)), ivec2(0, 0) | (ivec2(0, 0)))), (ivec2(0, 0) | (_GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) << ivec2(0, 0)))) * ivec2(1, 1))), ivec2(_GLF_IDENTITY(0, min(0, 0)), 0)))) * _GLF_IDENTITY(ivec2(1, 1), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4(ivec2(1, 1), (1 ^ 0), 0), max(ivec4(ivec2(1, 1), (1 ^ 0), 0), ivec4(ivec2(1, 1), (1 ^ 0), _GLF_IDENTITY(0, int(int(0))))))), min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4(ivec2(1, 1), (1 ^ 0), 0), max(ivec4(ivec2(1, 1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1 ^ 0, 0 ^ (1 ^ 0)), (1 ^ 0) << 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1 ^ 0, 0 ^ (1 ^ 0)), (1 ^ 0) << 0))) / ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1))))) >> _GLF_IDENTITY(int(1), int(1)))), 0), ivec4(ivec2(1, 1), (1 ^ 0), 0)))), _GLF_IDENTITY((ivec2(_GLF_IDENTITY(ivec4(ivec2(1, 1), (1 ^ _GLF_IDENTITY(0, (0) | (0))), 0), max(ivec4(ivec2(1, 1), (1 ^ 0), 0), ivec4(ivec2(_GLF_IDENTITY(1, max(1, 1)), 1), (1 ^ 0), 0))))) << ivec2(0, 0), ivec2(0, 0) | ((ivec2(_GLF_IDENTITY(ivec4(ivec2(1, 1), (1 ^ 0), 0), max(ivec4(ivec2(1, 1), (1 ^ 0), 0), ivec4(ivec2(1, 1), (1 ^ 0), 0))))) << ivec2(0, 0)))), ivec2(_GLF_IDENTITY(ivec4(ivec2(1, 1), (1 ^ 0), 0), max(_GLF_IDENTITY(ivec4(ivec2(1, 1), (1 ^ _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, (0) ^ 0))))))), 0), (_GLF_IDENTITY(ivec4(ivec2(1, 1), (1 ^ _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, (0) ^ 0))))))), 0), (ivec4(ivec2(1, 1), (1 ^ _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, (0) ^ 0))))))), 0)) << ivec4(0, 0, 0, 0))) >> ivec4(0, 0, 0, 0)), ivec4(ivec2(1, 1), (1 ^ 0), 0))))))))), ivec2(1))), vec4(1.0), bvec4(true)), ivec4(1), _GLF_struct_20(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, min(1, 1)))), uvec4(1u), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) - 0u), 1u, 1u)), ivec3(1), mat3x2(1.0), uvec2(1u))), _GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_size * _GLF_struct_replacement_14._f3.workgroup_id, 1u * (_GLF_struct_replacement_6.workgroup_size * _GLF_struct_replacement_14._f3.workgroup_id)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_22.workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)))) - 0u), (subgroup_id * subgroup_size) * 1u), (_GLF_struct_replacement_22.workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u)) | (_GLF_struct_replacement_22.workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size))))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))), uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))), _GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))), (true ? uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) : _GLF_FUZZED(subgroup_id)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))), (true ? uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) : _GLF_FUZZED(uvec2(2656u, 56572u).r))))), uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))))))))) * 1u))), min(_GLF_struct_replacement_22.workgroup_base + subgroup_id * subgroup_size, _GLF_struct_replacement_22.workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), (! (! (true))) || false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)), 1.0, determinant(mat3(1.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))).x > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, false))), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))), ! _GLF_IDENTITY((! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(((! (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (injectionSwitch.x > injectionSwitch.y))))))))) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), ((! (! (injectionSwitch.x > injectionSwitch.y)))) && true))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.1)), vec2(_GLF_FUZZED(-482.682), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), injectionSwitch.y, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), true, false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_struct_replacement_22.workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), ~ (~ (_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(max(virtual_gid, virtual_gid), _GLF_IDENTITY(uint(uvec4(max(virtual_gid, virtual_gid), 1u, 1u, 0u)), max(uint(uvec4(max(virtual_gid, virtual_gid), 1u, 1u, 0u)), uint(uvec4(max(virtual_gid, virtual_gid), 1u, 1u, 0u))))), (max(virtual_gid, virtual_gid)) | 0u)), virtual_gid))], buf[virtual_gid])), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), mat2(mat2x3(mat2(injectionSwitch, 0.0, 0.0)))))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}
