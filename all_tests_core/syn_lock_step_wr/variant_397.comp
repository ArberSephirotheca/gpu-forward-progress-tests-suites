#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec2((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))))))), true))), true, false)))))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), (injectionSwitch.x < injectionSwitch.y)), true)), false || (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(false, _GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) || false))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y) && true)))) || false))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)))))), uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) / uvec3(1u, 1u, 1u)), max(_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) / uvec3(1u, 1u, 1u)))), uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)))), gl_NumWorkGroups))), ((gl_NumWorkGroups)) / uvec3(1u, 1u, 1u))), max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)))), gl_NumWorkGroups))), ((gl_NumWorkGroups)) / uvec3(1u, 1u, 1u))), ~ (~ ((_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)))), gl_NumWorkGroups))), ((gl_NumWorkGroups)) / uvec3(1u, 1u, 1u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)))), gl_NumWorkGroups))), ((gl_NumWorkGroups)) / uvec3(1u, 1u, 1u)))))), 1u))) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)))))), max(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)))))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)))) | (uvec3(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))))))))) + (uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)))))))))) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(24427u, 89758u, 37731u))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)), gl_NumWorkGroups)), min(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)), gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)), gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)), gl_NumWorkGroups)))))) << uvec3(0u, 0u, 0u))).x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), max(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), (workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), max(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)))))) | (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))), workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(36888u)))))))))), 0u | (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), max(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), (workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), max(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)))))) | (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))), workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(36888u))))))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), round(length(_GLF_IDENTITY(normalize(1.0), (normalize(1.0)) * determinant(mat2(1.0, 0.0, 1.0, exp(0.0)))))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))), _GLF_IDENTITY(vec2(vec4(vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), _GLF_IDENTITY(round(length(normalize(1.0))), clamp(_GLF_IDENTITY(round(length(normalize(1.0))), (_GLF_IDENTITY(round(length(normalize(1.0))), mix(float(_GLF_FUZZED(-2160.4585)), float(round(length(normalize(1.0)))), bool(true)))) / 1.0), round(length(normalize(1.0))), _GLF_IDENTITY(round(length(normalize(1.0))), (false ? _GLF_FUZZED(-3.8) : round(length(normalize(1.0))))))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-188.844))))), float(_GLF_FUZZED(94.56)), bool(false))))), 1.0, sqrt(1.0))), vec2(0.0, 0.0) + (vec2(vec4(vec2(mat2x3(injectionSwitch, 0.0, abs(1.0), round(length(normalize(1.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), injectionSwitch.x)), _GLF_IDENTITY(float(_GLF_FUZZED(94.56)), clamp(float(_GLF_FUZZED(94.56)), float(_GLF_FUZZED(94.56)), float(_GLF_FUZZED(94.56)))), bool(false))))), 1.0, sqrt(1.0))))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(0.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, length(0.0), 1.0), transpose(transpose(mat4x3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(0.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, length(0.0), 1.0))))), min(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), determinant(mat4(0.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, length(0.0), 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(566.678)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(42.70) : injectionSwitch.y), clamp((false ? _GLF_FUZZED(42.70) : injectionSwitch.y), (false ? _GLF_FUZZED(42.70) : injectionSwitch.y), (false ? _GLF_FUZZED(42.70) : injectionSwitch.y))))), mix(float(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(42.70) : injectionSwitch.y), clamp((false ? _GLF_FUZZED(42.70) : injectionSwitch.y), (false ? _GLF_FUZZED(42.70) : injectionSwitch.y), (false ? _GLF_FUZZED(42.70) : injectionSwitch.y)))))), float(_GLF_FUZZED((0.9 + -4232.3611))), bool(false))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(757.708, 0.0 + (_GLF_IDENTITY(757.708, clamp(757.708, 757.708, 757.708))))))) : _GLF_FUZZED(4.7))), 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(0.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), min(determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - 0.0), 0.0, length(0.0), 1.0))))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(0.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0)), 0.0, length(0.0), 1.0), transpose(transpose(mat4x3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(0.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, log(1.0) + (0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, length(0.0), 1.0, length(0.0), 0.0))), 0.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) * sqrt(1.0)))), length(0.0), 1.0)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), true && (bool(bvec2(! (false), true)))))))))
    return;
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(53.93) : injectionSwitch.x)) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)), false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)) / _GLF_IDENTITY(1u, max(1u, 1u))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), uint(uvec2(subgroup_base, _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) + (0u))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_local_id)), clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u) ^ (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id)))))), _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3.2))), 0.0)), injectionSwitch.x)) ^ (subgroup_local_id))));
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (true ? subgroup_local_id : _GLF_FUZZED(uint(_GLF_IDENTITY(-33496, ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), min(1, 1))), int(1))) * (-33496)))))), (subgroup_local_id) + _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 1u)))) + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), (((_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))) << 0u) | _GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), (_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(workgroup_size) : (subgroup_size))))))) - 0u)), 0u | (workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), _GLF_IDENTITY((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) | ((0u))) - 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), (true ? _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))) : _GLF_FUZZED((uvec3(23628u, 110450u, 188337u).z >> subgroup_id)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))))), (_GLF_IDENTITY((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(131230u) : _GLF_IDENTITY(0u, min(0u, 0u)))))))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))))), (_GLF_IDENTITY((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) << 0u), uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))))), ((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u))))))) / 1u)) ^ 0u))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))))), (_GLF_IDENTITY((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), (uint(_GLF_IDENTITY(0u, (0u) - 0u))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), clamp(uint(_GLF_IDENTITY(0u, (0u) - 0u)), uint(_GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) - 0u)), 0u + (uint(_GLF_IDENTITY(0u, (0u) - 0u)))))))))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))))), ((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))))), ~ (~ (uint(uint(_GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))))))))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u))))))) / 1u)) ^ 0u))), 1u * (_GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))))), (_GLF_IDENTITY((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))))), ((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) - 0u))), clamp(uint(uint(_GLF_IDENTITY(0u, (0u) - 0u))), uint(uint(_GLF_IDENTITY(0u, (0u) - 0u))), uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u))))))) / 1u)) ^ 0u))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))))), (_GLF_IDENTITY((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))))), ((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u))))))) / 1u)) ^ 0u)), clamp(~ (_GLF_IDENTITY((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))))), (_GLF_IDENTITY((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))))), ((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u))))))) / 1u)) ^ 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))))), (_GLF_IDENTITY((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))))), ((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u))))))) / 1u)) ^ 0u)), (~ (_GLF_IDENTITY((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))))), (_GLF_IDENTITY((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))))), ((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u))))))) / 1u)) ^ 0u))) / 1u), ~ (_GLF_IDENTITY((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))))), (_GLF_IDENTITY((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))))), ((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u))))))) / 1u)) ^ 0u))))))))), 1u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(0u, (0u) | (0u)), 0u)))), ~ (~ (uint(uvec3(_GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))))), (_GLF_IDENTITY((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))))), ((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u))))))) / 1u)) ^ 0u))), 1u * (_GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))))), (_GLF_IDENTITY((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))))), ((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u))))))) / 1u)) ^ 0u))), (false ? _GLF_FUZZED(subgroup_id) : (~ (_GLF_IDENTITY((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))))), (_GLF_IDENTITY((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))))), ((subgroup_local_id) + _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), min(_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u)))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (0u) - 0u))))))) / 1u)) ^ 0u))))))), 1u, 0u)))))))) >> (0u & 97405u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) - 0u)))), max(workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_local_id + 1))) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, 0u + (subgroup_base)), subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), (false ? _GLF_FUZZED(subgroup_base) : subgroup_base))))) >> 0u)) - 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_local_id)))) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_local_id)))) - 0u), max(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_local_id)))) - 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_local_id)))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_local_id)))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_local_id)))) - 0u), (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_local_id)))) - 0u)) | 0u)) | (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_local_id)))) - 0u))))), (true ? _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_local_id)))) - 0u) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_base) - _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, max(0u, 0u)))))))))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size) ^ 0u)) | 0u))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)) + (injectionSwitch.x)) : _GLF_FUZZED(float(false)))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, injectionSwitch.y, injectionSwitch.y))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)) + (injectionSwitch.x)) : _GLF_FUZZED(float(false)))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, injectionSwitch.y, injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)) + (injectionSwitch.x)) : _GLF_FUZZED(float(false)))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, injectionSwitch.y, injectionSwitch.y)))) || false)))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, injectionSwitch.y, injectionSwitch.y)))))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(step(injectionSwitch, vec2(-8373.0975, -4239.3838))))).x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false)), (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false))) && true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21085) : 1))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21085) : 1)))), 0 ^ (~ (~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(21085) : 1)))))))), max(~ (1), ~ (1)))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, ~ (~ _GLF_IDENTITY((num_workgroup), (false ? _GLF_FUZZED(atomicCompSwap(subgroup_size, workgroup_base, subgroup_local_id)) : (num_workgroup)))))) : uint(1))), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), ((4)) + 0), clamp(_GLF_IDENTITY((4), _GLF_IDENTITY(((_GLF_IDENTITY(4, (4) | (4)))), (true ? ((_GLF_IDENTITY(4, (4) | (4)))) : _GLF_FUZZED(7241))) + 0), _GLF_IDENTITY((4), ((4)) + 0), _GLF_IDENTITY(_GLF_IDENTITY((4), ((4)) + 0), (_GLF_IDENTITY(_GLF_IDENTITY((4), ((4)) + 0), (_GLF_IDENTITY(_GLF_IDENTITY((4), ((4)) + 0), (_GLF_IDENTITY((4), ((4)) + 0)) << 0)) | (_GLF_IDENTITY((4), ((4)) + 0)))) | 0))) / 1, 0 ^ (_GLF_IDENTITY((4), ((4)) + _GLF_IDENTITY(0, _GLF_IDENTITY((true ? 0 : _GLF_FUZZED(_GLF_IDENTITY(-17705, max(_GLF_IDENTITY(-17705, min(-17705, -17705)), -17705)))), ((true ? 0 : _GLF_FUZZED(_GLF_IDENTITY(-17705, max(_GLF_IDENTITY(-17705, min(-17705, -17705)), -17705))))) | (_GLF_IDENTITY((true ? 0 : _GLF_FUZZED(_GLF_IDENTITY(-17705, max(_GLF_IDENTITY(-17705, min(-17705, -17705)), -17705)))), (_GLF_IDENTITY((true ? 0 : _GLF_FUZZED(_GLF_IDENTITY(-17705, max(_GLF_IDENTITY(-17705, min(-17705, -17705)), -17705)))), min((true ? 0 : _GLF_FUZZED(_GLF_IDENTITY(-17705, max(_GLF_IDENTITY(-17705, min(-17705, -17705)), -17705)))), (true ? 0 : _GLF_FUZZED(_GLF_IDENTITY(-17705, max(_GLF_IDENTITY(-17705, min(-17705, -17705)), -17705))))))) >> 0))))) / 1))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! (bool(_GLF_DEAD(false)))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))), false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))), false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), ! _GLF_IDENTITY((! (! (bool(_GLF_DEAD(false))))), bool(bvec4((! (! (bool(_GLF_DEAD(false))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false)))), false, false, false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, log(1.0)))), injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, log(1.0)))), injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, log(1.0)))), injectionSwitch.y)), false, true), true)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), true, false)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))))))), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(false))))))), false, false, true)))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, false)), ! (! (bool(bvec4(_GLF_DEAD(false), true, false, false))))))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), max(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), clamp(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))))).y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), false, false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}
