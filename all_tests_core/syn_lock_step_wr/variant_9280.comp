#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false), bool(bool(! (_GLF_DEAD(false))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))))), ! (! (((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))))))))) && true), true && ((! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), true && ((_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))), bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4353.3898), _GLF_FUZZED(-197.228)), bvec2(false, false))))).y))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))) || false)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-50.08) : injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))) || false))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))), bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4353.3898), _GLF_FUZZED(-197.228)), bvec2(false, false))))).y))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))) || false)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-50.08) : injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))) || false)))))))) && true), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), bool(bool((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(194535u)), _GLF_FUZZED(7.5)), bvec2(false, false))).x > injectionSwitch.y)))))))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), _GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) || false)), bool(bool((bool(bvec2(_GLF_DEAD(false), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), true))), bool(bool((bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), true))), bool(bool((bool(bvec2(_GLF_DEAD(false), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))) || false)), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false)))) && _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), false || ((true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && _GLF_IDENTITY(true, true && (true)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, true && (true)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (true))))), true && (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (true)), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (true)))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (true)), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && (true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, true && (true)))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), false, true)))) || false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), false || (! (! ((injectionSwitch.x < injectionSwitch.y)))))))), true))), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, true && (true))))), true && (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), true))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true && (true), (true && (true)) || false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(true && (true), (true && (true)) || false), false), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(true && (true), (true && (true)) || false), false), true)), false)))))))))))) || false))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, true && (true)))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), false, true)))) || false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), false || (! (! ((injectionSwitch.x < injectionSwitch.y)))))))), true))), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, true && (true))))), true && (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), true))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true && (true), (true && (true)) || false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(true && (true), (true && (true)) || false), false), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(true && (true), (true && (true)) || false), false), true)), false)))))))))))) || false)))), (! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, true && (true)))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), ! _GLF_IDENTITY((! ((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((! ((_GLF_DEAD(false)))), ! (! ((! ((_GLF_DEAD(false))))))))))), false, true)))) || false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), false || (! (! ((injectionSwitch.x < injectionSwitch.y)))))))), true))), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, true && (true))))), true && (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), true))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (false)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), true, true))), false)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true && (true), (true && (true)) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true && (true), (true && (true)) || false), false), false, false))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true && (true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true && (true), false || (true && (true))), false, true, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(true && (true), false || (true && (true))), false, true, false)), false, true)))), (true && (true)) || false), false), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(true && (true), (true && (true)) || false), false), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(true && (true), (true && (true)) || false), false), true)), false))), false)))))))))))) || false))))) && true)))))))) || false), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))))) && _GLF_IDENTITY(true, (true) && true)))), (_GLF_DEAD(false)) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), ! _GLF_IDENTITY((! (true)), bool(bvec4(_GLF_IDENTITY((! (true)), ((! (true))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), false))))) || false))), true && _GLF_IDENTITY((true), true && ((true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true) && true)) || false), true), true)))))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), true && (! (true)))), bool(bvec4(_GLF_IDENTITY((! (true)), ((! (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))) || false))), true && _GLF_IDENTITY((true), true && ((true)))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), false)))))))), (_GLF_DEAD(false)) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), bool(_GLF_IDENTITY(bvec3(bool(! (true)), false, false), bvec3(bvec4(bvec3(bool(! (true)), false, false), false)))))))), bool(bvec4(_GLF_IDENTITY((! (true)), ((! (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))) || false))), true && _GLF_IDENTITY((true), true && ((true))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), ! (! (! ((true))))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), true && (_GLF_IDENTITY(true, true && (true)))), ! (! (true))), (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec4(_GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), bool(bvec4((! (true)), false, false, true)))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), false, true, false))))) || false)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! _GLF_IDENTITY((true), bool(bvec4((true), false, true, true))))), (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec4(_GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (true)), ((! (true))) && true)), true && (bool(_GLF_IDENTITY((! (true)), ((! (true))) && true))))))) || _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false))))), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false))))), false), bvec2(bvec4(bvec2((! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false))))), false), true, false)))))))))), false, true, false))))) || false))))), true && (true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec4(_GLF_IDENTITY((! (true)), ((! (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))) || false))), true && _GLF_IDENTITY((true), ! (! ((true)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))), ! (! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))))), (false) || false))) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((true), false || ((true)))), ((! (true))) || _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.5)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))), (injectionSwitch.x > injectionSwitch.y))), false, true, false))))) || false)), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((true), false || ((true)))), ((! (true))) || _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.5)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))), (injectionSwitch.x > injectionSwitch.y))), false, true, false))))) || false)), false, false)))), true && (true))), true, false))))))))))) && true), _GLF_IDENTITY(true, (true) && true), true, false))))) || false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-6993.9684), (false ? _GLF_FUZZED(5.7) : _GLF_IDENTITY(_GLF_FUZZED(-6993.9684), 1.0 * (_GLF_FUZZED(-6993.9684))))) : injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))) && true) && (false || (false)), true && (true && (false || (false))))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(length(960.444)) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-594.472)), vec2(_GLF_FUZZED(-5653.6611), (injectionSwitch)[1]), bvec2(false, true))), 1.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0)), max(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-594.472)), vec2(_GLF_FUZZED(-5653.6611), (injectionSwitch)[1]), bvec2(false, true))), 1.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-594.472)), vec2(_GLF_FUZZED(-5653.6611), (injectionSwitch)[1]), bvec2(false, true))), 1.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 1.0, 0.0))))))).y)))))))), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))) || (false), true && (false || (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (! (bool(bvec3(_GLF_IDENTITY(false || (false), true && (false || (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uvec3(uint(8u), 0u, 1u))))), ((0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uvec3(uint(8u), 0u, 1u)))))) | ((0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uvec3(uint(8u), 0u, 1u))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), max(mat2(1.0) * ((injectionSwitch) / vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), max(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0))))), mat2(1.0) * ((injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))), (_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), max(mat2(1.0) * ((injectionSwitch) / vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), (1.0) - 0.0), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, max((1.0) - 0.0, (1.0) - 0.0))), _GLF_IDENTITY(1.0, (1.0) - 0.0))))), mat2(1.0) * ((injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))))) + vec2(0.0, 0.0)))))), (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch) / _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6214.0900)))), float(_GLF_FUZZED(-38.48)), bool(false))), 1.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0))) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)))), max(mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-83.41)), bool(false)))))) * _GLF_IDENTITY(((injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), vec2(0.0, 0.0) + (_GLF_IDENTITY(((injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, (0.0) / abs(1.0))))), (((injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))) - vec2(0.0, 0.0)))), mat2(1.0) * ((injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0))))))))) : _GLF_FUZZED(injectionSwitch))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((4.3 * 1924.6185))), bvec2(true, false))).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bvec4(! ((true)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) | (subgroup_size)), _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), clamp(min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base))) | _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base))) | _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), (true ? _GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base))) | _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) : _GLF_FUZZED((false ? subgroup_local_id : subgroup_size)))), _GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base))) | _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base))) | _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base))) | _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), max(_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base))) | _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), _GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base))) | _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size)))))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base))) | _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base))), clamp(_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base))), clamp(_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base))))), _GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base))))) | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | (_GLF_IDENTITY((subgroup_size), 0u ^ ((subgroup_size))))), clamp((subgroup_size), (subgroup_size), (subgroup_size))), max(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY((true ? (subgroup_size) : _GLF_FUZZED(workgroup_base)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((true ? (subgroup_size) : _GLF_FUZZED(workgroup_base)), min((true ? (subgroup_size) : _GLF_FUZZED(workgroup_base)), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base))))), (~ (_GLF_IDENTITY((true ? (subgroup_size) : _GLF_FUZZED(workgroup_base)), min((true ? (subgroup_size) : _GLF_FUZZED(workgroup_base)), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base)))))) | 0u)))) | _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), _GLF_IDENTITY((subgroup_size), (true ? _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(171358u) : (subgroup_size))) : _GLF_FUZZED(workgroup_base))) | _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size)))))) << 0u)) / 1u))))) >> _GLF_IDENTITY(0u, (0u) * 1u)), subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) + 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))) >> 0u)), (clamp(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) | (subgroup_size)), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(115976u))) : _GLF_FUZZED(workgroup_base), max(_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(115976u))) : _GLF_FUZZED(workgroup_base), (true ? true ? _GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(115976u))) : _GLF_FUZZED(workgroup_base) : _GLF_FUZZED(workgroup_size))), true ? _GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(115976u))) : _GLF_FUZZED(workgroup_base))))) | _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base))) | _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u), (subgroup_size), (subgroup_size))), _GLF_IDENTITY((true ? _GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base))) | _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) : _GLF_FUZZED((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? subgroup_local_id : subgroup_size))), ((true ? _GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base))) | _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) : _GLF_FUZZED((false ? subgroup_local_id : subgroup_size)))) ^ 0u)), _GLF_IDENTITY((subgroup_size), (true ? _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_FUZZED(workgroup_base)))) | (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), clamp(_GLF_FUZZED(workgroup_base), _GLF_FUZZED(workgroup_base), _GLF_FUZZED(workgroup_base))))))) | _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base))) | _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base))) | _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), max(_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base))) | _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base))) | _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), max(_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base))) | _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), _GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base))) | _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size)))))))) << 0u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (0u) * 1u)), subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) + 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) | (_GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) * 1u))))))) >> 0u))) / 1u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))))), ~ (~ (_GLF_IDENTITY(uint(uint(workgroup_base)), (uint(uint(workgroup_base))) << 0u)))), clamp(uint(uint(workgroup_base)), uint(uint(workgroup_base)), uint(uint(workgroup_base))))) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), (subgroup_local_id) << 0u)), (true ? 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) : _GLF_FUZZED(workgroup_size)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)))))) | (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))))) * 1u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-8.1)), float(injectionSwitch.y), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-8.1)), float(injectionSwitch.y), bool(true)), max(mix(float(_GLF_FUZZED(-8.1)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-8.1)), float(injectionSwitch.y), bool(true)))), mix(float(_GLF_FUZZED(-8.1)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-8.1)), _GLF_IDENTITY(float(injectionSwitch.y), (true ? float(injectionSwitch.y) : _GLF_FUZZED(3.3))), bool(true))))), injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (! ((! (false))))) || false), true && (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), bool(bvec2(! ((! (false))), false))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false, true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), ! (! (false))), _GLF_IDENTITY(false, (false) || false), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (false) || false), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))))))), true)))))))), true)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (false) || false), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (false) || false), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))), true))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (false) || false), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (false) || false), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))), true))))))), false, false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (false) || false), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (false) || false), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))), true))))))), false, false)), true), bvec3(bvec4(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (false) || false), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (false) || false), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))), true))))))), false, false)), true), false)))))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) ^ 0u) + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))) | (subgroup_base), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))) | (subgroup_base), 0u | ((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))) | (subgroup_base))), (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))) | (subgroup_base), (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))) | (subgroup_base))))) << _GLF_IDENTITY(0u, (0u) | 0u)) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(1, (1) >> 0)) - 0), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, true && (true)))), bool(bvec4(! ((_GLF_IDENTITY(true, true && (true)))), true, true, false))))) && true), false || (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || false))), ((_GLF_IDENTITY(true, true && (true)))) || false) && true))) ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (_GLF_IDENTITY(true, true && (true))) && true) ? subgroup_local_id + 1 : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) ^ 0u))))))), min(_GLF_IDENTITY(uint(subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))), (_GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(virtual_gid))))) + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))), (_GLF_IDENTITY(uint(subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(30575) : 1))))), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))))) / 1u)))) / 1u))), uint(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), 1)))))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (1)))), (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), true && ((_GLF_IDENTITY(true, true && (true))))) && true) ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (uint(subgroup_local_id + 1)), (false ? _GLF_FUZZED(82975u) : _GLF_IDENTITY(~ (uint(subgroup_local_id + 1)), (~ (uint(subgroup_local_id + 1))) | (~ (uint(subgroup_local_id + 1)))))))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))))), uint(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), 1))))))), clamp(~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true)))))) && true) ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))), min(_GLF_IDENTITY(uint(subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(subgroup_local_id + 1), _GLF_IDENTITY(max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), max(max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), _GLF_IDENTITY(max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (_GLF_IDENTITY(max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (false ? _GLF_FUZZED(workgroup_size) : max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))))) << 0u)))))), uint(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), ((1)) | 0)), 1)), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))), 1)))))))))), ~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true) ? subgroup_local_id + 1 : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))), min(_GLF_IDENTITY(uint(subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1))))), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))))), uint(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), 1))))))), ~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true) ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))), min(_GLF_IDENTITY(uint(subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + 1), ~ (~ (uint(subgroup_local_id + 1)))), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))))), uint(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), 1))))))))))))) + 0u), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(1, (1) >> 0)) - 0), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, true && (true)))), bool(bvec4(! ((_GLF_IDENTITY(true, true && (true)))), true, true, false))))) && true), false || (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || false))), ((_GLF_IDENTITY(true, true && (true)))) || false) && true))) ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (_GLF_IDENTITY(true, true && (true))) && true) ? subgroup_local_id + 1 : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) ^ 0u))))))), min(_GLF_IDENTITY(uint(subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))), (_GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(virtual_gid))))) + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))), (_GLF_IDENTITY(uint(subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(30575) : 1))))), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))))) / 1u)))) / 1u))), uint(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), 1)))))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (1)))), (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), true && ((_GLF_IDENTITY(true, true && (true))))) && true) ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (uint(subgroup_local_id + 1)), (false ? _GLF_FUZZED(82975u) : _GLF_IDENTITY(~ (uint(subgroup_local_id + 1)), (~ (uint(subgroup_local_id + 1))) | (~ (uint(subgroup_local_id + 1)))))))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))))), uint(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), 1))))))), clamp(~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true)))))) && true) ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))), min(_GLF_IDENTITY(uint(subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(subgroup_local_id + 1), _GLF_IDENTITY(max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), max(max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), _GLF_IDENTITY(max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (_GLF_IDENTITY(max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (false ? _GLF_FUZZED(workgroup_size) : max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))))) << 0u)))))), uint(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), ((1)) | 0)), 1)), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))), 1)))))))))), ~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true) ? subgroup_local_id + 1 : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))), min(_GLF_IDENTITY(uint(subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1))))), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))))), uint(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), 1))))))), ~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true) ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))), min(_GLF_IDENTITY(uint(subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + 1), ~ (~ (uint(subgroup_local_id + 1)))), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))))), uint(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), 1))))))))))))) + 0u), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(1, (1) >> 0)) - 0), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, true && (true)))), bool(bvec4(! ((_GLF_IDENTITY(true, true && (true)))), true, true, false))))) && true), false || (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || false))), ((_GLF_IDENTITY(true, true && (true)))) || false) && true))) ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (_GLF_IDENTITY(true, true && (true))) && true) ? subgroup_local_id + 1 : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) ^ 0u))))))), min(_GLF_IDENTITY(uint(subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))), (_GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(virtual_gid))))) + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))), (_GLF_IDENTITY(uint(subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(30575) : 1))))), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))))) / 1u)))) / 1u))), uint(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), 1)))))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (1)))), (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), true && ((_GLF_IDENTITY(true, true && (true))))) && true) ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (uint(subgroup_local_id + 1)), (false ? _GLF_FUZZED(82975u) : _GLF_IDENTITY(~ (uint(subgroup_local_id + 1)), (~ (uint(subgroup_local_id + 1))) | (~ (uint(subgroup_local_id + 1)))))))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))))), uint(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), 1))))))), clamp(~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true)))))) && true) ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))), min(_GLF_IDENTITY(uint(subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(subgroup_local_id + 1), _GLF_IDENTITY(max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), max(max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), _GLF_IDENTITY(max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (_GLF_IDENTITY(max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (false ? _GLF_FUZZED(workgroup_size) : max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))))) << 0u)))))), uint(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), ((1)) | 0)), 1)), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))), 1)))))))))), ~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true) ? subgroup_local_id + 1 : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))), min(_GLF_IDENTITY(uint(subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1))))), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))))), uint(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), 1))))))), ~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true) ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))), min(_GLF_IDENTITY(uint(subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + 1), ~ (~ (uint(subgroup_local_id + 1)))), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))))), uint(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), 1))))))))))))) + 0u), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(1, (1) >> 0)) - 0), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, true && (true)))), bool(bvec4(! ((_GLF_IDENTITY(true, true && (true)))), true, true, false))))) && true), false || (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || false))), ((_GLF_IDENTITY(true, true && (true)))) || false) && true))) ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), (_GLF_IDENTITY(true, true && (true))) && true) ? subgroup_local_id + 1 : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) ^ 0u))))))), min(_GLF_IDENTITY(uint(subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))), (_GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(virtual_gid))))) + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))), (_GLF_IDENTITY(uint(subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(30575) : 1))))), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))))) / 1u)))) / 1u))), uint(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), 1)))))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (1)))), (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), true && ((_GLF_IDENTITY(true, true && (true))))) && true) ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (uint(subgroup_local_id + 1)), (false ? _GLF_FUZZED(82975u) : _GLF_IDENTITY(~ (uint(subgroup_local_id + 1)), (~ (uint(subgroup_local_id + 1))) | (~ (uint(subgroup_local_id + 1)))))))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))))), uint(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), 1))))))), clamp(~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true)))))) && true) ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))), min(_GLF_IDENTITY(uint(subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(subgroup_local_id + 1), _GLF_IDENTITY(max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), max(max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), _GLF_IDENTITY(max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (_GLF_IDENTITY(max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1)))), (false ? _GLF_FUZZED(workgroup_size) : max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))))) << 0u)))))), uint(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), ((1)) | 0)), 1)), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (1), max(0 + (1), 0 + (1)))), 1)))))))))), ~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true) ? subgroup_local_id + 1 : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))), min(_GLF_IDENTITY(uint(subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1))))), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))))), uint(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), 1))))))), ~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true) ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))), min(_GLF_IDENTITY(uint(subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id + 1), ~ (~ (uint(subgroup_local_id + 1)))), max(uint(subgroup_local_id + 1), _GLF_IDENTITY(uint(subgroup_local_id + 1), max(uint(subgroup_local_id + 1), uint(subgroup_local_id + 1))))))), uint(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 + (1)), 1))))))))))))) + 0u)))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), (0u | 0u))))))), 0u))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (true ? clamp(subgroup_size, subgroup_size, subgroup_size) : _GLF_FUZZED(workgroup_base)))), subgroup_size)), (subgroup_size) ^ 0u));
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), false, false, true))), (_GLF_DEAD(false)) || false))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))), true), true, false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.0), _GLF_FUZZED((- -17.62))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y)), false))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) && true), bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) && true), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), bool(bvec4((! (true)), true, true, false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec3(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), bool(bvec2(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), false)))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), bool(_GLF_IDENTITY(bvec2(! (! (! (true))), false), bvec2(bvec2(bvec2(! (! (! (true))), false)))))))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec3(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), bool(bvec2(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), false)))), true, false, true))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))) || false)))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))) || false))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(exp2(vec2(7.4, -6328.3594))))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true))) || false)))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec3(true, true, true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), (! ((_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))) || false)))), true, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), false, true, true)), (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) && true)) || false)), false, true, true))) || false)), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))), false || (bool(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))))), bool(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), true, true))))), true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true))) || false)), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), true, true))), (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(true, ! (! (true))), true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true))) || false)), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), true, true))), (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(true, ! (! (true))), true)), false || (bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true))) || false)), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec2(true, false))))))), true))), (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(true, ! (! (true))), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true))) || false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true))) || false)))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), true, true))), (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(true, ! (! (true))), true)), false || (bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true))) || false)), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), true, true))), (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(true, ! (! (true))), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) / 1u), clamp(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) | ((buf[virtual_gid]))) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), max((_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)))))), injectionSwitch.y)))) ^ 0u), buf[virtual_gid])))), buf[_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, 0u)))], buf[virtual_gid])), _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : (buf[virtual_gid]), _GLF_IDENTITY(uint(uvec4(false ? _GLF_FUZZED(workgroup_base) : (buf[virtual_gid]), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), max(uint(uvec4(false ? _GLF_FUZZED(workgroup_base) : (buf[virtual_gid]), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), uint(uvec4(false ? _GLF_FUZZED(workgroup_base) : (buf[virtual_gid]), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))))))) << 0u), _GLF_IDENTITY(buf[virtual_gid], 0u | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u))))), 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), _GLF_IDENTITY(true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-951.460)), bvec2(true, false))))).y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false))))), true, false))), false, _GLF_IDENTITY(false, (false) && true))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec4(vec3(26.55, -23.85, -1.7), -338.134).g)), bool(false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - abs(0.0)) > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), bool(bool(true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).y)), true && (((injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))))).y, _GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, sqrt(1.0), cos(0.0)))))), ! (! (! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, sqrt(1.0), cos(0.0))))))))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false, true, false))), false, false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(4.0) : injectionSwitch[0])), injectionSwitch[1])), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(4.0) : injectionSwitch[0])), injectionSwitch[1])))[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(4.0) : injectionSwitch[0])), injectionSwitch[1])))[1]), vec2(_GLF_FUZZED((false ? -2295.8000 : 8861.9670)), _GLF_FUZZED(39.09)), bvec2(false, false))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(4.0) : injectionSwitch[0])), injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(4.0) : injectionSwitch[0])), injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(4.0) : injectionSwitch[0])), injectionSwitch[1])).y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-10.02), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-785.826)), bvec2(true, false))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(length(vec4(0.0, 0.0, 0.0, 0.0))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-65.91)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-65.91)), length(0.0) + (_GLF_IDENTITY(float(_GLF_FUZZED(-65.91)), mix(float(_GLF_FUZZED(-2.5)), float(float(_GLF_FUZZED(-65.91))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(float(_GLF_FUZZED(-65.91)), clamp(float(_GLF_FUZZED(-65.91)), float(_GLF_FUZZED(-65.91)), float(_GLF_FUZZED(-65.91)))), float(_GLF_FUZZED(-65.91)))), bool(false))), injectionSwitch.y, injectionSwitch.y))))))
  return;
}
