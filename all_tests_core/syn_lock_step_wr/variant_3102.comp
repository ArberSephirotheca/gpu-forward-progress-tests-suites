#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) || false), true, true, true))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true)), (bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true))) || false))) || false, false || ((_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true)), (bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, true))) || false))) || false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0))), injectionSwitch[1])).x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false, true))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), (true ? vec2(injectionSwitch.y, 0.0) : _GLF_FUZZED(vec2(9358.3636, -7.8)))), clamp(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), (true ? vec2(injectionSwitch.y, 0.0) : _GLF_FUZZED(vec2(9358.3636, -7.8)))), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), (true ? vec2(injectionSwitch.y, 0.0) : _GLF_FUZZED(vec2(9358.3636, -7.8)))), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), (true ? vec2(injectionSwitch.y, 0.0) : _GLF_FUZZED(vec2(9358.3636, -7.8))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), abs(0.0)), mat2x4(mat3x4(mat2x4(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1866.0203)), float(0.0), bool(true))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (float(mat4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))) * 1.0)), 0.0)), mix(float(_GLF_FUZZED(-610.703)), _GLF_IDENTITY(float(float(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), max(_GLF_IDENTITY(float(float(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), (float(float(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))) + 0.0), _GLF_IDENTITY(float(float(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), min(float(float(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), float(float(mat2x3(1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))))), bool(true)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), mix(float(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (clamp(1.0, 1.0, 1.0)) / 1.0)), float(_GLF_FUZZED((387.805 + 5.5))), bool(false)))), 0.0, 0.0, abs(_GLF_IDENTITY(0.0, min(0.0, 0.0))))))))), _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0)), (float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0))) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), (vec4(0.0, 0.0, 1.0, 0.0)) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(0.0, 0.0, 1.0, 0.0))))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0))), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (float(mat3(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) + 0.0)), 0.0))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, tan(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))), 1.0)), clamp(float(vec3(injectionSwitch.y, tan(0.0), 1.0)), _GLF_IDENTITY(float(vec3(injectionSwitch.y, tan(0.0), 1.0)), mix(float(_GLF_FUZZED(520.151)), float(float(vec3(injectionSwitch.y, _GLF_IDENTITY(tan(0.0), mix(float(_GLF_FUZZED(76.94)), float(_GLF_IDENTITY(tan(0.0), (tan(0.0)) * 1.0)), bool(true))), 1.0))), bool(true))), float(vec3(injectionSwitch.y, tan(0.0), 1.0)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, tan(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))), 1.0)), clamp(float(vec3(injectionSwitch.y, tan(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0)), _GLF_IDENTITY(float(vec3(injectionSwitch.y, tan(0.0), 1.0)), mix(float(_GLF_FUZZED(520.151)), float(float(vec3(injectionSwitch.y, _GLF_IDENTITY(tan(0.0), mix(float(_GLF_FUZZED(76.94)), float(_GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), (tan(0.0)) * 1.0), (_GLF_IDENTITY(tan(0.0), (tan(0.0)) * 1.0)) - 0.0)), bool(true))), 1.0))), bool(true))), float(vec3(injectionSwitch.y, tan(0.0), 1.0))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))))).x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, float(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 1.0)), 1.0))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(fract(vec2(8292.6211, 0.6))) : (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y))))))))), false, false))), false, true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), false, false))), false, true)))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, true)), (bool(bvec3((false), false, true))) || false))), (! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, true)), (bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec3(bvec3((false), false, true)))))) || false)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(true, ! (! (true))))), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, (false) && true))))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), bvec2(bvec3(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2815.1263)), bool(false))) > injectionSwitch.y))), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), true), bvec3(bvec4(bvec3(bvec2(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), true), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), true), bvec3(bvec4(bvec3(bvec2(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), true), false)))), true)))), true, false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), true), bvec3(bvec4(bvec3(bvec2(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), true), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), true), bvec3(bvec4(bvec3(bvec2(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), true), false)))), true)))), true, false)), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true, false)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), false, true))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))) || (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), false, false))), false, true)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y) * 1.0))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), false, false))), false, true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y) * 1.0))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), false, false))), false, true))))))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec3(bvec3((false), false, true))))), (bool(bvec3((false), false, true))) || false))), (! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((false), false, true)), (bool(bvec3((false), false, true))) || false), bool(bvec3(_GLF_IDENTITY(bool(bvec3((false), false, true)), (bool(bvec3((false), false, true))) || false), false, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))), true, _GLF_IDENTITY(true, ! (! (true))))), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))), bvec2(bvec3(bvec2(bvec2(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))), true)))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true, false)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), false, true))))))))), ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false, true, false)))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u), clamp(_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u), _GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) - 0u)), _GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u))))), (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u), clamp(_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u), _GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) - 0u)), _GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u)))))) >> 0u), clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x)))), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x)))), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x)))))), gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)).x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * 1u)) + uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, abs(1.0)))), _GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), max(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) * 1u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u))))).x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), _GLF_IDENTITY((clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY((clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)), ((clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))) >> 0u) : _GLF_FUZZED(subgroup_local_id))) * 1u)), (0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(195490u, 3241u, 11670u)) : gl_WorkGroupSize)).x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u))) * 1u)), (~ (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)).x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), gl_WorkGroupSize.x)) * 1u)), (0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u))) * 1u))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))) << 0u), gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u)))), ((_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), _GLF_IDENTITY((clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u, ((clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u) | (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uvec4(uint(4u), 0u, 0u, 1u))))))))))) / ((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), _GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), uint(0u))))), _GLF_IDENTITY(min(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u)))), (~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u), (false ? _GLF_FUZZED(uvec2(44366u, 71523u)) : uvec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u)))), (~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)))))), (~ (~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (gl_WorkGroupSize.x)), gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u)))))) - 0u), ~ (~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u)))))), (false ? _GLF_FUZZED((subgroup_id --)) : _GLF_IDENTITY(min(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u))))), (~ (~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u)))))) - 0u), ~ (~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u)))))), _GLF_IDENTITY(clamp(min(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u))))), (~ (~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u)))))) - 0u), ~ (~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u)))))), min(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u))))), (~ (~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u)))))) - 0u), ~ (~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u)))))), min(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u))))), (~ (~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u)))))) - 0u), ~ (~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u))))))), (clamp(min(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u))))), (~ (~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u)))))) - 0u), ~ (~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u)))))), min(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u))))), (~ (~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u)))))) - 0u), ~ (~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u)))))), min(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u))))), (~ (~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u)))))) - 0u), ~ (~ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u)))))))) ^ 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)).x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u))), (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))))).x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)).x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u)))) | _GLF_IDENTITY((_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u)))), ((_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x), (clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)) * 1u))))) | 0u))))), gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && _GLF_IDENTITY(true, (true) && true))), true && ((_GLF_IDENTITY(false, (false) && true)))), false), bvec2(bvec4(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, (false) && true))), false || (bool((_GLF_IDENTITY(false, (false) && true))))))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, (false) && true))), false || (bool((_GLF_IDENTITY(false, (false) && true))))))) && true), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || ((_GLF_IDENTITY(false, (false) && true))))), false || (bool((_GLF_IDENTITY(false, (false) && true))))))) && true))))))), false), false, _GLF_IDENTITY(false, (false) && true)))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), ((true)) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((true), _GLF_IDENTITY(((true)) && true, false || (((true)) && true))), false), true))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, true && (true)), bool(_GLF_IDENTITY(bvec2((false) && _GLF_IDENTITY(true, true && (true)), false), bvec2(bvec4(bvec2((false) && _GLF_IDENTITY(true, true && (true)), false), false, true)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), true && ((true))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, true && (true)), ((false) && _GLF_IDENTITY(true, true && (true))) && true)))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.0)), vec2(_GLF_FUZZED(3502.4112), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch, injectionSwitch)).y))), true))))) || false), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))))), false || (bool((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))))))))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))))), ! (! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6102.3664)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED(-3.6)), bool(false))) > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8565.5718, 4.6)))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))) * (injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(176992u, 93895u, 11352u)) : gl_WorkGroupID))) | (gl_WorkGroupID)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))).x) - 0u), (gl_WorkGroupID.x) / 1u);
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u);
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), max(1u << _GLF_IDENTITY(uint(6u), uint(6u)), 1u << _GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, (6u) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), (_GLF_IDENTITY(6u, (6u) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))) | (_GLF_IDENTITY(6u, (6u) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))), uint(6u))) * (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), ~ (_GLF_IDENTITY(~ (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), max(1u << _GLF_IDENTITY(uint(6u), uint(6u)), 1u << _GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, (6u) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), (_GLF_IDENTITY(6u, (6u) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))) | (_GLF_IDENTITY(6u, (6u) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))), uint(6u))) * (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), min(~ (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), max(1u << _GLF_IDENTITY(uint(6u), uint(6u)), 1u << _GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, (6u) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), (_GLF_IDENTITY(6u, (6u) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))) | (_GLF_IDENTITY(6u, (6u) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))), uint(6u))) * (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), ~ (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), max(1u << _GLF_IDENTITY(uint(6u), uint(6u)), 1u << _GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, (6u) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), (_GLF_IDENTITY(6u, (6u) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))) | (_GLF_IDENTITY(6u, (6u) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))), uint(6u))) * (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size, subgroup_size))) >> 0u)) >> 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size, subgroup_size))) >> 0u)) >> 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size, subgroup_size))) >> 0u)) >> 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size, subgroup_size))) >> 0u)) >> 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size, subgroup_size))) >> 0u)) >> 0u) << 0u)))))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))))), _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup))), subgroup_size)) + ((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.1))), injectionSwitch.x)) | (1)), _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (7))), int(7))))))))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9.3) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! ((true) || false))))))), true, false)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(mod(0.1, -5.8)))) > injectionSwitch.y, false, true))), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) && true), true))), true, false))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(true, (true) && true), false)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(mod(0.1, -5.8)))) > injectionSwitch.y, false, true))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false, true))), true, false))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, (true) || false)))), true, false)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(mod(0.1, -5.8)))) > injectionSwitch.y, false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(mod(0.1, -5.8)))) > injectionSwitch.y, false, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(mod(0.1, -5.8)))) > injectionSwitch.y, false, true)))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(mod(0.1, -5.8)))) > injectionSwitch.y, false, true)))), true, false, true)))), bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(mod(0.1, -5.8)))) > injectionSwitch.y, false, true)))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(mod(0.1, -5.8)))) > injectionSwitch.y, false, true)))), true, false, true))))))))))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), true, false))))))), _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9.3) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-801.790)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (_GLF_IDENTITY(true, (true) || false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (_GLF_IDENTITY(true, (true) || false))))) || false)))))), true, false)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(mod(0.1, -5.8)))) > injectionSwitch.y, false, true))), true, false)), ! _GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(729.158)), float(injectionSwitch.y), bool(true))), bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), true, false)))), ((! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(729.158)), float(injectionSwitch.y), bool(true))), bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), true, false))))) || false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false)))), true, false)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(mod(0.1, -5.8), clamp(mod(0.1, -5.8), mod(0.1, -5.8), mod(0.1, -5.8)))))) > injectionSwitch.y, false, true))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))), _GLF_IDENTITY(true, false || (true)), false))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-9.4, -9.8)))).x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) || false)))), true, false)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(mod(0.1, -5.8)))) > injectionSwitch.y, false, true))), true, false)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), true, false)))))))))), true), false))))))))), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9.3) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, (true) || false)))), true, false)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(mod(0.1, -5.8)), (_GLF_IDENTITY(_GLF_FUZZED(mod(0.1, -5.8)), max(_GLF_FUZZED(mod(0.1, -5.8)), _GLF_FUZZED(mod(0.1, -5.8))))) + 0.0))) > injectionSwitch.y, false, true))), true, false)), ! (! _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false || (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), true, false))), ! (! ((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false || (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), true, false)))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(true, (true) || false)))), true, false)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(mod(0.1, -5.8)))) > injectionSwitch.y, false, true))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(mod(0.1, -5.8)))) > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)), true))))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))), true, false))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0)))) - vec2(0.0, 0.0)).y, false, _GLF_IDENTITY(true, (true) || false)))), true, false)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(mod(0.1, -5.8)))) > injectionSwitch.y, false, true))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), true, false))))))), true), false))))))))), false, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) << 0)), 4, 64, 4);
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, 1, (1 ^ 1)), ivec3(ivec4(_GLF_IDENTITY(ivec3(4, 1, _GLF_IDENTITY((1 ^ 1), max((1 ^ 1), (1 ^ 1)))), min(ivec3(4, 1, (1 ^ 1)), ivec3(4, 1, (1 ^ 1)))), (0 | 1)))))))), 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) ^ _GLF_IDENTITY((0 | 0), ((0 | 0)) >> 0))) | 0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))), true, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))), true, true)), false)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), (_GLF_IDENTITY(~ (read), 0u + (~ (read)))) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(4, 4))), _GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(44834) : int(ivec4(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 0))))), min(4, 4)), 0 | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(55640) : 4)))))), _GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(44834) : int(ivec4(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 0))))), min(4, 4)), 0 | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(55640) : 4)))))), _GLF_IDENTITY(4, min(4, 4)))), 1, 0), (ivec3((min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(44834) : int(ivec4(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 0))))), min(4, 4)), 0 | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(55640) : 4)))))), _GLF_IDENTITY(4, min(4, 4)))), 1, 0)) / ivec3(1, 1, 1))), (int(_GLF_IDENTITY(ivec3((min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(44834) : int(ivec4(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 0))))), min(4, 4)), 0 | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(55640) : 4)))))), _GLF_IDENTITY(4, min(4, 4)))), 1, 0), (ivec3((min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(44834) : int(ivec4(4, int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 0))))), min(4, 4)), 0 | (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(55640) : 4)))))), _GLF_IDENTITY(4, min(4, 4)))), 1, 0)) / ivec3(1, 1, 1)))) / 1)) - 0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) << 0))), _GLF_IDENTITY(4, min(4, 4))), (min(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), clamp(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(4, 4)))))), _GLF_IDENTITY(4, min(4, 4)))) - 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(4, 4))), (min(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), 0 | (_GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(4, min(4, 4)))) - 0), (_GLF_IDENTITY(min(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) / 1), 4))), (min(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), 0 | (_GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(4, min(4, 4)))) - 0)) | (_GLF_IDENTITY(min(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(4, 4))), (min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), min(4, 4)), _GLF_IDENTITY(0, min(0, 0)) | (_GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(4, min(4, 4)))) - 0))) : _GLF_FUZZED(-97340))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) << 0))), _GLF_IDENTITY(4, min(4, 4))), (min(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), clamp(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(4, 4)))))), _GLF_IDENTITY(4, min(4, 4)))) - 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(4, 4))), (min(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), 0 | (_GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(4, min(4, 4)))) - 0), (_GLF_IDENTITY(min(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) / 1), 4))), (min(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), 0 | (_GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(4, min(4, 4)))) - 0)) | (_GLF_IDENTITY(min(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, min(4, 4))), (min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), min(4, 4)), _GLF_IDENTITY(0, min(0, 0)) | (_GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(4, min(4, 4)))) - 0))) : _GLF_FUZZED(-97340))), 1, 0, 0))), _GLF_IDENTITY(min(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, 0 | (4)), 4)), _GLF_IDENTITY(4, min(4, 4))), (min(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), max(_GLF_IDENTITY(max(4, 4), 1 * (max(4, 4))), _GLF_IDENTITY(max(4, 4), (max(4, 4)) | (_GLF_IDENTITY(max(4, 4), ~ (~ (max(4, 4))))))))), 4)), _GLF_IDENTITY(0, (0) | (0)) | (_GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))))) - 0))))) | (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), int(7))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) - 0)))), (~ (_GLF_IDENTITY(int(7), int(7)))) ^ 0), ~ (_GLF_IDENTITY(int(7), int(7))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), int(int(_GLF_IDENTITY(int(7), int(7)))))))), int(ivec2(~ (_GLF_IDENTITY(int(7), int(7))), 0)))))))) ^ (4)), 4)))), 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (0 | 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), int(int(~ (4)))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), int(int(~ (4))))))) >> 0))), max(_GLF_IDENTITY(4, (0 | 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), int(int(~ (4)))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), int(int(~ (4))))))) >> 0))), _GLF_IDENTITY(_GLF_IDENTITY(4, (0 | 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), int(int(~ (4)))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), int(int(~ (4))))))) >> 0))), min(_GLF_IDENTITY(4, (0 | 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), int(int(~ (4)))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), int(int(~ (4))))))) >> 0))), _GLF_IDENTITY(4, (0 | 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), int(int(~ (4)))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), int(int(~ (4))))))) >> 0))))))));
 if(_GLF_DEAD(false))
  barrier();
}
