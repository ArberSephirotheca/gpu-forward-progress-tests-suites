#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(false || (false), (false || (false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))))))))), ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))) && true)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (false ? _GLF_FUZZED(15090) : _GLF_IDENTITY(int(2), int(2))))) / 1), _GLF_IDENTITY((_GLF_IDENTITY(int(2), int(2))) >> 0, int(int(_GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (2) * 1))))), int(2))) >> 0, ((_GLF_IDENTITY(int(2), int(2))) >> 0) << 0)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), bool(bvec3(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), true, false)))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 uvec2 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) < injectionSwitch.y)))), ((_GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY((int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.2)), float(0.0), bool(true))), 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), (true ? 1.0 : _GLF_FUZZED(-2473.5164))), injectionSwitch.y)) ^ 1), clamp((int(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2473.5164))), injectionSwitch.y)) ^ 1), (int(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-2473.5164))), injectionSwitch.y)) ^ 1), (int(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-2473.5164, max(-2473.5164, -2473.5164))))), injectionSwitch.y)) ^ 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         do
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   else
    {
    }
   do
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-467.988), _GLF_FUZZED(654.859)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(98.37)), bool(false))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) && true)))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
               else
                {
                 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.y = num_workgroup;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false))))))), (injectionSwitch.x > injectionSwitch.y))) && true)));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9.6) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 1.0))))), (injectionSwitch.y) / 1.0)))))));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (true ? workgroup_size * workgroup_id : _GLF_FUZZED(subgroup_size)))) ^ 0u);
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((subgroup_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 0u)) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(workgroup_size)))))), (_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u)))) << (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), min(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), 1u * (uint(6u)))) >> 0u), uint(6u))), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u), _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))) | (_GLF_IDENTITY(uint(6u), uint(6u))))) * (subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(_GLF_IDENTITY(6u, (6u) | 0u)), uint(6u))), (_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u)))) << (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))), uint(6u)), _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 0u))) + (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u)))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u)))), ((_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) << 0u))) << (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | 0u)))) - 0u), _GLF_IDENTITY(uint(6u), 0u ^ (_GLF_IDENTITY(uint(6u), (uint(6u)) | 0u))), uint(6u)))))))) >> _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), _GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(105897u) : uint(6u))))), (_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u)))) << (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u)))))))) >> _GLF_IDENTITY(uint(6u), uint(6u))) | ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))), (_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u)))) << (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u)))))))) >> _GLF_IDENTITY(uint(6u), uint(6u))), ~ (~ (((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) | 0u)), max(uint(6u), _GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(105897u) : uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u)))) << (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(uvec3(uint(6u), 1u, 0u))), max(uint(6u), uint(6u)))) << (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) << 0u))) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u)))))))))) >> _GLF_IDENTITY(uint(6u), uint(6u))) | ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))), (_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u)))) << (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(clamp(uint(6u), uint(6u), uint(6u)), clamp(clamp(uint(6u), uint(6u), uint(6u)), clamp(uint(6u), uint(6u), uint(6u)), clamp(uint(6u), uint(6u), uint(6u)))))))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))))))), (true ? (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(_GLF_IDENTITY(6u, (6u) | 0u)), uint(6u))), (_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u)))) << (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))), uint(6u)), _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 0u))) + (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u)))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u)))), ((_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))) << 0u))) << (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | 0u)))) - 0u), _GLF_IDENTITY(uint(6u), 0u ^ (_GLF_IDENTITY(uint(6u), (uint(6u)) | 0u))), uint(6u)))))))) >> _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), _GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(105897u) : uint(6u))))), (_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u)))) << (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u)))))))) >> _GLF_IDENTITY(uint(6u), uint(6u))) | ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))), (_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u)))) << (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u)))))))) >> _GLF_IDENTITY(uint(6u), uint(6u))), ~ (~ (((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) | 0u)), max(uint(6u), _GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(105897u) : uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u)))) << (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(uvec3(uint(6u), 1u, 0u))), max(uint(6u), uint(6u)))) << (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) << 0u))) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u)))))))))) >> _GLF_IDENTITY(uint(6u), uint(6u))) | ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))), (_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u)))) << (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(clamp(uint(6u), uint(6u), uint(6u)), clamp(clamp(uint(6u), uint(6u), uint(6u)), clamp(uint(6u), uint(6u), uint(6u)), clamp(uint(6u), uint(6u), uint(6u)))))))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))))))) : _GLF_FUZZED(num_workgroup))) * (subgroup_size)) - (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), ~ (~ ((subgroup_local_id) | (subgroup_local_id)))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (true ? subgroup_id : _GLF_FUZZED(workgroup_id))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (true ? subgroup_id : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (true ? subgroup_id : _GLF_FUZZED(workgroup_id)))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (true ? subgroup_id : _GLF_FUZZED(workgroup_id))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (true ? subgroup_id : _GLF_FUZZED(workgroup_id)))))))) * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)) ^ (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, max(0u, 0u)) ^ (subgroup_local_id)) + 1) - 0u)) % subgroup_size), ~ (~ (((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u ^ (subgroup_local_id), (0u ^ (subgroup_local_id)) << 0u)) + 1) % subgroup_size))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), (false ? _GLF_FUZZED((~ _injected_loop_counter)) : ~ (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_injected_loop_counter))) >> (0 | 0))))))) < ((_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), max(1 << _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) << 0), int(5)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), ~ (~ (_GLF_IDENTITY(int(5), int(5))))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5))))))), 1 << _GLF_IDENTITY(int(5), int(5))))) + 0))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), max(1 << _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) << 0), int(5)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), ~ (~ (_GLF_IDENTITY(int(5), int(5))))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5))))))), 1 << _GLF_IDENTITY(int(5), int(5))))) + 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), max(1 << _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) << 0), int(5)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), ~ (~ (_GLF_IDENTITY(int(5), int(5))))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5))))))), 1 << _GLF_IDENTITY(int(5), int(5))))) + 0))), 0 ^ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), max(1 << _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) << 0), int(5)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), ~ (~ (_GLF_IDENTITY(int(5), int(5))))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5))))))), 1 << _GLF_IDENTITY(int(5), int(5))))) + 0)))))))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (true ? _injected_loop_counter ++ : _GLF_FUZZED(_injected_loop_counter)))) | 0))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
              barrier();
             do
              {
               GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = next_virtual_gid;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)))))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), bool(bvec2(true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false)), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false), true, true))))))), false)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))) || false))))), true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false)), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false), true, true))))))), false)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))) || false))))), true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false)), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false), true, true))))))), false)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))) || false))))), true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true) || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), false, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), false, true), false))))))))))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false)), false)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, false))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) && true) || (_GLF_DEAD(false)))) || false)), (false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))))) || false))), true && ((! _GLF_IDENTITY((_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) && true))))) || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))), ! _GLF_IDENTITY((! (false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), ! (_GLF_IDENTITY(! ((! (false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))), (! ((! (false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))) || false)))))) && true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) && true))))) || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))), ! _GLF_IDENTITY((! (false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), ! (_GLF_IDENTITY(! ((! (false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))), (! ((! (false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))) || false)))))) && true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) && true))))) || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))), ! _GLF_IDENTITY((! (false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), ! (_GLF_IDENTITY(! ((! (false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))), (! ((! (false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))) || false)))))) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))) || false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))))) && true)))) && true))) || false))), ! (! (! ((_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_DEAD(false)))), (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false))))))))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))))) && true)))) && true))) || false)))))), false || (! ((_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (false || (_GLF_DEAD(false))), false || (! (false || (_GLF_DEAD(false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))))) && true)))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (false || (_GLF_DEAD(false))), false || (! (false || (_GLF_DEAD(false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))))) && true)))) && true))) || false)) || false)))))))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (false || (_GLF_DEAD(false)))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), true, true, true)), ! (! (bool(bvec4(! (_GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), true, true, true)))))), false, true))))))))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))), false)), false)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false)), (false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))))) || false))), true && ((! _GLF_IDENTITY((_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), _GLF_IDENTITY(! (! (false || (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(! (! (false || (_GLF_DEAD(false)))), ! (! (! (! (false || (_GLF_DEAD(false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) || (_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false)) || (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false)) || (_GLF_DEAD(false))), ! (! ((_GLF_IDENTITY(false, false || (false)) || (_GLF_DEAD(false))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false)) || (_GLF_DEAD(false))), ! (! ((_GLF_IDENTITY(false, false || (false)) || (_GLF_DEAD(false))))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))))) && true)))) && true))) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))), (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))))) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true)), ! (! (false || (_GLF_DEAD(false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))), ! (! (false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))))) && true))))))) && true))) || false))), false || (! ((_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), ! (! (false || (_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), _GLF_IDENTITY(! (! (false || (_GLF_DEAD(false)))), (_GLF_IDENTITY(! (! (false || (_GLF_DEAD(false)))), bool(bvec2(_GLF_IDENTITY(! (! (false || (_GLF_DEAD(false)))), true && (! (! (false || (_GLF_DEAD(false)))))), false)))) && true))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))))) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))))) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))))) && true)))))))) && true))) || false)))))))))))), true), true, false))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false)), false)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))))))), false || (_GLF_DEAD(false)))), (false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(false))))) || false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false)), false)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (false || (_GLF_DEAD(false))) || false))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))))))), false || (_GLF_DEAD(false)))), (false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(false))))) || false)))))) && _GLF_IDENTITY(true, true && (true))), true)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false)), false)))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false || (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false || (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))))))), false || (_GLF_DEAD(false)))), (false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))) || false))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))), false)), false)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))), false || (_GLF_DEAD(false)))), (false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(false))))) || false))))), true))) && true)), ((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false)), false)))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false || (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false || (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))))))), false || (_GLF_DEAD(false)))), (false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))) || false))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))), false)), false)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))), false || (_GLF_DEAD(false)))), (false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(false))))) || false))))), true))) && true))) && true) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true, false))), false || _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false)), false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false)), false))))))), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), bool(bvec4(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), false || (_GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false))))))))), (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true), _GLF_IDENTITY(false || (_GLF_DEAD(false)), ! _GLF_IDENTITY((! (false || (_GLF_DEAD(false)))), false || ((_GLF_IDENTITY(! (false || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(! (false || (_GLF_DEAD(false))), false, true)), bool(bvec3(bool(bvec3(! (false || (_GLF_DEAD(false))), false, true)), true, true))))))))))) || false))), true && ((! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(false || (_GLF_DEAD(false)), (false || (_GLF_DEAD(false))) || false)))))))))) || false))))))), true)))))))) && true) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true) && (_GLF_IDENTITY(true, bool(bvec2(true, true))))), (injectionSwitch.x < injectionSwitch.y)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))) || false)))))
        barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))), (false) || false)))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)))), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), _GLF_IDENTITY((vec2(1.0, 1.0) * (injectionSwitch)) * mat2(1.0), (true ? (vec2(1.0, 1.0) * (injectionSwitch)) * mat2(1.0) : _GLF_FUZZED(vec2(8287.5266, -47.52)))))).x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(1.0))).y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y))))))))))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-63854) : 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(4, 4)), 4)), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) << 0), 0);
 do
  {
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, clamp(read, _GLF_IDENTITY(read, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(read, 0u, 0u), ~ (~ (uvec3(read, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(read, 0u, 0u), ~ (~ (uvec3(read, 0u, 0u)))), (_GLF_IDENTITY(uvec3(read, 0u, 0u), ~ (~ (uvec3(read, 0u, 0u))))) | uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(read, 0u, _GLF_IDENTITY(0u, (0u) * 1u)), ~ (~ (uvec3(read, 0u, 0u)))))) | (uint(_GLF_IDENTITY(uvec3(read, 0u, 0u), ~ (~ (uvec3(read, 0u, 0u)))))))), read)), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, 64), max(_GLF_IDENTITY(clamp(64, 64, 64), (false ? _GLF_FUZZED(-23560) : _GLF_IDENTITY(clamp(64, 64, 64), (clamp(64, _GLF_IDENTITY(64, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 1), (ivec2(64, 1)) | (ivec2(64, 1)))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(64, 1), (ivec2(64, 1)) | (ivec2(64, 1))))), (~ (int(_GLF_IDENTITY(ivec2(64, 1), (ivec2(64, 1)) | (ivec2(64, 1)))))) >> 0)))), 64)) - 0))), clamp(64, 64, 64)))), _GLF_IDENTITY(4, (4) | (4)));
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) && true), ! (! (_GLF_IDENTITY((true), bool(bool((true))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) || false) || (true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool((_GLF_IDENTITY(true, false || (true)))), false, _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bool((_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (true)))), false, _GLF_IDENTITY(false, ! (! (false)))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bool((_GLF_IDENTITY(true, false || (true)))), false, _GLF_IDENTITY(false, ! (! (false)))), true))))))), true && (bool(_GLF_IDENTITY(bvec3(bool((_GLF_IDENTITY(true, false || (true)))), false, _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bool((_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, (true) && true), false, false))))))), false, _GLF_IDENTITY(false, ! (! (false)))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bool((_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), bool(bool(false || (true))))))), false, _GLF_IDENTITY(false, ! (! (false)))), true)))))))))))))), bool(bvec2((! (_GLF_IDENTITY((true), bool(bool((true)))))), false)))))))), false || (_GLF_IDENTITY((! _GLF_IDENTITY((true), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (false)))), bool(bool((true))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), bool(bool((true))))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), bool(bool(_GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true)))))))))))), true && (! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) && true)), (true) || false)), bool(bool((_GLF_IDENTITY(true, ! (! (true)))))))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), bool(bool((true)))))))))))))))), (_GLF_IDENTITY((! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec2((true), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((true), false), false), bvec3(bvec4(bvec3(bvec2((true), false), false), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2((true), false), false), bvec3(bvec4(bvec3(bvec2((true), false), false), _GLF_IDENTITY(true, false || (true)))))))))))), bool(bool((true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(_GLF_IDENTITY(bool((true)), (bool((true))) && true)))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) || false)), true && ((! _GLF_IDENTITY((true), ((true)) || false)))))), bool(bool((true))))))))))))))))), bool(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bool((true)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), false || (_GLF_IDENTITY(bool(bool((true))), (bool(bool((true)))) && true)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), ! (! (_GLF_IDENTITY((true), bool(bool((true)))))))) && true), true, true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), ! (! (_GLF_IDENTITY((true), bool(bool((true)))))))) && true), true, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), ! (! (_GLF_IDENTITY((true), bool(bool((true)))))))) && true), true, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))))))), ! (! (_GLF_IDENTITY((true), bool(bool((true)))))))) && true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), true, false)))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), false || (_GLF_IDENTITY(bool(bool((true))), (bool(bool((true)))) && true)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), ! (! (_GLF_IDENTITY((true), bool(bool((true)))))))) && true), true, true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), ! (! (_GLF_IDENTITY((true), bool(bool((true)))))))) && true), true, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), ! (! (_GLF_IDENTITY((true), bool(bool((true)))))))) && true), true, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((true)))), (_GLF_IDENTITY(_GLF_IDENTITY((true), bool(bool((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))))))), ! (! (_GLF_IDENTITY((true), bool(bool((true)))))))) && true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), true, false))))))))))))))), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), true && ((bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), true && ((bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))), true, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), true && ((bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true && ((bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))), true, true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))))))))))))))
          barrier();
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) || false)))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((_GLF_IDENTITY(false, (false) && true))))) || false))))) || false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bool(_GLF_DEAD(false)))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))))))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) || false)))));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))
      {
      }
     else
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(449.961)), vec2(_GLF_FUZZED(0.1), (injectionSwitch)[1]), bvec2(false, true))).y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(1.0, 1.0) * (vec2(vec2(injectionSwitch))))).x > injectionSwitch.y)) || false))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(length(0.0), (length(0.0)) - 0.0), 0.0)))) + 0.0) > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-60.42), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))[1]), mat2(1.0) * (vec2(_GLF_FUZZED(-60.42), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-7046.5536, (_GLF_IDENTITY(-7046.5536, (-7046.5536) - 0.0)) + _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)))))), bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, ! (! (false)))))).y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))), _GLF_IDENTITY((false), bool(bvec3((false), true, true))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false || (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), false || (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)), false || (_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true, false, false)), true && (bool(bvec4(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true, false, false)))))))))), (false) && true), true, true))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-60.42), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(42.95, _GLF_IDENTITY(3.2, clamp(_GLF_IDENTITY(3.2, 1.0 * (3.2)), 3.2, 3.2)))))), (injectionSwitch) * vec2(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7046.5536)), bvec2(true, false))).y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-60.42), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))))[0], ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))) * vec2(1.0, 1.0))))[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(6.4), mix(float(_GLF_FUZZED(5955.0763)), float(_GLF_FUZZED(6.4)), bool(true))), _GLF_FUZZED(348.293)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(-106.170, -3.4)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(1.0, 1.0))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7046.5536)), bvec2(true, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-60.42), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch))) * vec2(1.0, 1.0))), clamp((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7046.5536)), bvec2(true, false))).y))))) && true)));
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
}
