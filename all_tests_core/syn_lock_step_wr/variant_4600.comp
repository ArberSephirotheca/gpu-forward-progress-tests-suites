#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     barrier();
    }
   return;
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, false)))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), bool(bool(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true))))) || false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z = _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z = subgroup_size) << 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.z = GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.z = GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.z = GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z, (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.z = GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z) / 1u)))), _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.z = GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z), 0u | ((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.z = GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z))) << 0u), 0u | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.z = GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z, (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.z = GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.z) << 0u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(-250.000))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(abs(vec2(1.0, 1.0)) * (injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY(abs(vec2(1.0, 1.0)) * (injectionSwitch), vec2(1.0, 1.0) * (abs(vec2(1.0, 1.0)) * (injectionSwitch))))), min(abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))), abs(vec2(1.0, 1.0)) * (injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))), true, false, false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   return;
  }
 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y = subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, true)))) && true))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) || false), true), false, false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false), true), false, false)), true)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), (_GLF_IDENTITY((true), false || ((true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true), false, false)), true)), true))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), bool(bool(! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))))))) || false))))))))))), ! (! (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (true) || false), true)))))))))))))))))
    barrier();
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.y = num_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(false || ((false) && true), bool(bvec2(false || ((false) && true), false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), bool(bvec2(bool(bvec4(_GLF_DEAD(false), false, true, false)), false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0)))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), false || (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), false, true)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true, false, false)))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)), false, false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) || false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(352.476), clamp(_GLF_IDENTITY(_GLF_FUZZED(352.476), clamp(_GLF_FUZZED(352.476), _GLF_FUZZED(352.476), _GLF_FUZZED(352.476))), _GLF_IDENTITY(_GLF_FUZZED(352.476), clamp(_GLF_IDENTITY(_GLF_FUZZED(352.476), (_GLF_FUZZED(352.476)) / 1.0), _GLF_IDENTITY(_GLF_FUZZED(352.476), mix(float(_GLF_FUZZED(352.476)), float(_GLF_FUZZED(-52.96)), bool(false))), _GLF_FUZZED(352.476))), _GLF_FUZZED(352.476)))), bool(false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) && true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), vec2(injectionSwitch.y, 0.0))))), (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch)))))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch)))))).x) + 0.0) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))))))), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(min(vec2(4.5, -5.9), injectionSwitch)) : injectionSwitch, mix(vec2(_GLF_FUZZED(-43.83), (false ? _GLF_FUZZED(min(vec2(4.5, -5.9), injectionSwitch)) : injectionSwitch)[1]), vec2((false ? _GLF_FUZZED(min(vec2(4.5, -5.9), injectionSwitch)) : injectionSwitch)[0], _GLF_FUZZED(3177.6959)), bvec2(true, false))))).x, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(min(vec2(4.5, -5.9), injectionSwitch)) : injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(min(vec2(4.5, -5.9), injectionSwitch)) : injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(min(vec2(4.5, -5.9), injectionSwitch)) : injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-87.40), mix(float(_GLF_FUZZED(-2.8)), float(_GLF_FUZZED(-87.40)), bool(true))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) - vec2(0.0, 0.0), max(((injectionSwitch)) - vec2(0.0, 0.0), ((injectionSwitch)) - vec2(0.0, 0.0))))[0], _GLF_FUZZED(4.8)), bvec2(true, false))), (false ? _GLF_FUZZED(min(vec2(4.5, -5.9), injectionSwitch)) : injectionSwitch)).x > injectionSwitch.y))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.w = workgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false))))))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-38.35)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, sqrt(1.0), 0.0, 0.0, abs(0.0)))), bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), true, true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false, false, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false, false, true)), false, false, false)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.w = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base))), min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base, (false ? _GLF_FUZZED(uvec4(7360u, 120915u, 191561u, _GLF_IDENTITY(65954u, (65954u) ^ 0u))) : _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base, (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base)))))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base), (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base), ((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base)) << _GLF_IDENTITY(uvec4(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u | (0u)))), 0u, 0u), (uvec4(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u | (0u)))), 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)))) * ((uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(4u), uvec4(4u))) >> _GLF_IDENTITY(uvec4(4u), uvec4(4u)))) | (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base))), ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base), (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base), ((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base)) << _GLF_IDENTITY(uvec4(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u | (0u)))), 0u, 0u), (uvec4(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u | (0u)))), 0u, 0u)) - uvec4(0u, 0u, 0u, 0u)))) * ((uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(4u), uvec4(4u))) >> _GLF_IDENTITY(uvec4(4u), uvec4(4u)))) | (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base)))) << (uvec4(149234u, 96483u, 90457u, 116448u) & uvec4(0u, 0u, 0u, 0u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base))))) >> _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u)), (true ? (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u)) : _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base)))))).w;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.z;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0))))).y)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))) && true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)), bool(bvec2(bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)), false))))), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), false || (bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))), true))))))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-1.4))), 0.0, 1.0))))).y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-1.4))), 0.0, 1.0))))).y), false)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))) && true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0)), dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0)))))).y), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)), false)), bvec2(bvec2(bvec2(bvec2(bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)), false))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true)), false || (bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))), true)))))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-1.4))), 0.0, 1.0))))).y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(-1.4))), 0.0, 1.0))))).y), false)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))) && true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0)), dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0)))))).y), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)), false)), bvec2(bvec2(bvec2(bvec2(bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)), false))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true)), false || (bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))), true))))))))))))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y) || false), bool(bvec4(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0)), (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))) - vec2(0.0, 0.0))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0)))), min(_GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0)))), min(_GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0)))), min(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0)))), _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0)))), mix(vec2(_GLF_FUZZED(4.6), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0)))))[1]), vec2((max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0)))))[0], _GLF_FUZZED(-4107.5660)), bvec2(true, false))))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0)))))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0))))))).y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(acos(519.767)) : injectionSwitch.x)) > injectionSwitch.y)) || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0)))), min(_GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0)))), min(_GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0)))), min(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(949.812)), float(1.0), bool(true))), 1.0)), 1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.6)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(_GLF_IDENTITY(true, false || (true))))), 0.0, 1.0)))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0)))))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0))))))).y)))) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), bool(bvec4(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), bool(bvec4(bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)), false, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0), injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 0.0))), injectionSwitch.y))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))) && true) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, tan(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, tan(0.0)))), 1.0, tan(0.0), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(-65116))), bool(false))) > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true && ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(true && ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(true && ((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(true && ((injectionSwitch.x > injectionSwitch.y))))))), true))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))) && true, bool(bvec2((! ((injectionSwitch.x > injectionSwitch.y))) && true, true)))))))) && true) && true), false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))) && true)), true && (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), true)), bool(bvec2(bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)), false))))), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.8))))), false, true)), false || (bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))).y)), false, true))))))), true)))))))))))) && true)))
  return;
 uint virtual_gid = GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.w + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(uvec2(89170u, 49811u)) : _GLF_IDENTITY(uvec2(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> uvec2(0u, 0u))))), max(uint(_GLF_IDENTITY(uvec2(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(uvec2(89170u, 49811u)) : _GLF_IDENTITY(uvec2(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> uvec2(0u, 0u))))), uint(_GLF_IDENTITY(uvec2(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(uvec2(89170u, 49811u)) : _GLF_IDENTITY(uvec2(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> uvec2(0u, 0u)))))))) + GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, clamp(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base)).w + subgroup_base + (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1), _GLF_IDENTITY(0u | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1, (1u & 1u) * (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1)), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + _GLF_IDENTITY(1, ~ (~ (1))), (true ? GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1 : _GLF_FUZZED(workgroup_id))))), min((~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1, (true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y, (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y) ^ 0u) + 1 : _GLF_FUZZED(workgroup_id))))), (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1, (true ? GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1 : _GLF_FUZZED(workgroup_id))))))))) ^ 0u)), _GLF_IDENTITY(0u ^ ((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1)), min(_GLF_IDENTITY(0u ^ ((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1)), (_GLF_IDENTITY(0u ^ ((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1)), (false ? _GLF_FUZZED(num_workgroup) : 0u ^ ((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1))))) - 0u), 0u ^ ((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1)))))), min(_GLF_IDENTITY(0u | (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1, (true ? GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1 : _GLF_FUZZED(workgroup_id))))), min((~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1, (true ? GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))))))) >> 0) : _GLF_FUZZED(workgroup_id))))), (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1, (true ? GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1 : _GLF_FUZZED(workgroup_id))))))))) ^ 0u)), 0u ^ _GLF_IDENTITY(_GLF_IDENTITY(((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1)), (((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1))) / 1u), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) + (_GLF_IDENTITY(((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1)), (((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1))) / 1u))))), 0u | (0u | (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1, (true ? GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1 : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1, (true ? GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1 : _GLF_FUZZED(workgroup_id)))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1, (true ? GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1 : _GLF_FUZZED(workgroup_id))))))), min((~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1, (true ? GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1 : _GLF_FUZZED(workgroup_id))))), (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1, (true ? GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1 : _GLF_FUZZED(workgroup_id))))))))) ^ 0u)), 0u ^ ((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1)))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1, (true ? GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED((38268 % -17886))))), 1 * (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED((38268 % -17886))))))))) : _GLF_FUZZED(workgroup_id))))), min((~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1, (true ? GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1 : _GLF_FUZZED(workgroup_id))))), (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1, (true ? GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1 : _GLF_FUZZED(workgroup_id))))))))) ^ 0u), 1u * (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1, (true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y, (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y) * 1u) + 1 : _GLF_FUZZED(workgroup_id))))), min((~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1, (true ? GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1 : _GLF_FUZZED(workgroup_id))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1, (true ? GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1 : _GLF_FUZZED(workgroup_id)))), uint(uint(~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) | (1)) : _GLF_FUZZED(-12612))), (true ? GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1 : _GLF_FUZZED(workgroup_id)))))))))))) ^ 0u)))), 0u ^ ((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.y + 1))))))) % _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base), clamp((GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base), (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base), (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base))) | uvec4(0u, 0u, 0u, 0u)).z);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.x = next_virtual_gid, (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base.x = next_virtual_gid) + 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.5), _GLF_FUZZED(-4.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))).y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))) || false))) || false)), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)).x > injectionSwitch.y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))), ! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)).x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), ! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)).x > injectionSwitch.y)))))))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), mix(vec2(_GLF_FUZZED(-2.9), _GLF_FUZZED(-340.190)), vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[1]), bvec2(true, true)))) + vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8141.4327))))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), (_GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), mix(vec2(_GLF_FUZZED(9.9), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[1]), vec2((max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], _GLF_FUZZED(-54.73)), bvec2(true, false)))) - tan(vec2(0.0, 0.0))))))) + vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-59.75))), 0.0)), 0.0)).x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)).x > injectionSwitch.y), true && _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * mat2(1.0), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * mat2(1.0))))))) + vec2(0.0, 0.0)).x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * mat2(1.0), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * mat2(1.0))))))) + vec2(0.0, 0.0)).x > injectionSwitch.y))) && true)))), ! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), vec4(exp(0.0), 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), vec4(exp(0.0), 0.0, 0.0, 0.0))), abs(0.0), exp(0.0)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), vec2(_GLF_IDENTITY(mat4(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 0.0), transpose(transpose(mat4(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 0.0)))))))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))))), injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)).x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))), ! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.3)), bool(false)))) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) + _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(8239.9445), _GLF_FUZZED(float(true))), bvec2(false, false)))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))))))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), false))) && true)) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) + vec2(0.0, 0.0)).y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) / 1.0))).y))))))))))))
  barrier();
 GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.x = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base[0], GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base[1], GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base[2], GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base[3]))) + uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base, (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base) ^ uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base[0], GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base[1], GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base[2], GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base[3]))) + uvec4(0u, 0u, 0u, 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base[0], GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base[1], GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base[2], GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base[3]))) + uvec4(0u, 0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base[0], GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base[1], GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base[2], GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base[3]))) + uvec4(0u, 0u, 0u, 0u))))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base[0], GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base[1], GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base[2], GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_14next_virtual_gidnum_workgroupsubgroup_sizeworkgroup_base[3]))) + _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (~ (uvec4(0u, 0u, 0u, 0u)))))))) | uvec4(0u, 0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base.x], _GLF_IDENTITY(uint(1), ~ (~ (uint(1)))), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) | 0) >> (1 ^ (1 & 1))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0))) * (injectionSwitch.x)) > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), clamp(~ (virtual_gid), ~ (virtual_gid), ~ (virtual_gid))))), ~ (_GLF_IDENTITY(~ (virtual_gid), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (~ (virtual_gid))), clamp((~ (~ (virtual_gid))), (~ (~ (virtual_gid))), _GLF_IDENTITY((~ (~ (virtual_gid))), clamp((~ (~ (virtual_gid))), (~ (~ (virtual_gid))), (~ (~ (virtual_gid))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base) << uvec4(0u, 0u, 0u, 0u)), clamp(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base, (GLF_merged4_0_1_16_1_1_17_2_1_13_3_1_14next_virtual_gidsubgroup_local_idsubgroup_sizeworkgroup_base) - uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(max(packHalf2x16(vec2(4.6, 4.9)), subgroup_local_id)))))))).z) : ~ (~ (~ (virtual_gid))))))))], 4, 64, 2);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, max(4, 4)), 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
}
