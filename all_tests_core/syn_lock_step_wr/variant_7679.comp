#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ -1.7)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((3.2 * 16.99))), bvec2(true, false))))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((+ -1.7), clamp((+ -1.7), (+ -1.7), (+ -1.7)))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), _GLF_FUZZED((3.2 * 16.99))), bvec2(true, false))))).x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ -1.7)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((3.2 * 16.99))), bvec2(true, false))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ -1.7)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((_GLF_IDENTITY(3.2 * 16.99, clamp(3.2 * 16.99, 3.2 * 16.99, 3.2 * 16.99))))), bvec2(true, false))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((_GLF_IDENTITY(+ -1.7, (+ -1.7) / 1.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((3.2 * 16.99))), bvec2(true, false))))).x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ _GLF_IDENTITY(-1.7, min(_GLF_IDENTITY(-1.7, min(-1.7, -1.7)), -1.7)))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[0], _GLF_FUZZED((3.2 * 16.99))), bvec2(true, false))))).x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) - vec2(0.0, 0.0)), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupSize.x, ~ (~ (false ? _GLF_FUZZED(num_workgroup) : gl_WorkGroupSize.x)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) : _GLF_FUZZED(-6.9)), (true ? (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) : _GLF_FUZZED(-6.9)) : _GLF_FUZZED(vec4(12.89, 8.4, 6430.6153, -717.424).s)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.1), _GLF_FUZZED(6.7)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(mat2((injectionSwitch)[1], 0.0, 1.0, 1.0), (mat2((injectionSwitch)[1], 0.0, 1.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0))))), bvec2(true, true))).y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, (subgroup_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), false, true)), (bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(false)))), false, true))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       return;
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-282.603), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED((92.73 / -6.7))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) >> 0u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) >> 0u)) | (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) >> 0u))), (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) ^ 0u)), 1u * ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) >> 0u), max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) >> 0u), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) >> 0u))), (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) ^ 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base))) | 0u) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) >> 0u), (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(virtual_gid))))) ^ 0u) : _GLF_FUZZED((94110u))))))) | (workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u) % subgroup_size)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), bool(bvec4((! (_GLF_IDENTITY(false, true && (false)))), true, true, true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_DEAD(false)) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           barrier();
          }
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), bool(bool(_GLF_IDENTITY(bool(bvec3(true, true, false)), (bool(bvec3(true, true, false))) || false))))) && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, true)))))), bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(93.77)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED(-970.270)), bvec2(false, false))).x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), ~ (~ (atomicLoad(buf[virtual_gid], 4, 64, 2))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), true && (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, (injectionSwitch.x) / round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))) > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, (injectionSwitch.x) / round(length(normalize(vec2(1.0, 1.0))))) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, sin(0.0), 0.0, abs(1.0), 0.0, 1.0, 0.0)), mix(vec2(_GLF_FUZZED(-7633.0275), _GLF_FUZZED(8.0)), vec2((vec2(mat3(injectionSwitch, 1.0, sin(0.0), 0.0, abs(1.0), 0.0, 1.0, 0.0)))[0], _GLF_IDENTITY((vec2(mat3(injectionSwitch, 1.0, sin(0.0), 0.0, abs(1.0), 0.0, 1.0, 0.0)))[1], clamp((vec2(mat3(injectionSwitch, 1.0, sin(0.0), 0.0, abs(1.0), 0.0, 1.0, 0.0)))[1], (vec2(mat3(injectionSwitch, 1.0, sin(0.0), 0.0, abs(1.0), 0.0, 1.0, 0.0)))[1], (vec2(mat3(injectionSwitch, 1.0, sin(0.0), 0.0, abs(1.0), 0.0, 1.0, 0.0)))[1]))), bvec2(true, true)))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((_GLF_IDENTITY((mat4x3(7257.1101, 5913.6962, 17.61, 5.1, 773.206, -4571.0685, 298.546, -3882.4544, -1.4, 7636.4776, _GLF_IDENTITY(-326.490, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), vec3(0.0, 0.0, 0.0) + _GLF_IDENTITY((_GLF_IDENTITY(vec3(-326.490, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), (true ? vec3(-326.490, _GLF_IDENTITY(0.0, float(mat2x4(0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3)), max(_GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3)), _GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3))))))), max((_GLF_IDENTITY(vec3(-326.490, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), (true ? vec3(-326.490, _GLF_IDENTITY(0.0, float(mat2x4(0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3)), max(_GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3)), _GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3))))))), (_GLF_IDENTITY(vec3(-326.490, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), (true ? vec3(-326.490, _GLF_IDENTITY(0.0, float(mat2x4(0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0) : _GLF_IDENTITY(_GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3)), max(_GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3)), _GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3))))))))))), (float(_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), vec3(0.0, 0.0, 0.0) + _GLF_IDENTITY((_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), (true ? vec3(-326.490, 0.0, 1.0) : _GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3))))), vec3(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), (true ? vec3(-326.490, 0.0, 1.0) : _GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3))))), clamp((_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), (true ? vec3(-326.490, 0.0, 1.0) : _GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3))))), (_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), (true ? vec3(-326.490, 0.0, 1.0) : _GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3))))), (_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), (true ? vec3(-326.490, 0.0, 1.0) : _GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3))))))), 1.0, determinant(mat4(0.0, 0.0, log(1.0), sin(0.0), 0.0, log(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, sin(0.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))) / 1.0)), 370.253) == mat4x3(-6.0, -9605.3417, 806.128, _GLF_IDENTITY(-713.936, (_GLF_IDENTITY(-713.936, (-713.936) / 1.0)) / 1.0), -4968.0767, _GLF_IDENTITY(0.3, _GLF_IDENTITY((_GLF_IDENTITY(0.3, mix(float(_GLF_FUZZED(49.75)), float(0.3), bool(true)))), 1.0 * ((_GLF_IDENTITY(0.3, mix(float(_GLF_FUZZED(49.75)), float(0.3), bool(true)))))) - 0.0), _GLF_IDENTITY(-980.580, (-980.580) * _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))), 11.28, 3.8, 340.539, 8708.4017, 8.1)), ! (! (_GLF_IDENTITY((mat4x3(7257.1101, 5913.6962, 17.61, _GLF_IDENTITY(5.1, min(_GLF_IDENTITY(5.1, (5.1) / 1.0), 5.1)), 773.206, -4571.0685, 298.546, -3882.4544, -1.4, _GLF_IDENTITY(7636.4776, mix(float(_GLF_FUZZED(478.134)), float(7636.4776), bool(_GLF_IDENTITY(true, bool(bool(true)))))), -326.490, 370.253) == mat4x3(-6.0, -9605.3417, 806.128, -713.936, -4968.0767, 0.3, _GLF_IDENTITY(-980.580, (-980.580) * 1.0), 11.28, 3.8, 340.539, 8708.4017, 8.1)), ((mat4x3(7257.1101, 5913.6962, 17.61, 5.1, _GLF_IDENTITY(773.206, 1.0 * (_GLF_IDENTITY(773.206, (773.206) / 1.0))), -4571.0685, 298.546, -3882.4544, -1.4, 7636.4776, -326.490, 370.253) == mat4x3(-6.0, -9605.3417, 806.128, -713.936, -4968.0767, 0.3, _GLF_IDENTITY(-980.580, (-980.580) * 1.0), 11.28, 3.8, 340.539, 8708.4017, _GLF_IDENTITY(8.1, float(mat4x3(8.1, 0.0, round(length(normalize(1.0))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0 * (float(mat3x2(0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))), 0.0, 1.0, 1.0)), 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0)))))) && true)))) ? -60.86 : _GLF_IDENTITY(_GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(-5.1)), float(_GLF_IDENTITY(-8.9, sqrt(1.0) * (_GLF_IDENTITY(-8.9, clamp(-8.9, _GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(9.7)), float(-8.9), bool(true))), -8.9))))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(-5.1)), float(-8.9), bool(true))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(-5.1)), _GLF_IDENTITY(float(-8.9), _GLF_IDENTITY((float(-8.9)) + 0.0, min(_GLF_IDENTITY((float(-8.9)) + 0.0, float(mat3x2((float(-8.9)) + 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5418.0176)), bool(false))))), 0.0, 0.0, 1.0, 0.0))), (float(-8.9)) + 0.0))), bool(true))), _GLF_IDENTITY(max(_GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(-5.1)), float(-8.9), bool(true))), _GLF_IDENTITY(-8.9, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-5.1)), (float(_GLF_FUZZED(-5.1))) - 0.0), _GLF_IDENTITY(float(-8.9), (true ? float(-8.9) : _GLF_FUZZED(-38.77))), bool(true)))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(-5.1)), float(-8.9), bool(true))), _GLF_IDENTITY(-8.9, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-5.1)), (float(_GLF_FUZZED(-5.1))) - 0.0), _GLF_IDENTITY(float(-8.9), (true ? float(-8.9) : _GLF_FUZZED(-38.77))), bool(true)))), float(vec3(max(_GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(-5.1)), float(-8.9), bool(true))), _GLF_IDENTITY(-8.9, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-5.1)), (float(_GLF_FUZZED(-5.1))) - 0.0), _GLF_IDENTITY(float(-8.9), (true ? float(-8.9) : _GLF_FUZZED(-38.77))), bool(true)))), 1.0, 0.0))), max(_GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(-5.1)), float(-8.9), bool(true))), _GLF_IDENTITY(-8.9, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-5.1)), (float(_GLF_FUZZED(-5.1))) - 0.0), _GLF_IDENTITY(float(-8.9), (true ? float(-8.9) : _GLF_FUZZED(-38.77))), bool(true)))))))), float(_GLF_FUZZED(-5065.8877)), bool(false)))) / 1.0)))), bool(_GLF_IDENTITY(false, (false) || false))))))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((_GLF_IDENTITY((mat4x3(7257.1101, 5913.6962, 17.61, 5.1, 773.206, -4571.0685, 298.546, -3882.4544, -1.4, 7636.4776, _GLF_IDENTITY(-326.490, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) || false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) || false)), false || (bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) || false))))) || false)) ? vec3(_GLF_IDENTITY(-326.490, min(-326.490, _GLF_IDENTITY(-326.490, max(-326.490, -326.490)))), 0.0, 1.0) : _GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3))))))), (float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), (true ? vec3(-326.490, 0.0, 1.0) : _GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3)))))), max(_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), (true ? vec3(-326.490, 0.0, 1.0) : _GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3)))))), _GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), (true ? vec3(-326.490, 0.0, 1.0) : _GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3)))))))))) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1890.8348)), bool(false))), 1.0, 0.0)), clamp(float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1890.8348)), bool(false))), 1.0, 0.0)), float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1890.8348)), bool(false))), 1.0, 0.0)), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1890.8348)), bool(false))), 1.0, 0.0)), 0.0 + (float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1890.8348)), bool(false))), 1.0, 0.0))))))))), 370.253) == mat4x3(-6.0, -9605.3417, 806.128, _GLF_IDENTITY(-713.936, (_GLF_IDENTITY(-713.936, (-713.936) / 1.0)) / 1.0), -4968.0767, _GLF_IDENTITY(0.3, (_GLF_IDENTITY(0.3, mix(float(_GLF_FUZZED(49.75)), float(0.3), bool(true)))) - 0.0), _GLF_IDENTITY(-980.580, (-980.580) * _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))), 11.28, 3.8, 340.539, 8708.4017, 8.1)), ! (! (_GLF_IDENTITY((mat4x3(7257.1101, 5913.6962, 17.61, 5.1, 773.206, -4571.0685, 298.546, -3882.4544, -1.4, _GLF_IDENTITY(7636.4776, mix(float(_GLF_FUZZED(478.134)), float(7636.4776), bool(true))), -326.490, 370.253) == mat4x3(-6.0, -9605.3417, 806.128, -713.936, -4968.0767, 0.3, _GLF_IDENTITY(-980.580, (-980.580) * 1.0), 11.28, 3.8, 340.539, 8708.4017, 8.1)), ((mat4x3(7257.1101, 5913.6962, 17.61, 5.1, 773.206, -4571.0685, 298.546, -3882.4544, -1.4, 7636.4776, -326.490, 370.253) == mat4x3(-6.0, -9605.3417, 806.128, -713.936, -4968.0767, 0.3, _GLF_IDENTITY(_GLF_IDENTITY(-980.580, (-980.580) * 1.0), (_GLF_IDENTITY(-980.580, (-980.580) * 1.0)) / 1.0), 11.28, 3.8, 340.539, 8708.4017, _GLF_IDENTITY(8.1, float(mat4x3(8.1, 0.0, round(length(normalize(1.0))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0)))))) && true)))) ? -60.86 : _GLF_IDENTITY(_GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(-5.1)), float(_GLF_IDENTITY(-8.9, sqrt(1.0) * (_GLF_IDENTITY(-8.9, clamp(-8.9, _GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(9.7)), float(-8.9), bool(true))), -8.9))))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(-5.1)), float(-8.9), bool(true))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(-5.1)), _GLF_IDENTITY(float(-8.9), _GLF_IDENTITY((float(-8.9)) + 0.0, min(_GLF_IDENTITY((float(-8.9)) + 0.0, float(mat3x2((float(-8.9)) + 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), (float(-8.9)) + 0.0))), bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))), max(_GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(-5.1)), float(-8.9), bool(true))), _GLF_IDENTITY(-8.9, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-5.1)), (float(_GLF_FUZZED(-5.1))) - 0.0), _GLF_IDENTITY(float(-8.9), (true ? float(-8.9) : _GLF_FUZZED(-38.77))), bool(true)))))), float(_GLF_FUZZED(-5065.8877)), bool(false)))) / 1.0)))), bool(_GLF_IDENTITY(false, (false) || false))))))), true && ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY((mat4x3(7257.1101, 5913.6962, 17.61, 5.1, 773.206, _GLF_IDENTITY(-4571.0685, max(-4571.0685, _GLF_IDENTITY(-4571.0685, float(vec4(-4571.0685, 1.0, 1.0, 0.0))))), 298.546, -3882.4544, -1.4, 7636.4776, _GLF_IDENTITY(-326.490, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), (true ? vec3(-326.490, 0.0, 1.0) : _GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3))))), (vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), (true ? vec3(-326.490, 0.0, 1.0) : _GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3)))))) / exp(vec3(0.0, 0.0, 0.0))))), (float(_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), (true ? vec3(-326.490, 0.0, 1.0) : _GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3)))))))) / 1.0)), 370.253) == mat4x3(-6.0, -9605.3417, 806.128, _GLF_IDENTITY(-713.936, (_GLF_IDENTITY(-713.936, (-713.936) / 1.0)) / 1.0), -4968.0767, _GLF_IDENTITY(0.3, (_GLF_IDENTITY(0.3, mix(float(_GLF_FUZZED(49.75)), float(0.3), _GLF_IDENTITY(bool(true), (bool(true)) && true)))) - 0.0), _GLF_IDENTITY(-980.580, (-980.580) * _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))), 11.28, 3.8, 340.539, 8708.4017, 8.1)), ! (! (_GLF_IDENTITY((mat4x3(7257.1101, 5913.6962, 17.61, 5.1, 773.206, -4571.0685, 298.546, -3882.4544, -1.4, _GLF_IDENTITY(7636.4776, mix(_GLF_IDENTITY(float(_GLF_FUZZED(478.134)), min(float(_GLF_FUZZED(478.134)), float(_GLF_FUZZED(478.134)))), float(7636.4776), bool(true))), -326.490, 370.253) == mat4x3(-6.0, -9605.3417, 806.128, -713.936, -4968.0767, 0.3, _GLF_IDENTITY(-980.580, (-980.580) * 1.0), 11.28, 3.8, 340.539, 8708.4017, 8.1)), ((mat4x3(7257.1101, 5913.6962, 17.61, _GLF_IDENTITY(5.1, clamp(5.1, 5.1, _GLF_IDENTITY(5.1, 0.0 + (5.1)))), 773.206, -4571.0685, 298.546, -3882.4544, -1.4, 7636.4776, -326.490, 370.253) == mat4x3(-6.0, -9605.3417, 806.128, -713.936, -4968.0767, 0.3, _GLF_IDENTITY(-980.580, _GLF_IDENTITY((-980.580) * 1.0, clamp((-980.580) * 1.0, (-980.580) * 1.0, (-980.580) * 1.0))), 11.28, 3.8, 340.539, 8708.4017, _GLF_IDENTITY(8.1, float(mat4x3(8.1, 0.0, round(length(normalize(1.0))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0)))))) && true)))) ? _GLF_IDENTITY(-60.86, max(_GLF_IDENTITY(-60.86, clamp(-60.86, -60.86, -60.86)), _GLF_IDENTITY(-60.86, (true ? -60.86 : _GLF_FUZZED(-70.52))))) : _GLF_IDENTITY(_GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(-5.1)), float(_GLF_IDENTITY(-8.9, sqrt(1.0) * (_GLF_IDENTITY(-8.9, clamp(-8.9, _GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(9.7)), float(-8.9), bool(true))), -8.9))))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(-5.1)), float(-8.9), bool(true))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(-5.1)), _GLF_IDENTITY(float(-8.9), _GLF_IDENTITY((float(-8.9)) + 0.0, min(_GLF_IDENTITY((float(-8.9)) + 0.0, float(mat3x2((float(-8.9)) + 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(float(-8.9), clamp(float(-8.9), float(-8.9), float(-8.9)))) + 0.0))), bool(true))), max(_GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(-5.1)), float(-8.9), bool(true))), _GLF_IDENTITY(-8.9, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-5.1)), (float(_GLF_FUZZED(-5.1))) - 0.0), _GLF_IDENTITY(float(-8.9), (true ? float(-8.9) : _GLF_FUZZED(-38.77))), bool(true)))))), float(_GLF_FUZZED(-5065.8877)), bool(false)))) / 1.0)), max((_GLF_IDENTITY((mat4x3(7257.1101, 5913.6962, 17.61, 5.1, 773.206, _GLF_IDENTITY(-4571.0685, max(-4571.0685, _GLF_IDENTITY(-4571.0685, float(vec4(-4571.0685, 1.0, 1.0, 0.0))))), 298.546, -3882.4544, -1.4, 7636.4776, _GLF_IDENTITY(-326.490, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), (true ? vec3(-326.490, 0.0, 1.0) : _GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3))))), (vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), (true ? vec3(-326.490, 0.0, 1.0) : _GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3)))))) / exp(vec3(0.0, 0.0, 0.0))))), (float(_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), (true ? vec3(-326.490, 0.0, 1.0) : _GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3)))))))) / 1.0)), 370.253) == mat4x3(-6.0, -9605.3417, 806.128, _GLF_IDENTITY(-713.936, (_GLF_IDENTITY(-713.936, (-713.936) / 1.0)) / 1.0), -4968.0767, _GLF_IDENTITY(0.3, (_GLF_IDENTITY(0.3, mix(float(_GLF_FUZZED(49.75)), float(0.3), _GLF_IDENTITY(bool(true), (bool(true)) && true)))) - 0.0), _GLF_IDENTITY(-980.580, (-980.580) * _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))), 11.28, 3.8, 340.539, 8708.4017, 8.1)), ! (! (_GLF_IDENTITY((mat4x3(7257.1101, 5913.6962, 17.61, 5.1, 773.206, -4571.0685, 298.546, -3882.4544, -1.4, _GLF_IDENTITY(7636.4776, mix(_GLF_IDENTITY(float(_GLF_FUZZED(478.134)), min(float(_GLF_FUZZED(478.134)), float(_GLF_FUZZED(478.134)))), float(7636.4776), bool(true))), -326.490, 370.253) == mat4x3(-6.0, -9605.3417, 806.128, -713.936, -4968.0767, 0.3, _GLF_IDENTITY(-980.580, (-980.580) * 1.0), 11.28, 3.8, 340.539, 8708.4017, 8.1)), ((mat4x3(7257.1101, 5913.6962, 17.61, _GLF_IDENTITY(5.1, clamp(5.1, 5.1, _GLF_IDENTITY(5.1, 0.0 + (5.1)))), 773.206, -4571.0685, 298.546, -3882.4544, -1.4, 7636.4776, -326.490, 370.253) == mat4x3(-6.0, -9605.3417, 806.128, -713.936, -4968.0767, 0.3, _GLF_IDENTITY(-980.580, _GLF_IDENTITY((-980.580) * 1.0, clamp((-980.580) * 1.0, (-980.580) * 1.0, (-980.580) * 1.0))), 11.28, 3.8, 340.539, 8708.4017, _GLF_IDENTITY(8.1, float(mat4x3(8.1, 0.0, round(length(normalize(1.0))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0)))))) && true)))) ? _GLF_IDENTITY(-60.86, max(_GLF_IDENTITY(-60.86, clamp(-60.86, -60.86, -60.86)), _GLF_IDENTITY(-60.86, (true ? -60.86 : _GLF_FUZZED(-70.52))))) : _GLF_IDENTITY(_GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(-5.1)), float(_GLF_IDENTITY(-8.9, sqrt(1.0) * (_GLF_IDENTITY(-8.9, clamp(-8.9, _GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(9.7)), float(-8.9), bool(true))), -8.9))))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(-5.1)), float(-8.9), bool(true))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(-5.1)), _GLF_IDENTITY(float(-8.9), _GLF_IDENTITY((float(-8.9)) + 0.0, min(_GLF_IDENTITY((float(-8.9)) + 0.0, float(mat3x2((float(-8.9)) + 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(float(-8.9), clamp(float(-8.9), float(-8.9), float(-8.9)))) + 0.0))), bool(true))), max(_GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(-5.1)), float(-8.9), bool(true))), _GLF_IDENTITY(-8.9, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-5.1)), (float(_GLF_FUZZED(-5.1))) - 0.0), _GLF_IDENTITY(float(-8.9), (true ? float(-8.9) : _GLF_FUZZED(-38.77))), bool(true)))))), float(_GLF_FUZZED(-5065.8877)), bool(false)))) / 1.0)), _GLF_IDENTITY((_GLF_IDENTITY((mat4x3(7257.1101, 5913.6962, 17.61, 5.1, 773.206, _GLF_IDENTITY(-4571.0685, max(-4571.0685, _GLF_IDENTITY(-4571.0685, float(vec4(-4571.0685, 1.0, 1.0, 0.0))))), 298.546, -3882.4544, -1.4, 7636.4776, _GLF_IDENTITY(-326.490, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), (true ? vec3(-326.490, 0.0, 1.0) : _GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3))))), (vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), (true ? vec3(-326.490, 0.0, 1.0) : _GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3)))))) / exp(vec3(0.0, 0.0, 0.0))))), (float(_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), (true ? vec3(-326.490, 0.0, 1.0) : _GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3)))))))) / 1.0)), 370.253) == mat4x3(-6.0, -9605.3417, 806.128, _GLF_IDENTITY(-713.936, (_GLF_IDENTITY(-713.936, (-713.936) / 1.0)) / 1.0), -4968.0767, _GLF_IDENTITY(0.3, (_GLF_IDENTITY(0.3, mix(float(_GLF_FUZZED(49.75)), float(0.3), _GLF_IDENTITY(bool(true), (bool(true)) && true)))) - 0.0), _GLF_IDENTITY(-980.580, (-980.580) * _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))), 11.28, 3.8, 340.539, 8708.4017, 8.1)), ! (! (_GLF_IDENTITY((mat4x3(7257.1101, 5913.6962, 17.61, 5.1, 773.206, -4571.0685, 298.546, -3882.4544, -1.4, _GLF_IDENTITY(7636.4776, mix(_GLF_IDENTITY(float(_GLF_FUZZED(478.134)), min(float(_GLF_FUZZED(478.134)), float(_GLF_FUZZED(478.134)))), float(7636.4776), bool(true))), -326.490, 370.253) == mat4x3(-6.0, -9605.3417, 806.128, -713.936, -4968.0767, 0.3, _GLF_IDENTITY(-980.580, (-980.580) * 1.0), 11.28, 3.8, 340.539, 8708.4017, 8.1)), ((mat4x3(7257.1101, 5913.6962, 17.61, _GLF_IDENTITY(5.1, clamp(5.1, 5.1, _GLF_IDENTITY(5.1, 0.0 + (5.1)))), 773.206, -4571.0685, 298.546, -3882.4544, -1.4, 7636.4776, -326.490, 370.253) == mat4x3(-6.0, -9605.3417, 806.128, -713.936, -4968.0767, 0.3, _GLF_IDENTITY(-980.580, _GLF_IDENTITY((-980.580) * 1.0, clamp((-980.580) * 1.0, (-980.580) * 1.0, (-980.580) * 1.0))), 11.28, 3.8, 340.539, 8708.4017, _GLF_IDENTITY(8.1, float(mat4x3(8.1, 0.0, round(length(normalize(1.0))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0)))))) && true)))) ? _GLF_IDENTITY(-60.86, max(_GLF_IDENTITY(-60.86, clamp(-60.86, -60.86, -60.86)), _GLF_IDENTITY(-60.86, (true ? -60.86 : _GLF_FUZZED(-70.52))))) : _GLF_IDENTITY(_GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(-5.1)), float(_GLF_IDENTITY(-8.9, sqrt(1.0) * (_GLF_IDENTITY(-8.9, clamp(-8.9, _GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(9.7)), float(-8.9), bool(true))), -8.9))))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(-5.1)), float(-8.9), bool(true))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(-5.1)), _GLF_IDENTITY(float(-8.9), _GLF_IDENTITY((float(-8.9)) + 0.0, min(_GLF_IDENTITY((float(-8.9)) + 0.0, float(mat3x2((float(-8.9)) + 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(float(-8.9), clamp(float(-8.9), float(-8.9), float(-8.9)))) + 0.0))), bool(true))), max(_GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(-5.1)), float(-8.9), bool(true))), _GLF_IDENTITY(-8.9, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-5.1)), (float(_GLF_FUZZED(-5.1))) - 0.0), _GLF_IDENTITY(float(-8.9), (true ? float(-8.9) : _GLF_FUZZED(-38.77))), bool(true)))))), float(_GLF_FUZZED(-5065.8877)), bool(false)))) / 1.0)), mix(float((_GLF_IDENTITY((mat4x3(7257.1101, 5913.6962, 17.61, 5.1, 773.206, _GLF_IDENTITY(-4571.0685, max(-4571.0685, _GLF_IDENTITY(-4571.0685, float(vec4(-4571.0685, 1.0, 1.0, 0.0))))), 298.546, -3882.4544, -1.4, 7636.4776, _GLF_IDENTITY(-326.490, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), (true ? vec3(-326.490, 0.0, 1.0) : _GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3))))), (vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), (true ? vec3(-326.490, 0.0, 1.0) : _GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3)))))) / exp(vec3(0.0, 0.0, 0.0))))), (float(_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(vec3(-326.490, 0.0, 1.0), (true ? vec3(-326.490, 0.0, 1.0) : _GLF_FUZZED(vec3(-9.2, -4126.4349, -1.3)))))))) / 1.0)), 370.253) == mat4x3(-6.0, -9605.3417, 806.128, _GLF_IDENTITY(-713.936, (_GLF_IDENTITY(-713.936, (-713.936) / 1.0)) / 1.0), -4968.0767, _GLF_IDENTITY(0.3, (_GLF_IDENTITY(0.3, mix(float(_GLF_FUZZED(49.75)), float(0.3), _GLF_IDENTITY(bool(true), (bool(true)) && true)))) - 0.0), _GLF_IDENTITY(-980.580, (-980.580) * _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0))), 11.28, 3.8, 340.539, 8708.4017, 8.1)), ! (! (_GLF_IDENTITY((mat4x3(7257.1101, 5913.6962, 17.61, 5.1, 773.206, -4571.0685, 298.546, -3882.4544, -1.4, _GLF_IDENTITY(7636.4776, mix(_GLF_IDENTITY(float(_GLF_FUZZED(478.134)), min(float(_GLF_FUZZED(478.134)), float(_GLF_FUZZED(478.134)))), float(7636.4776), bool(true))), -326.490, 370.253) == mat4x3(-6.0, -9605.3417, 806.128, -713.936, -4968.0767, 0.3, _GLF_IDENTITY(-980.580, (-980.580) * 1.0), 11.28, 3.8, 340.539, 8708.4017, 8.1)), ((mat4x3(7257.1101, 5913.6962, 17.61, _GLF_IDENTITY(5.1, clamp(5.1, 5.1, _GLF_IDENTITY(5.1, 0.0 + (5.1)))), 773.206, -4571.0685, 298.546, -3882.4544, -1.4, 7636.4776, -326.490, 370.253) == mat4x3(-6.0, -9605.3417, 806.128, -713.936, -4968.0767, 0.3, _GLF_IDENTITY(-980.580, _GLF_IDENTITY((-980.580) * 1.0, clamp((-980.580) * 1.0, (-980.580) * 1.0, (-980.580) * 1.0))), 11.28, 3.8, 340.539, 8708.4017, _GLF_IDENTITY(8.1, float(mat4x3(8.1, 0.0, round(length(normalize(1.0))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0)))))) && true)))) ? _GLF_IDENTITY(-60.86, max(_GLF_IDENTITY(-60.86, clamp(-60.86, -60.86, -60.86)), _GLF_IDENTITY(-60.86, (true ? -60.86 : _GLF_FUZZED(-70.52))))) : _GLF_IDENTITY(_GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(-5.1)), float(_GLF_IDENTITY(-8.9, sqrt(1.0) * (_GLF_IDENTITY(-8.9, clamp(-8.9, _GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(9.7)), float(-8.9), bool(true))), -8.9))))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(-5.1)), float(-8.9), bool(true))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(-5.1)), _GLF_IDENTITY(float(-8.9), _GLF_IDENTITY((float(-8.9)) + 0.0, min(_GLF_IDENTITY((float(-8.9)) + 0.0, float(mat3x2((float(-8.9)) + 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(float(-8.9), clamp(float(-8.9), float(-8.9), float(-8.9)))) + 0.0))), bool(true))), max(_GLF_IDENTITY(-8.9, mix(float(_GLF_FUZZED(-5.1)), float(-8.9), bool(true))), _GLF_IDENTITY(-8.9, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-5.1)), (float(_GLF_FUZZED(-5.1))) - 0.0), _GLF_IDENTITY(float(-8.9), (true ? float(-8.9) : _GLF_FUZZED(-38.77))), bool(true)))))), float(_GLF_FUZZED(-5065.8877)), bool(false)))) / 1.0))), float(_GLF_FUZZED(-1213.3226)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false))))))))), true, false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 1.0))) : _GLF_FUZZED(-62.44))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, cos(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(0.0, 1.0, sqrt(round(length(normalize(vec2(1.0, 1.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (mat4x3(0.0, 1.0, sqrt(round(length(normalize(vec2(1.0, 1.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(mat4x3(0.0, 1.0, sqrt(round(length(normalize(vec2(1.0, 1.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (mat4x3(0.0, 1.0, sqrt(round(length(normalize(vec2(1.0, 1.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x3(0.0, 1.0, sqrt(round(length(normalize(vec2(1.0, 1.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (mat4x3(0.0, 1.0, sqrt(round(length(normalize(vec2(1.0, 1.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(0.0, 1.0, sqrt(round(length(normalize(vec2(1.0, 1.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (mat4x3(0.0, 1.0, sqrt(round(length(normalize(vec2(1.0, 1.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), min(float(_GLF_IDENTITY(mat4x3(0.0, 1.0, sqrt(round(length(normalize(vec2(1.0, 1.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (mat4x3(0.0, 1.0, sqrt(round(length(normalize(vec2(1.0, 1.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat4x3(0.0, 1.0, sqrt(round(length(normalize(vec2(1.0, 1.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (mat4x3(0.0, 1.0, sqrt(round(length(normalize(vec2(1.0, 1.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), log(1.0), 1.0))).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.6, 336.929)))), injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8020.4805)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8020.4805)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8020.4805))))))), (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8020.4805)))), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (true ? injectionSwitch.y : _GLF_FUZZED(-8020.4805)))))))) || false))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) - 0.0)) + 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-7.4, 1585.3238)))).y, (injectionSwitch.y) - 0.0)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, sqrt(0.0)))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5528.6304), _GLF_FUZZED(77.26)), bvec2(false, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y), float(_GLF_IDENTITY(_GLF_FUZZED(-62.49), (_GLF_FUZZED(-62.49)) / 1.0)), bool(false)))), float(_GLF_FUZZED(40.53)), bool(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), log(1.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0), (true ? mat2x4(0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat2x4(51.00, 3.2, 8220.5271, -4.3, -9.7, -2.2, -959.934, _GLF_IDENTITY(0.8, mix(float(_GLF_IDENTITY(0.8, (0.8) / determinant(mat2(1.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(60.73)), bool(false))))))))))), 0.0), vec2(1.0, 1.0))), 1.0)), max(float(mat3(injectionSwitch.y, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(abs(vec2(9124.5362, 23.56)))) : _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.3)), float(1.0), bool(true))), 1.0)))), 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-4.7), mix(float(_GLF_FUZZED(-6.9)), float(_GLF_IDENTITY(_GLF_FUZZED(-4.7), (_GLF_FUZZED(-4.7)) - 0.0)), bool(true)))), float(injectionSwitch.x), bool(true)))), log(1.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-932.492))), bool(false)))), vec2(1.0, 1.0))), 1.0)), float(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6.3)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), log(1.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))))), dot(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0), vec2(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), (vec4(0.0, 1.0, 1.0, 1.0)) - sin(vec4(0.0, 0.0, 0.0, 0.0))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)))))))), mix(float(float(vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), clamp(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), (true ? dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(3.9))), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(-5.3)), bool(false)))))), dot(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))))))))), float(_GLF_FUZZED(-77.77)), bool(false)))), 0.0), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))), 1.0)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))), 0.0))))) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.0) : injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-28.39)), bool(false))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-28.39)), bool(false))))), ! (! (true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-28.39)), bool(false))))))))))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
