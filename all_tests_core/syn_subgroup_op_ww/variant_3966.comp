#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_16 {
 bvec4 _f0;
} ;

struct _GLF_struct_14 {
 float _f0;
 vec3 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_13 {
 bvec4 _f0;
 bvec2 _f1;
 float _f2;
 uvec4 _f3;
 vec3 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_12 {
 uint _f0;
 int _f1;
 mat4 _f2;
 vec2 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_11 {
 ivec3 _f0;
 mat2 _f1;
 ivec4 _f2;
 uint _f3;
 uvec2 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_10 {
 mat3x2 _f0;
 uvec3 _f1;
 int _f2;
 vec3 _f3;
} ;

struct _GLF_struct_15 {
 _GLF_struct_10 _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_12 _f2;
 _GLF_struct_13 _f3;
 _GLF_struct_14 _f4;
} ;

struct _GLF_struct_8 {
 ivec2 _f0;
 vec4 _f1;
 uint subgroup_size;
} ;

struct _GLF_struct_7 {
 mat3x2 _f0;
 float _f1;
 mat3 _f2;
 mat4x3 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_6 {
 mat3 _f0;
 mat4x2 _f1;
 mat3 _f2;
 ivec2 _f3;
 mat3 _f4;
 mat4x2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_5 {
 vec4 _f0;
} ;

struct _GLF_struct_9 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 mat4x2 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_8 _f4;
} ;

struct _GLF_struct_4 {
 bool _f0;
 vec4 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_17 {
 _GLF_struct_4 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_15 _f2;
 _GLF_struct_16 _f3;
 vec2 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 uint subgroup_base;
 mat4x2 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 bool _f1;
 _GLF_struct_1 _f2;
 uvec2 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_3 {
 mat4x3 _f0;
 mat2 _f1;
 _GLF_struct_2 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_4(true, _GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * exp(vec4(0.0, 0.0, 0.0, 0.0)))) - vec4(0.0, 0.0, 0.0, 0.0)), bvec2(true)), _GLF_struct_9(_GLF_struct_5(vec4(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(29.54))), 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(872.535)))))))), _GLF_struct_6(mat3(1.0), mat4x2(1.0), mat3(1.0), ivec2(1), mat3(1.0), mat4x2(1.0), mat2(1.0)), mat4x2(1.0), _GLF_struct_7(mat3x2(1.0), 1.0, _GLF_IDENTITY(mat3(1.0), transpose(_GLF_IDENTITY(transpose(mat3(1.0)), (transpose(mat3(1.0))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0)))), mat4x3(1.0), bvec4(true)), _GLF_struct_8(ivec2(1), vec4(1.0), gl_SubgroupSize)), _GLF_struct_15(_GLF_struct_10(mat3x2(1.0), uvec3(_GLF_IDENTITY(1u, (1u) << 0u)), 1, vec3(1.0)), _GLF_struct_11(ivec3(1), mat2(1.0), ivec4(1), 1u, uvec2(1u), mat4(1.0)), _GLF_struct_12(1u, 1, mat4(1.0), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0)), 0.0, exp(0.0), log(abs(1.0)), 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0), transpose(transpose(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, exp(0.0), log(abs(1.0)), 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0)), 0.0, exp(0.0), log(abs(1.0)), 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0), transpose(transpose(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, exp(0.0), log(abs(1.0)), 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0))))), min(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0)), 0.0, exp(0.0), log(abs(1.0)), 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0), transpose(transpose(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, exp(0.0), log(abs(1.0)), 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0))))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0)), 0.0, exp(0.0), log(abs(1.0)), 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0), transpose(transpose(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, exp(0.0), log(abs(1.0)), 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)))))))), float(_GLF_FUZZED((true ? 397.018 : 742.936))), bool(false))))), mat4x2(1.0)), _GLF_struct_13(bvec4(true), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec3(! (_GLF_IDENTITY(true, ! (! (true)))), true, true)))) && true))))), bool(bvec3(! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec3(! (_GLF_IDENTITY(true, ! (! (true)))), true, true))), (_GLF_IDENTITY(! (true), bool(bvec3(! (_GLF_IDENTITY(true, ! (! (true)))), true, true)))) && true)) && true))))), false, true))))), 1.0, uvec4(1u), vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), (1.0) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) * 1.0), 1.0)), 0.0)), min(float(mat4(0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))) : _GLF_FUZZED(clamp(715.035, -3.1, 138.568)))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), float(mat4(0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, sin(0.0), 1.0, 1.0, 1.0, sqrt(0.0), 1.0, cos(0.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), (1.0) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4.1)), bool(false))), (1.0) - 0.0), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), determinant(mat4(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 0.0, cos(0.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (_GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) - 0.0)) / 1.0))) * 1.0), 1.0)), 0.0)), min(float(mat4(0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(length(vec4(-0.6, 6.2, 7.0, 994.744))))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), float(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, sin(0.0), 1.0, 1.0, 1.0, sqrt(0.0), 1.0, cos(0.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-38.72), (false ? _GLF_FUZZED(82.70) : _GLF_FUZZED(-38.72))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), (1.0) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), mix(float(_GLF_FUZZED((-3769.7615))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) * 1.0), 1.0)), 0.0)), min(float(mat4(0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(sinh(-6.1)) : 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), float(mat4(0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 0.0, 0.0, determinant(mat3(sqrt(1.0), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), float(mat2(float(mat3x2(0.0, 0.0, 0.0, determinant(mat3(sqrt(1.0), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), 1.0, 0.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, sin(0.0), 1.0, 1.0, 1.0, sqrt(0.0), 1.0, cos(0.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), (1.0) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(41.40)), float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) * 1.0), 1.0)), 0.0)), min(float(mat4(0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), float(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat2(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, sin(0.0), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.0)), bool(false))), 1.0)), 1.0, sqrt(0.0), 1.0, cos(0.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0))))))) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), (1.0) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))), determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) * 1.0), 1.0)), 0.0)), min(float(mat4(0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0 * (determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))), 0.0)), float(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.3)), bool(false)))), float(_GLF_FUZZED(-754.368)), bool(false))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, sin(0.0), 1.0, 1.0, 1.0, sqrt(0.0), 1.0, cos(0.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0))))))))))), mat2(1.0)), _GLF_struct_14(1.0, vec3(1.0), mat4(1.0))), _GLF_struct_16(bvec4(true)), vec2(1.0), mat2x4(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         return;
        }
      }
     else
      {
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       break;
       if(_GLF_DEAD(false))
        return;
      }
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | _GLF_IDENTITY((int(1)), ((int(1))) / 1)), _GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)) ^ 0, (false ? _GLF_FUZZED(71578) : (int(1)) ^ 0))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) - 0))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, max(7, 7))), int(_GLF_IDENTITY(7, (7) + 0))), (0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0)))) << 0)), ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0))), 0 ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0))), ~ (~ (0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0))))))))) << 0))) + 0) | (int(5))))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) - 0))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(_GLF_IDENTITY(7, (7) + 0)))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), (_GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), (int(_GLF_IDENTITY(5, max(5, 5)))) / _GLF_IDENTITY(1, (1) >> (0 << _GLF_IDENTITY(int(7), int(7)))))) << _GLF_IDENTITY(0, ~ (~ (0)))))))), 0 | (((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) - 0))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 ^ (int(5))), (0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0)))) | (int(5)))))))) / 1), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) - 0))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0)))), 0 + ((0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0)))))) << 0)), ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0))), (0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0)))) << 0))) + 0) | (int(5))))), (_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) - 0))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(_GLF_IDENTITY(7, (7) + 0)))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), (_GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), (int(_GLF_IDENTITY(5, max(5, 5)))) / 1)) << 0))))), 0 | (((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) - 0))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 ^ (int(5))), (0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0)))) | (int(5))))))), 0 | (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) - 0))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(_GLF_IDENTITY(7, (7) + 0)))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), (_GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), (int(_GLF_IDENTITY(5, max(5, 5)))) / 1)) << 0))))), 0 | (((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) - 0))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 ^ (int(5))), (0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0)))) | (int(5)))))))))) / 1), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) - 0))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0))), (0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0)))) << 0)), ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0))), (0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0)))) << 0))) + 0) | (int(5)), (_GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0))), (0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0)))) << 0)), ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0))), (0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0)))) << 0))) + 0) | (int(5))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) - 0))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(_GLF_IDENTITY(7, (7) + 0)))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), (_GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), (int(_GLF_IDENTITY(5, max(5, 5)))) / 1)) << 0))))), 0 | (((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) - 0))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 ^ (int(5))), (0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0)))) | (int(5))))))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) - 0))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, min(_GLF_IDENTITY(7, 1 * (7)), _GLF_IDENTITY(7, max(7, 7))))) + 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), (_GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), (int(_GLF_IDENTITY(5, max(5, 5)))) + 0)) << 0), (_GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), (int(_GLF_IDENTITY(5, max(5, 5)))) / 1)) << 0))))), 0 | (((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) - 0))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 ^ (int(5))), max(_GLF_IDENTITY(int(5), 0 ^ (int(5))), _GLF_IDENTITY(int(5), 0 ^ (int(5))))), (0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0)))) | (int(5)))))))) - 0)) / 1), true)), bvec2(bvec3(bvec2(bvec2(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) - 0))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0))), (0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0)))) << 0)), ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0))), (0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0)))) << 0))) ^ 0), ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0)))), (false ? _GLF_FUZZED(_injected_loop_counter) : (0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) + 0)))))) << 0))) + 0) | (int(5))))), (_GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) - 0)), (false ? _GLF_FUZZED(17049) : 1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) - 0))))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(_GLF_IDENTITY(7, (7) + 0)))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), (_GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, 5))), (int(_GLF_IDENTITY(5, max(5, 5)))) / 1)) << 0))))), 0 | (((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) >> 0), (int(5)) - 0))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 ^ (int(5))), (0 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) / 1)) << 0), (7) + 0)))) | (int(5)))))))) / 1), true)), false)))))))); _injected_loop_counter ++)
      {
       return;
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)), _injected_loop_counter)) != 1); _injected_loop_counter ++)
              {
               return;
              }
            }
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          continue;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               return;
              }
            }
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, abs(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0))) > injectionSwitch.y))) || false)))))
    return;
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)));
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(262.790) : _GLF_ZERO(0.0, injectionSwitch.x))))) * workgroup_id;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(mat4x3(1.0), _GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0)))), _GLF_struct_2(_GLF_struct_0(ivec4(1)), true, _GLF_struct_1(mat3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_17._f1._f4.subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_17._f1._f4.subgroup_size, (subgroup_id * _GLF_struct_replacement_17._f1._f4.subgroup_size) | (subgroup_id * _GLF_struct_replacement_17._f1._f4.subgroup_size))) << 0u), 1u * (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_17._f1._f4.subgroup_size, (subgroup_id * _GLF_struct_replacement_17._f1._f4.subgroup_size) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_17._f1._f4.subgroup_size, (subgroup_id * _GLF_struct_replacement_17._f1._f4.subgroup_size) >> (1u ^ 1u)), (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_17._f1._f4.subgroup_size, (subgroup_id * _GLF_struct_replacement_17._f1._f4.subgroup_size) | (subgroup_id * _GLF_struct_replacement_17._f1._f4.subgroup_size))) << 0u)) - 0u), clamp(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_17._f1._f4.subgroup_size, (_GLF_struct_replacement_17._f1._f4.subgroup_size) << 0u), subgroup_id * _GLF_struct_replacement_17._f1._f4.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_17._f1._f4.subgroup_size, 0u + (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_17._f1._f4.subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * _GLF_struct_replacement_17._f1._f4.subgroup_size, 1u), uvec2(0u, 0u) ^ (uvec2(subgroup_id * _GLF_struct_replacement_17._f1._f4.subgroup_size, 1u))))))))), mat4x2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, log(1.0), 1.0, cos(0.0), 1.0, 1.0, exp(sin(0.0))))) < injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (! (bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))))), (injectionSwitch.x < injectionSwitch.y)))))))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bool(_GLF_IDENTITY(bvec2((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true), bvec2(bvec4(bvec2((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true), true, false))), true))))), (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (! (bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) || false))))), true))))))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), _GLF_IDENTITY((~ (1u)) * 1u, min((~ (1u)) * 1u, (~ (1u)) * 1u))))), max(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), _GLF_IDENTITY((~ (1u)) * 1u, min((~ (1u)) * 1u, (~ (1u)) * 1u))))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), _GLF_IDENTITY((~ (1u)) * 1u, min((~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(80803u) : 1u)))) * 1u, (~ (1u)) * 1u))))))), clamp(1u, 1u, _GLF_IDENTITY(1u, 1u * (1u))))), mat3(1.0)));
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_3._f2._f2.subgroup_base + _GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) | (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), 1u, 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, cos(0.0), 0.0))), 1.0)), clamp(float(vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, cos(0.0), 0.0))), 1.0)), float(vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, cos(0.0), 0.0))), 1.0)), float(vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, cos(0.0), 0.0))), 1.0))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     return;
    }
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_3._f2._f2.subgroup_base, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_3._f2._f2.subgroup_base, clamp(_GLF_struct_replacement_3._f2._f2.subgroup_base, _GLF_struct_replacement_3._f2._f2.subgroup_base, _GLF_struct_replacement_3._f2._f2.subgroup_base)))) + ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))))) + 1) % _GLF_struct_replacement_17._f1._f4.subgroup_size);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) + abs(0.0))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, 0 + (_injected_loop_counter ++)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true)))))))))))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
              }
             return;
            }
           return;
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) << 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 1.0)), (vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 1.0))) - vec2(0.0, 0.0))), injectionSwitch)).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.1)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (! (false)))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1666.2442)), float(injectionSwitch.y), bool(true)))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 1.0)), (vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))), 1.0, 0.0, 1.0, 1.0))) - vec2(0.0, 0.0))), injectionSwitch)).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.1)), float(_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (injectionSwitch.x))), bool(true))) > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (! (false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, int(ivec2(4, 1))), 64, 4);
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if((subgroup_local_id % 2) == 0)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), ((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1370.6153), _GLF_FUZZED(5794.0079)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x, injectionSwitch.x)) < injectionSwitch.y)))) && true)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), ((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1370.6153), _GLF_FUZZED(5794.0079)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x, injectionSwitch.x)) < injectionSwitch.y)))) && true)), true, false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         do
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), _GLF_IDENTITY(int(4), (int(4)) + 0))) >> _GLF_IDENTITY(int(4), int(4)))); _GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_injected_loop_counter ++)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           return;
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, 1 * (0))))), _GLF_IDENTITY(int(0), 0 | (int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | (int(int(0)))))) | _GLF_IDENTITY(0, (0) | (0))), 0 | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1)); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY((_injected_loop_counter ++), 0 + ((_injected_loop_counter ++))) >> 0)) - 0))
          {
           if(_GLF_DEAD(false))
            continue;
           subgroupAll(true);
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_injected_loop_counter != 1), ! (! (! (_injected_loop_counter != 1))))), ! (! ((_GLF_IDENTITY(! (_injected_loop_counter != 1), ! (! (! (_injected_loop_counter != 1)))))))))); _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                return;
              }
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))), bool(bvec4(_GLF_IDENTITY(((! (false))), (((! (false)))) && true), true, false, false))) || false))))))
      return;
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (1 & 1), _GLF_IDENTITY((_injected_loop_counter != (1 & 1)), ((_injected_loop_counter != (1 & 1))) || false) || false)), true, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)), true, false, false)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)), true, false, false)), bool(bvec3(bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)), true, false, false)), false, true)))))) && true)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) | (_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) + 0), _GLF_IDENTITY(clamp(64, _GLF_IDENTITY(64, clamp(64, 64, 64)), 64), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(clamp(64, _GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(64, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1123) : 64))), 0, 1, 0), ivec4(0, 0, 0, 0) ^ (ivec4(clamp(_GLF_IDENTITY(64, (64) << 0), _GLF_IDENTITY(64, clamp(64, 64, 64)), 64), 0, 1, 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(clamp(64, _GLF_IDENTITY(64, clamp(64, 64, 64)), 64), 0, 1, 0), ivec4(0, 0, 0, 0) ^ (ivec4(clamp(64, _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, max(64, 64)))), 64), 0, 1, 0)))), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(clamp(64, _GLF_IDENTITY(64, clamp(64, 64, 64)), 64), 0, 1, 0), ivec4(0, 0, 0, 0) ^ (ivec4(clamp(64, _GLF_IDENTITY(64, clamp(64, 64, 64)), 64), 0, 1, 0)))), (~ (_GLF_IDENTITY(ivec4(clamp(64, _GLF_IDENTITY(64, clamp(64, 64, 64)), 64), 0, 1, 0), ivec4(0, 0, 0, 0) ^ (ivec4(clamp(64, _GLF_IDENTITY(64, clamp(64, 64, 64)), 64), 0, 1, 0))))) | (~ (_GLF_IDENTITY(ivec4(clamp(64, _GLF_IDENTITY(64, clamp(64, 64, 64)), 64), 0, 1, 0), ivec4(0, 0, 0, 0) ^ (ivec4(clamp(64, _GLF_IDENTITY(64, clamp(64, 64, 64)), 64), 0, 1, 0)))))) : _GLF_FUZZED(ivec4(-45452, -19213, 71062, 66522))))))))), 4);
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              {
               if(_GLF_DEAD(false))
                return;
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, ~ (~ (1))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, 1 * (5))), int(5)))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, ~ (~ (1))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, 1 * (5))), int(5))))), (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | ((1))))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, 1 * (5))), int(5)))))) && true))); _injected_loop_counter ++)
                  {
                   return;
                  }
                }
              }
            }
          }
         else
          {
          }
        }
       else
        {
        }
       do
        {
         subgroupAll(false);
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(true && (false), true && (true && (false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
          break;
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(42.05, 2.6))))) - vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), max(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0))))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.5) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mat3x2(-161.771, 2.4, -3577.7301, 5294.1741, 881.468, 192.485)[2]) : injectionSwitch)).y))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.5) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), min(1.0 * (injectionSwitch.y), 1.0 * (injectionSwitch.y)))), injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.5) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)))), false || (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.5) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))))))))))))))));
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y))))))))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      return;
     atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u), 0u | (next_virtual_gid))], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), _GLF_IDENTITY(int(ivec4(int(int(2)), 0, 1, 0)), int(_GLF_IDENTITY(ivec2(int(ivec4(int(int(2)), 0, 1, 0)), 0), (ivec2(int(ivec4(int(int(2)), 0, 1, 0)), 0)) << ivec2(0, 0))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ _GLF_IDENTITY((int(int(1))), ((int(int(1)))) / 1))))))), int(int(_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ _GLF_IDENTITY((int(int(1))), ((int(int(1)))) / 1)))))))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))))), ((_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, ~ (~ (1))))), ~ (~ (int(int(1)))))))))))) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, (1) | 0))), _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(int(int(2)), max(int(int(2)), _GLF_IDENTITY(int(int(2)), min(int(int(2)), int(int(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) ^ 0), 2)))))))), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, (2) >> (0 | 0)), 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))), (ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))) | ivec3(0, 0, 0))))))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))))), ((_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, ~ (~ (1))))), ~ (~ (int(int(1)))))))))))) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, (1) | 0))), _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(int(int(2)), max(int(int(2)), _GLF_IDENTITY(int(int(2)), min(int(int(2)), int(int(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) ^ 0), 2)))))))), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, (2) >> (0 | 0)), 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))), (ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))) | ivec3(0, 0, 0))))))), int(ivec4(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))))), ((_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, ~ (~ (1))))), ~ (~ (int(int(1)))))))))))) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, (1) | 0))), _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(int(int(2)), max(int(int(2)), _GLF_IDENTITY(int(int(2)), min(int(int(2)), int(int(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) ^ 0), 2)))))))), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, (2) >> (0 | 0)), 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))), (ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))) | ivec3(0, 0, 0))))))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))))), ((_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, ~ (~ (1))))), ~ (~ (int(int(1)))))))))))) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (_GLF_IDENTITY(1, (1) | 0))), _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(int(int(2)), max(int(int(2)), _GLF_IDENTITY(int(int(2)), min(int(int(2)), int(int(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) ^ 0), 2)))))))), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(2, (2) >> (0 | 0)), 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))), (ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))) | ivec3(0, 0, 0)))))))) ^ 0), 1, 1, 0)))))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | (1))))))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0)))), clamp(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0)))), _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0)))), (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) + 0), _GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0)))))), _GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, _GLF_IDENTITY(0, min(0, 0))))))))) | (_GLF_IDENTITY(2, int(ivec3(2, _GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), _GLF_IDENTITY(~ (~ (int(int(1)))), (~ (~ (int(int(1))))) | (~ (~ (int(int(_GLF_IDENTITY(1, (1) | (1))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(_GLF_IDENTITY(int(int(2)), (_GLF_IDENTITY(int(int(2)), max(int(int(2)), int(int(2))))) >> 0), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))))), max(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(_GLF_IDENTITY(int(int(2)), (_GLF_IDENTITY(int(int(2)), max(int(int(2)), int(int(2))))) >> 0), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(_GLF_IDENTITY(int(int(2)), (_GLF_IDENTITY(int(int(2)), max(int(int(2)), int(int(2))))) >> 0), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))))))))) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(int(2), (false ? _GLF_FUZZED(-22125) : int(2)))), int(ivec4(int(int(2)), 0, 1, 0))))), int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(int(2), (false ? _GLF_FUZZED(-22125) : int(2)))), int(ivec4(int(int(2)), 0, 1, 0))))), (0 ^ 1)), min(ivec2((_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(int(2), (false ? _GLF_FUZZED(-22125) : int(2)))), int(ivec4(int(int(2)), 0, 1, 0))))), (0 ^ 1)), ivec2((_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(int(2), (false ? _GLF_FUZZED(-22125) : int(2)))), int(ivec4(int(int(2)), _GLF_IDENTITY(0, (14684 & int(_GLF_ZERO(0.0, injectionSwitch.x))) | (0)), 1, 0))))), (0 ^ 1)))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(int(1), (int(1)) >> 0))), max(_GLF_IDENTITY(~ (int(int(1))), ~ (_GLF_IDENTITY(~ (~ (int(int(1)))), (true ? ~ (~ (int(int(1)))) : _GLF_FUZZED(-40197))))), ~ (int(int(1))))))))))))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(int(int(2)), max(int(int(2)), _GLF_IDENTITY(int(int(2)), min(int(int(2)), int(int(2)))))), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))), (ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))) | ivec3(0, 0, 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))), (ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))) | ivec3(0, 0, 0)))), max(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))), (ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))) | ivec3(0, 0, 0)))), _GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))), (ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ _GLF_IDENTITY((~ (int(int(1)))), int(ivec4(_GLF_IDENTITY((~ (int(int(1)))), ~ (~ (_GLF_IDENTITY((~ (int(int(1)))), ((~ (int(int(1))))) | 0)))), 0, 0, 0))))))) | ivec3(0, 0, 0))))))) << 0)))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0)))), min(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))), (_GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0)))) ^ 0)), _GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))), 0 | (_GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))))), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, 0 | (1)))), ~ (~ (int(int(1)))))))))))) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))), (true ? _GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))) : _GLF_FUZZED(1176)))) ^ 0))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(int(int(2)), max(int(int(2)), _GLF_IDENTITY(int(int(2)), min(int(_GLF_IDENTITY(int(2), (int(2)) << 0)), int(int(2)))))), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))), (ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))) | ivec3(0, 0, 0))))))), clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))))), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, 0 | (1)))), ~ (~ (int(int(1)))))))))))) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))), (true ? _GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))) : _GLF_FUZZED(1176)))) ^ 0))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(int(int(2)), max(int(int(2)), _GLF_IDENTITY(int(int(2)), min(int(_GLF_IDENTITY(int(2), (int(2)) << 0)), int(int(2)))))), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))), (ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))) | ivec3(0, 0, 0))))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))))), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, 0 | (1)))), ~ (~ (int(int(1)))))))))))) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))), (true ? _GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))) : _GLF_FUZZED(1176)))) ^ 0))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(int(int(2)), max(int(int(2)), _GLF_IDENTITY(int(int(2)), min(int(_GLF_IDENTITY(int(2), (int(2)) << 0)), int(int(2)))))), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))), (ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))) | ivec3(0, 0, 0))))))), clamp(clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))))), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, 0 | (1)))), ~ (~ (int(int(1)))))))))))) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))), (true ? _GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))) : _GLF_FUZZED(1176)))) ^ 0))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(int(int(2)), max(int(int(2)), _GLF_IDENTITY(int(int(2)), min(int(_GLF_IDENTITY(int(2), (int(2)) << 0)), int(int(2)))))), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))), (ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))) | ivec3(0, 0, 0))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))))), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, 0 | (1)))), ~ (~ (int(int(1)))))))))))) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))), (true ? _GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))) : _GLF_FUZZED(1176)))) ^ 0))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(int(int(2)), max(int(int(2)), _GLF_IDENTITY(int(int(2)), min(int(_GLF_IDENTITY(int(2), (int(2)) << 0)), int(int(2)))))), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))), (ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))) | ivec3(0, 0, 0))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))))), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, 0 | (1)))), ~ (~ (int(int(1)))))))))))) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))), (true ? _GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))) : _GLF_FUZZED(1176)))) ^ 0))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(int(int(2)), max(int(int(2)), _GLF_IDENTITY(int(int(2)), min(int(_GLF_IDENTITY(int(2), (int(2)) << 0)), int(int(2)))))), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))), (ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))) | ivec3(0, 0, 0)))))))))) | (clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))))), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, 0 | (1)))), ~ (~ (int(int(1)))))))))))) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))), (true ? _GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))) : _GLF_FUZZED(1176)))) ^ 0))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(int(int(2)), max(int(int(2)), _GLF_IDENTITY(int(int(2)), min(int(_GLF_IDENTITY(int(2), (int(2)) << 0)), int(int(2)))))), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))), (ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))) | ivec3(0, 0, 0))))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))))), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, 0 | (1)))), ~ (~ (int(int(1)))))))))))) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))), (true ? _GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))) : _GLF_FUZZED(1176)))) ^ 0))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(int(int(2)), max(int(int(2)), _GLF_IDENTITY(int(int(2)), min(int(_GLF_IDENTITY(int(2), (int(2)) << 0)), int(int(2)))))), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))), (ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))) | ivec3(0, 0, 0))))))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))))), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, 0 | (1)))), ~ (~ (int(int(1)))))))))))) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))), (true ? _GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))) : _GLF_FUZZED(1176)))) ^ 0))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(int(int(2)), max(int(int(2)), _GLF_IDENTITY(int(int(2)), min(int(_GLF_IDENTITY(int(2), (int(2)) << 0)), int(int(2)))))), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))), (ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))) | ivec3(0, 0, 0)))))))) / 1), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))))), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, 0 | (1)))), ~ (~ (int(int(1)))))))))))) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))), (true ? _GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))) : _GLF_FUZZED(1176)))) ^ 0))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(int(int(2)), max(int(int(2)), _GLF_IDENTITY(int(int(2)), min(int(_GLF_IDENTITY(int(2), (int(2)) << 0)), int(int(2)))))), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))), (ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))) | ivec3(0, 0, 0))))))), (false ? _GLF_FUZZED(22424) : clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))))), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, 0 | (1)))), ~ (~ (int(int(1)))))))))))) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))), (true ? _GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))) : _GLF_FUZZED(1176)))) ^ 0))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(int(int(2)), max(int(int(2)), _GLF_IDENTITY(int(int(2)), min(int(_GLF_IDENTITY(int(2), (int(2)) << 0)), int(int(2)))))), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))), (ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))) | ivec3(0, 0, 0)))))))))))))) / 1u), uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))), clamp(_GLF_IDENTITY(int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))), 0 | (int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))))), _GLF_IDENTITY(int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))), (_GLF_IDENTITY(int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))), max(int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))), int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))))) / 1), int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0)))), (true ? _GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0)))) : _GLF_FUZZED(-20672)))) | (_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, 0 ^ (2)), 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1))))))))))), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ _GLF_IDENTITY((int(int(1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((int(int(1))), ((int(int(1)))) | 0)), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((int(int(1))), ((int(int(1)))) | 0)), (~ (_GLF_IDENTITY((int(int(1))), ((int(int(1)))) | 0))) + 0)), (true ? (_GLF_IDENTITY(~ (_GLF_IDENTITY((int(int(1))), ((int(int(1)))) | 0)), (~ (_GLF_IDENTITY((int(int(1))), ((int(int(1)))) | 0))) + 0)) : _GLF_FUZZED(-62665))) | (~ (_GLF_IDENTITY((int(int(1))), ((int(int(1)))) | 0))))))))))))))) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(int(int(2)), (_GLF_IDENTITY(int(int(2)), (int(int(2))) ^ 0)) >> 0), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(_GLF_IDENTITY(1, min(1, 1))))))))))))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(int(int(2)), max(int(int(2)), _GLF_IDENTITY(int(int(2)), min(int(int(2)), int(int(2)))))), int(ivec4(int(int(2)), 0, 1, 0))))) | (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ _GLF_IDENTITY((int(int(1))), (true ? _GLF_IDENTITY((int(int(1))), ((int(int(1)))) | 0) : _GLF_FUZZED(-98446))))))), (ivec3(2, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), ~ (~ (int(int(1)))))))) | _GLF_IDENTITY(ivec3(0, 0, 0), max(ivec3(0, 0, 0), ivec3(0, 0, 0))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), max(_GLF_IDENTITY(4, min(4, 4)), 4)), 64, 4);
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bool(bool(bvec2(_GLF_DEAD(false), false)))))), true, true))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true))))))));
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
          return;
         do
          {
           return;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               break;
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               return;
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false, true)))))));
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(668.296) : _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.1)), bool(false))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y) || false)))))) && true)))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             do
              {
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))));
            }
          }
        }
       else
        {
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.6) : injectionSwitch.y))))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, determinant(mat4(0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), float(vec2(float(mat4(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), float(vec4(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), 1.0, 0.0, 1.0)))), 0.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, determinant(mat4(0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), 1.0)))), min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                break;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), true, false, true)))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), ! (! (bool(bvec3(_GLF_DEAD(false), false, true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false)))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), false))), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
}
