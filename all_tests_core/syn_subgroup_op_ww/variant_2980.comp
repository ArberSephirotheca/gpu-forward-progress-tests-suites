#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 bool _f0;
 ivec4 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_3 {
 uvec2 _f0;
 bool _f1;
} ;

struct _GLF_struct_2 {
 uint _f0;
} ;

struct _GLF_struct_5 {
 bvec4 _f0;
 bvec2 _f1;
 _GLF_struct_2 _f2;
 uint workgroup_base;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
 vec3 _f5;
 bool _f6;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 vec4 _f1;
 bvec4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
 _GLF_struct_0 _f1;
 mat2x3 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_6 {
 vec4 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_5 _f2;
 uvec2 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(63104u))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(true))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec4(mat2(1.0) * (injectionSwitch), 0.0, 1.0)))).x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))) || false, ! (! ((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))) || false)))))) && true)), ! (! ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.8), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * cos(0.0)), 1.0 * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], ((injectionSwitch)[0]) * cos(0.0)))), _GLF_FUZZED(3.7)), bvec2(true, false))).x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) || false))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) || false)))), false || (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) || false))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) || false)))), false || (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) || false)))))))))))), (bool(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) || false)))), false || (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) || false))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) || false)))), false || (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) || false))))))))))))) && true)))), _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))), true))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false || (bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))) && (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0)), (float(mat2x4(injectionSwitch.y, 1.0, abs(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0))) / 1.0)), injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0)), (float(mat2x4(injectionSwitch.y, 1.0, abs(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0))) / 1.0)), injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0)), (float(mat2x4(injectionSwitch.y, 1.0, abs(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0))) / 1.0)), injectionSwitch.y))) && true), true, true)), (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0)), (float(mat2x4(injectionSwitch.y, 1.0, abs(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0))) / 1.0)), injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0)), (float(mat2x4(injectionSwitch.y, 1.0, abs(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, 1.0))) / 1.0)), injectionSwitch.y))) && true), true, true))) && true)))))))))), true))))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, clamp(0, 0, 0)), bool(bvec3(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)), false, false)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(vec4(1.0), _GLF_struct_1(mat2(1.0), _GLF_struct_0(mat4x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0)), (vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0)), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0)) * (_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0)), (true ? vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0)) : _GLF_FUZZED(vec4(-531.066, 492.989, -4277.3084, -371.246)))))), (_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0)), _GLF_IDENTITY(mat4(1.0) * (vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0))), min(mat4(1.0) * (vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0))), mat4(1.0) * (vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0))))))) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-7568.7086)), bool(false)))) - 0.0)), vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0)))), vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x4(1.0, tan(0.0), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 1.0, 1.0))), (1.0) - 0.0)))), bvec4(true), mat3x4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.9) : 1.0)))), mat2x3(1.0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(16346)))))), ~ (~ (ivec2(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(16346)))))))))), _GLF_struct_5(bvec4(true), bvec2(true), _GLF_struct_2(1u), workgroup_size * workgroup_id, _GLF_struct_3(uvec2(_GLF_IDENTITY(1u, (1u) | 0u)), true), _GLF_struct_4(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) || false)))))))), _GLF_IDENTITY(ivec4(1), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec4(43806, -37656, -46175, -86779), max(ivec4(43806, -37656, -46175, -86779), ivec4(43806, -37656, _GLF_IDENTITY(-46175, (-46175) / 1), -86779)))) : ivec4(1))), ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), clamp(0 | (1), _GLF_IDENTITY(0 | (1), 0 | (_GLF_IDENTITY(0 | (1), int(ivec3(0 | (1), 0, 1))))), _GLF_IDENTITY(0 | (1), int(ivec4(0 | (1), 1, 1, 1)))))))), vec3(1.0), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), uvec2(1u));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.7)), bool(false)))))));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false))) && true, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, false, false)), false || (bool(bvec4((false), false, false, false))))) || false), true && (false))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true)))))))))))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true))))))))) && true), (false) && true)))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-33.37)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(distance(vec2(919.756, -6.7), injectionSwitch)) : injectionSwitch.y))))))))) && true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0), mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(1.1), mix(float(_GLF_FUZZED(1.1)), float(_GLF_FUZZED(-58.56)), bool(false)))), bool(false))), _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, 1.0, determinant(mat4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-24.22)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), length(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.y, _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), 1.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6129.8352))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-45.15))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-45.15))), float(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-45.15))), determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-45.15))))), 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), length(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(-496.211)), bool(false))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(1.1)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), length(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), max(_GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), length(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), (true ? float(mat3x4(injectionSwitch.y, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), length(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))) : _GLF_FUZZED(79.95))), float(mat3x4(injectionSwitch.y, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), length(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), mix(float(float(mat3x4(injectionSwitch.y, 1.0, 1.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6129.8352))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-45.15))), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-45.15)))) / 1.0), 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), length(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(-496.211)), bool(false))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(1.1)), (float(_GLF_FUZZED(1.1))) / 1.0), bool(false))), _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-398.300)), vec2(_GLF_FUZZED(-383.327), (mat2(1.0) * (injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))).x), length(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)), mix(float(float(mat3x4(injectionSwitch.y, 1.0, 1.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6129.8352))), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-45.15))), 0.0, 0.0, 1.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), length(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(-496.211)), bool(false)))))))))), false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || false), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || false)))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || false), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || false))))))) || false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), bool(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))) || false))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true))) || false))))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          break;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, mix(float(_GLF_FUZZED(4656.4593)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(distance(vec3(9.0, 233.409, 249.659), vec3(1217.5448, 920.251, 9.5))))), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(faceforward(4.3, 669.982, injectionSwitch.y)), (true ? true ? injectionSwitch.x : _GLF_FUZZED(faceforward(4.3, 669.982, injectionSwitch.y)) : _GLF_FUZZED(-1195.5912))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), _GLF_IDENTITY((! (bool(bvec2(false, false)))) && true, ! (! (_GLF_IDENTITY((! (bool(bvec2(false, false)))) && true, false || ((! (bool(bvec2(false, false)))) && true)))))))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), bool(bvec2(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.1)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2227.7002)), float(injectionSwitch.x), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), true))))), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) || false, ((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))) || false) || false))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))), false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec4(bool(bvec2(false, false)), true, true, true)))) || false))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(false, bool(bvec3(false, false, false))) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY((bool(bvec2(false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), ((bool(bvec2(false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))) && true) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, true, true))) || false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false)), (bool(bvec2(false, false))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))).y))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false)), (bool(bvec2(false, false))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))).y))))))))), bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) || false)), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) || false)))))))))))) && true)))), bool(bvec3(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), true))), ! (! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), true)))))))), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))) || false), true)), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))) || false), true))))), false, false, false))), true, false, false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))))), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))))))))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), (_GLF_IDENTITY(! (false), true && (! (false)))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true, false)))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || false), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || false), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || false), false)))) || false), bool(bvec4((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5.3, -9.5)) : injectionSwitch)).y)), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) / 1.0)), mix(float(_GLF_FUZZED(5.9)), float(max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) / 1.0))), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || false, bool(bool(_GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || false, ! (! (((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || false)))))), false || (((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y)) || _GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(_GLF_IDENTITY(-6343.8577, mix(float(-6343.8577), float(_GLF_FUZZED(4496.9331)), bool(false)))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), float(_GLF_FUZZED(-7.1)), bool(false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(false, (false) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(8545.4348), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch))[1], min((max(injectionSwitch, injectionSwitch))[1], (max(injectionSwitch, injectionSwitch))[1]))), vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(9.1)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (mix(vec2(_GLF_FUZZED(8545.4348), _GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)), injectionSwitch))[1], min((max(injectionSwitch, injectionSwitch))[1], (max(injectionSwitch, injectionSwitch))[1]))), vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(9.1)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(517.069, -9.5)))).y))))) + vec2(0.0, 0.0)))).y, max(false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * exp(vec2(0.0, 0.0)))), mix(vec2(_GLF_FUZZED(8545.4348), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch))[1], min((max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[1], (max(injectionSwitch, injectionSwitch))[1]))), vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(9.1)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y, false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(8545.4348), _GLF_IDENTITY(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch))[1], (true ? _GLF_IDENTITY((max(injectionSwitch, injectionSwitch))[1], clamp(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch))[1], min((max(injectionSwitch, injectionSwitch))[1], (max(injectionSwitch, injectionSwitch))[1])), (max(injectionSwitch, injectionSwitch))[1], (max(injectionSwitch, injectionSwitch))[1])) : _GLF_FUZZED(-26.07))), min((max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)), injectionSwitch))[1], (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((-29335 , vec2(446.988, -1418.6645))) : injectionSwitch))))[1]))), vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(9.1)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.2, 2.4)) : injectionSwitch)))).y)) || false), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-0.7) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-0.7) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-0.7) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))) || false)), ! (! ((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-0.7) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))) || false))))))))) || false) && true), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-6.3) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5973.1238), _GLF_FUZZED(-38.33)), bvec2(false, false))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true && (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) / sqrt(1.0)), (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), false || (_GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && _GLF_IDENTITY(true, ! (! (true))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (_GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || false), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || false), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || false), false)))) || false), bool(bvec4((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5.3, -9.5)) : injectionSwitch)).y)), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) / 1.0)), mix(float(_GLF_FUZZED(5.9)), float(max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) / 1.0))), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || false, bool(bool(_GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || false, ! (! (((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || false)))))), false || (((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y)) || _GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(_GLF_IDENTITY(-6343.8577, mix(float(-6343.8577), float(_GLF_FUZZED(4496.9331)), bool(false)))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), float(_GLF_FUZZED(-7.1)), bool(false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(false, (false) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(8545.4348), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch))[1], min((max(injectionSwitch, injectionSwitch))[1], (max(injectionSwitch, injectionSwitch))[1]))), vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(9.1)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (mix(vec2(_GLF_FUZZED(8545.4348), _GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)), injectionSwitch))[1], min((max(injectionSwitch, injectionSwitch))[1], (max(injectionSwitch, injectionSwitch))[1]))), vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(9.1)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(517.069, -9.5)))).y))))) + vec2(0.0, 0.0)))).y, max(false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * exp(vec2(0.0, 0.0)))), mix(vec2(_GLF_FUZZED(8545.4348), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch))[1], min((max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[1], (max(injectionSwitch, injectionSwitch))[1]))), vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(9.1)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y, false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(8545.4348), _GLF_IDENTITY(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch))[1], (true ? _GLF_IDENTITY((max(injectionSwitch, injectionSwitch))[1], clamp(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch))[1], min((max(injectionSwitch, injectionSwitch))[1], (max(injectionSwitch, injectionSwitch))[1])), (max(injectionSwitch, injectionSwitch))[1], (max(injectionSwitch, injectionSwitch))[1])) : _GLF_FUZZED(-26.07))), min((max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)), injectionSwitch))[1], (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((-29335 , vec2(446.988, -1418.6645))) : injectionSwitch))))[1]))), vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(9.1)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.2, 2.4)) : injectionSwitch)))).y)) || false), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-0.7) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-0.7) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-0.7) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))) || false)), ! (! ((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-0.7) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))) || false))))))))) || false) && true), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-6.3) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5973.1238), _GLF_FUZZED(-38.33)), bvec2(false, false))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true && (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) / sqrt(1.0)), (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), false || (_GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && _GLF_IDENTITY(true, ! (! (true))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (_GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true)))))))))))))))), ! (! (bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || false), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || false), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || false), false)))) || false), bool(bvec4((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5.3, -9.5)) : injectionSwitch)).y)), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) / 1.0)), mix(float(_GLF_FUZZED(5.9)), float(max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) / 1.0))), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || false, bool(bool(_GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || false, ! (! (((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || false)))))), false || (((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y)) || _GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(_GLF_IDENTITY(-6343.8577, mix(float(-6343.8577), float(_GLF_FUZZED(4496.9331)), bool(false)))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), float(_GLF_FUZZED(-7.1)), bool(false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(false, (false) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(8545.4348), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch))[1], min((max(injectionSwitch, injectionSwitch))[1], (max(injectionSwitch, injectionSwitch))[1]))), vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(9.1)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (mix(vec2(_GLF_FUZZED(8545.4348), _GLF_IDENTITY((max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)), injectionSwitch))[1], min((max(injectionSwitch, injectionSwitch))[1], (max(injectionSwitch, injectionSwitch))[1]))), vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(9.1)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(517.069, -9.5)))).y))))) + vec2(0.0, 0.0)))).y, max(false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * exp(vec2(0.0, 0.0)))), mix(vec2(_GLF_FUZZED(8545.4348), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch))[1], min((max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[1], (max(injectionSwitch, injectionSwitch))[1]))), vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(9.1)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y, false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(8545.4348), _GLF_IDENTITY(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch))[1], (true ? _GLF_IDENTITY((max(injectionSwitch, injectionSwitch))[1], clamp(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch))[1], min((max(injectionSwitch, injectionSwitch))[1], (max(injectionSwitch, injectionSwitch))[1])), (max(injectionSwitch, injectionSwitch))[1], (max(injectionSwitch, injectionSwitch))[1])) : _GLF_FUZZED(-26.07))), min((max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)), injectionSwitch))[1], (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((-29335 , vec2(446.988, -1418.6645))) : injectionSwitch))))[1]))), vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(9.1)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.2, 2.4)) : injectionSwitch)))).y)) || false), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-0.7) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-0.7) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-0.7) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))) || false)), ! (! ((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-0.7) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))) || false))))))))) || false) && true), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-6.3) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5973.1238), _GLF_FUZZED(-38.33)), bvec2(false, false))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true && (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) / sqrt(1.0)), (false ? _GLF_FUZZED(-6343.8577) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), false || (_GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && _GLF_IDENTITY(true, ! (! (true))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (_GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true)))))))))))))))))))))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), true, true))))) || (false))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               barrier();
              }
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            continue;
           return;
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, true)))), bool(bvec3(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, true)))), false, true))))), ! (! (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, true)))), bool(bvec3(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, true, true)))), false, true)))))))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(mix(injectionSwitch, vec2(-5.7, -687.544), 60.41))), (true ? (true ? injectionSwitch : _GLF_FUZZED(mix(injectionSwitch, vec2(-5.7, -687.544), 60.41))) : _GLF_FUZZED(vec3(-114.822, 3712.9118, 3084.7029).bg)))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.3)), bool(false))) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- 63.67))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        continue;
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size)), _GLF_IDENTITY(1u * (subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size))), max(1u * (subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size))), 1u * (subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size))))));
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_6._f2.workgroup_base + subgroup_base, max(_GLF_struct_replacement_6._f2.workgroup_base + subgroup_base, _GLF_struct_replacement_6._f2.workgroup_base + subgroup_base)) + subgroup_local_id;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint next_virtual_gid = _GLF_struct_replacement_6._f2.workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), 0u ^ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), (_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))) * 1u))), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))) | ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))))) - 0u)), max((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), (_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))) * 1u))), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))) | ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))))) - 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), (_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))) * 1u))), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))) | ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))))) - 0u)))) + 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), (_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))) * 1u))), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))) | ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))))) - 0u)), max((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), (_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))) * 1u))), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))) | ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))))) - 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), (_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))) * 1u))), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))) | ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))))) - 0u)))) + 0u, _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), (_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))) * 1u))), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))) | ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))))) - 0u)), max((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), (_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))) * 1u))), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))) | ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))))) - 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), (_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))) * 1u))), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))) | ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))))) - 0u)))) + 0u, _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), (_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))) * 1u))), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))) | ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))))) - 0u)), max((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), (_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))) * 1u))), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))) | ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))))) - 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), (_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))) * 1u))), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))) | ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))))) - 0u)))) + 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (0u) << 0u))) ^ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : subgroup_base))) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), clamp(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), uint(uvec2((~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), uint(_GLF_ONE(1.0, injectionSwitch.y))))) - 0u)) + 0u))), uint(uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), 0u ^ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), (_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))) * 1u))), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))) | ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))))) - 0u)), max((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), (_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))) * 1u))), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))) | ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))))) - 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), (_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))) * 1u))), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))) | ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))))) - 0u)))) + 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), (_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))) * 1u))), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))) | ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))))) - 0u)), max((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), (_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))) * 1u))), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))) | ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))))) - 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), (_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))) * 1u))), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))) | ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))))) - 0u)))) + 0u, _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), (_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))) * 1u))), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))) | ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))))) - 0u)), max((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), (_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))) * 1u))), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))) | ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))))) - 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), (_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))) * 1u))), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))) | ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))))) - 0u)))) + 0u, _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), (_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))) * 1u))), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))) | ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))))) - 0u)), max((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), (_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))) * 1u))), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))) | ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))))) - 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), (_GLF_IDENTITY((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ~ (~ ((subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))) * 1u))), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))) | ((_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))))) - 0u)))) + 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (0u) << 0u))) ^ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : subgroup_base))) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), clamp(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), uint(uvec2((~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), uint(_GLF_ONE(1.0, injectionSwitch.y))))) - 0u)) + 0u)))))))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch)).x > injectionSwitch.y))))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)))))))
    return;
   atomicStore(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), uint(uvec2((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), (_GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), ~ (_GLF_IDENTITY(~ (clamp(virtual_gid, virtual_gid, virtual_gid)), (~ (clamp(virtual_gid, virtual_gid, virtual_gid))) * 1u)))) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - _GLF_IDENTITY(0u, ~ (~ (0u))))) << 0u)))))) * 1u)], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) % 2) == 0)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     do
      {
       do
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           subgroupAll(true);
           if(_GLF_DEAD(false))
            continue;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) * 1.0))) ? _GLF_FUZZED(_injected_loop_counter) : 0))); _injected_loop_counter --)
        {
         atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(_injected_loop_counter) : 2))), 4, 64, 4);
        }
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
   subgroupAll(false);
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0), (true ? _GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0), (mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0)) * mat2(1.0)) : _GLF_FUZZED(mat2x3(203.878, -0.9, -3558.3208, -867.107, -2461.0059, -5.6)))))))), injectionSwitch)).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), determinant(mat3(0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, round(length(normalize(1.0)))))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) && true)) && true))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)) || false)), true && ((_GLF_IDENTITY(true, (true) || false)))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))) && true)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
          }
        }
       else
        {
         atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), (0u ^ 0u) ^ (_GLF_IDENTITY(uint(2), 0u ^ (uint(2))))), clamp(_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), 0u)), _GLF_IDENTITY(0u, min(0u, 0u))))), min(uint(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, min(0u, 0u))))), uint(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, min(0u, 0u)))))))), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), 0u ^ (_GLF_IDENTITY(0u, min(0u, 0u))))))), min(uint(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, min(0u, 0u))))), uint(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, min(0u, 0u))))), min(uint(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, min(0u, 0u))))), uint(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, min(0u, 0u))))))))))) ^ 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), ~ (~ (_GLF_IDENTITY(uint(2), 0u ^ (uint(2)))))))), _GLF_IDENTITY(uint(2), (_GLF_IDENTITY(0u, (0u) ^ 0u) ^ 0u) ^ (_GLF_IDENTITY(uint(2), 0u ^ (uint(2))))), _GLF_IDENTITY(uint(2), (0u ^ 0u) ^ (_GLF_IDENTITY(uint(2), 0u ^ (_GLF_IDENTITY(uint(2), (uint(2)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 4, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, int(ivec3(64, 0, 0))))), 4);
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), injectionSwitch)).x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-8.3)), float(injectionSwitch[0]), bool(true))))), injectionSwitch[1])).x))))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - 0))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                  return;
                 break;
                }
               do
                {
                 do
                  {
                   do
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))))))
                      return;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false)))), true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false)))), true))))), bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, false)))), true))))), true, false)))))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              continue;
            }
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(99.32), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y))))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - log(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), ((injectionSwitch) - log(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * mat2(1.0))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(min(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(-192.961)), bool(false))))) / 1.0)))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), true && (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (! ((false)))))), true && ((false)))))))), true && ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false))))))))))) || false)), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(true && ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (true && ((false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1])).y))))))))), ! (! _GLF_IDENTITY(((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && ((false)), (true && ((false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, exp(0.0), determinant(mat3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), tan(0.0), 1.0, 0.0)), cos(log(1.0)), length(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), sqrt(0.0))), (vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, exp(0.0), determinant(mat3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), tan(0.0), 1.0, 0.0)), cos(log(1.0)), length(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), sqrt(0.0)))) - vec2(0.0, 0.0)))[1])).y)))))))))), true && (((! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && ((false)), (true && ((false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, exp(0.0), determinant(mat3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), tan(0.0), 1.0, 0.0)), cos(log(1.0)), length(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), sqrt(0.0))), (vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, exp(0.0), determinant(mat3(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), tan(0.0), 1.0, 0.0)), cos(log(1.0)), length(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), sqrt(0.0)))) - vec2(0.0, 0.0)))[1])).y))))))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(_GLF_IDENTITY(bool(! ((false))), bool(bvec3(bool(! ((false))), true, false)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ! (! ((false))))))), true && (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), true && (bool(bool(((false))))))))))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, false, false)), false || (bool(bvec4((false), true, false, false))))), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (! (_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bvec2((false), false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), bool(bvec3(! (_GLF_IDENTITY((false), ! (! ((false))))), true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), bool(bvec3(! (_GLF_IDENTITY((false), ! (! ((false))))), true, false))), (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ! (! ((! ((false)))))))), bool(bvec3(! (_GLF_IDENTITY((false), ! (! ((false))))), true, false)))) || false)))))))))))))), false || ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(true, ! (! (true))))) && true))) && (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((false))))), bool(bool((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((false)))))))), bool(bvec3(! (_GLF_IDENTITY((false), ! (! ((false))))), true, false)))))))))))))))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (! ((false))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (! ((false))))))))), (bool(bool(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (! ((false)))))))))) && true)) || false, true, true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (! ((false))))))) || false, true, true, false)), (bool(bvec4(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), (_GLF_IDENTITY(false || ((false)), bool(bool(false || ((false)))))) || false)), ! (! ((false))))))) || false, true, true, false))) && true)) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, false)))) && true))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      break;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), true), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), true), false, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, false || (true))), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), true), false, true)), _GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))))))));
}
