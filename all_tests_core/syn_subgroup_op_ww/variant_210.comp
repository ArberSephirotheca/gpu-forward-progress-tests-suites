#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_6 {
 uint workgroup_base;
 uvec2 _f0;
 mat4 _f1;
 uint _f2;
} ;

struct _GLF_struct_5 {
 mat4 _f0;
 ivec3 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
} ;

struct _GLF_struct_8 {
 uint _f0;
 mat3 _f1;
 _GLF_struct_7 _f2;
} ;

struct _GLF_struct_4 {
 mat3 _f0;
 uint subgroup_size;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
 vec3 _f1;
 bool _f2;
 mat3 _f3;
 uvec4 _f4;
 mat2x3 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 bvec3 _f1;
 ivec3 _f2;
 mat4x2 _f3;
 mat4 _f4;
 mat2x4 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_2 {
 ivec3 _f0;
 mat3 _f1;
 vec4 _f2;
 _GLF_struct_0 _f3;
 vec3 _f4;
 _GLF_struct_1 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 uvec2 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))), true)))), bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))), false, false, true))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | (1))])).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(33.12), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(8.7), 1.0 * (_GLF_FUZZED(8.7)))), bvec2(true, false)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch), mix(vec2((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch))[0], _GLF_FUZZED(vec4(-768.683, 8.5, -1.8, -5533.0827).w)), vec2(_GLF_FUZZED(-29.81), (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch))[1]), bvec2(false, true)))), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) || false), true))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_3 _GLF_struct_replacement_3;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (false))), bool(bvec2(_GLF_DEAD(false), true))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(mat3(1.0), gl_SubgroupSize);
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_replacement_3.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x = subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))))), false, false, false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-110.746), _GLF_FUZZED(-3.1)), bvec2(false, false))).y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))) && true)))) || false)) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-36.53)), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)))))))), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), false || (! (_GLF_IDENTITY(true, ! (! (true)))))), true, true, true)))))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), false || (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec3((_GLF_IDENTITY(false, false || (false))), false, false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), false || (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec3(false || (_GLF_IDENTITY(false, false || (false))), false, false)), bool(bool(bool(bvec3(false || (_GLF_IDENTITY(false, false || (false))), false, false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), false || (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec3(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || (false)), ! (! (! (false || (false))))))))), false, false)), bool(bool(bool(bvec3(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), (false || (_GLF_IDENTITY(false, false || (false)))) && true), false, false)))))))) || false)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false)))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))))) || false))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), ! (! (false || (_GLF_IDENTITY(false, false || (false))))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))))) || false))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2268.1061)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.9) : injectionSwitch.x))), bool(true))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2268.1061)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.9) : injectionSwitch.x))), bool(true))) > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))), ! (! (bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))))))))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false)), true && (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false)), true && (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(1u, mat3(1.0), _GLF_struct_7(_GLF_struct_5(mat4(1.0), ivec3(1), mat4x2(1.0)), _GLF_struct_6(workgroup_size * workgroup_id, uvec2(1u), mat4(1.0), _GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 _GLF_struct_replacement_3.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.y = _GLF_struct_replacement_8._f2._f1.workgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) || false, true && ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, false, true)), false, true, false))))))) || false)), false, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) || false, true && ((_GLF_DEAD(false)) || false)), false, false)), false || (bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) || false, true && ((_GLF_DEAD(false)) || false)), false, false))))))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), abs(0.0), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, log(1.0), 1.0, 1.0)), min(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0), abs(0.0), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, log(1.0), 1.0, 1.0)), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), abs(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(1.0) * (mat3(0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))), (mat4x3(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(1.0) * (mat3(0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0))))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (mat3(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(1.0) * (mat3(0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))), (mat4x3(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0), mat3(1.0) * (mat3(0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0))))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 1.0, log(1.0), 1.0, 1.0))))) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))), bool(_GLF_IDENTITY(bool(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), true, false, true))))), bool(bvec2(bool(false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))))), true)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))))), bool(bvec2(bool(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))))), true))), (_GLF_IDENTITY(bool(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))))), bool(bvec2(bool(false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))))), true)))) || false))) || false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, mix(float(_GLF_FUZZED(4.7)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(-5.4))), injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), bool(bool(bool(bvec2(_GLF_DEAD(false), true)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_3.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.y, min(_GLF_IDENTITY(_GLF_struct_replacement_3.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.y, max(_GLF_struct_replacement_3.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.y, _GLF_struct_replacement_3.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.y)), _GLF_struct_replacement_3.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.y)) + subgroup_id * _GLF_struct_replacement_4.subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_3.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x, max(_GLF_IDENTITY(_GLF_struct_replacement_3.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x, (_GLF_IDENTITY(_GLF_struct_replacement_3.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x, uint(uint(_GLF_struct_replacement_3.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x)))) | (_GLF_struct_replacement_3.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x)), _GLF_IDENTITY(_GLF_struct_replacement_3.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x, _GLF_IDENTITY(clamp(_GLF_struct_replacement_3.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x, _GLF_struct_replacement_3.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x, _GLF_struct_replacement_3.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x), (clamp(_GLF_struct_replacement_3.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x, _GLF_struct_replacement_3.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x, _GLF_struct_replacement_3.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-187.196), mix(float(_GLF_FUZZED(3.6)), float(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-187.196), mix(float(true ? injectionSwitch.y : _GLF_FUZZED(-187.196)), float(_GLF_FUZZED(9.9)), bool(false)))), bool(true))))), injectionSwitch.y))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true)))))))))))), true && (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-187.196))), injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-46.21)), bool(false))), injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-187.196))), injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-46.21)), bool(false))), injectionSwitch.y)))))), false, true, false)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, determinant(mat2(0.0, abs(0.0), 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, cos(0.0))))))))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(determinant(mat3(-43.10, 26.33, -0.3, -104.115, -6019.3992, -166.120, 8865.3465, 4.1, -576.861))) : injectionSwitch.y))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false)))))), true, false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), (vec4(injectionSwitch, 1.0, 0.0)) * mat4(1.0)))).y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_FUZZED(-3894)) | (_GLF_IDENTITY(_GLF_FUZZED(-3894), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3894), min(_GLF_FUZZED(-3894), _GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_FUZZED(-3894)) | (_GLF_FUZZED(-3894)))) / 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3894), min(_GLF_FUZZED(-3894), _GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_FUZZED(-3894)) | (_GLF_FUZZED(-3894)))) / 1))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(-3894), min(_GLF_FUZZED(-3894), _GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_FUZZED(-3894)) | (_GLF_FUZZED(-3894)))) / 1))), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), (1 | 1))), clamp(int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(-3894), min(_GLF_FUZZED(-3894), _GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_FUZZED(-3894)) | (_GLF_FUZZED(-3894)))) / 1))), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), (1 | 1))), int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(-3894), min(_GLF_FUZZED(-3894), _GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_FUZZED(-3894)) | (_GLF_FUZZED(-3894)))) / 1))), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), (1 | 1))), int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(-3894), min(_GLF_FUZZED(-3894), _GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_FUZZED(-3894)) | (_GLF_FUZZED(-3894)))) / 1))), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), (1 | 1)))))), _GLF_IDENTITY(_GLF_FUZZED(-3894), min(_GLF_FUZZED(-3894), _GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_FUZZED(-3894)) | (_GLF_FUZZED(-3894)))) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3894), min(_GLF_FUZZED(-3894), _GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_FUZZED(-3894)) | (_GLF_FUZZED(-3894)))) / 1))), (_GLF_IDENTITY(_GLF_FUZZED(-3894), min(_GLF_FUZZED(-3894), _GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_FUZZED(-3894)) | (_GLF_FUZZED(-3894)))) / 1)))) * 1))), _GLF_FUZZED(-3894), _GLF_FUZZED(-3894))))), (false ? _GLF_FUZZED(-67510) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_FUZZED(-3894)) | (_GLF_IDENTITY(_GLF_FUZZED(-3894), clamp(_GLF_IDENTITY(_GLF_FUZZED(-3894), min(_GLF_FUZZED(-3894), _GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_FUZZED(-3894)) | (_GLF_FUZZED(-3894)))) / 1))), _GLF_FUZZED(-3894), _GLF_FUZZED(-3894))))), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-3894, (-3894) ^ 0)), _GLF_IDENTITY((_GLF_FUZZED(-3894)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_IDENTITY(_GLF_FUZZED(-3894), (false ? _GLF_FUZZED(-57708) : _GLF_FUZZED(-3894)))) ^ 0), clamp(_GLF_IDENTITY(_GLF_FUZZED(-3894), min(_GLF_FUZZED(-3894), _GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_FUZZED(-3894)) | (_GLF_FUZZED(-3894))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_FUZZED(-3894)) | (_GLF_FUZZED(-3894))), (_GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_FUZZED(-3894)) | (_GLF_FUZZED(-3894)))) >> 0)) - 0)) / 1))), _GLF_FUZZED(-3894), _GLF_FUZZED(-3894)))), _GLF_IDENTITY(int(ivec2((_GLF_FUZZED(-3894)) | (_GLF_IDENTITY(_GLF_FUZZED(-3894), clamp(_GLF_IDENTITY(_GLF_FUZZED(-3894), min(_GLF_FUZZED(-3894), _GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_FUZZED(-3894)) | (_GLF_FUZZED(-3894)))) / 1))), _GLF_FUZZED(-3894), _GLF_FUZZED(-3894)))), (_GLF_IDENTITY(0 ^ 1, (0 << _GLF_IDENTITY(int(8), int(8))) ^ (0 ^ 1))))), clamp(_GLF_IDENTITY(int(ivec2((_GLF_FUZZED(_GLF_IDENTITY(-3894, ~ (~ (-3894))))) | (_GLF_IDENTITY(_GLF_FUZZED(-3894), clamp(_GLF_IDENTITY(_GLF_FUZZED(-3894), min(_GLF_FUZZED(-3894), _GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_FUZZED(-3894)) | (_GLF_FUZZED(-3894)))) / 1))), _GLF_FUZZED(-3894), _GLF_FUZZED(-3894)))), (0 ^ 1))), _GLF_IDENTITY((int(ivec2((_GLF_FUZZED(-3894)) | (_GLF_IDENTITY(_GLF_FUZZED(-3894), clamp(_GLF_IDENTITY(_GLF_FUZZED(-3894), min(_GLF_FUZZED(-3894), _GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_FUZZED(-3894)) | (_GLF_FUZZED(-3894)))) / 1))), _GLF_FUZZED(-3894), _GLF_FUZZED(-3894)))), (0 ^ _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) ^ 0)), (~ (_GLF_IDENTITY(1, (1) ^ 0))) ^ (18475 & 0)))))))), clamp((int(ivec2((_GLF_FUZZED(-3894)) | (_GLF_IDENTITY(_GLF_FUZZED(-3894), clamp(_GLF_IDENTITY(_GLF_FUZZED(-3894), min(_GLF_FUZZED(-3894), _GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_FUZZED(-3894)) | (_GLF_FUZZED(-3894)))) / 1))), _GLF_FUZZED(-3894), _GLF_FUZZED(-3894)))), (0 ^ _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) ^ 0)), (~ (_GLF_IDENTITY(1, (1) ^ 0))) ^ (18475 & 0)))))))), (int(ivec2((_GLF_FUZZED(-3894)) | (_GLF_IDENTITY(_GLF_FUZZED(-3894), clamp(_GLF_IDENTITY(_GLF_FUZZED(-3894), min(_GLF_FUZZED(-3894), _GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_FUZZED(-3894)) | (_GLF_FUZZED(-3894)))) / 1))), _GLF_FUZZED(-3894), _GLF_FUZZED(-3894)))), (0 ^ _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) ^ 0)), (~ (_GLF_IDENTITY(1, (1) ^ 0))) ^ (18475 & 0)))))))), (int(ivec2((_GLF_FUZZED(-3894)) | (_GLF_IDENTITY(_GLF_FUZZED(-3894), clamp(_GLF_IDENTITY(_GLF_FUZZED(-3894), min(_GLF_FUZZED(-3894), _GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_FUZZED(-3894)) | (_GLF_FUZZED(-3894)))) / 1))), _GLF_FUZZED(-3894), _GLF_FUZZED(-3894)))), (0 ^ _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) ^ 0)), (~ (_GLF_IDENTITY(1, (1) ^ 0))) ^ (18475 & 0)))))))))) / 1), int(ivec2((_GLF_FUZZED(-3894)) | (_GLF_IDENTITY(_GLF_FUZZED(-3894), clamp(_GLF_IDENTITY(_GLF_FUZZED(-3894), min(_GLF_FUZZED(-3894), _GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_FUZZED(-3894)) | (_GLF_FUZZED(-3894))), (_GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_FUZZED(-3894)) | (_GLF_FUZZED(-3894)))) | (_GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_FUZZED(-3894)) | (_GLF_FUZZED(-3894)))))) / 1))), _GLF_FUZZED(-3894), _GLF_FUZZED(-3894)))), (0 ^ 1))), int(ivec2((_GLF_FUZZED(-3894)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3894), clamp(_GLF_IDENTITY(_GLF_FUZZED(-3894), min(_GLF_FUZZED(-3894), _GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_FUZZED(-3894)) | (_GLF_FUZZED(-3894)))) / 1))), _GLF_FUZZED(-3894), _GLF_FUZZED(-3894))), 0 ^ (_GLF_IDENTITY(_GLF_FUZZED(-3894), clamp(_GLF_IDENTITY(_GLF_FUZZED(-3894), min(_GLF_FUZZED(-3894), _GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_IDENTITY(_GLF_FUZZED(-3894), (_GLF_FUZZED(-3894)) | (_GLF_FUZZED(-3894)))) / 1))), _GLF_FUZZED(-3894), _GLF_FUZZED(-3894)))))), (0 ^ 1)))))))))))) : 1))]), vec2(_GLF_FUZZED(-4.5), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(426.322), (_GLF_FUZZED(426.322)) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(426.322, float(float(426.322)))), (_GLF_FUZZED(426.322)) - 0.0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(426.322), (_GLF_FUZZED(426.322)) - 0.0)) / _GLF_ONE(1.0, injectionSwitch.y), clamp((_GLF_IDENTITY(_GLF_FUZZED(426.322), (_GLF_FUZZED(426.322)) - 0.0)) / _GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_FUZZED(426.322), (_GLF_FUZZED(426.322)) - 0.0)) / _GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_FUZZED(426.322), (_GLF_FUZZED(426.322)) - 0.0)) / _GLF_ONE(1.0, injectionSwitch.y))))) * 1.0)), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), true, true, true)))))) && true)), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), true, true, true)))))) && true)), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), true, true, true)))))) && true)), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(bool(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), true, true, true)))))) && true)), false), false), true)))))))))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0)), false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)).y)))) || false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec2(false, true))) || (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || false))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, true)))))))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_3.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_struct_replacement_3.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base, _GLF_struct_replacement_3.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base), uvec2(0u, 0u) + (max(_GLF_struct_replacement_3.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base, _GLF_struct_replacement_3.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base))), (max(_GLF_struct_replacement_3.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base, _GLF_struct_replacement_3.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base)) - uvec2(0u, 0u))).y + subgroup_id * _GLF_struct_replacement_4.subgroup_size + ((_GLF_struct_replacement_3.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x + 1) % _GLF_struct_replacement_4.subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_IDENTITY(true, ! (! (true))))), (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(64, (false ? _GLF_FUZZED(67690) : 64)), 4);
 if(_GLF_struct_replacement_3.GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_base.x + _GLF_IDENTITY(1, min(1, 1)) < _GLF_struct_replacement_4.subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))
      return;
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)))), clamp(min(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)), min(next_virtual_gid, next_virtual_gid), min(next_virtual_gid, next_virtual_gid)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, uint(uint(next_virtual_gid)))) | 0u), _GLF_IDENTITY(min(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)))), clamp(min(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), next_virtual_gid), min(next_virtual_gid, next_virtual_gid), min(next_virtual_gid, next_virtual_gid))))))], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), min(_GLF_IDENTITY(uint(2), 0u ^ (uint(2))), uint(2))), (uint(2)) | _GLF_IDENTITY((uint(2)), _GLF_IDENTITY(((uint(2))) ^ 0u, (((uint(2))) ^ 0u) | 0u))), 1u, 1u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) >> 0u), min(_GLF_IDENTITY(uint(2), (uint(2)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) >> 0u), (_GLF_IDENTITY(uint(2), (uint(2)) >> 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) / 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) >> 0u), ~ (~ (_GLF_IDENTITY(uint(2), (uint(2)) >> 0u)))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, 1 * (2))), (_GLF_IDENTITY(uint(2), clamp(_GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY((uint(2)), ((uint(2))) | ((uint(2)))) | _GLF_IDENTITY((uint(2)), ((uint(2))) << (165041u & 0u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((uint(2)), ((uint(2))) | ((uint(2)))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(2)), ((uint(2))) | ((uint(2)))), (_GLF_IDENTITY((uint(2)), ((uint(2))) | (_GLF_IDENTITY((uint(2)), (true ? _GLF_IDENTITY((uint(2)), ((uint(2))) >> 0u) : _GLF_FUZZED(186818u)))))) - 0u)) + (0u & 56592u)) | _GLF_IDENTITY((uint(2)), ((uint(2))) << (165041u & 0u))))), uint(2), uint(2)))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), min(uint(2), uint(2))), max(_GLF_IDENTITY(uint(2), min(uint(2), uint(2))), _GLF_IDENTITY(uint(2), min(uint(2), uint(2))))))), clamp(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, int(int(2))), (2) ^ 0)) * 1)), _GLF_IDENTITY(uint(2), (uint(2)) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2), int(_GLF_IDENTITY(int((2)), (false ? _GLF_FUZZED(bitfieldExtract(-16564, -28399, -65066)) : int((2)))))) | (2)), max(_GLF_IDENTITY(2, (2) | (2)), _GLF_IDENTITY(2, (2) | (2))))) << (-25422 & 0))))), _GLF_IDENTITY(uint(2), (uint(2)) >> 0u)))))), 4, 64, 4);
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(14144u))), bool(false))) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(14144u))), bool(false))) > injectionSwitch.y), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(14144u))), bool(false))) > injectionSwitch.y), true)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(-483.543, -46.53) / -10.71)) : injectionSwitch)), (false ? _GLF_FUZZED(unpackHalf2x16(workgroup_size)) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(-483.543, -46.53) / -10.71)) : injectionSwitch)))) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))))).x > injectionSwitch.y, false, false, false)), false || (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, false, false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), false || (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true && _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))), ((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))), ((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) && true), false || (_GLF_IDENTITY((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))), ((bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) && true)))))))))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), min(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) && true), false, false)), false || (bool(bvec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-68.37, _GLF_IDENTITY(83.37, mix(float(_GLF_FUZZED(-74.27)), float(83.37), bool(true))))) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0), (mat4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), injectionSwitch)).y, false, false, false)))))), true, false, true)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || false)))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(182229u))), vec2(_GLF_FUZZED(9.3), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))))))), false || (_GLF_IDENTITY(! (false), true && (! (false))))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec2(_GLF_IDENTITY(vec2((injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2((injectionSwitch) * mat2(1.0))), mix(vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(2.4)), vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2((injectionSwitch) * mat2(1.0))))[0], (mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (true ? float(mat3(1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(2.1)))) : _GLF_FUZZED(3.5))), injectionSwitch.y)))) * (vec2((injectionSwitch) * mat2(1.0))))[1]), bvec2(true, true))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(_GLF_IDENTITY(vec2((injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2((injectionSwitch) * mat2(1.0))), mix(vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(2.4)), vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2((injectionSwitch) * mat2(1.0))))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2((injectionSwitch) * mat2(1.0))))[1]), bvec2(true, true))))))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(_GLF_IDENTITY(vec2((injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2((injectionSwitch) * mat2(1.0))), mix(vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(2.4)), vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2((injectionSwitch) * mat2(1.0))))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2((injectionSwitch) * mat2(1.0))))[1]), bvec2(true, true)))))))), (true ? mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(_GLF_IDENTITY(vec2((injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2((injectionSwitch) * mat2(1.0))), mix(vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(2.4)), vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2((injectionSwitch) * mat2(1.0))))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2((injectionSwitch) * mat2(1.0))))[1]), bvec2(true, true)))))))) : _GLF_FUZZED(vec2(4708.4108, 5.3))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2((injectionSwitch) * mat2(1.0))), mix(vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(2.4)), vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2((injectionSwitch) * mat2(1.0))))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2((injectionSwitch) * mat2(1.0))))[1]), bvec2(true, true)))), clamp(_GLF_IDENTITY(vec2((injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2((injectionSwitch) * mat2(1.0))), mix(vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(2.4)), vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2((injectionSwitch) * mat2(1.0))))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2((injectionSwitch) * mat2(1.0))))[1]), bvec2(true, true)))), _GLF_IDENTITY(vec2((injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2((injectionSwitch) * mat2(1.0))), mix(vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(2.4)), vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2((injectionSwitch) * mat2(1.0))))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2((injectionSwitch) * mat2(1.0))))[1]), bvec2(true, true)))), _GLF_IDENTITY(vec2((injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2((injectionSwitch) * mat2(1.0))), mix(vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(2.4)), vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2((injectionSwitch) * mat2(1.0))))[0], (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2((injectionSwitch) * mat2(1.0))))[1]), bvec2(true, true))))))))))).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY((bool(bvec2(false, true))), false || (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))))))), ! (_GLF_IDENTITY(! ((bool(bvec2(false, true)))), (! ((bool(bvec2(false, true))))) || false))))) || false))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), true), false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))) && true))))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            return;
           barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
    }
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0))), injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bool(false || (false))), bool(bvec4(bool(bool(false || (false))), false, true, true)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-99.04), _GLF_FUZZED(-1988.6672)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0))), (injectionSwitch)[1]), bvec2(true, true))), vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0))), injectionSwitch, injectionSwitch)).y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, false)))), true, true)), bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) && true), true), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(! (! (true)), bool(bvec3(! (! (true)), true, true))))))), true)), bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true, true))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))))))))), false)))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true) || (true))))))), false || (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8127.6394) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3998.1912)), float(injectionSwitch.x), bool(true))))), (injectionSwitch.x) - 0.0) > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))), true, true, true)))), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, false)))), true, true)), bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) && true), true), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(! (! (true)), bool(bvec3(! (! (true)), true, true))))))), true)), bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true, true))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))))))))), false)))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true) || (true))))))), false || (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8127.6394) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3998.1912)), float(injectionSwitch.x), bool(true))))), (injectionSwitch.x) - 0.0) > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))), true, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false)), _GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))))), false), bvec3(bvec4(bvec3(true, _GLF_IDENTITY(false, ! (! (false))), false), true))))), false)))), (bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec4(bvec3(true, _GLF_IDENTITY(false, ! (! (false))), false), true))))), false))))) || false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (false))))))), (! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, (false) || false))))))))) || false))))) || (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec3(-1.0, 8.7, 91.78).x)), bool(false))) > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
}
