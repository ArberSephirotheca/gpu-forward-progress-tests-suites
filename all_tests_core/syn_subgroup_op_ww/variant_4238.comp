#version 460
struct _GLF_struct_3 {
 bool _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_4 {
 uvec3 _f0;
 _GLF_struct_3 _f1;
 mat4x2 _f2;
 ivec2 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_1 {
 vec3 _f0;
 uvec3 _f1;
 ivec2 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 uint workgroup_id;
 ivec3 _f1;
 float _f2;
 mat2x3 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_5 {
 uint _f0;
 _GLF_struct_2 _f1;
 mat2x3 _f2;
 _GLF_struct_4 _f3;
 bvec2 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.y = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(1u, _GLF_struct_2(_GLF_struct_0(bvec3(true), gl_WorkGroupID.x, ivec3(1), 1.0, mat2x3(1.0), bvec2(true)), _GLF_struct_1(vec3(1.0), uvec3(1u), ivec2(1), uvec3(1u))), mat2x3(1.0), _GLF_struct_4(uvec3(1u), _GLF_struct_3(true, mat3x4(1.0)), mat4x2(1.0), ivec2(1), ivec3(1)), bvec2(true));
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_5._f1._f0.workgroup_id;
 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z = workgroup_base;
 uint subgroup_base = GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.y * subgroup_size;
 uint virtual_gid = GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.z + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.x = next_virtual_gid;
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   subgroupAll(true);
   atomicStore(buf[GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.x], uint(2), 4, 64, 4);
  }
 else
  {
   subgroupAll(false);
   atomicStore(buf[GLF_merged3_0_1_16_1_1_11_2_1_14next_virtual_gidsubgroup_idworkgroup_base.x], uint(2), 4, 64, 4);
  }
}
