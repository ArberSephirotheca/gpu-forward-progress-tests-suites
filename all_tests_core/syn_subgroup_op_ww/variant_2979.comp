#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u | ((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, (0u ^ 1u)))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, (0u ^ 1u)))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec3((_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, (0u ^ 1u)))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u, 1u))), (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), ~ (_GLF_IDENTITY(~ ((gl_WorkGroupSize.x)), uint(uvec4(~ ((gl_WorkGroupSize.x)), 1u, 0u, (0u ^ 1u)))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u)) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat2x3(mat4x3(mat2x3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), 0.0)), injectionSwitch.x)), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0u), 0u, 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))))))))) | ((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) | 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) | ((gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uint((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | ((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))) : _GLF_FUZZED(subgroup_size))));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0))), determinant(mat3(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0))), determinant(mat3(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat3(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)))), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(51.56))), 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0))), determinant(mat3(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0))), determinant(mat3(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat3(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)))), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(51.56))), 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0)))))) * mat2(1.0), vec2(_GLF_IDENTITY(mat3((vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0))), determinant(mat3(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0))), determinant(mat3(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat3(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)))), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(51.56))), 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0)))))) * mat2(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3((vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0))), determinant(mat3(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0))), determinant(mat3(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, log(1.0), 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat3(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)))), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(51.56))), 1.0, 0.0, 1.0, 0.0, 0.0))), 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0)))))) * mat2(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))).x > injectionSwitch.y, false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false))))), false || (_GLF_DEAD(false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, _GLF_IDENTITY(64, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(64, (64) | (64))), ((_GLF_IDENTITY(64, (64) | (64)))) >> 0)), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(139.779)), vec2(_GLF_FUZZED(8850.3922), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(subgroup_local_id + _GLF_IDENTITY(1, (1) << 0) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, 0 ^ (2)), 2))), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   switch(_GLF_SWITCH((1 ^ _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), clamp(0 | (1), _GLF_IDENTITY(0 | (1), ~ (~ (0 | (1)))), 0 | (1)))))))
    {
     case 29:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) || false)))))
      barrier();
     ivec4 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, false, true))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, false, true))))), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, false, true))))), false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, false, true)))) && _GLF_IDENTITY(true, ! (! (true)))))), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, false, true))))), false))), true, true)))))))) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(-15.54, 530.153) * (+ mat2(-4121.4001, -8.0, 2.6, 451.187)))))).y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 87:
     {
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       return;
      if(true)
       {
        if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) && true)))
         return;
        while(true)
         {
          float _GLF_SWITCH_0_2v[8];
          if(_GLF_DEAD(false))
           break;
          if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))), bool(bool(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))))))))), (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(mat4((injectionSwitch), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))) || false)))))) && true))
           barrier();
          uvec2 _GLF_SWITCH_0_3v[11], _GLF_SWITCH_0_4v[83], _GLF_SWITCH_0_5v[70];
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))))))
           barrier();
          ivec4 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v;
          if(_GLF_DEAD(false))
           barrier();
          mat4x3 _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v;
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             continue;
            break;
           }
          mat3x4(vec4(-8.2, _GLF_IDENTITY(2.4, float(mat3x2(2.4, 0.0, log(1.0), 1.0, 0.0, 0.0))), -9976.8727, -725.293), vec4(-9394.5465, -68.90, 40.13, 75.79), vec4(-1242.1180, _GLF_IDENTITY(-9.1, mix(float(-9.1), float(_GLF_FUZZED(82.68)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 75.85, -332.981));
          if(_GLF_DEAD(false))
           continue;
          mat4x3(-2.6, 819.328, 5844.2132, -444.403, -55.03, 2.7, -59.54, 19.78, -6.8, _GLF_IDENTITY(3.0, mix(float(_GLF_FUZZED(-221.966)), float(3.0), bool(_GLF_IDENTITY(true, ! (! (true)))))), -549.301, 838.543);
          vec2(4896.2766, _GLF_IDENTITY(2.3, (2.3) / 1.0));
          bvec3(false, bvec2(false, true));
          if(_GLF_DEAD(false))
           break;
         }
        transpose(mat4x3(-752.021, 7503.6180, -674.613, -522.519, -5.6, -87.28, 3.5, -2.7, -6280.9096, 137.065, -8.1, 38.77));
        vec2 _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v;
        if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
         return;
        mat4x3 _GLF_SWITCH_0_14v[60];
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         return;
        if(_GLF_DEAD(false))
         barrier();
        vec3(6.2, 90.45, _GLF_IDENTITY(3.3, max(3.3, 3.3)));
       }
      for(uvec2 _GLF_SWITCH_0_15v[94]; (_GLF_IDENTITY(_GLF_IDENTITY(-44929, (-44929) * 1), min(_GLF_IDENTITY(-44929, (-44929) * 1), _GLF_IDENTITY(-44929, (-44929) * 1))) < -11997); dot(vec3(-5.4, 5593.9166, 350.024), vec3(_GLF_IDENTITY(-9364.4774, (false ? _GLF_FUZZED(asin(-65.70)) : -9364.4774)), _GLF_IDENTITY(9254.1683, clamp(9254.1683, _GLF_IDENTITY(9254.1683, mix(float(_GLF_FUZZED(-9.9)), float(9254.1683), bool(true))), _GLF_IDENTITY(9254.1683, _GLF_IDENTITY(min(9254.1683, 9254.1683), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(min(9254.1683, 9254.1683), (min(9254.1683, 9254.1683)) * 1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0)), 0.0 + (float(mat3x4(_GLF_IDENTITY(min(9254.1683, 9254.1683), (min(9254.1683, 9254.1683)) * 1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0)))))))), 70.12)))
       {
       }
     }
     case 0:
     case 69:
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 90:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 6:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))))
      return;
     case 71:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))) && true))
        barrier();
       return;
      }
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
     case 18:
     case 76:
     case 60:
     subgroupAll(_GLF_IDENTITY(true, false || (true)));
     break;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1440.5480))) > injectionSwitch.y))))
      return;
     case 50:
     uvec2 _GLF_SWITCH_0_16v;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 55:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false), true, true)))))), false)), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false), true, true)))))), false)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false), true, true)))))), false)), true, true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false), true, true)))))), false)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), false), true, true)))))), false)), true, true)))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     while((mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(2715.3594, _GLF_IDENTITY((false ? _GLF_FUZZED(float(false)) : 2715.3594), ((false ? _GLF_FUZZED(float(false)) : 2715.3594)) / 1.0)), clamp(_GLF_IDENTITY(2715.3594, mix(float(_GLF_FUZZED(-7.2)), float(2715.3594), bool(true))), _GLF_IDENTITY(2715.3594, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (true)) ? 2715.3594 : _GLF_FUZZED(4.3))), 2715.3594)), -6.8, 28.90, 6647.9008, 368.781, -5366.5646, -2.9, 7.0) != mat4x2(-2.8, -41.39, _GLF_IDENTITY(818.883, (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), false || (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))))) ? _GLF_IDENTITY(818.883, 1.0 * (818.883)) : _GLF_FUZZED(sin(-63.16)))), 3852.6477, -5.7, -4.7, 235.903, _GLF_IDENTITY(-418.146, (_GLF_IDENTITY(-418.146, (false ? _GLF_FUZZED(1.9) : -418.146))) * 1.0))))
      {
       if(true)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)))
          barrier();
         -10.09;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         if(false)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false)))
              barrier();
             break;
            }
           ivec4 _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           mat4x3(vec3(878.686, -4.0, -83.74), vec3(_GLF_IDENTITY(9.6, min(9.6, _GLF_IDENTITY(9.6, _GLF_IDENTITY(float(vec4(9.6, 1.0, 0.0, 0.0)), max(float(vec4(9.6, 1.0, 0.0, 0.0)), float(vec4(9.6, 1.0, 0.0, 0.0))))))), 9.9, -603.612), vec3(9.2, -3.8, -76.57), vec3(62.51, -1.8, -9.7));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           atomicExchange(workgroup_base, num_workgroup);
           (_GLF_SWITCH_0_0v + _GLF_SWITCH_0_18v);
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
                return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
            barrier();
           vec2(-836.762, -2.4);
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             break;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             barrier();
            }
           mat4x3(680.182, -4123.7352, -5.6, -342.631, 5720.3082, -1.2, -9.6, -6.9, 5692.6432, -7.5, -98.27, 4.0);
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               continue;
              }
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))) || false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           bvec2(true, false);
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         while(false)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, exp(0.0), 1.0, tan(0.0), 0.0, abs(0.0), 0.0, 1.0))).x > injectionSwitch.y))))
            break;
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            barrier();
           mat3x4 _GLF_SWITCH_0_19v[36], _GLF_SWITCH_0_20v;
           bvec2 _GLF_SWITCH_0_21v[15], _GLF_SWITCH_0_22v;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         mat3x4(1.4, 3604.5953, 52.36, 8.1, _GLF_IDENTITY(-519.948, (-519.948) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(0.7))), _GLF_IDENTITY(-2.3, float(_GLF_IDENTITY(mat4x3(-2.3, 1.0, 1.0, 0.0, exp(0.0), exp(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat4x3(-2.3, 1.0, 1.0, 0.0, exp(0.0), exp(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))), -6.4, -32.88, -3.7, _GLF_IDENTITY(-69.08, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(72.32), min(_GLF_IDENTITY(_GLF_FUZZED(72.32), mix(float(_GLF_FUZZED(-9.9)), float(_GLF_FUZZED(72.32)), bool(true))), _GLF_FUZZED(72.32)))), max(float(_GLF_IDENTITY(_GLF_FUZZED(72.32), min(_GLF_FUZZED(72.32), _GLF_FUZZED(72.32)))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(72.32), min(_GLF_FUZZED(72.32), _GLF_FUZZED(72.32)))), mix(float(_GLF_FUZZED(908.886)), float(float(_GLF_IDENTITY(_GLF_FUZZED(72.32), min(_GLF_FUZZED(72.32), _GLF_FUZZED(72.32))))), bool(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), (! (_GLF_IDENTITY(true, false || (true)))) || false))))))))))), float(-69.08), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (true ? vec2(injectionSwitch.y, 1.0) : _GLF_FUZZED(vec2(5.7, 76.66))))), (true ? float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 1.0), (true ? vec2(injectionSwitch.y, 1.0) : _GLF_FUZZED(vec2(5.7, 76.66))))) : _GLF_FUZZED(-7.0))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (true ? vec2(injectionSwitch.y, 1.0) : _GLF_FUZZED(vec2(5.7, 76.66))))), (true ? float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 1.0), (true ? vec2(injectionSwitch.y, 1.0) : _GLF_FUZZED(vec2(5.7, 76.66))))) : _GLF_FUZZED(-7.0)))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (true ? vec2(injectionSwitch.y, 1.0) : _GLF_FUZZED(vec2(5.7, 76.66))))), (true ? float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 1.0), (true ? vec2(injectionSwitch.y, 1.0) : _GLF_FUZZED(vec2(5.7, 76.66))))) : _GLF_FUZZED(-7.0))))))) && true)), (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (true ? vec2(injectionSwitch.y, 1.0) : _GLF_FUZZED(vec2(5.7, 76.66))))), (true ? float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))) * (injectionSwitch)).y, 1.0), (true ? vec2(injectionSwitch.y, 1.0) : _GLF_FUZZED(vec2(5.7, 76.66))))) : _GLF_FUZZED(-7.0))))))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (true ? vec2(injectionSwitch.y, 1.0) : _GLF_FUZZED(_GLF_IDENTITY(vec2(5.7, 76.66), max(vec2(5.7, 76.66), _GLF_IDENTITY(vec2(5.7, 76.66), max(vec2(5.7, 76.66), vec2(5.7, 76.66))))))))), (true ? float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 1.0), (true ? vec2(injectionSwitch.y, 1.0) : _GLF_FUZZED(vec2(5.7, 76.66))))) : _GLF_FUZZED(_GLF_IDENTITY(-7.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(-7.0, float(mat3(-7.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(1.0), 0.0, 0.0, 0.0)), min(float(mat4(_GLF_IDENTITY(-7.0, float(mat3(-7.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(1.0), 0.0, 0.0, 0.0)), float(mat4(_GLF_IDENTITY(-7.0, float(mat3(-7.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(1.0), 0.0, 0.0, 0.0)))))))))))))))) || false)))))), _GLF_IDENTITY(-5.9, clamp(-5.9, -5.9, -5.9)));
         {
          if(_GLF_DEAD(false))
           {
            if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, true)), bool(bvec3(bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, true)), true, true))))))
             barrier();
            return;
           }
          (mat4x2(1.4, _GLF_IDENTITY(6520.7166, clamp(6520.7166, _GLF_IDENTITY(6520.7166, (6520.7166) - 0.0), 6520.7166)), -8911.2095, -363.711, -428.026, 630.231, 5712.2317, -765.837) + (mat4x2(_GLF_IDENTITY(99.48, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(99.48, float(_GLF_IDENTITY(mat2(99.48, 0.0, 0.0, 0.0), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)) ? _GLF_IDENTITY(_GLF_FUZZED(mat2(3756.6420, -7.8, -64.44, -8.8)), mat2(_GLF_IDENTITY(mat3(_GLF_FUZZED(mat2(3756.6420, -7.8, -64.44, -8.8))), mat3(_GLF_IDENTITY(mat4(mat3(_GLF_FUZZED(mat2(3756.6420, -7.8, -64.44, -8.8)))), transpose(transpose(mat4(mat3(_GLF_FUZZED(mat2(3756.6420, -7.8, -64.44, -8.8))))))))))) : mat2(99.48, 0.0, 0.0, 0.0))))), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-908.597) : _GLF_IDENTITY(_GLF_IDENTITY(99.48, float(_GLF_IDENTITY(mat2(99.48, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat2(3756.6420, -7.8, -64.44, -8.8), mat2(mat2x3(mat2(3756.6420, -7.8, -64.44, -8.8))))) : mat2(99.48, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(99.48, float(_GLF_IDENTITY(mat2(99.48, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(mat2(3756.6420, -7.8, -64.44, -8.8), (false ? _GLF_FUZZED(mat2(-185.601, 57.82, 5462.1024, 3.9)) : mat2(3756.6420, -7.8, -64.44, -8.8))), _GLF_IDENTITY(mat2(mat2x3(mat2(3756.6420, -7.8, -64.44, -8.8))), (true ? mat2(mat2x3(mat2(3756.6420, -7.8, -64.44, -8.8))) : _GLF_FUZZED(mat2(-255.656, -996.398, -9.5, -8.6)))))) : mat2(99.48, 0.0, 0.0, 0.0)))))) + _GLF_IDENTITY(dot(vec2(0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec2(1.0, 1.0)), dot(vec2(0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec2(1.0, 1.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(99.48, float(_GLF_IDENTITY(mat2(99.48, 0.0, 0.0, 0.0), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)) ? _GLF_IDENTITY(_GLF_FUZZED(mat2(3756.6420, -7.8, -64.44, -8.8)), mat2(_GLF_IDENTITY(mat3(_GLF_FUZZED(mat2(3756.6420, _GLF_IDENTITY(-7.8, mix(float(_GLF_FUZZED(-573.903)), float(-7.8), bool(true))), -64.44, -8.8))), mat3(_GLF_IDENTITY(mat4(mat3(_GLF_FUZZED(mat2(3756.6420, -7.8, -64.44, -8.8)))), transpose(transpose(mat4(mat3(_GLF_FUZZED(mat2(3756.6420, -7.8, -64.44, -8.8))))))))))) : mat2(99.48, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0))))), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-908.597, float(mat2x4(_GLF_IDENTITY(-908.597, (true ? _GLF_IDENTITY(-908.597, (-908.597) - 0.0) : _GLF_FUZZED(18.92))), 0.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 0.0)))) : _GLF_IDENTITY(_GLF_IDENTITY(99.48, float(_GLF_IDENTITY(mat2(99.48, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(mat2(3756.6420, -7.8, -64.44, -8.8), mat2(mat2x3(mat2(3756.6420, -7.8, -64.44, -8.8))))) : mat2(99.48, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(99.48, float(_GLF_IDENTITY(mat2(99.48, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(mat2(3756.6420, -7.8, -64.44, -8.8), (false ? _GLF_FUZZED(mat2(-185.601, 57.82, 5462.1024, 3.9)) : mat2(3756.6420, -7.8, -64.44, -8.8))), _GLF_IDENTITY(mat2(mat2x3(mat2(3756.6420, -7.8, -64.44, -8.8))), (true ? mat2(mat2x3(mat2(3756.6420, -7.8, -64.44, -8.8))) : _GLF_FUZZED(mat2(-255.656, _GLF_IDENTITY(-996.398, clamp(-996.398, -996.398, -996.398)), -9.5, -8.6)))))) : mat2(99.48, 0.0, 0.0, 0.0)))))) + _GLF_IDENTITY(dot(vec2(0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec2(1.0, 1.0)), dot(vec2(0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), vec2(1.0, 1.0))))))) - 0.0), 99.48, 99.48)), -2.9, 4.4, -0.1, -9.9, -4025.8087, -767.145, -0.5) * mat4(-788.465, -5351.3827, _GLF_IDENTITY(-1494.4129, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 0.0, cos(0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0), vec2(0.0, 1.0)), dot(vec2(determinant(mat4(1.0, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) * 1.0) : _GLF_FUZZED(77.49))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec2(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) + sqrt(vec2(0.0, 0.0)))))))), (_GLF_IDENTITY(dot(vec2(determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(determinant(mat4(1.0, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) * 1.0) : _GLF_FUZZED(77.49))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(8277.0364) : determinant(mat4(1.0, 1.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) * 1.0) : _GLF_FUZZED(77.49))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))) - 0.0))))), 0.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec2(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) + sqrt(vec2(0.0, 0.0))))))))) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.0) : 0.0)), 0.0)), 1.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-5.9, mix(float(_GLF_FUZZED(253.915)), float(-5.9), bool(true))))), float(float(mat2x4(0.0, 0.0, cos(0.0), 1.0, _GLF_IDENTITY(dot(vec2(determinant(mat4(1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0), vec2(0.0, 1.0)), dot(vec2(determinant(mat4(1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))))), _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(sqrt(0.0), 1.0), vec2(0.0, 1.0)), dot(vec2(sqrt(0.0), 1.0), vec2(0.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0), vec2(0.0, 1.0))), 1.0, 0.0, 1.0))), bool(true)))) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(-1494.4129, min(-1494.4129, -1494.4129)), sqrt(1.0) * (_GLF_IDENTITY(-1494.4129, min(-1494.4129, -1494.4129))))), (_GLF_IDENTITY((_GLF_IDENTITY(-1494.4129, min(-1494.4129, -1494.4129))), clamp((_GLF_IDENTITY(-1494.4129, min(-1494.4129, -1494.4129))), _GLF_IDENTITY((_GLF_IDENTITY(-1494.4129, min(-1494.4129, -1494.4129))), 0.0 + ((_GLF_IDENTITY(-1494.4129, min(-1494.4129, -1494.4129))))), (_GLF_IDENTITY(-1494.4129, min(-1494.4129, -1494.4129)))))) / 1.0)), 24.97, -0.1, -38.96, -8.3, 4487.6962, -8806.5686, -1.3, -1493.3317, 1.1, 87.75, -1.0, 410.103, -2.6)));
          mat2x3(2.4, 7199.3454, -6.3, -64.54, -9.0, -1.9);
          uvec4 _GLF_SWITCH_0_23v[67], _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
             break;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) || false))
             barrier();
            barrier();
            if(_GLF_DEAD(false))
             return;
           }
          if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
           return;
          if(_GLF_DEAD(false))
           barrier();
          mat2x4(2.4, 7.2, 9.7, 6.2, 2044.9625, _GLF_IDENTITY(9711.3349, min(9711.3349, 9711.3349)), _GLF_IDENTITY(-28.90, min(-28.90, -28.90)), -975.126);
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bool(false)))))), (bool(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bool(false))))))) || false))))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            return;
           }
          -46423;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
              barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
         }
         if(false)
          {
           if(_GLF_DEAD(false))
            barrier();
           mat4x3 _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v[93], _GLF_SWITCH_0_28v;
           uint _GLF_SWITCH_0_29v;
           uvec2 _GLF_SWITCH_0_30v;
          }
         else
          {
           ivec4 _GLF_SWITCH_0_31v[61], _GLF_SWITCH_0_32v;
           _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec2(bvec4(bvec2(true, true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))));
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))))))))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              break;
             continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
              break;
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           greaterThan(uvec4(174478u, 47076u, 51525u, 55069u), uvec4(_GLF_IDENTITY(112591u, 0u + (112591u)), 38691u, 14134u, 81291u));
           uint _GLF_SWITCH_0_33v[53], _GLF_SWITCH_0_34v, _GLF_SWITCH_0_35v;
           if(_GLF_DEAD(false))
            barrier();
           -67758;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))
            barrier();
          }
         mat3x2(-2974.1099, 559.719, 8.4, -836.782, -8.4, 401.286);
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false)))))))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             break;
            }
           continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, false || (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y) && true)))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), true && (bool(false)))))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         _GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)));
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          break;
         {
          uvec2 _GLF_SWITCH_0_36v, _GLF_SWITCH_0_37v[50];
          if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
           {
            if(_GLF_DEAD(false))
             barrier();
            return;
           }
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             return;
            barrier();
            if(_GLF_DEAD(false))
             barrier();
           }
          mat2x3(72.53, 5303.7872, 811.765, -5.2, -5216.5219, 88.05);
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           return;
          90699;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bool(true)))))))) && (false))))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              barrier();
             }
            continue;
           }
          float _GLF_SWITCH_0_38v, _GLF_SWITCH_0_39v[83];
          if(_GLF_DEAD(false))
           break;
          if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
           {
            if(_GLF_DEAD(false))
             barrier();
            continue;
           }
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          (mat3x4(-45.12, -8582.1661, -4923.5421, -726.813, 74.95, -460.129, _GLF_IDENTITY(-2.7, mix(float(-2.7), float(_GLF_FUZZED(6.0)), bool(false))), 173.986, -6.9, 68.56, -8.4, -5.9) + mat3x4(0.0, -7.3, _GLF_IDENTITY(1.1, float(mat3x2(1.1, 0.0, 1.0, 1.0, 1.0, cos(0.0)))), -82.35, 1.3, 98.37, 3.7, 586.502, -2.6, 20.92, -2522.5887, 906.073));
          if(_GLF_DEAD(false))
           barrier();
          ivec2 _GLF_SWITCH_0_40v, _GLF_SWITCH_0_41v;
          workgroup_id;
          _GLF_SWITCH_0_38v;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           break;
         }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
       while((_GLF_IDENTITY(mat3(mat2(491.581, 5.0, 3598.0721, 6821.5318)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(mat3(mat2(491.581, 5.0, 3598.0721, 6821.5318)), (mat3(mat2(491.581, 5.0, 3598.0721, 6821.5318))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))) : _GLF_FUZZED(_GLF_IDENTITY(mat3(93.03, 1.6, 568.648, -122.666, -46.36, 770.494, -44.57, _GLF_IDENTITY(8.2, min(8.2, _GLF_IDENTITY(8.2, max(8.2, _GLF_IDENTITY(8.2, (8.2) + 0.0))))), 9.3), transpose(transpose(mat3(93.03, 1.6, 568.648, -122.666, -46.36, 770.494, -44.57, _GLF_IDENTITY(8.2, min(8.2, _GLF_IDENTITY(8.2, max(8.2, _GLF_IDENTITY(8.2, (8.2) + 0.0))))), 9.3))))))) != mat3(-90.62, 3837.5514, 255.391, 972.482, -63.04, 9.7, -5.3, -5715.2695, _GLF_IDENTITY(_GLF_IDENTITY(960.854, (960.854) / 1.0), max(_GLF_IDENTITY(960.854, mix(float(960.854), float(_GLF_FUZZED(-6.4)), bool(false))), _GLF_IDENTITY(960.854, (_GLF_IDENTITY(960.854, float(vec2(960.854, 1.0)))) - 0.0))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            continue;
           break;
          }
         if(_GLF_DEAD(false))
          return;
         uvec3 _GLF_SWITCH_0_42v, _GLF_SWITCH_0_43v;
         if(_GLF_DEAD(false))
          return;
         min(_GLF_IDENTITY(_GLF_SWITCH_0_43v, min(_GLF_SWITCH_0_43v, _GLF_SWITCH_0_43v)), subgroup_id);
         {
          if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(518.544), _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(232.912)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), clamp(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(518.544), (injectionSwitch)[1]), min(_GLF_IDENTITY(vec2(_GLF_FUZZED(518.544), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(518.544), (injectionSwitch)[1])) / vec2(1.0, 1.0)), vec2(_GLF_FUZZED(518.544), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(232.912)), bvec2(true, false)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(518.544), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-360.533)), float((injectionSwitch)[1]), bool(true))), (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(0.9)), bool(false)))))), vec2((injectionSwitch)[0], _GLF_FUZZED(232.912)), bvec2(true, false)))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(518.544), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(232.912)), (vec2((injectionSwitch)[0], _GLF_FUZZED(232.912))) * mat2(1.0)), bvec2(true, false))))))).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))))))
           return;
          uvec4(42655u, 26558u, 129290u, 111806u);
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          mat4x3(mat2(59.74, 56.82, _GLF_IDENTITY(-645.009, _GLF_IDENTITY(float(mat3x2(-645.009, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(10.88)), float(0.0), bool(true))), 0.0, 0.0)), 1.0, 1.0, 0.0), _GLF_IDENTITY(mat3(mat4(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(10.88)), float(0.0), bool(true))), 0.0, 0.0)), 1.0, 1.0, 0.0), transpose(transpose(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(10.88)), float(0.0), bool(true))), 0.0, 0.0)), 1.0, 1.0, 0.0)))))), (mat3(mat4(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(10.88)), float(0.0), bool(true))), 0.0, 0.0)), 1.0, 1.0, 0.0), transpose(transpose(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(10.88)), float(0.0), bool(true))), 0.0, 0.0)), 1.0, 1.0, 0.0))))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), min(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(88.15))), 1.0)), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), length(vec3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0), 0.0)), 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0))), 0.0)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-3696.3007) : _GLF_IDENTITY(float(mat3x2(-645.009, 1.0, 0.0, 0.0, determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-921.312)), bool(false))), 1.0, 1.0, 0.0, sin(0.0), round(length(normalize(vec2(1.0, 1.0)))), length(vec2(0.0, 0.0)), tan(abs(0.0))))), 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) * 1.0), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x), cos(0.0)), mat3(mat4(mat3(1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, sin(0.0), round(length(normalize(vec2(1.0, 1.0)))), length(vec2(0.0, 0.0)), tan(abs(0.0))))), 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) * 1.0), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0), (0.0) - 0.0), injectionSwitch.x), cos(0.0)))))), 0.0)), max(float(mat3x2(-645.009, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0))), 0.0)), float(mat3x2(_GLF_IDENTITY(-645.009, min(-645.009, -645.009)), 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0)), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))))), 0.0))))))), 78.55));
          if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true)))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, false, true))))), true))))), bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, false || ((false) || false))))))), true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), true, false, true)), bool(bool(bool(bvec4(! (true), true, false, true))))))), bool(bvec2((_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), true, false, true)), bool(bool(bool(bvec4(! (true), true, false, true))))))), true)))), true))))), bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, false || ((false) || false))))))), true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), true, false, true)), bool(bool(bool(bvec4(! (true), true, false, true))))))), bool(bvec2((_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), true, false, true)), bool(bool(bool(bvec4(! (true), true, false, true))))))), true)))), true))))), ((! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, false || ((false) || false))))))), true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), true, false, true)), bool(bool(bool(bvec4(! (true), true, false, true))))))), bool(bvec2((_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), true, false, true)), bool(bool(bool(bvec4(! (true), true, false, true))))))), true)))), true)))))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false))) || false))))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                return;
               }
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
            continue;
           }
          _GLF_IDENTITY(_GLF_SWITCH_0_16v, uvec2(uvec2(_GLF_SWITCH_0_16v)));
          if(_GLF_DEAD(false))
           return;
         }
         matrixCompMult((_GLF_IDENTITY(mat2x4(-9.2, 29.49, -497.644, -9.6, 39.58, 4.7, -57.64, -44.17) * mat4x2(-6757.8408, -8.8, -1.5, 30.19, 4.3, -5.0, 3837.2443, -1.4), (mat2x4(-9.2, _GLF_IDENTITY(29.49, clamp(29.49, 29.49, 29.49)), -497.644, -9.6, 39.58, 4.7, -57.64, -44.17) * mat4x2(_GLF_IDENTITY(-6757.8408, float(vec2(_GLF_IDENTITY(-6757.8408, cos(0.0) * (_GLF_IDENTITY(-6757.8408, min(-6757.8408, -6757.8408)))), 1.0))), -8.8, -1.5, 30.19, 4.3, -5.0, _GLF_IDENTITY(3837.2443, (3837.2443) / exp(0.0)), -1.4)) + _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(mat4(-70.26, 3.0, -8.0, -68.66, -6.3, -766.162, 555.492, 594.011, 5.8, _GLF_IDENTITY(78.89, (true ? _GLF_IDENTITY(_GLF_IDENTITY(78.89, mix(float(_GLF_FUZZED(-661.527)), float(78.89), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(78.89, mix(float(_GLF_FUZZED(-661.527)), float(78.89), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(78.89, mix(float(_GLF_FUZZED(-661.527)), float(78.89), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) : _GLF_FUZZED(-1810.3373))), -15.43, -960.821, 4.9, 8956.8669, -3.0, -258.912), (true ? mat4(-70.26, 3.0, -8.0, -68.66, -6.3, -766.162, 555.492, 594.011, 5.8, _GLF_IDENTITY(78.89, (true ? 78.89 : _GLF_FUZZED(min(distance(-6.7, 23.14), -7.5)))), _GLF_IDENTITY(_GLF_IDENTITY(-15.43, clamp(-15.43, -15.43, -15.43)), min(_GLF_IDENTITY(-15.43, clamp(-15.43, -15.43, -15.43)), _GLF_IDENTITY(-15.43, clamp(-15.43, -15.43, -15.43)))), -960.821, 4.9, 8956.8669, -3.0, -258.912) : _GLF_FUZZED(mat4(-5.4, 2444.8254, 5.3, -82.45, -7.9, 0.8, 7.3, 9587.8076, _GLF_IDENTITY(-4.2, float(mat2x3(-4.2, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0, 1.0))), 4.1, 9333.1389, 2.5, -22.06, -8196.4314, -199.586, -2833.2506)))));
         ;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), bvec3(bvec3(bvec3(bvec3(false, false, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           continue;
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         vec4 _GLF_SWITCH_0_44v[11], _GLF_SWITCH_0_45v, _GLF_SWITCH_0_46v;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          barrier();
         {
          mat2x3 _GLF_SWITCH_0_47v[8], _GLF_SWITCH_0_48v[24], _GLF_SWITCH_0_49v;
          (- mat4x2(mat2(-2267.9290, 5.2, 4120.3347, 3.4)));
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           barrier();
          mat3x4 _GLF_SWITCH_0_50v, _GLF_SWITCH_0_51v[87];
          uvec4 _GLF_SWITCH_0_52v[71], _GLF_SWITCH_0_53v[30], _GLF_SWITCH_0_54v;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(false))
           return;
         }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec2(bool(bool(_GLF_DEAD(false))), true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     default:
     1;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
