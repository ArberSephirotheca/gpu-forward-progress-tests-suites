#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_16 {
 float _f0;
 mat4x2 _f1;
 int _f2;
 mat4 _f3;
 mat4x2 _f4;
 mat3x4 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_15 {
 vec2 _f0;
 vec2 _f1;
 bool _f2;
 uvec4 _f3;
 mat4x2 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_14 {
 vec4 _f0;
} ;

struct _GLF_struct_13 {
 vec3 _f0;
 int _f1;
 mat4x3 _f2;
 uvec3 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_17 {
 mat4x2 _f0;
 _GLF_struct_13 _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_15 _f3;
 mat3x2 _f4;
 _GLF_struct_16 _f5;
} ;

struct _GLF_struct_11 {
 mat3 _f0;
 float _f1;
 uvec2 _f2;
 bvec3 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_12 {
 _GLF_struct_11 _f0;
} ;

struct _GLF_struct_10 {
 mat4x2 _f0;
} ;

struct _GLF_struct_18 {
 _GLF_struct_10 _f0;
 _GLF_struct_12 _f1;
 uint _f2;
 uint workgroup_base;
 uvec2 _f3;
 _GLF_struct_17 _f4;
} ;

struct _GLF_struct_7 {
 mat3x2 _f0;
 mat3x4 _f1;
 bvec4 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_6 {
 uvec3 _f0;
} ;

struct _GLF_struct_5 {
 mat2x4 _f0;
 uint _f1;
} ;

struct _GLF_struct_4 {
 bvec3 _f0;
 uvec2 _f1;
 mat2x4 _f2;
 int _f3;
 bool _f4;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 vec4 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_6 _f4;
 _GLF_struct_7 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_2 {
 bvec2 _f0;
 ivec3 _f1;
 vec3 _f2;
 bool _f3;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
 mat2x3 _f1;
 vec4 _f2;
 mat2x3 _f3;
 mat2x4 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_9 {
 uvec3 _f0;
 _GLF_struct_3 _f1;
 mat4 _f2;
 mat4x3 _f3;
 _GLF_struct_8 _f4;
 uint subgroup_local_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, abs(1.0)), mat3(1.0) * (mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 1.0, abs(1.0)))))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(-2451.2681)))) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false)) || false)), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, false, true))), true, false, true))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 0.0, cos(0.0), 0.0, 1.0, 0.0))), 1.0)), 0.0), mat4x2(mat4x3(mat4x2(injectionSwitch, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-52.02)), _GLF_IDENTITY(float(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(994.275) : float(1.0))), bool(_GLF_IDENTITY(true, bool(bvec2(true, true))))))), float(_GLF_FUZZED(-89.58)), bool(false))))), float(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), sqrt(1.0)))), 0.0))))), (vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0), mat4x2(mat4x3(mat4x2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (_GLF_IDENTITY(! (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (! (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))))), bool(bvec3(bool(bool(true)), false, _GLF_IDENTITY(true, false || (true)))))), (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(677.835))), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), min(_GLF_IDENTITY(length(vec3(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), length(vec3(0.0, 0.0, 0.0)))), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0)))))) + _GLF_IDENTITY(vec2(0.0, 0.0), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY((vec2(0.0, 0.0)), max(_GLF_IDENTITY((vec2(0.0, 0.0)), ((vec2(0.0, 0.0))) / vec2(1.0, 1.0)), (vec2(0.0, 0.0)))) * mat2(1.0)), vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * vec2(1.0, 1.0)))))).y))))
  return;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(uvec3(1u), _GLF_struct_3(_GLF_struct_0(ivec2(1), _GLF_IDENTITY(ivec3(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec3(1) : _GLF_FUZZED((bvec4(false, true, true, false) , ivec3(-57515, _GLF_IDENTITY(81683, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-10773) : 81683)), 10017)))))), _GLF_struct_1(bvec2(true), mat2x3(1.0), vec4(_GLF_IDENTITY(1.0, (1.0) + 0.0)), mat2x3(1.0), mat2x4(1.0), vec3(1.0)), _GLF_struct_2(bvec2(true), ivec3(1), vec3(1.0), true), uvec4(1u)), mat4(1.0), mat4x3(1.0), _GLF_struct_8(uvec4(1u), vec4(1.0), _GLF_struct_4(bvec3(true), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) - 0u)), clamp(uvec2(_GLF_IDENTITY(1u, (1u) - 0u)), uvec2(_GLF_IDENTITY(1u, (1u) - 0u)), uvec2(_GLF_IDENTITY(1u, (1u) - 0u)))), mat2x4(1.0), 1, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), _GLF_struct_5(mat2x4(1.0), 1u), _GLF_struct_6(uvec3(1u)), _GLF_struct_7(mat3x2(1.0), mat3x4(1.0), bvec4(true), vec2(1.0)), uvec4(1u)), gl_SubgroupInvocationID);
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(_GLF_struct_10(mat4x2(1.0)), _GLF_struct_12(_GLF_struct_11(mat3(1.0), 1.0, uvec2(1u), bvec3(true), ivec3(1))), 1u, workgroup_size * workgroup_id, uvec2(1u), _GLF_struct_17(mat4x2(1.0), _GLF_struct_13(vec3(1.0), 1, mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), uvec3(1u), mat4x2(1.0)), _GLF_struct_14(vec4(1.0)), _GLF_struct_15(vec2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) + _GLF_IDENTITY(abs(sin(vec2(0.0, 0.0))), (abs(sin(vec2(0.0, 0.0)))) * vec2(1.0, 1.0))), clamp(vec2(1.0), _GLF_IDENTITY(vec2(1.0), (vec2(1.0)) / vec2(1.0, 1.0)), vec2(1.0))), true, uvec4(1u), mat4x2(1.0), mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0))))), mat3x2(1.0), _GLF_struct_16(1.0, mat4x2(1.0), 1, mat4(1.0), mat4x2(1.0), mat3x4(1.0), mat2x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)), ! (! (bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)))))), ! (! (true))) && (true)) ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(9690.3995, (_GLF_IDENTITY(9690.3995, min(9690.3995, 9690.3995))) + 0.0))))) - 0.0)))));
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_18.workgroup_base + subgroup_base + _GLF_struct_replacement_9.subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_18.workgroup_base + subgroup_base + _GLF_struct_replacement_9.subgroup_local_id, _GLF_IDENTITY(max(_GLF_struct_replacement_18.workgroup_base + subgroup_base + _GLF_struct_replacement_9.subgroup_local_id, _GLF_struct_replacement_18.workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id, (_GLF_struct_replacement_9.subgroup_local_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(uint(max(_GLF_struct_replacement_18.workgroup_base + subgroup_base + _GLF_struct_replacement_9.subgroup_local_id, _GLF_struct_replacement_18.workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))), min((_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))), (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))), (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))), (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))) | (subgroup_base)), subgroup_base, subgroup_base)) + _GLF_struct_replacement_9.subgroup_local_id))))), _GLF_IDENTITY(_GLF_struct_replacement_18.workgroup_base + subgroup_base, (_GLF_struct_replacement_18.workgroup_base + subgroup_base) ^ 0u) + _GLF_struct_replacement_9.subgroup_local_id, _GLF_IDENTITY(_GLF_struct_replacement_18.workgroup_base, max(_GLF_struct_replacement_18.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_18.workgroup_base, clamp(_GLF_struct_replacement_18.workgroup_base, _GLF_struct_replacement_18.workgroup_base, _GLF_struct_replacement_18.workgroup_base)))) + subgroup_base + _GLF_struct_replacement_9.subgroup_local_id));
 uint next_virtual_gid = _GLF_struct_replacement_18.workgroup_base + subgroup_base + ((_GLF_struct_replacement_9.subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(exp(3.6))))))))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((_GLF_struct_replacement_9.subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), _GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bvec2(true, false))))) && (true)) && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-711.051)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), exp(0.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))), injectionSwitch.x)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.0))) * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x), _GLF_IDENTITY(max(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), mix(float(_GLF_IDENTITY(max(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), max(max(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), max(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x))))), float(_GLF_FUZZED((8.1 + 5.9))), bool(false))))))), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x))))), bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))) > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(max((injectionSwitch)[1], (injectionSwitch)[1]), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(max((injectionSwitch)[1], (injectionSwitch)[1]), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0), mat3(mat3(mat3(max((injectionSwitch)[1], (injectionSwitch)[1]), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1.0))))), min(float(_GLF_IDENTITY(mat3(max((injectionSwitch)[1], (injectionSwitch)[1]), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0), mat3(mat3(mat3(max((injectionSwitch)[1], (injectionSwitch)[1]), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0))))), float(_GLF_IDENTITY(mat3(max((injectionSwitch)[1], (injectionSwitch)[1]), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0), mat3(mat3(mat3(max((injectionSwitch)[1], (injectionSwitch)[1]), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 1.0)))))))))), vec2(_GLF_FUZZED(-1.7), _GLF_FUZZED(float(true))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(3334))), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0) : _GLF_FUZZED(-115.089))))))))))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), true, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0))), max(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0))))), min(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0))))))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)))), _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0))))), 0.0, 0.0)), (_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)))), _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0))))), 0.0, 0.0)), (float(vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - determinant(mat4(0.0, cos(0.0), 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (1.0) - 0.0), 1.0)))), _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0))))), 0.0, 0.0))) - 0.0)) * 1.0)), mix(float(_GLF_FUZZED(-4.0)), float(1.0), bool(true))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(12.60, 8.1), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-225.880), (vec2(12.60, 8.1))[1]), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_FUZZED(-225.880), (vec2(_GLF_IDENTITY(12.60, (_GLF_IDENTITY(12.60, (12.60) * determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(-4878.2937, 3.2, 7011.1468, 715.880, -61.96, 3.0, -8.8, 927.249, -6154.0880)) : _GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3(327.324, 985.081, -9.2, -6234.7252, -2.0, -44.01, 8.4, -0.3, -4.7)) : mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))) : _GLF_FUZZED(transpose(mat3(-509.913, 0.2, 74.31, -1831.1195, 1981.8448, 3070.3211, -4535.1692, -8.3, -44.44)))))))) - 0.0), 8.1))[1]), (vec2(_GLF_FUZZED(-225.880), (vec2(12.60, 8.1))[1])) / vec2(1.0, 1.0))), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-225.880), (_GLF_IDENTITY(_GLF_FUZZED(-225.880), 1.0 * (_GLF_FUZZED(-225.880)))) - log(1.0)), (_GLF_IDENTITY(vec2(12.60, 8.1), (true ? vec2(12.60, 8.1) : _GLF_FUZZED(atan(injectionSwitch)))))[1]), (vec2(_GLF_FUZZED(-225.880), (vec2(12.60, 8.1))[1])) / vec2(1.0, 1.0))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(vec2(_GLF_FUZZED(-225.880), (vec2(12.60, 8.1))[1]), _GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_FUZZED(-225.880), (vec2(12.60, 8.1))[1]), (vec2(_GLF_FUZZED(-225.880), (vec2(12.60, 8.1))[1])) * mat2(1.0))) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.1)), float(1.0), bool(true)))), clamp((vec2(_GLF_IDENTITY(_GLF_FUZZED(-225.880), (_GLF_FUZZED(-225.880)) / round(length(normalize(1.0)))), (vec2(12.60, 8.1))[1])) / vec2(1.0, 1.0), (vec2(_GLF_FUZZED(-225.880), (vec2(12.60, 8.1))[1])) / vec2(1.0, 1.0), (vec2(_GLF_IDENTITY(_GLF_FUZZED(-225.880), (_GLF_FUZZED(-225.880)) - 0.0), (vec2(12.60, 8.1))[1])) / vec2(1.0, 1.0))))))))))), vec2((_GLF_IDENTITY(vec2(12.60, 8.1), min(vec2(12.60, 8.1), _GLF_IDENTITY(vec2(12.60, 8.1), _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0)) * (vec2(_GLF_IDENTITY(12.60, (true ? 12.60 : _GLF_FUZZED(77.34))), 8.1))))))[0], _GLF_FUZZED(6906.7833)), bvec2(true, false)))) : vec2(mat4(injectionSwitch, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * round(_GLF_IDENTITY(length(normalize(1.0)), clamp(length(normalize(1.0)), _GLF_IDENTITY(length(normalize(1.0)), (length(normalize(1.0))) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) - 0.0)), length(normalize(1.0)))))), 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.0)), float(1.0), bool(true))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))).y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.0)), float(1.0), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), false)))), bool(bool(! (_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), false))))))))))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0)), (false ? _GLF_FUZZED(vec2(12.60, _GLF_IDENTITY(8.1, max(8.1, 8.1)))) : vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.0)), float(1.0), bool(true))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(345.500)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(958.334)), bool(false))))), 0.0, 1.0))))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.0)), float(1.0), bool(_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(vec2(12.60, _GLF_IDENTITY(8.1, max(8.1, 8.1)))) : vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.0)), float(1.0), bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))), 0.0, _GLF_IDENTITY(1.0, (1.0) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.0)), float(1.0), bool(_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(vec2(12.60, _GLF_IDENTITY(8.1, max(8.1, 8.1)))) : vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.0)), float(1.0), bool(true))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(cos(0.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(cos(0.0), 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.0)), float(1.0), bool(_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(vec2(12.60, _GLF_IDENTITY(8.1, max(8.1, 8.1)))) : vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.0)), float(1.0), bool(true))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(cos(0.0), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(cos(0.0), _GLF_IDENTITY(0.0, (0.0) - sin(0.0)), 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.0)), float(1.0), bool(true))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), (true ? max(1.0, 1.0) : _GLF_FUZZED(1832.4702)))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(vec2(12.60, _GLF_IDENTITY(8.1, max(8.1, 8.1)))) : vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-4.0)), clamp(float(_GLF_FUZZED(-4.0)), float(_GLF_FUZZED(-4.0)), _GLF_IDENTITY(float(_GLF_FUZZED(-4.0)), mix(float(float(_GLF_FUZZED(_GLF_IDENTITY(-4.0, max(-4.0, -4.0))))), float(_GLF_FUZZED(5.2)), bool(false))))), float(1.0), bool(true))), 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-306.728)), float(0.0), bool(true))), 1.0))))))).y))), true, true, true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true, true))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))) || false), bool(bvec4(! (! (false)), false, false, true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))))))) && true), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))), ! (! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))), ! (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))))), bool(bvec3(! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))))), true, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))), false || (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))))), ! (! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false, false, true)))))))))))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))), ! (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))))), bool(bvec3(! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))))), true, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))), false || (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))))), ! (! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false, false, true)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))), ! (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_IDENTITY(false, (false) || false)), false, false, true)))))))), bool(bvec3(! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (_GLF_IDENTITY(! (false), true && (! (false)))), false, false, true)))))))), true, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))), (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))), true && (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))))), _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))))))))) && true), false || (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, false, true))))))))))), ! (! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false, false, true)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))), false, false, true))))))))), ! (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))))), bool(bvec3(! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), false || ((false)))), bool(bvec4(! (! (false)), false, false, true)))))))), true, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))), false || (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))))), ! (! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false, false, true)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false))))), false, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec4(! (! (false)), false, false, true))))))), ! (! _GLF_IDENTITY((! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))))), bool(bvec2(_GLF_IDENTITY((! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))))), ! (_GLF_IDENTITY(! ((! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))), ! (! (! ((! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) && true), _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, _GLF_IDENTITY(true, false || (true)))))))))))))))), _GLF_IDENTITY(false, ! (! (false)))))))))), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))), ! (! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (! (false)), _GLF_IDENTITY(false, true && (false)), false, true)))))))))))), false, false, true))))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))) || false), bool(bvec4(! (! (false)), false, false, true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))))))) && true), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))), ! (! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))), ! (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))))), bool(bvec3(! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))))), true, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))), false || (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))))), ! (! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false, false, true)))))))))))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))), ! (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))))), bool(bvec3(! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))))), true, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))), false || (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))))), ! (! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false, false, true)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))), ! (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_IDENTITY(false, (false) || false)), false, false, true)))))))), bool(bvec3(! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (_GLF_IDENTITY(! (false), true && (! (false)))), false, false, true)))))))), true, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))), (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))), true && (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))))), _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))))))))) && true), false || (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, false, true))))))))))), ! (! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false, false, true)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))), false, false, true))))))))), ! (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))))), bool(bvec3(! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), false || ((false)))), bool(bvec4(! (! (false)), false, false, true)))))))), true, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))), false || (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))))), ! (! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false, false, true)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false))))), false, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec4(! (! (false)), false, false, true))))))), ! (! _GLF_IDENTITY((! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))))), bool(bvec2(_GLF_IDENTITY((! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))))), ! (_GLF_IDENTITY(! ((! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))), ! (! (! ((! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) && true), _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, _GLF_IDENTITY(true, false || (true)))))))))))))))), _GLF_IDENTITY(false, ! (! (false)))))))))), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))), ! (! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (! (false)), _GLF_IDENTITY(false, true && (false)), false, true)))))))))))), false, false, true)))))))))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))) || false), bool(bvec4(! (! (false)), false, false, true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))))))) && true), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))), ! (! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))), ! (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))))), bool(bvec3(! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (false)))), false, false, true)))))))), _GLF_IDENTITY(true, (true) && true), true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))), false || (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))))), ! (! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false, false, true)))))))))))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))), ! (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))))), bool(bvec3(! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))), bool(bvec4(! (! (false)), false, false, true)))))))), true, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))), false || (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))))), ! (! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false, false, true)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))), ! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))))))))))), ! (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_IDENTITY(false, (false) || false)), false, false, true)))))))), bool(bvec3(! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (_GLF_IDENTITY(! (false), true && (! (false)))), false, false, true)))))))), true, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), bool(bvec4(! (! (false)), false, false, true))))))))), (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), _GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), true && ((false)))), false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))), true && (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(false || (bool(bvec2(false, true))), true && (false || (bool(bvec2(false, true))))))))), _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bool((false))))), _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))))))))) && true), false || (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, false, true))))))))))), ! (! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false, false, true)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false, false, true))))) || false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))), false, false, true))))))))), ! (_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))))), bool(bvec3(! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), false || ((false)))), bool(bvec4(! (! (false)), false, false, true)))))))), true, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false, true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), bool(bvec4(! (! (false)), false, false, true))))))))), false || (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), bool(_GLF_IDENTITY(bool(bool(bool(! (false)))), bool(bvec2(bool(bool(bool(! (false)))), true))))))), bool(bvec4(! (! (false)), false, false, true))))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))), bool(bvec3(_GLF_IDENTITY(false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))), bool(bvec2(false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))), true))), true, false)))))))), ! (! (! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false, false, true)))))))))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false)), (bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false))))), false, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec4(! (! (false)), false, false, true))))))), ! (! _GLF_IDENTITY((! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))))), bool(bvec2(_GLF_IDENTITY((! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))))), ! (_GLF_IDENTITY(! ((! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))))), ! (! (! ((! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) && true), _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, _GLF_IDENTITY(true, false || (true)))))))))))))))), _GLF_IDENTITY(false, ! (! (false)))))))))), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true)))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))), ! (! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (! (false)), _GLF_IDENTITY(false, true && (false)), false, true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (! (false)), _GLF_IDENTITY(false, true && (false)), false, true)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (! (false)), _GLF_IDENTITY(false, true && (false)), false, true))))))))))))))))), false, false, true))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-21.10, 37.52)) : injectionSwitch)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
