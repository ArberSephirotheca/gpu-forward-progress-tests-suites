#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != _GLF_IDENTITY(0, (0) + 0)); _injected_loop_counter --)
    {
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) + 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.2)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), bool(bvec3(_GLF_IDENTITY(bool(true), true && (bool(true))), true, true))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 for(int _injected_loop_counter = (_GLF_IDENTITY(0 & -58961, (0 & -58961) - 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true))))))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) || (_GLF_WRAPPED_LOOP(false))));
            }
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
            barrier();
           barrier();
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, (_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, (_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))) || false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_injected_loop_counter != 1, (_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))) || false), true)), true && (bool(bvec2(_GLF_IDENTITY(_injected_loop_counter != 1, (_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))) || false), true))))))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                {
                 barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1093.8027), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-3461.5238)), float(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))), bool(true))), _GLF_FUZZED(-849.496)), bvec2(true, false))).x, injectionSwitch.x)) < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false))), false, true)))))), bvec3(bvec3(bvec3(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), (bool(_GLF_IDENTITY(bvec3(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false))), false, true)))))), bvec3(bvec3(bvec3(bool(bvec3((injectionSwitch.x < injectionSwitch.y), false, false)), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) ? subgroup_id : _GLF_FUZZED(subgroup_local_id))), min(_GLF_IDENTITY(subgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(subgroup_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), length(vec3(0.0, 0.0, 0.0)), 1.0, abs(1.0), 0.0), (mat3(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), length(vec3(0.0, 0.0, 0.0)), 1.0, abs(1.0), 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(vec4(-14.95, 612.275, -5.5, -7.8).z) : float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), length(vec3(0.0, 0.0, 0.0)), 1.0, abs(1.0), 0.0), (mat3(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), length(vec3(0.0, 0.0, 0.0)), 1.0, abs(1.0), 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))) < injectionSwitch.y)) ? subgroup_id : _GLF_FUZZED(subgroup_local_id))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), ((_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), uint(uvec2(~ (subgroup_size), 0u)))))) | (subgroup_size)) << 0u));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, true && (_GLF_IDENTITY((_GLF_DEAD(false)) && true, false || ((_GLF_DEAD(false)) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), bool(bvec4(_GLF_DEAD(false), false, true, false))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     do
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(false), true, false, true)), ! (! (bool(bvec4(_GLF_WRAPPED_LOOP(false), true, false, true))))))) && true));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true))))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) || false), true)))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))), true)))))))) || false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))));
                  }
                }
               else
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (-20735 & (0 << _GLF_IDENTITY(int(8), int(8)))) + (_injected_loop_counter ++)))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(dot(-3.3, -50.70)))) > injectionSwitch.y)))))))))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                      }
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))); _injected_loop_counter --)
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               barrier();
                              }
                            }
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       else
                        {
                        }
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         if(_GLF_DEAD(false))
                          {
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                            {
                             barrier();
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                       barrier();
                      }
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                    barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), max(_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_IDENTITY(float(mat2x3(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), float(mat2(float(mat2x3(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0)))), float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(1846.0542) : length(normalize(vec2(1.0, 1.0))))), length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))), 1.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), max(_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_IDENTITY(float(mat2x3(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), float(mat2(float(mat2x3(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0)))), float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(1846.0542) : length(normalize(vec2(1.0, 1.0))))), length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))), 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY((mat3x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), max(_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_IDENTITY(float(mat2x3(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), float(mat2(float(mat2x3(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0)))), float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(1846.0542) : length(normalize(vec2(1.0, 1.0))))), length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))), 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0)) * mat3(1.0), ((mat3x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), max(_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_IDENTITY(float(mat2x3(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), float(mat2(float(mat2x3(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0)))), float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(1846.0542) : length(normalize(vec2(1.0, 1.0))))), length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))), 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0)) * mat3(1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), max(_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_IDENTITY(float(mat2x3(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), float(mat2(float(mat2x3(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0)))), float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(1846.0542) : length(normalize(vec2(1.0, 1.0))))), length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))), 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY((mat3x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), max(_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_IDENTITY(float(mat2x3(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), float(mat2(float(mat2x3(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0)))), float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(1846.0542) : length(normalize(vec2(1.0, 1.0))))), length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))), 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0)) * mat3(1.0), ((mat3x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), max(_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_IDENTITY(float(mat2x3(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), float(mat2(float(mat2x3(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0)))), float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(1846.0542) : length(normalize(vec2(1.0, 1.0))))), length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))), 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0)) * mat3(1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), max(_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_IDENTITY(float(mat2x3(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), float(mat2(float(mat2x3(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0)))), float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(1846.0542) : length(normalize(vec2(1.0, 1.0))))), length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))), 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY((mat3x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), max(_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_IDENTITY(float(mat2x3(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), float(mat2(float(mat2x3(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0)))), float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(1846.0542) : length(normalize(vec2(1.0, 1.0))))), length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))), 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0)) * mat3(1.0), ((mat3x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), max(_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_IDENTITY(float(mat2x3(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), float(mat2(float(mat2x3(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0)))), float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(1846.0542) : length(normalize(vec2(1.0, 1.0))))), length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))), 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0)) * mat3(1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) / 1.0), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), max(_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_IDENTITY(float(mat2x3(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), float(mat2(float(mat2x3(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0)))), float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(1846.0542) : length(normalize(vec2(1.0, 1.0))))), length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))), 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY((mat3x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), max(_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_IDENTITY(float(mat2x3(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), float(mat2(float(mat2x3(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0)))), float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(1846.0542) : length(normalize(vec2(1.0, 1.0))))), length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))), 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0)) * mat3(1.0), ((mat3x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), max(_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_IDENTITY(float(mat2x3(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), float(mat2(float(mat2x3(float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.86) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0)))), float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (false ? _GLF_FUZZED(1846.0542) : length(normalize(vec2(1.0, 1.0))))), length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))), 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0)) * mat3(1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                         barrier();
                        }
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))
                        barrier();
                       barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         do
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))));
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                      }
                     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                      barrier();
                     barrier();
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                            {
                            }
                           else
                            {
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                              {
                               barrier();
                              }
                             if(_GLF_DEAD(false))
                              {
                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0))
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if(_GLF_DEAD(false))
                                    barrier();
                                  }
                                 else
                                  {
                                   barrier();
                                  }
                                }
                              }
                            }
                          }
                        }
                       else
                        {
                        }
                      }
                    }
                  }
                 else
                  {
                   for(int _injected_loop_counter = _GLF_IDENTITY((1 & 1), (_GLF_IDENTITY(true ? (1 & 1) : _GLF_FUZZED(-86310), _GLF_IDENTITY(int(int(true ? (1 & 1) : _GLF_FUZZED(-86310))), (int(int(_GLF_IDENTITY(true ? (1 & 1) : _GLF_FUZZED(_GLF_IDENTITY(-86310, (-86310) | (-86310))), clamp(true ? (1 & 1) : _GLF_FUZZED(_GLF_IDENTITY(-86310, (-86310) | (-86310))), _GLF_IDENTITY(true ? (1 & 1) : _GLF_FUZZED(_GLF_IDENTITY(-86310, (-86310) | (-86310))), (true ? (1 & 1) : _GLF_FUZZED(_GLF_IDENTITY(-86310, (-86310) | (-86310)))) - 0), true ? (1 & 1) : _GLF_FUZZED(_GLF_IDENTITY(-86310, (-86310) | (-86310)))))))) - 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
                          barrier();
                         barrier();
                        }
                      }
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), false, false), true)))))) || false)))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               barrier();
                              }
                            }
                          }
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(8.1) : injectionSwitch.x)))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3.9)), bool(false)))), float(_GLF_FUZZED(-8.7)), bool(false))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.1) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.0) : injectionSwitch.x)), injectionSwitch.x)))))))) > injectionSwitch.y)))))))))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           do
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         barrier();
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))))) > injectionSwitch.y))))
                        barrier();
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1)); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     atomicStore(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)], uint(1), 4, 64, 4);
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 0)); _injected_loop_counter ++)
        {
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_FUZZED((_GLF_IDENTITY(78532, max(78532, 78532)) * -70715)) : _GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(36511)))))) == 0, false || (_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_FUZZED((78532 * -70715)) : _GLF_IDENTITY(2, _GLF_IDENTITY((true ? 2 : _GLF_FUZZED(_GLF_IDENTITY(36511, (36511) | (36511)))), ((true ? 2 : _GLF_FUZZED(36511))) | 0))))) == 0, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true, false), true)))))) || (_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(78532, (78532) ^ 0) * -70715), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(78532, (78532) ^ 0) * -70715)), 0 ^ (~ ((_GLF_IDENTITY(78532, (78532) ^ 0) * -70715))))))) : _GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (2) >> 0) : _GLF_FUZZED(36511)))))), max(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_FUZZED((_GLF_IDENTITY(78532, _GLF_IDENTITY((78532), max((78532), (78532))) ^ 0) * -70715)) : _GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), _GLF_IDENTITY((true ? 2 : _GLF_FUZZED(36511)), (false ? _GLF_FUZZED(6219) : (true ? 2 : _GLF_FUZZED(36511)))))))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) % _GLF_IDENTITY(2, (false ? _GLF_FUZZED((_GLF_IDENTITY(78532, (78532) ^ 0) * -70715)) : _GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(36511))))))))), (subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_FUZZED((_GLF_IDENTITY(78532, (_GLF_IDENTITY(78532, (78532) + 0)) ^ 0) * -70715)) : _GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(36511)))))))) == 0)))))
    {
     subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY((true) || _GLF_IDENTITY(false, (false) && true), bool(bvec3((true) || _GLF_IDENTITY(false, (false) && true), true, true)))))), ! (! (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) && true))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) && true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true)))))), ((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec4(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true, true, false))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true)))) || false))) && true))))))), true && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) && true))), (! (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) && true)))) || false)))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true)))) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true)))) || false))) && true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true)))) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true)))) || false))) && true))), true, true)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true)))) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true)))) || false))) && true))), true, true))), false || (! (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true)))) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true)))) || false))) && true))), true, true))))))))))))), true && (((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) && true))), (! (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) && true)))) || false)))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true)))) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true)))) || false))) && true))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true)))) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true)))) || false))) && true))), true, true)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true)))) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true)))) || false))) && true))), true, true))), false || (! (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true)))) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true))), ((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, (false) && true)))) || false))) && true))), true, true))))))))))))))))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
            {
             barrier();
            }
           else
            {
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) ? injectionSwitch.y : _GLF_FUZZED(0.7)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) ? injectionSwitch.y : _GLF_FUZZED(0.7)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, true))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(_GLF_IDENTITY(0.0, (0.0) / cos(0.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 1.0), (true ? mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(float(1.0)))) - 0.0), 1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED((-118.627 * float(false)))), bool(false))), 1.0) : _GLF_FUZZED(mat4x2(_GLF_IDENTITY(-1.5, float(mat3x4(-1.5, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0)))), 6.9, 5.5, 5.3, 3206.7447, 64.45, 1.0, -602.329))))))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), 1.0), (true ? mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0) : _GLF_FUZZED(mat4x2(-1.5, 6.9, 5.5, 5.3, 3206.7447, 64.45, 1.0, -602.329)))))))) || false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true, true))))))
                  barrier();
                 barrier();
                }
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))), bool(bool(! (false))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (true)), ((! (true))) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), false))))), ! (! (true)))))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             else
              {
              }
            }
           else
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))))).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = (((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-3234) : _GLF_IDENTITY(1, (1) << 0))) & int(_GLF_ONE(1.0, injectionSwitch.y))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
                {
                 barrier();
                }
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) | (uint(2))), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(clamp(-99849, -39535, _GLF_IDENTITY(58888, (58888) | (_GLF_IDENTITY(58888, ~ (~ (58888))))))))), _GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), ((4)) + 0), (4), _GLF_IDENTITY((4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((4), 0 ^ ((4)))), (~ (_GLF_IDENTITY((4), 0 ^ ((4))))) << 0))))) >> 0), _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) + _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | (0 | 0))))))) | (_GLF_IDENTITY(64, clamp(64, 64, 64)))), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) / 1)) + 0)) | (_GLF_IDENTITY(64, clamp(64, 64, 64))))) >> 0), _GLF_IDENTITY(64, (64) ^ 0), 64)), _GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, max(4, 4)), 1, 0, 1))));
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     subgroupAll(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false)))))), true && (! (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false)))))))))))));
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (_GLF_IDENTITY(bool(bvec3(true, true, false)), (bool(bvec3(true, true, false))) || false)))), (injectionSwitch.x < injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), mix(_GLF_IDENTITY(_GLF_IDENTITY(vec2((vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], _GLF_FUZZED(854.294)), clamp(vec2((vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], _GLF_FUZZED(854.294)), vec2((vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], _GLF_FUZZED(854.294)), _GLF_IDENTITY(vec2((vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], _GLF_FUZZED(854.294)), (vec2((vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], _GLF_FUZZED(854.294))) * mat2(1.0)))), (_GLF_IDENTITY(vec2((vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], _GLF_FUZZED(854.294)), clamp(vec2((vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], _GLF_FUZZED(854.294)), vec2((vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], _GLF_FUZZED(854.294)), _GLF_IDENTITY(vec2((vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], _GLF_FUZZED(854.294)), (vec2((vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], _GLF_FUZZED(854.294))) * mat2(1.0))))) - tan(vec2(0.0, 0.0))), vec2(_GLF_FUZZED(-5.7), (vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[1]), bvec2(false, true)))).x > injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), _GLF_IDENTITY(mix(vec2((vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], _GLF_FUZZED(854.294)), vec2(_GLF_FUZZED(-5.7), (vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(-5.5, -1.3)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0))))))[1]), bvec2(false, true)), max(mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(53.43))), 1.0, 0.0, 0.0, 0.0, 1.0)), min(float(mat2x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(53.43))), 1.0, 0.0, 0.0, 0.0, 1.0)), float(mat2x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(53.43))), 1.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-184.960)))))), (vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(53.43))), 1.0, 0.0, 0.0, 0.0, 1.0)), min(float(mat2x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(53.43))), 1.0, 0.0, 0.0, 0.0, 1.0)), float(mat2x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(53.43))), 1.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-184.960))))))) * mat2(1.0)) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch))), (vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) * vec2(1.0, 1.0)))[0], _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(854.294, mix(float(_GLF_FUZZED(float(-86811))), float(854.294), bool(true)))), (false ? _GLF_FUZZED(-72.59) : _GLF_FUZZED(_GLF_IDENTITY(854.294, mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(-86811)), min(_GLF_FUZZED(float(-86811)), _GLF_FUZZED(float(-86811))))), float(854.294), bool(true))))))), vec2(_GLF_FUZZED(-5.7), _GLF_IDENTITY((vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY((vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), clamp((vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), (vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), (vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))) / sqrt(vec2(1.0, 1.0)))[1]), bvec2(false, true)), mix(vec2((vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((2457.9254 + 55.80)), _GLF_FUZZED(-58.67)), bvec2(false, false))), injectionSwitch, injectionSwitch))))[0], _GLF_FUZZED(854.294)), vec2(_GLF_FUZZED(-5.7), (vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[1]), bvec2(_GLF_IDENTITY(false, (false) || false), true)))))).x > injectionSwitch.y))), true && ((! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), _GLF_IDENTITY(mix(vec2((vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], _GLF_FUZZED(854.294)), vec2(_GLF_FUZZED(-5.7), (vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0))))))[1]), bvec2(false, true)), max(mix(vec2((vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))))[0], _GLF_FUZZED(854.294)), vec2(_GLF_FUZZED(-5.7), (vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.8)), float(1.0), bool(true)))) / 1.0)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[1]), bvec2(false, true)), mix(vec2((vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], _GLF_FUZZED(854.294)), vec2(_GLF_FUZZED(-5.7), (vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[1]), bvec2(false, true))))), (_GLF_IDENTITY(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), _GLF_IDENTITY(mix(vec2((vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0), 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))[0], _GLF_FUZZED(854.294)), vec2(_GLF_FUZZED(-5.7), (vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[1]), bvec2(false, true)), max(mix(vec2((vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], _GLF_FUZZED(854.294)), vec2(_GLF_FUZZED(-5.7), (vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[_GLF_IDENTITY(1, ~ (~ (1)))]), bvec2(false, true)), mix(vec2((vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], _GLF_FUZZED(854.294)), vec2(_GLF_FUZZED(-5.7), (vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))))[1]), bvec2(false, true)))))) * vec2(1.0, 1.0))).x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         do
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false), (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)) && true))))) || false))
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) << 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), false, true))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 0.0))))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 1.0, 0.0, 0.0))))))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch)))), mix(vec2(_GLF_FUZZED(83.41), _GLF_FUZZED(616.459)), vec2((vec2(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch)))))[0], (vec2(_GLF_IDENTITY(vec2(injectionSwitch), clamp(_GLF_IDENTITY(vec2(injectionSwitch), clamp(_GLF_IDENTITY(vec2(injectionSwitch), min(vec2(injectionSwitch), _GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch))))), _GLF_IDENTITY(vec2(injectionSwitch), mix(vec2(_GLF_FUZZED(1.5), (vec2(injectionSwitch))[1]), vec2(_GLF_IDENTITY((vec2(injectionSwitch))[0], mix(float(_GLF_FUZZED(2.2)), float((vec2(injectionSwitch))[0]), bool(true))), _GLF_FUZZED(226.917)), bvec2(true, false))), vec2(injectionSwitch))), vec2(injectionSwitch), vec2(injectionSwitch)))))[1]), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), true)))).x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), false)), true)), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : min(injectionSwitch, injectionSwitch))))) / _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(smoothstep(7901.8032, 9.5, vec2(-1114.2218, 6137.1564)))))).x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(1.0)))) / vec2(1.0, 1.0)).x > injectionSwitch.y))) && true, ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))) && true) && true))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))) && true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * cos(0.0)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))) && true)) || false), false)), true), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mix(vec2(_GLF_FUZZED(-98.96), _GLF_FUZZED(51.95)), vec2(((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[0], ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / vec2(1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0))))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mix(vec2(_GLF_FUZZED(-98.96), _GLF_FUZZED(51.95)), vec2(((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[0], ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / vec2(1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0))))).x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mix(vec2(_GLF_FUZZED(-98.96), _GLF_FUZZED(51.95)), vec2(((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[0], ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / vec2(1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0))))).x > injectionSwitch.y)))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mix(vec2(_GLF_FUZZED(291.378), _GLF_FUZZED(6062.9300)), vec2((((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]), bvec2(true, true)))) / _GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(1.0, 1.0)), vec2(mat3x2(_GLF_IDENTITY(mat2(1.0) * (vec2(1.0, 1.0)), mat2(1.0) * (mat2(1.0) * (vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0)))), min(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), vec2(1.0, 1.0))), vec2(1.0, 1.0)))).x > injectionSwitch.y))) && true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true), false), bvec3(bvec3(bvec3(bvec2(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))) && true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true), false)))), true))))))))))))
          barrier();
        }
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
          {
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (true)) && (_GLF_DEAD(false))))
            barrier();
          }
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-8982.2912), (true ? _GLF_FUZZED(-8982.2912) : _GLF_FUZZED(-8.6)))), vec2(_GLF_FUZZED(-5706.9875), (injectionSwitch)[1]), bvec2(false, true))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8982.2912)), vec2(_GLF_FUZZED(-5706.9875), (injectionSwitch)[1]), bvec2(false, true))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(-8982.2912)), vec2(_GLF_FUZZED(-5706.9875), (injectionSwitch)[1]), bvec2(false, true))).y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((-28709 & 0) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), min(_GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(0), int(0))))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) ^ _GLF_IDENTITY(0u, (0u) | 0u)), 4, _GLF_IDENTITY(64, min(64, 64)), 4);
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && _GLF_IDENTITY(true, (true) || false)))))))))
      {
       barrier();
      }
     else
      {
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false))));
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(false, true))), true, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
