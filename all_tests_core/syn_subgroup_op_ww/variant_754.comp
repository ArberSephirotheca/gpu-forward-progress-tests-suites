#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 bvec3 _f0;
 uint next_virtual_gid;
 uvec4 _f1;
 vec4 _f2;
 bvec3 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_1 {
 mat3x4 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 uint _f1;
 bvec2 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 vec2 _f1;
 mat4 _f2;
 bvec4 _f3;
 _GLF_struct_1 _f4;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 mat3x2 _f2;
 bvec4 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size;
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.y = subgroup_size;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) >> (int(7.9) & 0))))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.x = subgroup_local_id;
      }
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.x = num_workgroup;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x));
 for(int _injected_loop_counter = _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-57024) : 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.z = workgroup_size;
        }
       else
        {
        }
      }
     else
      {
      }
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.z * workgroup_id;
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.z = workgroup_base;
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), true, true)))), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), true, true)))), false)))))))), bool(bvec4(bool(bool(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4743.0296), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), _GLF_FUZZED(90.85)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))[1])).y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false))))) || false))), true, false, true))));
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.y, max(_GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.y, (true ? subgroup_id * GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.y : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.y, (subgroup_id * GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.y) | (subgroup_id * GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.y))));
 uint virtual_gid = GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.z + subgroup_base + _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.x, (true ? GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.x : _GLF_FUZZED(atomicAnd(subgroup_base, workgroup_size))));
 for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4))))) >> _GLF_IDENTITY(int(4), int(4))), max(_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4))))) >> _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4))))) >> _GLF_IDENTITY(int(4), int(4))), (true ? ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4))))) >> _GLF_IDENTITY(int(4), int(4))) : _GLF_FUZZED(62343)))) >> 0), 0 ^ (((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4))))) >> _GLF_IDENTITY(int(4), int(4))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4)))), (1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4))))) - 0)) >> _GLF_IDENTITY(int(4), int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) << (1 ^ 1))))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
        {
        }
       else
        {
         _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y = _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y = _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), (GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y = _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) >> 0u)), 0u + (~ (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y = _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), (GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y = _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) >> 0u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y = _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), (GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y = _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) >> 0u)), 0u + (~ (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y = _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), (GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y = _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) >> 0u))))) / 1u)));
        }
      }
    }
  }
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_2(_GLF_struct_0(bvec2(true), 1u, bvec2(true), mat3x2(1.0)), vec2(_GLF_IDENTITY(1.0, (1.0) / exp(0.0))), mat4(1.0), bvec4(true), _GLF_struct_1(mat3x4(1.0), ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ((_GLF_IDENTITY(true, (true) || false))) && true) || false) ? 1 : _GLF_FUZZED(19000)), int(ivec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bool(true))), false, _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), false || ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))), _GLF_IDENTITY(true, bool(bvec2(true, true))) && ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))) && _GLF_IDENTITY(true, bool(bool(true)))), (true) || _GLF_IDENTITY(false, (false) && true)))) && true) || false) ? 1 : _GLF_FUZZED(_GLF_IDENTITY(19000, (19000) / 1)), (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) || false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) && true))), _GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(true, (true) && true))))), ! (! (! (! (bool(bool(_GLF_IDENTITY(true, (true) && true))))))))))))))))))), _GLF_IDENTITY(true, bool(bvec2(true, true))) && ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))) && true), (true) || _GLF_IDENTITY(false, (false) && true)))) && true) || false) ? 1 : _GLF_FUZZED(19000)) ^ 0), max(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))) && true), (true) || _GLF_IDENTITY(false, (false) && true))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))) && true), (true) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true))), false, true, true)))) && true) || false) ? 1 : _GLF_FUZZED(19000), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))) && true), (true) || _GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))))), false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec3(_GLF_IDENTITY(! (! (true)), false || (! (! (true)))), true, false)))))))) && true), (true) || _GLF_IDENTITY(false, (false) && true))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2((true), false)), true && (bool(bvec2((true), false)))))), false || (! (! (true)))), true, false))))), (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec3(_GLF_IDENTITY(! (! (true)), false || (! (! (true)))), true, false))))), bool(bool((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec3(_GLF_IDENTITY(! (! (true)), false || (! (! (true)))), true, false))))))))) || false)))) && true), (true) || _GLF_IDENTITY(false, (false) && true))), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), false || (! (false))))), bool(bvec4((! (_GLF_IDENTITY(! (false), false || (! (false))))), true, false, true)))))), (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), _GLF_IDENTITY((bool(bvec4(true, false, true, false))), ((bool(bvec4(true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), true, false)))) || false) || false)))), (! (! (true))) && true), bool(bvec3(_GLF_IDENTITY(! (! (true)), false || (! (! (true)))), true, false)))))))) && true), (true) || _GLF_IDENTITY(false, (false) && true))))), false, false, true)))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec3(_GLF_IDENTITY(! (! (true)), false || (! (! (true)))), true, false)))))))) && true), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec3(_GLF_IDENTITY(! (! (true)), false || (! (! (true)))), true, false)))))))) && true)) || false), (true) || _GLF_IDENTITY(false, (false) && true))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2((true), false)), true && (bool(bvec2((true), false)))))), false || (! (! (true)))), true, false))))), (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec3(_GLF_IDENTITY(! (! (true)), false || (! (! (true)))), true, false))))), bool(bool((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec3(_GLF_IDENTITY(! (! (true)), false || (! (! (true)))), true, false))))))))) || false)))) && true), (true) || _GLF_IDENTITY(false, (false) && true))), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (false)))))))), (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), _GLF_IDENTITY((bool(bvec4(true, false, true, false))), ((bool(bvec4(true, false, true, false)))) || false) || false)))), (! (! (true))) && true), bool(bvec3(_GLF_IDENTITY(! (! (true)), false || (! (! (true)))), true, false)))))))) && true), (true) || _GLF_IDENTITY(false, (false) && true))))), false, false, true)))) && true)), bool(bvec4((_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec3(_GLF_IDENTITY(! (! (true)), false || (! (! (true)))), true, false)))))))) && true), (true) || _GLF_IDENTITY(false, (false) && true))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, (true) && true))), bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2((true), false)), true && (bool(bvec2((true), false)))))), false || (! (! (true)))), true, false))))), (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true)))) || false)), bool(bvec3(_GLF_IDENTITY(! (! (true)), false || (! (! (true)))), true, false))))), bool(bool((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec3(_GLF_IDENTITY(! (! (true)), false || (! (! (_GLF_IDENTITY(true, true && (true)))))), true, false))))))))) || false)))) && true), (true) || _GLF_IDENTITY(false, (false) && true))), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (false)))))))), (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), _GLF_IDENTITY((bool(bvec4(true, false, true, false))), ((bool(bvec4(true, false, true, false)))) || false) || false)))), (! (! (true))) && true), bool(bvec3(_GLF_IDENTITY(! (! (true)), false || (! (! (true)))), true, false)))))))) && true), (true) || _GLF_IDENTITY(false, (false) && true))))), false, false, true)))) && true)), false, false, false))))))) || false) ? 1 : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(19000, max(19000, 19000)), (_GLF_IDENTITY(_GLF_IDENTITY(19000, (_GLF_IDENTITY(19000, _GLF_IDENTITY((19000), ((19000)) | 0) ^ 0)) - 0), 0 | (_GLF_IDENTITY(19000, (_GLF_IDENTITY(19000, _GLF_IDENTITY((19000), ((19000)) | 0) ^ 0)) - 0)))) / 1))) | 0), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ((true) || false) || false))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))) && true), (true) || _GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))) && true)))) && true, ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))) && true), (true) || _GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))) && true)))) && true)))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))) && true), (true) || _GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))) && true)))) && true) || false) || _GLF_IDENTITY(false, true && (false)))) ? 1 : _GLF_FUZZED(19000)))), 0, 1))))))), _GLF_struct_3(bvec3(true), GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.z + subgroup_base + ((GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.x + 1) % _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.y, max(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.y, (false ? _GLF_FUZZED(workgroup_base) : GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.y)), _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.y, max(GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.y, GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.y))))), uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(true ? 1u : _GLF_FUZZED(workgroup_id)), (uint(true ? 1u : _GLF_FUZZED(workgroup_id))) | (uint(true ? 1u : _GLF_FUZZED(workgroup_id)))), (_GLF_IDENTITY(uint(true ? 1u : _GLF_FUZZED(workgroup_id)), (uint(true ? 1u : _GLF_FUZZED(workgroup_id))) | 0u)) | (uint(true ? 1u : _GLF_FUZZED(workgroup_id))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(true ? 1u : _GLF_FUZZED(workgroup_id)), (_GLF_IDENTITY(uint(true ? 1u : _GLF_FUZZED(workgroup_id)), (uint(true ? 1u : _GLF_FUZZED(workgroup_id))) | 0u)) | (uint(true ? 1u : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), max(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))))))), (uint(_GLF_IDENTITY(uint(true ? 1u : _GLF_FUZZED(workgroup_id)), (_GLF_IDENTITY(uint(true ? 1u : _GLF_FUZZED(workgroup_id)), (uint(true ? 1u : _GLF_FUZZED(workgroup_id))) | 0u)) | (uint(true ? 1u : _GLF_FUZZED(workgroup_id)))))) | (uint(_GLF_IDENTITY(uint(true ? 1u : _GLF_FUZZED(workgroup_id)), (_GLF_IDENTITY(uint(true ? 1u : _GLF_FUZZED(workgroup_id)), (uint(true ? 1u : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))), _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))))))) | 0u)) | (uint(true ? 1u : _GLF_FUZZED(workgroup_id))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(true ? 1u : _GLF_FUZZED(workgroup_id)), (_GLF_IDENTITY(uint(true ? 1u : _GLF_FUZZED(workgroup_id)), (_GLF_IDENTITY(uint(true ? 1u : _GLF_FUZZED(workgroup_id)), ~ (~ (uint(true ? 1u : _GLF_FUZZED(workgroup_id)))))) | 0u)) | (uint(true ? 1u : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) * uint(_GLF_ONE(1.0, injectionSwitch.y))))))), 0u | (uint(_GLF_IDENTITY(uint(true ? 1u : _GLF_FUZZED(workgroup_id)), (_GLF_IDENTITY(uint(true ? 1u : _GLF_FUZZED(workgroup_id)), (uint(true ? 1u : _GLF_FUZZED(workgroup_id))) | 0u)) | (uint(true ? 1u : _GLF_FUZZED(workgroup_id))))))))))))), vec4(1.0), bvec3(true), vec4(1.0)), mat3x2(1.0), bvec4(true));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)))), _GLF_IDENTITY(0, (0) ^ 0), 1), (true ? _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), _GLF_IDENTITY(0, (0) ^ 0), 1), clamp(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), _GLF_IDENTITY(0, (0) ^ 0), 1), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), _GLF_IDENTITY(0, (0) ^ 0), 1), max(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), _GLF_IDENTITY(0, (0) ^ 0), 1), ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), _GLF_IDENTITY(0, (0) ^ 0), 1))), ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), int(int(_GLF_IDENTITY(int(6), int(6)))))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> (0 >> _GLF_IDENTITY(int(6), int(6)))))) ^ 0, (false ? _GLF_FUZZED(20959) : ((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> (0 >> _GLF_IDENTITY(int(6), int(6)))))) ^ 0))) | (1)), _GLF_IDENTITY(0, (0) ^ 0), 1))) : _GLF_FUZZED(ivec3(2477, 24494, 84366))))), 1 * (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), 0, 1)), (int(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), 0, 1))) / 1)))), ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) * 1)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) + 0)))) | (1)), _GLF_IDENTITY(0, (0) ^ 0), 1), (true ? _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), _GLF_IDENTITY(0, (0) ^ 0), 1), clamp(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> 0), 1, 1))) | (1)), _GLF_IDENTITY(0, (0) ^ 0), 1), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(87228) : 1)), clamp(1, 1, 1))) | (1)), _GLF_IDENTITY(0, (0) ^ 0), 1), max(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) - ((-38739 & 0) << _GLF_IDENTITY(int(8), int(8))))) | (1)), _GLF_IDENTITY(0, (0) ^ 0), 1), ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) ^ 0), 1))), ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (-53835 & 0))))), clamp(1, 1, 1))) | (1), max((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (-53835 & 0))))), clamp(1, 1, 1))) | (1), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (-53835 & 0))))), clamp(1, 1, 1))) | (1))), ((_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)) | (-80972 & 0))), _GLF_IDENTITY(0, (0) ^ 0), 1))) : _GLF_FUZZED(ivec3(2477, 24494, 84366))))), 1 * (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), 0, _GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), ((1)) >> 0)))), (int(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), 0, 1))) / 1)))), ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) * 1))))))), min(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), 0 ^ ((_GLF_IDENTITY(1, (1) | (1)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), int(_GLF_IDENTITY(ivec2(~ (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1)))), int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(ivec2(~ (~ (1)), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec2(~ (~ (1)), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec2(~ (~ (1)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(_injected_loop_counter))), 1 * (~ _GLF_IDENTITY((1), (true ? (1) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), min(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter)))))))))) >> 0)))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))))).x > injectionSwitch.y))), ! (! (bool(bool((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))))).x > injectionSwitch.y))))))))))
          {
          }
         else
          {
           atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y), ((false ? _GLF_FUZZED(workgroup_id) : GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_base.y)) | 0u))], uint(1), 4, 64, 4);
          }
        }
      }
     else
      {
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     do
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _injected_loop_counter)) < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) + 0))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false, false, false))); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
              {
              }
             else
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     do
                      {
                       if(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.x % 2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.x % 2, 0u)), ~ (~ (uint(uvec2(GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.x % 2, 0u))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(uvec2(GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.x % 2, 0u)), ~ (~ (uint(uvec2(GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.x % 2, 0u))))), 1u, 0u, 1u), (uvec4(_GLF_IDENTITY(uint(uvec2(GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.x % 2, 0u)), ~ (~ (uint(uvec2(GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.x % 2, 0u))))), 1u, 0u, 1u)) * uvec4(1u, 1u, 1u, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.x % 2, 0u)), ~ (~ (uint(uvec2(GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.x % 2, 0u))))), (_GLF_IDENTITY(uint(uvec2(GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.x % 2, 0u)), ~ (~ (uint(uvec2(GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.x % 2, 0u)))))) << 0u)) - (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) + 0u)), (~ (_GLF_IDENTITY(0u, (0u) + 0u))) | (~ (_GLF_IDENTITY(0u, (0u) + 0u)))))) | 0u)))), uint(uvec4((GLF_merged3_0_1_17_1_1_13_2_1_14subgroup_local_idsubgroup_sizeworkgroup_size.x % 2), 1u, 1u, 0u))) == 0)
                        {
                         subgroupAll(true);
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                          {
                           do
                            {
                             atomicStore(buf[_GLF_struct_replacement_4._f1.next_virtual_gid], uint(2), 4, 64, 4);
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                        }
                       else
                        {
                         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y))), ! (! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), ((injectionSwitch.x < injectionSwitch.y)) && true)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))))), (! (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))) || false)))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))), (! (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), bool(bvec3((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), true, false)))))))) || false)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec2(bvec2(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))), ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true && (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y))), ! (! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))))), (! (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))) || false)))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))), (! (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y))) || false)), bool(bvec3((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), true, false)))))))) || false)))))))), bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))) && true))))
                          {
                           do
                            {
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-314.650))))), 0.0)).y))))
                                  {
                                   subgroupAll(false);
                                  }
                                 else
                                  {
                                  }
                                }
                               else
                                {
                                }
                              }
                             else
                              {
                              }
                            }
                           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
                          }
                         else
                          {
                          }
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 ^ 1) << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               do
                                {
                                 do
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                      {
                                       atomicStore(buf[_GLF_struct_replacement_4._f1.next_virtual_gid], uint(2), 4, 64, 4);
                                      }
                                     else
                                      {
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                             else
                              {
                              }
                            }
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                }
              }
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
  }
}
