#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_35 {
 bool _f0;
 mat3x2 _f1;
 mat4x3 _f2;
 mat2x3 _f3;
 int _f4;
 mat4 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_34 {
 vec2 _f0;
 mat3x4 _f1;
 mat2x3 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_33 {
 uint _f0;
 mat3x4 _f1;
 ivec2 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_32 {
 uvec3 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_31 {
 mat3 _f0;
} ;

struct _GLF_struct_36 {
 _GLF_struct_31 _f0;
 _GLF_struct_32 _f1;
 uint _f2;
 _GLF_struct_33 _f3;
 _GLF_struct_34 _f4;
 _GLF_struct_35 _f5;
} ;

struct _GLF_struct_29 {
 uvec2 _f0;
 bvec4 _f1;
 bvec2 _f2;
 vec4 _f3;
 ivec3 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_28 {
 mat2 _f0;
 vec3 _f1;
 uint _f2;
 mat2x3 _f3;
 mat3x4 _f4;
 mat2 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_27 {
 mat3x2 _f0;
 uint _f1;
 bvec2 _f2;
 vec3 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_30 {
 _GLF_struct_27 _f0;
 _GLF_struct_28 _f1;
 bvec2 _f2;
 _GLF_struct_29 _f3;
} ;

struct _GLF_struct_25 {
 int _f0;
 mat4 _f1;
} ;

struct _GLF_struct_26 {
 mat2 _f0;
 ivec4 _f1;
 uvec2 _f2;
 mat2 _f3;
 _GLF_struct_25 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_37 {
 uvec4 _f0;
 _GLF_struct_26 _f1;
 _GLF_struct_30 _f2;
 _GLF_struct_36 _f3;
 vec4 _GLF_SWITCH_0_23v;
} ;

struct _GLF_struct_22 {
 mat2x4 _f0;
 uvec4 _f1;
 vec4 _f2;
 vec3 _f3;
 mat3x2 _f4;
 ivec2 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_21 {
 mat3x4 _f0;
} ;

struct _GLF_struct_23 {
 _GLF_struct_21 _f0;
 mat3x2 _f1;
 bvec4 _f2;
 mat3 _f3;
 _GLF_struct_22 _f4;
} ;

struct _GLF_struct_19 {
 uint _f0;
 mat2 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_18 {
 int _f0;
 bvec3 _f1;
 uint _f2;
 bvec2 _f3;
 uvec3 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_17 {
 ivec3 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_16 {
 vec3 _GLF_SWITCH_0_10v;
 vec2 _f0;
 float _f1;
} ;

struct _GLF_struct_15 {
 mat4 _f0;
 mat2x3 _f1;
 mat4 _f2;
 bool _f3;
} ;

struct _GLF_struct_20 {
 _GLF_struct_15 _f0;
 _GLF_struct_16 _f1;
 mat3x4 _f2;
 _GLF_struct_17 _f3;
 ivec4 _f4;
 _GLF_struct_18 _f5;
 _GLF_struct_19 _f6;
} ;

struct _GLF_struct_24 {
 _GLF_struct_20 _f0;
 ivec3 _f1;
 mat2 _f2;
 _GLF_struct_23 _f3;
} ;

struct _GLF_struct_14 {
 uint workgroup_size;
 bool _f0;
 vec2 _f1;
} ;

struct _GLF_struct_11 {
 ivec2 _f0;
 mat3x2 _f1;
 uvec3 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_10 {
 bvec4 _f0;
 mat4 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_9 {
 ivec2 _f0;
} ;

struct _GLF_struct_12 {
 ivec4 _f0;
 mat3 _f1;
 _GLF_struct_9 _f2;
 mat4x3 _f3;
 _GLF_struct_10 _f4;
 _GLF_struct_11 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_7 {
 mat4x2 _f0;
 vec2 _f1;
 vec2 _f2;
 bvec3 _f3;
 bvec2 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_6 {
 float _f0;
 mat3 _f1;
 uint subgroup_size;
 mat4x2 _f2;
 mat3x2 _f3;
 vec2 _f4;
 mat4x3 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 mat3 _f1;
 _GLF_struct_6 _f2;
 mat2 _f3;
 _GLF_struct_7 _f4;
} ;

struct _GLF_struct_13 {
 bvec2 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_12 _f2;
} ;

struct _GLF_struct_3 {
 bvec4 _f0;
} ;

struct _GLF_struct_2 {
 uint _f0;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 bool _f2;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 uvec4 _f1;
 mat4x3 _f2;
 vec3 _f3;
 uint _f4;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_5 {
 mat2x4 _f0;
 mat4x2 _f1;
 uint virtual_gid;
 _GLF_struct_1 _f2;
 mat3x4 _f3;
 _GLF_struct_4 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size;
 uvec2 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup;
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(bvec2(_GLF_IDENTITY(true, (true) && true)), _GLF_struct_8(uvec4(1u), _GLF_IDENTITY(mat3(1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED((mat3(3.8, -9.3, -263.162, 9.6, -946.976, 9248.9841, 21.89, 1.8, -8.3) - mat3(-0.8, -953.872, 9.7, -957.458, -8.3, 1.4, 1.4, 2.1, -1.5))), (_GLF_FUZZED((mat3(3.8, -9.3, -263.162, 9.6, -946.976, 9248.9841, 21.89, 1.8, -8.3) - mat3(-0.8, -953.872, 9.7, -957.458, -8.3, 1.4, 1.4, 2.1, -1.5)))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) : mat3(1.0))), _GLF_struct_6(1.0, mat3(1.0), gl_SubgroupSize, mat4x2(1.0), mat3x2(1.0), vec2(1.0), mat4x3(1.0), ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0))), mat2(1.0), _GLF_struct_7(mat4x2(1.0), vec2(1.0), vec2(1.0), bvec3(true), bvec2(true), ivec3(1))), _GLF_struct_12(ivec4(1), mat3(1.0), _GLF_struct_9(ivec2(1)), mat4x3(1.0), _GLF_struct_10(bvec4(true), mat4(1.0), mat3x4(1.0)), _GLF_struct_11(ivec2(1), mat3x2(1.0), uvec3(1u), _GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), (ivec3(1)) | ivec3(0, 0, 0))) | (ivec3(1)))), mat3x2(1.0)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x = _GLF_struct_replacement_13._f1._f2.subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, false))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.x, sqrt(1.0), 1.0, 1.0), mat4(1.0) * (vec4(injectionSwitch.x, sqrt(1.0), 1.0, 1.0)))), max(float(_GLF_IDENTITY(vec4(injectionSwitch.x, sqrt(1.0), 1.0, 1.0), mat4(1.0) * (vec4(injectionSwitch.x, sqrt(1.0), 1.0, 1.0)))), float(_GLF_IDENTITY(vec4(injectionSwitch.x, sqrt(1.0), 1.0, 1.0), mat4(1.0) * (vec4(injectionSwitch.x, sqrt(1.0), 1.0, 1.0))))))) > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(0.7)), bool(false))), sqrt(1.0), 1.0, 1.0), mat4(1.0) * (vec4(injectionSwitch.x, sqrt(1.0), 1.0, 1.0)))), max(float(_GLF_IDENTITY(vec4(injectionSwitch.x, sqrt(1.0), 1.0, 1.0), mat4(1.0) * _GLF_IDENTITY((vec4(injectionSwitch.x, sqrt(1.0), 1.0, 1.0)), ((vec4(injectionSwitch.x, sqrt(1.0), 1.0, 1.0))) + vec4(0.0, 0.0, 0.0, 0.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.x, sqrt(1.0), 1.0, 1.0), mat4(1.0) * (vec4(injectionSwitch.x, sqrt(1.0), 1.0, 1.0))), (_GLF_IDENTITY(vec4(injectionSwitch.x, sqrt(1.0), 1.0, 1.0), mat4(1.0) * (vec4(injectionSwitch.x, sqrt(1.0), 1.0, 1.0)))) * mat4(1.0)))))) > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.y = _GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(gl_WorkGroupSize.x, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), (! (_GLF_IDENTITY(true, true && (true)))) || _GLF_IDENTITY(false, ! (! (false)))))), vec2(1.0));
 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.z = _GLF_struct_replacement_14.workgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.z * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y = workgroup_base;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y = GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(mat2x4(1.0), mat4x2(1.0), GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, uint(uint(subgroup_base))), subgroup_base)) + subgroup_local_id, _GLF_struct_1(_GLF_struct_0(uvec4(1u), uvec4(1u), mat4x3(1.0), vec3(1.0), 1u)), mat3x4(1.0), _GLF_struct_4(_GLF_struct_2(1u), _GLF_struct_3(bvec4(true)), true));
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x = _GLF_struct_replacement_5.virtual_gid;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))), false, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), true)))) && true)) || _GLF_IDENTITY(false, false || (false)))))
    return;
  }
 uint next_virtual_gid = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x);
 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x = _GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u | (next_virtual_gid), (0u | _GLF_IDENTITY((next_virtual_gid), _GLF_IDENTITY(((next_virtual_gid)) >> 0u, (((next_virtual_gid)) >> 0u) ^ _GLF_IDENTITY(0u, max(0u, 0u))))) / 1u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 atomicStore(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
    barrier();
   return;
  }
 if((subgroup_local_id % _GLF_IDENTITY(2, (0 & (15552 | 49457)) | (2))) == 0)
  {
   subgroupAll(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) && true)));
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x], uint(2), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   switch(_GLF_SWITCH(0))
    {
     case 39:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     mat3x4 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
        {
         case 0:
         case 29:
         case 9:
         if(_GLF_DEAD(false))
          barrier();
         case 82:
         case 96:
         barrier();
         break;
         case 28:
         bvec2((true == true));
         case 89:
         if(((mat4x2(3266.8071, -3787.8338, 752.321, 6.9, 31.28, -8.2, -686.618, 2.4) * mat2x4(-8587.0382, 5994.5659, -768.969, -8523.8908, 6758.1582, 1.7, -4.4, 18.21)) != mat2(715.169, -106.427, -67.15, 909.950)))
          {
           mat2(48.22, -5.0, -69.28, -8552.4871);
           ivec3(-40729, -38494, -42166);
           uvec4 _GLF_SWITCH_5_0v;
           mat2 _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
           6.8;
           (GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup ++);
           ivec3(61415, -66868, 1926);
          }
         else
          {
           uvec2(140291u, 34916u);
           (+ mat2x3(2.3, -7.6, -9.2, -7048.5897, 41.06, -590.219));
          }
         default:
         1;
        }
      }
     case 0:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 5:
     if(_GLF_DEAD(false))
      return;
     subgroupAll(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, abs(1.0), 0.0, sin(0.0), 1.0))).y, true)), bool(bvec3(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false, false)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))))))) || (false)));
     if(_GLF_DEAD(false))
      return;
     case 50:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       barrier();
      }
     case 19:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     case 69:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     case 71:
     case 3:
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         switch(_GLF_SWITCH(0))
          {
           case 54:
           _GLF_SWITCH_0_1v;
           case 0:
           case 25:
           if(_GLF_DEAD(false))
            return;
           barrier();
           break;
           default:
           1;
          }
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, true && ((false) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, true && ((false) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, true && ((false) && true)), (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, true && ((false) && true)), ! (! (_GLF_IDENTITY((false) && true, true && ((false) && true)))))) || false), false || (_GLF_IDENTITY((false) && true, true && ((false) && true)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, true && ((false) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))) && true, true && ((false) && true)))), false))))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, true && ((false) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, true && ((false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true)))))))))), false || (_GLF_IDENTITY((false) && true, true && _GLF_IDENTITY(((false) && true), bool(bvec2(((false) && true), false)))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, true && ((false) && true)), false || (_GLF_IDENTITY((false) && true, true && ((false) && true)))), false)))))))))))))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     atomicStore(buf[GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.x], uint(2), 4, 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
        {
         case 0:
         case 94:
         case 58:
         case 63:
         if(_GLF_DEAD(false))
          return;
         case 86:
         case 44:
         case 71:
         case 97:
         barrier();
         break;
         case 53:
         mat4x2(-4332.8549, 999.768, -326.899, -89.16, -6.3, 7.1, -9.1, 8.3);
         case 15:
         do
          {
           int _GLF_SWITCH_5_0v[88];
           uvec2(136597u, 51594u);
          }
         while(false);
         default:
         1;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * 1.0)) - 0.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     break;
     case 53:
     {
      switch(_GLF_SWITCH(0))
       {
        case 85:
        if(false)
         {
          _GLF_SWITCH_0_1v;
          if(_GLF_DEAD(false))
           barrier();
          mat4(71.28, 89.56, 2.3, -342.062, -1.6, -329.773, 34.00, _GLF_IDENTITY(-7155.0534, (_GLF_IDENTITY(-7155.0534, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(-7155.0534, 1.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3x2(-7155.0534, 1.0, 0.0, 1.0, 0.0, 0.0))))), (false ? _GLF_FUZZED(174.551) : float(_GLF_IDENTITY(mat3x2(-7155.0534, 1.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat3x2(-7155.0534, 1.0, 0.0, 1.0, 0.0, 0.0))))))))) + 0.0), -9.7, 72.23, 39.74, -3923.7191, -249.338, _GLF_IDENTITY(4625.8307, (4625.8307) / 1.0), -41.67, -89.53)[2];
          mat4(-2.4, 4.4, _GLF_IDENTITY(9.7, clamp(9.7, _GLF_IDENTITY(9.7, min(_GLF_IDENTITY(9.7, clamp(9.7, 9.7, 9.7)), 9.7)), _GLF_IDENTITY(9.7, float(mat2x3(9.7, 1.0, 0.0, 0.0, 1.0, 0.0))))), 4.3, -82.95, 0.8, _GLF_IDENTITY(-5.3, (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(345.459) : _GLF_IDENTITY(-5.3, clamp(_GLF_IDENTITY(-5.3, 1.0 * _GLF_IDENTITY((-5.3), (true ? (-5.3) : _GLF_FUZZED(685.359)))), -5.3, -5.3)))), -4.7, _GLF_IDENTITY(_GLF_IDENTITY(36.04, clamp(36.04, 36.04, 36.04)), float(float(_GLF_IDENTITY(36.04, min(36.04, 36.04))))), -6.0, -35.09, -5105.3672, 34.36, 37.62, -9.7, -2.6);
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          bvec4(false, false, false, false)[3];
          mat4(_GLF_IDENTITY(-36.71, clamp(-36.71, -36.71, _GLF_IDENTITY(-36.71, _GLF_IDENTITY(float(mat4x3(-36.71, 1.0, 0.0, exp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(faceforward(3.4, 1430.6699, 0.5)) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0)), (false ? _GLF_FUZZED(-2890.7841) : float(mat4x3(-36.71, 1.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), 0.0))))))), 9223.6780, -7722.3157, 3.9, -1.7, -2.8, 8.2, -8343.9953, 6.9, -8.6, -756.094, 75.05, -1475.6776, -9.0, -7474.6803, 3.0);
          mat4x3 _GLF_SWITCH_2_0v[12], _GLF_SWITCH_2_1v[7], _GLF_SWITCH_2_2v;
          if(_GLF_DEAD(false))
           return;
          mat4(-9.7, 5.9, -2.0, 7913.7435, -876.391, -536.502, 1082.3965, 8852.2943, -70.03, 22.89, 2465.1545, -115.993, -78.91, 9897.1911, 2.6, -20.55);
          mat4x3(5453.1749, -3.0, _GLF_IDENTITY(5945.1342, (5945.1342) * abs(1.0)), -3.8, 8976.4446, 54.47, 8.5, 847.821, -9.3, -3.2, _GLF_IDENTITY(-1.3, (true ? -1.3 : _GLF_FUZZED(904.750))), 1411.8467);
         }
        else
         {
          intBitsToFloat(min(ivec4(9293, -25587, 71650, -84059), 28773));
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
         }
        if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))), ! (! ((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))))))))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          if(_GLF_DEAD(false))
           barrier();
          barrier();
         }
        case 0:
        if(_GLF_DEAD(false))
         return;
        ivec3 GLF_merged2_0_1_17_1_2_16_GLF_SWITCH_0_25v_GLF_SWITCH_0_3v;
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           return;
          barrier();
         }
        (uvec2(17615u, 162939u));
        case 8:
        ivec2 _GLF_SWITCH_0_3v;
        GLF_merged2_0_1_17_1_2_16_GLF_SWITCH_0_25v_GLF_SWITCH_0_3v.yz = _GLF_SWITCH_0_3v;
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        while(any(bvec3(true, false, true)))
         {
          if((_GLF_IDENTITY((- ivec4(-66861, 2981, -29012, 94515)), (_GLF_IDENTITY((- ivec4(-66861, 2981, -29012, 94515)), (_GLF_IDENTITY((- ivec4(-66861, 2981, -29012, 94515)), max((- ivec4(-66861, 2981, -29012, 94515)), (- ivec4(-66861, 2981, -29012, 94515))))) - ivec4(0, 0, 0, 0))) | ((- ivec4(_GLF_IDENTITY(-66861, (-66861) - 0), 2981, -29012, 94515)))) != ivec3(27699, -29458, _GLF_IDENTITY(-4873, int(int(-4873)))).rrbg))
           {
            mat2x4 _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v[5];
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
              if(_GLF_DEAD(false))
               return;
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               continue;
              continue;
             }
            false;
            bvec4(false, true, true, false);
            if(_GLF_DEAD(false))
             {
              if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
               barrier();
              barrier();
             }
            if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false), false))))))
             barrier();
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            _GLF_IDENTITY(mat4(-1887.2507, -3293.4930, -444.711, 2.3, 0.4, -5.7, -1591.6809, 56.07, -3823.1581, -6.4, -6020.7241, 5.6, _GLF_IDENTITY(_GLF_IDENTITY(7444.9121, min(7444.9121, 7444.9121)), float(mat2x3(7444.9121, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(311.518)), float(0.0), bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))))))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, length(vec3(0.0, 0.0, 0.0))))), -432.285, -352.520, -1504.6290), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(mat4(-725.303, -67.13, _GLF_IDENTITY(6.7, clamp(6.7, 6.7, 6.7)), -142.444, _GLF_IDENTITY(43.20, (43.20) / 1.0), -86.92, -4.6, -63.55, -1.8, -1.4, -2183.0169, -17.90, _GLF_IDENTITY(-415.149, mix(float(-415.149), float(_GLF_FUZZED((true ? 6.8 : -510.561))), bool(false))), 9740.7021, -80.55, -5.9)) : _GLF_IDENTITY(mat4(-1887.2507, -3293.4930, -444.711, 2.3, 0.4, -5.7, -1591.6809, 56.07, -3823.1581, -6.4, -6020.7241, 5.6, 7444.9121, -432.285, -352.520, -1504.6290), (mat4(-1887.2507, -3293.4930, -444.711, 2.3, 0.4, -5.7, -1591.6809, 56.07, -3823.1581, -6.4, -6020.7241, 5.6, 7444.9121, -432.285, -352.520, -1504.6290)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED((mat4(-4.5, -68.89, -54.10, 2.6, -685.967, -9897.7324, 0.2, -167.535, -3025.7973, 8.0, 4.7, 9.9, -9.0, -9307.3870, -3.4, -72.90) + 20.99)) : (false ? _GLF_FUZZED(mat4(-725.303, -67.13, 6.7, -142.444, _GLF_IDENTITY(_GLF_IDENTITY(43.20, (43.20) / 1.0), (false ? _GLF_FUZZED(9.9) : _GLF_IDENTITY(43.20, (43.20) / 1.0))), -86.92, -4.6, -63.55, -1.8, -1.4, -2183.0169, -17.90, _GLF_IDENTITY(_GLF_IDENTITY(-415.149, float(vec4(-415.149, 1.0, 0.0, 0.0))), min(_GLF_IDENTITY(-415.149, float(vec4(-415.149, 1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(-415.149, float(vec4(-415.149, 1.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(-415.149, float(vec4(-415.149, 1.0, 0.0, 0.0))), _GLF_IDENTITY(-415.149, float(vec4(-415.149, 1.0, 0.0, 0.0))), _GLF_IDENTITY(-415.149, float(vec4(-415.149, 1.0, 0.0, 0.0))))))), 9740.7021, -80.55, -5.9)) : mat4(-1887.2507, -3293.4930, -444.711, 2.3, 0.4, -5.7, _GLF_IDENTITY(-1591.6809, float(vec4(-1591.6809, determinant(mat2(1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)), 0.0, 1.0))), 56.07, -3823.1581, -6.4, -6020.7241, 5.6, 7444.9121, -432.285, -352.520, _GLF_IDENTITY(-1504.6290, float(vec3(_GLF_IDENTITY(-1504.6290, clamp(-1504.6290, -1504.6290, -1504.6290)), 0.0, determinant(mat2(0.0, 0.0, sqrt(0.0), 0.0))))))))), transpose(transpose(_GLF_IDENTITY((false ? _GLF_FUZZED(mat4(-725.303, -67.13, 6.7, -142.444, _GLF_IDENTITY(43.20, (43.20) / 1.0), -86.92, -4.6, -63.55, -1.8, -1.4, -2183.0169, -17.90, -415.149, 9740.7021, -80.55, -5.9)) : mat4(-1887.2507, -3293.4930, -444.711, _GLF_IDENTITY(2.3, max(_GLF_IDENTITY(2.3, max(2.3, _GLF_IDENTITY(2.3, max(2.3, 2.3)))), 2.3)), 0.4, -5.7, -1591.6809, 56.07, -3823.1581, -6.4, -6020.7241, 5.6, 7444.9121, -432.285, -352.520, -1504.6290)), (false ? _GLF_FUZZED((mat4(-4.5, -68.89, -54.10, 2.6, -685.967, -9897.7324, 0.2, -167.535, -3025.7973, 8.0, 4.7, 9.9, -9.0, -9307.3870, -3.4, -72.90) + 20.99)) : (false ? _GLF_FUZZED(mat4(_GLF_IDENTITY(-725.303, max(-725.303, -725.303)), -67.13, 6.7, -142.444, _GLF_IDENTITY(43.20, (43.20) / 1.0), -86.92, -4.6, -63.55, -1.8, -1.4, -2183.0169, -17.90, -415.149, 9740.7021, -80.55, -5.9)) : mat4(-1887.2507, -3293.4930, -444.711, 2.3, 0.4, -5.7, -1591.6809, 56.07, -3823.1581, -6.4, -6020.7241, 5.6, 7444.9121, -432.285, -352.520, -1504.6290))))))));
            uaddCarry(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x);
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)))))) || false, ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)))))) || false))))))
             barrier();
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(false))
             barrier();
            ivec3 _GLF_SWITCH_0_7v[36], _GLF_SWITCH_0_8v[36];
            ;
           }
          else
           {
            switch(_GLF_SWITCH((87740 & 0)))
             {
              case 92:
              ;
              case 68:
              mat4x2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v[29];
              case 0:
              case 17:
              case 77:
              case 71:
              switch(_GLF_SWITCH(((0 << _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), 1, 1))), int(1)))))
               {
                case 1:
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 continue;
                bvec3(true, true, false).r;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / 1.0)))))
                 continue;
                if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                 barrier();
                case 0:
                if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     break;
                    continue;
                   }
                  barrier();
                 }
                _GLF_SWITCH_0_2v;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  return;
                  if(_GLF_DEAD(false))
                   break;
                 }
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                ivec3 _GLF_SWITCH_0_9v;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                 }
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(145.319, -4.8)))).y))))
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
                     barrier();
                    continue;
                   }
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
                   barrier();
                  if(_GLF_DEAD(false))
                   return;
                  if(_GLF_DEAD(false))
                   return;
                  return;
                 }
                vec4(5.4, -615.699, -4414.2963, -8.2);
                (vec4(3.5, -7.7, -7771.5956, -4067.2924) , (tanh(-0.4) / mat4x3(-2.1, -3243.4129, -46.99, 8686.9280, -27.67, 0.5, _GLF_IDENTITY(-87.11, mix(float(-87.11), _GLF_IDENTITY(float(_GLF_FUZZED(2.0)), 0.0 + (float(_GLF_FUZZED(2.0)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -2637.1290, -11.05, 196.380, -189.111, -6.8)));
                (false ? (uvec4(84097u, 188854u, 97898u, 3199u) * (uvec4(41242u, 190598u, 585u, 160303u) / GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y)) : uvec4(155575u, 11225u, 132161u, _GLF_IDENTITY(167124u, (_GLF_IDENTITY(167124u, clamp(_GLF_IDENTITY(167124u, (_GLF_IDENTITY(167124u, (167124u) >> 0u)) - 0u), 167124u, 167124u))) / 1u)));
                _GLF_struct_24 _GLF_struct_replacement_24;
                if(_GLF_DEAD(false))
                 {
                  switch(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, (1) >> 0)))))
                   {
                    case 0:
                    case 74:
                    if(_GLF_DEAD(false))
                     continue;
                    if(_GLF_DEAD(false))
                     barrier();
                    case 57:
                    case 28:
                    case 48:
                    barrier();
                    break;
                    case 72:
                    vec2 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
                    default:
                    1;
                   }
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                break;
                case 32:
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                 }
                float _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[42];
                if(_GLF_DEAD(false))
                 barrier();
                default:
                if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)) && true)))
                 {
                  if(_GLF_DEAD(false))
                   {
                    switch(_GLF_SWITCH((0 | (0 >> _GLF_IDENTITY(int(1), int(1))))))
                     {
                      case 50:
                      float _GLF_SWITCH_4_0v[4], _GLF_SWITCH_4_1v[69], _GLF_SWITCH_4_2v;
                      case 29:
                      (mat4x2(-5781.5136, 3.9, 7.7, -23.09, -34.98, -7.6, -117.502, _GLF_IDENTITY(78.21, (false ? _GLF_FUZZED(min(_GLF_SWITCH_1_0v, dot(vec3(-23.76, -7.6, 706.720), vec3(-87.60, 6222.1201, -1532.7263)))) : _GLF_IDENTITY(78.21, (78.21) - 0.0)))) / mat4x2(3.7, -6.8, -8323.2056, 51.13, 64.00, 710.219, -675.573, 3878.5235));
                      case 0:
                      case 75:
                      case 31:
                      if(_GLF_DEAD(false))
                       barrier();
                      barrier();
                      break;
                      default:
                      1;
                     }
                   }
                  continue;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                 }
                if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                 continue;
                1;
               }
              case 39:
              case 94:
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              case 91:
              if(_GLF_DEAD(false))
               barrier();
              break;
              default:
              1;
             }
           }
          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            return;
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
           barrier();
          while(false)
           {
            if(_GLF_DEAD(false))
             barrier();
            int _GLF_SWITCH_0_11v;
            if(_GLF_DEAD(false))
             {
              switch(_GLF_SWITCH(0))
               {
                case 70:
                subgroup_base;
                case 93:
                mat2x4((mat4(vec4(-9.3, -152.279, -4.6, 22.74), vec4(7.6, -5168.6400, -406.479, -5.0), vec4(-2589.6924, -1345.7617, -562.893, -712.146), vec4(8.5, 29.65, -819.254, 63.20)) - -4260.8863));
                case 0:
                case 33:
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
                break;
                case 79:
                acosh(vec3(-60.88, 0.0, 2468.9465));
                case 4:
                (GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size);
                default:
                1;
               }
             }
            float _GLF_SWITCH_0_12v[92], _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v[80];
            mat3(7101.7571, 269.344, 843.015, 98.26, -67.95, 6.5, 235.370, 4.4, 1931.1094);
            if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
             break;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               {
                switch(_GLF_SWITCH(0))
                 {
                  case 13:
                  mat4((+ mat2x4(4866.3064, 299.211, 6.1, -320.591, 3683.9445, 0.3, 2.5, 919.423)));
                  case 0:
                  case 59:
                  if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
                   barrier();
                  case 79:
                  barrier();
                  break;
                  case 57:
                  (uvec4(85787u, 170049u, 9931u, 158008u) + uvec4(115652u, 25119u, 155329u, 196759u));
                  default:
                  1;
                 }
               }
              break;
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
              barrier();
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              switch(_GLF_SWITCH(0))
               {
                case 8:
                vec3(-135.343, _GLF_IDENTITY(-8.4, min(-8.4, -8.4)), 456.593);
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                case 98:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                mat4x2(4310.4581, -8216.0482, -6.3, 2005.8931, 1.7, _GLF_IDENTITY(-5145.7990, min(_GLF_IDENTITY(-5145.7990, (-5145.7990) * 1.0), _GLF_IDENTITY(-5145.7990, clamp(-5145.7990, -5145.7990, -5145.7990)))), _GLF_IDENTITY(331.833, (331.833) + log(1.0)), -2.2);
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))))
                 break;
                if(_GLF_DEAD(false))
                 barrier();
                case 0:
                case 13:
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   break;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(false))
                     break;
                    barrier();
                   }
                  barrier();
                  if(_GLF_DEAD(false))
                   return;
                 }
                barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                if(_GLF_DEAD(false))
                 barrier();
                break;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   break;
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                 }
                default:
                1;
               }
              if(_GLF_DEAD(false))
               break;
             }
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)))[1]), vec2(_GLF_FUZZED(-61.77), _GLF_FUZZED(7.1)), bvec2(false, false))).x, mix(float(_GLF_FUZZED(49.08)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-709.523) : (injectionSwitch)[1]))))), vec2(_GLF_FUZZED(-61.77), _GLF_FUZZED(7.1)), bvec2(false, false))).x), bool(true))) > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            (clamp(uvec2(150730u, 41771u), uvec2(149795u, 148721u), uvec2(66825u, 114285u)) << 83987u);
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              switch(_GLF_SWITCH(_GLF_IDENTITY(0, ~ (~ (0)))))
               {
                case 53:
                uvec3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
                case 0:
                case 23:
                if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
                 barrier();
                case 11:
                return;
                break;
                default:
                1;
               }
             }
           }
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false), true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          {
           if(_GLF_DEAD(false))
            barrier();
           vec3 _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v;
           uvec3(55827u, 70737u, 175537u);
           ivec2(-58139, 38126);
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
                {
                 if(_GLF_DEAD(false))
                  break;
                 barrier();
                }
               break;
              }
             barrier();
            }
           ;
           bvec2 _GLF_SWITCH_0_17v[47], _GLF_SWITCH_0_18v[18], _GLF_SWITCH_0_19v[90];
           mat3x2 _GLF_SWITCH_0_20v;
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           mat4x3 _GLF_SWITCH_0_21v[57];
           GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup.y;
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.1), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0) : _GLF_FUZZED(5.3)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.5)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4250.1891), _GLF_FUZZED(-233.365)), bvec2(false, false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-652.529, 5669.6295)) : injectionSwitch)))).y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(49.52)), bool(false))))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
            barrier();
          }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0), mat2(mat3x4(mat2(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0))))))))))
           continue;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             break;
            break;
           }
          if((_GLF_SWITCH_0_0v != _GLF_SWITCH_0_0v))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            (mat4x2(-76.19, -99.07, -8.8, -2.1, -36.60, -68.89, -3139.6638, -8538.9389));
            uint _GLF_SWITCH_0_22v[61];
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            ;
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
             barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              barrier();
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, cos(0.0), 1.0))).y, injectionSwitch.y))))))
             {
              if(_GLF_DEAD(false))
               barrier();
              return;
             }
            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
             barrier();
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6224.0260, 216.735)) : _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))))).y)))) || false)) || false)))))
             barrier();
            _GLF_struct_37 _GLF_struct_replacement_37;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            ;
           }
         }
        if(_GLF_DEAD(false))
         return;
        uvec4(96291u, 119363u, 127510u, 146425u);
        if(_GLF_DEAD(false))
         return;
        if(_GLF_DEAD(false))
         return;
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        int _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v;
        GLF_merged2_0_1_17_1_2_16_GLF_SWITCH_0_25v_GLF_SWITCH_0_3v.x = _GLF_SWITCH_0_25v;
        case 31:
        vec2 _GLF_SWITCH_0_27v[57];
        mat4x3 _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v, _GLF_SWITCH_0_30v;
        if(false)
         {
          for(          floatBitsToUint(2.6);
 false; ((uvec4(6623u, 127247u, 88607u, 58511u) - subgroup_id) * GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x))
           {
            switch(_GLF_SWITCH((0 & (35427))))
             {
              case 23:
              vec2(-3.1, 7.6);
              case 0:
              if(_GLF_DEAD(false))
               return;
              mat4 _GLF_SWITCH_0_31v[40];
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
               barrier();
              mat3x4 _GLF_SWITCH_0_32v;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
               break;
              mat3x2 _GLF_SWITCH_0_33v, _GLF_SWITCH_0_34v, _GLF_SWITCH_0_35v;
              if(_GLF_DEAD(false))
               barrier();
              vec3 _GLF_SWITCH_0_36v, _GLF_SWITCH_0_37v[56];
              (true ? bvec3(true, false, false) : greaterThanEqual(uvec3(150638u, 3027u, 104572u), uvec3(_GLF_IDENTITY(181916u, clamp(181916u, _GLF_IDENTITY(181916u, max(181916u, 181916u)), 181916u)), 193365u, 12608u)));
              if(_GLF_DEAD(false))
               barrier();
              ivec4 _GLF_SWITCH_0_38v;
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                barrier();
               }
              uvec3 _GLF_SWITCH_0_39v[24];
              break;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                break;
                if(_GLF_DEAD(false))
                 return;
               }
              case 61:
              mat4(5.8, 5.0, _GLF_IDENTITY(95.64, clamp(95.64, 95.64, _GLF_IDENTITY(95.64, float(_GLF_IDENTITY(mat3(95.64, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3(3773.0734, -2.8, 0.2, -715.632, -650.532, -2.1, 6.2, -157.098, -7695.5595)) : mat3(95.64, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))), 580.956, 4.6, 4.0, -10.08, 88.52, -425.866, -9.5, 0.4, -7733.7286, 4.0, 3109.8373, 7.6, 9143.8415);
              if(_GLF_DEAD(false))
               barrier();
              default:
              1;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
             }
           }
         }
        else
         {
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
           barrier();
          if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          mat2x3(mat2(9.9, -6681.7656, -55.97, _GLF_IDENTITY(_GLF_IDENTITY(348.381, 1.0 * (348.381)), (_GLF_IDENTITY(348.381, 1.0 * (348.381))) * 1.0)));
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           barrier();
          mat4 _GLF_SWITCH_0_40v;
          if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], 0.0 + (_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))), vec2(_GLF_FUZZED(-9.0), _GLF_FUZZED(11.17)), bvec2(false, false))).x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           return;
          mat3 _GLF_SWITCH_0_41v;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (true))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), ! (! (! (_GLF_DEAD(false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, true && (true))))), true, false, false))))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          ;
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
           barrier();
          bvec4 _GLF_SWITCH_0_42v, _GLF_SWITCH_0_43v, _GLF_SWITCH_0_44v[49];
          mat2(-4.4, 2.5, 77.50, _GLF_IDENTITY(-59.36, max(-59.36, _GLF_IDENTITY(-59.36, mix(float(_GLF_IDENTITY(-59.36, mix(float(_GLF_FUZZED((+ -321.744))), float(-59.36), bool(true)))), float(_GLF_FUZZED(-12.51)), bool(false))))));
          floatBitsToUint(vec3(0.2, -443.894, -7955.3210));
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            barrier();
           }
          if(_GLF_DEAD(false))
           return;
         }
        if(_GLF_DEAD(false))
         return;
        case 82:
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          barrier();
         }
        break;
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         return;
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        default:
        1;
        if(_GLF_DEAD(false))
         barrier();
       }
      if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
       {
        if(_GLF_DEAD(false))
         return;
        barrier();
       }
      if(_GLF_DEAD(false))
       return;
     }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 33:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false)))))))
      {
       switch(_GLF_SWITCH(0))
        {
         case 83:
         if(false)
          {
          }
         case 47:
         if((bvec3(false, true, true) != bvec3(true, true, false)))
          {
          }
         else
          {
           float _GLF_SWITCH_5_0v;
           mat2x3 _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
           (vec3(-66.16, -4.5, -8.9) , bvec3(false, false, true));
           step(-76.48, vec4(-2.6, -7734.2516, -35.72, 372.164));
           vec2(1.0, 766.650);
           bool _GLF_SWITCH_5_3v, _GLF_SWITCH_5_4v;
           mat4x3 _GLF_SWITCH_5_5v;
          }
         case 0:
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         case 1:
         case 63:
         case 75:
         return;
         break;
         default:
         1;
        }
      }
     if(_GLF_DEAD(false))
      return;
     uint _GLF_SWITCH_0_45v;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     default:
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(true, _GLF_IDENTITY(true, bool(bool(true))))), false, true)), bool(bvec4(bool(bvec3(bool(bvec2(true, true)), false, true)), true, true, false)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
        barrier();
       barrier();
      }
     1;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(atan(-7585.5386, 5.8)))), injectionSwitch[1])).y))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true)))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       switch(_GLF_SWITCH(0))
        {
         case 0:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         break;
         default:
         1;
        }
      }
    }
  }
}
