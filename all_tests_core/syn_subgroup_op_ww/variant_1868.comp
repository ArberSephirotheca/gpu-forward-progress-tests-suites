#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))))), _GLF_IDENTITY(false, true && (false)), true)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(bvec3(_GLF_DEAD(false), false, true))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(bvec3(_GLF_DEAD(false), false, true))))))))), ! (! (bool(bool(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(bvec3(_GLF_DEAD(false), false, true))))))))))))))), true && (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), false)))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), false))))))))))), bool(bvec2(! (! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), false))))))))))), false))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (bool(bvec3(_GLF_DEAD(false), false, true))))), ! (! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, true && (true))))))))))), _GLF_IDENTITY(! (! (bool(bool(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(bvec3(_GLF_DEAD(false), false, true))))))))))), true && (! (! (bool(bool(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(false), false, true)))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(false), false, true)))), ! (! (! (! (bool(bvec3(_GLF_DEAD(false), false, true)))))))) || _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(false), false, true)))), ! (! (! (! (bool(bvec3(_GLF_DEAD(false), false, true)))))))) || _GLF_IDENTITY(false, ! (! (false))), false, true)), (bool(bvec3((_GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(false), false, true)))), ! (! (! (! (bool(bvec3(_GLF_DEAD(false), false, true)))))))) || _GLF_IDENTITY(false, ! (! (false))), false, true))) || false))))))))))))))))))), bool(bvec2(! (! (bool(bvec3(_GLF_DEAD(false), false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), bool(bool(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)))))), ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(bvec3(_GLF_DEAD(false), false, true))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(bvec3(_GLF_DEAD(false), false, true))))))))), ! (! (bool(bool(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(bvec3(_GLF_DEAD(false), false, true))))))))))))))), true && (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), false)))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), false))))))))))), bool(bvec2(! (! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), false))))))))))), false))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (bool(bvec3(_GLF_DEAD(false), false, true))))), ! (! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, true && (true))))))))))), _GLF_IDENTITY(! (! (bool(bool(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(bvec3(_GLF_DEAD(false), false, true))))))))))), true && (! (! (bool(bool(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(false), false, true)))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(false), false, true)))), ! (! (! (! (bool(bvec3(_GLF_DEAD(false), false, true)))))))) || _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(false), false, true)))), ! (! (! (! (bool(bvec3(_GLF_DEAD(false), false, true)))))))) || _GLF_IDENTITY(false, ! (! (false))), false, true)), (bool(bvec3((_GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(false), false, true)))), ! (! (! (! (bool(bvec3(_GLF_DEAD(false), false, true)))))))) || _GLF_IDENTITY(false, ! (! (false))), false, true))) || false))))))))))))))))))), bool(bvec2(! (! (bool(bvec3(_GLF_DEAD(false), false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), bool(bool(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)))))), ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(bvec3(_GLF_DEAD(false), false, true))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(bvec3(_GLF_DEAD(false), false, true))))))))), ! (! (bool(bool(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(bvec3(_GLF_DEAD(false), false, true))))))))))))))), true && (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), false)))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), false))))))))))), bool(bvec2(! (! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), false))))))))))), false))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (bool(bvec3(_GLF_DEAD(false), false, true))))), ! (! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, true && (true))))))))))), _GLF_IDENTITY(! (! (bool(bool(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(bvec3(_GLF_DEAD(false), false, true))))))))))), true && (! (! (bool(bool(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(false), false, true)))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(false), false, true)))), ! (! (! (! (bool(bvec3(_GLF_DEAD(false), false, true)))))))) || _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(false), false, true)))), ! (! (! (! (bool(bvec3(_GLF_DEAD(false), false, true)))))))) || _GLF_IDENTITY(false, ! (! (false))), false, true)), (bool(bvec3((_GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(false), false, true)))), ! (! (! (! (bool(bvec3(_GLF_DEAD(false), false, true)))))))) || _GLF_IDENTITY(false, ! (! (false))), false, true))) || false))))))))))))))))))), bool(bvec2(! (! (bool(bvec3(_GLF_DEAD(false), false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), bool(bool(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)))))), ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))))), true)), (bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(bvec3(_GLF_DEAD(false), false, true))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(bvec3(_GLF_DEAD(false), false, true))))))))), ! (! (bool(bool(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(bvec3(_GLF_DEAD(false), false, true))))))))))))))), true && (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), false)))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), false))))))))))), bool(bvec2(! (! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), false))))))))))), false))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (bool(bvec3(_GLF_DEAD(false), false, true))))), ! (! (! (bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, true && (true))))))))))), _GLF_IDENTITY(! (! (bool(bool(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (! (! (bool(bvec3(_GLF_DEAD(false), false, true))))))))))), true && (! (! (bool(bool(! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(false), false, true))), ! (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(false), false, true)))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(false), false, true)))), ! (! (! (! (bool(bvec3(_GLF_DEAD(false), false, true)))))))) || _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(false), false, true)))), ! (! (! (! (bool(bvec3(_GLF_DEAD(false), false, true)))))))) || _GLF_IDENTITY(false, ! (! (false))), false, true)), (bool(bvec3((_GLF_IDENTITY(! (! (bool(bvec3(_GLF_DEAD(false), false, true)))), ! (! (! (! (bool(bvec3(_GLF_DEAD(false), false, true)))))))) || _GLF_IDENTITY(false, ! (! (false))), false, true))) || false))))))))))))))))))), bool(bvec2(! (! (bool(bvec3(_GLF_DEAD(false), false, true)))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), bool(bool(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)))))), ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))))), true))) || false))) || false)), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! _GLF_IDENTITY(_GLF_IDENTITY((! ((_GLF_DEAD(false)) && true)), bool(bvec2((! _GLF_IDENTITY(((_GLF_DEAD(false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((_GLF_DEAD(false)) && true)))), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! ((_GLF_DEAD(false)) && true)), bool(bvec2((! ((_GLF_DEAD(false)) && true)), true))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_DEAD(false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_DEAD(false)) && true), _GLF_IDENTITY(false || (((_GLF_DEAD(false)) && true)), ! (! (false || (((_GLF_DEAD(false)) && true))))))), (! (_GLF_IDENTITY(((_GLF_DEAD(false)) && true), false || (((_GLF_DEAD(false)) && true))))) && true)))), bool(bvec2((! ((_GLF_DEAD(false)) && true)), true))))))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), max(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), uint(uvec3(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))), workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)))), max(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), max(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), uint(uvec3(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))), workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)))), _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), max(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), uint(uvec3(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))), workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))))));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), clamp(clamp(workgroup_base, workgroup_base, workgroup_base), _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), clamp(_GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), clamp(clamp(workgroup_base, workgroup_base, workgroup_base), _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), max(clamp(workgroup_base, workgroup_base, workgroup_base), clamp(workgroup_base, workgroup_base, workgroup_base))), clamp(workgroup_base, workgroup_base, workgroup_base))), clamp(workgroup_base, workgroup_base, workgroup_base), _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), 1u * (clamp(workgroup_base, workgroup_base, workgroup_base))), clamp(_GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), clamp(clamp(workgroup_base, workgroup_base, workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (_GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (_GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), clamp(clamp(workgroup_base, workgroup_base, workgroup_base), clamp(workgroup_base, workgroup_base, workgroup_base), clamp(workgroup_base, workgroup_base, workgroup_base)))) | (0u & 184345u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(clamp(workgroup_base, workgroup_base, workgroup_base), clamp(workgroup_base, workgroup_base, workgroup_base), clamp(workgroup_base, workgroup_base, workgroup_base))), clamp(workgroup_base, workgroup_base, workgroup_base))), clamp(workgroup_base, workgroup_base, workgroup_base), _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) + (0u | 0u)))), (false ? _GLF_FUZZED(88493u) : clamp(workgroup_base, workgroup_base, workgroup_base))))))), clamp(_GLF_FUZZED(workgroup_base), _GLF_FUZZED(workgroup_base), _GLF_FUZZED(workgroup_base))))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), uint(uint(_GLF_IDENTITY(uint(8u), uint(8u)))))) / 1u))), (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), clamp(clamp(workgroup_base, workgroup_base, workgroup_base), _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), clamp(_GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), clamp(clamp(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(uvec2(8771u, 142943u).s) : _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), workgroup_base, workgroup_base)))), workgroup_base, workgroup_base), clamp(workgroup_base, workgroup_base, workgroup_base), clamp(workgroup_base, workgroup_base, workgroup_base))), clamp(workgroup_base, workgroup_base, workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) ^ 0u), max(_GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) ^ 0u), _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) ^ 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), clamp(_GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), _GLF_IDENTITY(clamp(clamp(workgroup_base, workgroup_base, workgroup_base), _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), clamp(clamp(workgroup_base, workgroup_base, workgroup_base), clamp(workgroup_base, workgroup_base, workgroup_base), clamp(workgroup_base, workgroup_base, workgroup_base))), clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp(clamp(workgroup_base, workgroup_base, workgroup_base), _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), clamp(clamp(workgroup_base, workgroup_base, workgroup_base), clamp(workgroup_base, workgroup_base, workgroup_base), clamp(workgroup_base, workgroup_base, workgroup_base))), clamp(workgroup_base, workgroup_base, workgroup_base)) : _GLF_FUZZED(virtual_gid)))), clamp(workgroup_base, workgroup_base, workgroup_base), _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), (clamp(workgroup_base, workgroup_base, workgroup_base)) + (0u | 0u)))), (false ? _GLF_FUZZED(88493u) : clamp(workgroup_base, workgroup_base, workgroup_base))))))), clamp(_GLF_FUZZED(workgroup_base), _GLF_FUZZED(workgroup_base), _GLF_FUZZED(workgroup_base))))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size)) | 0u);
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) / 1u)))))), (true ? _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)) : _GLF_FUZZED(num_workgroup))))), min(_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((true ? virtual_gid : _GLF_FUZZED(num_workgroup)), uint(uint(_GLF_IDENTITY((true ? virtual_gid : _GLF_FUZZED(num_workgroup)), clamp(_GLF_IDENTITY((true ? virtual_gid : _GLF_FUZZED(num_workgroup)), 0u + ((true ? virtual_gid : _GLF_FUZZED(num_workgroup)))), (true ? virtual_gid : _GLF_FUZZED(num_workgroup)), (true ? virtual_gid : _GLF_FUZZED(num_workgroup)))))))))), _GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(num_workgroup)))))))], uint(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) >> _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 1 * (0)))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 + ((_GLF_IDENTITY(1, 0 + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-63197) : 1))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-63197) : 1))), ((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-63197) : 1)))) * 1))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-63197) : 1))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-63197) : 1))), ((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-63197) : 1)))) * 1))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-63197) : 1))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-63197) : 1))), ((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-63197) : 1)))) * 1))), max(_GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-63197) : 1))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-63197) : 1))), ((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-63197) : 1)))) * 1))), _GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-63197) : 1))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-63197) : 1))), ((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-63197) : 1)))) * 1)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-63197) : 1))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-63197) : 1))), ((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-63197) : 1)))) * 1))))))))) ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((false ? _GLF_FUZZED(7485.6235) : _GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY((false ? _GLF_FUZZED(7485.6235) : _GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(594.971) : (false ? _GLF_FUZZED(7485.6235) : _GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(7485.6235) : _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x)), min(min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((false ? _GLF_FUZZED(7485.6235) : _GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY((false ? _GLF_FUZZED(7485.6235) : _GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(594.971) : (false ? _GLF_FUZZED(7485.6235) : _GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(7485.6235) : _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY((false ? _GLF_FUZZED(7485.6235) : _GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY((false ? _GLF_FUZZED(7485.6235) : _GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(594.971) : (false ? _GLF_FUZZED(7485.6235) : _GLF_ZERO(0.0, injectionSwitch.x)))), (false ? _GLF_FUZZED(7485.6235) : _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x)))))))))), _GLF_IDENTITY(4, ~ (~ (4))), 64, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 1), _GLF_IDENTITY((ivec3(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, ~ (~ (4))), 4, 4)), 4)), 1, 1)), clamp(_GLF_IDENTITY((ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 1)), ((ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 1))) >> ivec3(0, 0, 0)), (ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 1)), _GLF_IDENTITY((ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 1)), (_GLF_IDENTITY((ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 1)), ((ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 1))) << ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) - ivec3(0, 0, 0)))) | _GLF_IDENTITY((ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 1)), min(_GLF_IDENTITY((ivec3(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), ivec3(ivec3((ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 1))))), (ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 1)))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), ((_GLF_IDENTITY(4, min(4, 4)))) * 1), _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), clamp((_GLF_IDENTITY(4, min(4, 4))), (_GLF_IDENTITY(4, min(4, 4))), (_GLF_IDENTITY(4, min(4, 4))))), _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), _GLF_IDENTITY(((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) ^ 0), 4)))) + (0 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, min(2, 2))))), ((_GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), max((_GLF_IDENTITY(4, min(4, 4))), (_GLF_IDENTITY(4, min(4, 4)))))) + (0 << _GLF_IDENTITY(int(2), int(2)))) >> 0)))) | 0));
 if(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_size))))), (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)))
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) * 1u), (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))) : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, 0u | (num_workgroup))))), _GLF_IDENTITY(4, 0 | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), (_GLF_IDENTITY(4, 1 * (4))) + (0 ^ 0))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), clamp(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(4, 1 * (4)))))), max(~ ((_GLF_IDENTITY(4, 1 * (4)))), ~ ((_GLF_IDENTITY(4, 1 * (4)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (4))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(5193)))))), max(~ ((_GLF_IDENTITY(4, 1 * (4)))), ~ ((_GLF_IDENTITY(4, 1 * (4))))))))) << 0)), _GLF_IDENTITY(64, _GLF_IDENTITY(int(int(_GLF_IDENTITY(64, 0 + (64)))), (int(_GLF_IDENTITY(int(_GLF_IDENTITY(64, 0 + (64))), (int(_GLF_IDENTITY(64, 0 + (64)))) * 1))) - 0)), 4);
   subgroupAll(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))));
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u), _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))))], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (int(4))), (int(4)) >> 0), (int(4)) << 0))), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (int(4))), (int(4)) >> 0), (int(4)) << 0))), int(int(_GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (int(4))), (int(4)) >> 0), (int(4)) << 0))))))) | 0), _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(64, min(64, 64))))))), (_GLF_IDENTITY(false, false || (false)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-79080), max(_GLF_IDENTITY(_GLF_FUZZED(-79080), 0 ^ (_GLF_FUZZED(-79080))), _GLF_IDENTITY(_GLF_FUZZED(-79080), 0 | (_GLF_FUZZED(-79080))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_FUZZED(-79080)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_FUZZED(-79080))), (_GLF_IDENTITY((~ (_GLF_FUZZED(-79080))), (_GLF_IDENTITY((~ (_GLF_FUZZED(-79080))), clamp((~ (_GLF_FUZZED(-79080))), (~ (_GLF_FUZZED(-79080))), (~ (_GLF_FUZZED(-79080)))))) * 1)) << 0), (~ (~ (_GLF_FUZZED(-79080)))) ^ 0))), min(~ _GLF_IDENTITY((_GLF_FUZZED(-79080)), (false ? _GLF_FUZZED(-97363) : (_GLF_FUZZED(-79080)))), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_FUZZED(-79080)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((_GLF_FUZZED(-79080)), min((_GLF_FUZZED(-79080)), (_GLF_IDENTITY(_GLF_FUZZED(-79080), (_GLF_FUZZED(-79080)) | 0)))), 0)), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_FUZZED(-79080)), min((_GLF_FUZZED(-79080)), (_GLF_FUZZED(-79080)))), 0), (ivec2(_GLF_IDENTITY((_GLF_FUZZED(-79080)), min((_GLF_FUZZED(-79080)), (_GLF_FUZZED(-79080)))), 0)) >> ivec2(0, 0)))) >> 0)), _GLF_IDENTITY((~ (_GLF_FUZZED(-79080))) | _GLF_IDENTITY(0, max(0, 0)), ((~ (_GLF_FUZZED(-79080))) | 0) | (_GLF_IDENTITY((~ (_GLF_FUZZED(-79080))) | 0, (_GLF_IDENTITY((~ (_GLF_FUZZED(-79080))) | 0, ((~ (_GLF_FUZZED(-79080))) | 0) | ((~ (_GLF_FUZZED(-79080))) | 0))) + 0)))))))) : _GLF_IDENTITY(64, min(64, 64)))), 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (injectionSwitch.y)), (injectionSwitch.y) / 1.0)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0))))).y))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))))))), true, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), bool(bvec4((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 1.0)))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 1.0))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0), 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), abs(0.0), 0.0)), 0.0), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0), 0.0, _GLF_IDENTITY(determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), abs(0.0), 0.0)), (true ? determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), abs(0.0), 0.0)) : _GLF_FUZZED(_GLF_IDENTITY(trunc(-195.972), min(trunc(-195.972), _GLF_IDENTITY(trunc(-195.972), min(trunc(-195.972), trunc(-195.972)))))))), 0.0))))), mix(float(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0), mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, determinant(_GLF_IDENTITY(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), abs(0.0), 0.0), mat3(1.0) * (mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), abs(0.0), 0.0)))), 0.0), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0), 0.0, _GLF_IDENTITY(determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), abs(0.0), 0.0)), min(determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), abs(0.0), 0.0)), determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), abs(0.0), 0.0)))), 0.0)))))), _GLF_IDENTITY(float(_GLF_FUZZED(vec3(_GLF_IDENTITY(886.212, (_GLF_IDENTITY(886.212, mix(float(_GLF_FUZZED(85.01)), float(886.212), bool(true)))) * cos(0.0)), 6217.5262, 5995.8091).g)), float(vec3(_GLF_IDENTITY(float(_GLF_FUZZED(vec3(_GLF_IDENTITY(886.212, (_GLF_IDENTITY(886.212, mix(float(_GLF_FUZZED(85.01)), float(886.212), bool(true)))) * cos(0.0)), 6217.5262, 5995.8091).g)), float(mat3(float(_GLF_FUZZED(vec3(_GLF_IDENTITY(886.212, (_GLF_IDENTITY(886.212, mix(float(_GLF_FUZZED(85.01)), float(886.212), bool(true)))) * cos(0.0)), 6217.5262, 5995.8091).g)), 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 0.0))), tan(sqrt(0.0)), sqrt(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))))))), bool(false))))) / 1.0)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
    barrier();
   subgroupAll(true);
  }
}
