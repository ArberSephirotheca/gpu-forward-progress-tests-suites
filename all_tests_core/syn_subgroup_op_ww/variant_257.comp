#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, (_GLF_IDENTITY((_GLF_DEAD(false)) && true, true && ((_GLF_DEAD(false)) && true))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), clamp(_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), vec2(vec4((injectionSwitch) - vec2(0.0, 0.0), 0.0, 0.0))), (injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)))), 1.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, cos(0.0), 1.0, 1.0, abs(1.0), 1.0, 1.0))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.0) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, sin(0.0))), mix(vec2(_GLF_FUZZED(3.3), _GLF_FUZZED(-6.0)), vec2((vec2(vec3(injectionSwitch, sin(0.0))))[0], (vec2(vec3(injectionSwitch, sin(0.0))))[1]), bvec2(true, true)))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, sin(0.0))), mix(vec2(_GLF_FUZZED(3.3), _GLF_FUZZED(-6.0)), vec2((vec2(vec3(injectionSwitch, sin(0.0))))[0], (vec2(vec3(injectionSwitch, sin(0.0))))[1]), bvec2(true, true)))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, sin(0.0))), mix(vec2(_GLF_FUZZED(3.3), _GLF_FUZZED(-6.0)), vec2((vec2(vec3(injectionSwitch, sin(0.0))))[0], (vec2(vec3(injectionSwitch, sin(0.0))))[1]), bvec2(true, true)))).x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, sin(0.0))), mix(vec2(_GLF_FUZZED(3.3), _GLF_FUZZED(-6.0)), vec2((vec2(vec3(injectionSwitch, sin(0.0))))[0], (vec2(vec3(injectionSwitch, sin(0.0))))[1]), bvec2(true, true)))).x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true))), false, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true))), false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(bvec2(_GLF_DEAD(false), true))))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))) || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.1) : injectionSwitch.x)) > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.9))), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false)))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && true)) && (false)))), _GLF_IDENTITY(true, false || (true)) && (bool(bvec3(_GLF_DEAD(false), true, false))))), false, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x > injectionSwitch.y)))) || false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))) && true))))))) || _GLF_IDENTITY(false, true && (false))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.4)), float(injectionSwitch.y), bool(true)))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.4)), float(injectionSwitch.y), bool(true))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(false, true, _GLF_IDENTITY(false, true && (false)), false))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-69.19) : injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(log(1.0) + (injectionSwitch.y), mix(float(log(1.0) + (injectionSwitch.y)), float(_GLF_FUZZED(((uvec2(81718u, 66283u) == uvec2(135848u, 141651u)) ? -9587.0435 : 349.567))), bool(false)))))))))), ! _GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-66.07)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2((true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-66.07), mix(float(_GLF_FUZZED(5222.7886)), float(_GLF_FUZZED(-66.07)), bool(true)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(6.9, -1817.9824, -587.386, 4.2, 9.9, -1.6, 81.36, 7.4)) : mat4x2((true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-66.07, clamp(-66.07, _GLF_IDENTITY(-66.07, max(-66.07, -66.07)), -66.07)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2((true ? injectionSwitch.y : _GLF_FUZZED(-66.07)), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(6.9, -1817.9824, -587.386, 4.2, 9.9, -1.6, 81.36, 7.4)) : mat4x2((true ? injectionSwitch.y : _GLF_FUZZED(-66.07)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), 0.0 + (float(_GLF_IDENTITY(mat4x2((true ? injectionSwitch.y : _GLF_FUZZED(-66.07)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(6.9, -1817.9824, -587.386, 4.2, 9.9, -1.6, 81.36, 7.4)) : mat4x2(_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-66.07)), float(float((true ? injectionSwitch.y : _GLF_FUZZED(-66.07))))), 0.0, 1.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0, 0.0, 1.0, 1.0)))))), float(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-66.07), mix(float(true ? injectionSwitch.y : _GLF_FUZZED(-66.07)), float(_GLF_FUZZED(385.770)), bool(false)))), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), (false ? _GLF_FUZZED(mat4x2(6.9, -1817.9824, -587.386, 4.2, 9.9, -1.6, 81.36, 7.4)) : mat4x2((true ? injectionSwitch.y : _GLF_FUZZED(-66.07)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))))))))), (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-66.07))))))), true && ((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-66.07)))))))))) || false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(97.37)), float(0.0), bool(true))))), 1.0, 0.0, 0.0, determinant(mat3(log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, abs(1.0), 1.0, 1.0, 1.0)), (float(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, determinant(mat3(log(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, abs(1.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7072.3835)), bool(false))), 1.0, 1.0))) * 1.0)), (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4((false), false, true, false)))), ! (! (_GLF_IDENTITY(false, true && (false))))), true)), false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), true, true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))), true))), true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), false)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), false, true), false)))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true), false, true), false)))))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, abs(1.0), 1.0)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, abs(1.0), 1.0))))))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), 1u)), (uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), 1u))) - 0u)) * _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) | _GLF_IDENTITY((workgroup_size), min((workgroup_size), (workgroup_size))), uint(uint((workgroup_size) | _GLF_IDENTITY((workgroup_size), min((workgroup_size), (workgroup_size))))))) * _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))) / 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, ((! (false)) && true) && true)))), false, false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.8), _GLF_FUZZED(-80.43)), bvec2(false, false))).y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(154.909)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(float(_GLF_FUZZED(154.909)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(float(_GLF_FUZZED(154.909)), 0.0, 0.0, 0.0, sqrt(1.0), 0.0), (mat3x2(float(_GLF_FUZZED(154.909)), 0.0, 0.0, 0.0, sqrt(1.0), 0.0)) * mat3(1.0))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(float(_GLF_FUZZED(154.909)), 0.0, 0.0, 0.0, sqrt(1.0), 0.0), (mat3x2(float(_GLF_FUZZED(154.909)), 0.0, 0.0, 0.0, sqrt(1.0), 0.0)) * mat3(1.0))), (float(_GLF_IDENTITY(mat3x2(float(_GLF_FUZZED(154.909)), 0.0, 0.0, 0.0, sqrt(1.0), 0.0), (mat3x2(float(_GLF_FUZZED(154.909)), 0.0, 0.0, 0.0, sqrt(1.0), 0.0)) * mat3(1.0)))) / 1.0)) / 1.0)), 0.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(float(_GLF_FUZZED(154.909)), float(_GLF_IDENTITY(mat3x2(float(_GLF_FUZZED(154.909)), 0.0, 0.0, 0.0, sqrt(1.0), 0.0), (mat3x2(float(_GLF_FUZZED(154.909)), 0.0, 0.0, 0.0, sqrt(1.0), 0.0)) * mat3(1.0)))), 0.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat4x2(_GLF_IDENTITY(float(_GLF_FUZZED(154.909)), float(_GLF_IDENTITY(mat3x2(float(_GLF_FUZZED(154.909)), 0.0, 0.0, 0.0, sqrt(1.0), 0.0), (mat3x2(float(_GLF_FUZZED(154.909)), 0.0, 0.0, 0.0, sqrt(1.0), 0.0)) * mat3(1.0)))), 0.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0))))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(154.909)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(154.909)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) && true))))) > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(154.909)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) && true))))) > injectionSwitch.y)))) && true) && true)) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size + subgroup_local_id) >> (0u | 0u)), _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) / 1u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_local_id, workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))) + 0u) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), ~ (~ (uint(uint(subgroup_local_id))))))), (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), ~ (~ (uint(uint(subgroup_local_id)))))))) - 0u)), clamp(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)) - 0u))), ~ (~ (uint(_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))))), (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), ~ _GLF_IDENTITY((~ (uint(uint(subgroup_local_id)))), ~ (~ ((~ (uint(uint(subgroup_local_id))))))))))) - 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), ~ (~ (uint(uint(subgroup_local_id))))))), (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), ~ (~ (uint(uint(subgroup_local_id)))))))) - 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), ~ (~ (uint(uint(subgroup_local_id))))))), (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), ~ (~ (uint(uint(subgroup_local_id)))))))) - 0u))))), subgroup_local_id))) | 0u)), uint(uvec2(min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY((_GLF_ONE(1.0, injectionSwitch.y)) * abs(1.0), min((_GLF_ONE(1.0, injectionSwitch.y)) * abs(1.0), (_GLF_ONE(1.0, injectionSwitch.y)) * abs(1.0))))))) - 0u) * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_size))), ~ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_size))), 0u | (~ _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))))))))))))), _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u)), (true ? _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) << 0u) : _GLF_FUZZED((workgroup_id --)))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_size))), ~ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : (subgroup_size)), ~ (~ ((false ? _GLF_FUZZED(subgroup_size) : (subgroup_size)))))), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | 0u))))))) | (~ _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_size)))))))), _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u)), (true ? _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) << 0u) : _GLF_FUZZED(_GLF_IDENTITY((workgroup_id --), ~ (~ ((workgroup_id --))))))) | 0u)) << 0u))), (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) * abs(1.0))))) - 0u) * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : (subgroup_size)), ~ (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : (subgroup_size)), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : (subgroup_size)), ((false ? _GLF_FUZZED(subgroup_size) : (subgroup_size))) >> 0u)) << 0u))))), ~ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_size))), 0u | (~ _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_size)))))))), _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u)), (true ? _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)), ((~ (subgroup_size))) << 0u) : _GLF_FUZZED((workgroup_id --)))) | 0u)))) << 0u) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), ~ (~ (~ (workgroup_base + subgroup_id * subgroup_size)))))) + subgroup_local_id), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))))) - 0.0), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(17.53) : 1.0), mix(float(_GLF_FUZZED(806.435)), float((false ? _GLF_FUZZED(17.53) : 1.0)), bool(true)))), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(17.53) : 1.0), mix(float(_GLF_FUZZED(806.435)), float((false ? _GLF_FUZZED(17.53) : 1.0)), bool(true)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(17.53), (false ? _GLF_FUZZED(376.527) : _GLF_FUZZED(17.53))) : 1.0), mix(float(_GLF_FUZZED(806.435)), float((false ? _GLF_FUZZED(17.53) : 1.0)), bool(true))))))) + _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.2)))))), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-6967.3768))))), injectionSwitch, injectionSwitch)).x))))));
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) - 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))) * subgroup_size)))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)))))), ! (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true)))))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (virtual_gid)), max(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))], uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-51682, (-51682) - 0)) : _GLF_IDENTITY(1, (1) | 0)), 0 | (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-51682) : _GLF_IDENTITY(1, (1) | 0)), clamp((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-51682) : _GLF_IDENTITY(1, (1) | 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-51682) : _GLF_IDENTITY(1, (1) | 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-51682) : _GLF_IDENTITY(1, (1) | 0))))))), 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-48723) : _GLF_IDENTITY(1, min(1, 1))))) - 0))), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), int(ivec2(_GLF_IDENTITY((1), clamp((1), (1), (1))), 0)))) | ((1))) - _GLF_IDENTITY(0, int(ivec2(0, 0))))))) - 0)))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), false, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), min(int(ivec2(1, 1)), int(ivec2(1, 1)))))), ivec2(0, 0) | (ivec2(1, 1))))))) < _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), ((_GLF_IDENTITY(false, true && (false)))) || false)))), true && (! (_GLF_IDENTITY((false), ((false)) || false)))))), bool(bvec3(! (false), true, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * 1u)) | (_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(virtual_gid))))), (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * 1u)) | (_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(virtual_gid)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * 1u)) | (_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(virtual_gid))))), (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * 1u)) | (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((true ? next_virtual_gid : _GLF_FUZZED(virtual_gid)), max((true ? next_virtual_gid : _GLF_FUZZED(virtual_gid)), _GLF_IDENTITY((true ? next_virtual_gid : _GLF_FUZZED(virtual_gid)), 0u + ((true ? next_virtual_gid : _GLF_FUZZED(virtual_gid)))))))))) * (1u | 1u)))), _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), min((next_virtual_gid), (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))) - 0u)))), 0u | (_GLF_IDENTITY((next_virtual_gid), min((next_virtual_gid), (next_virtual_gid))))) << 0u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * 1u)) | (_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(virtual_gid))))), (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * 1u)) | (_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(virtual_gid)))))) | (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * 1u)) | (_GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(virtual_gid))))))), _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), min((next_virtual_gid), (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))) - 0u)))), 0u | (_GLF_IDENTITY((next_virtual_gid), min((next_virtual_gid), (next_virtual_gid))))) << 0u))))))], uint(2), _GLF_IDENTITY(4, (4) | (4)), 64, 4);
   subgroupAll(_GLF_IDENTITY(false, (false) || false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))) > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), log(1.0), _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), length(vec2(0.0, 0.0)), _GLF_IDENTITY(tan(0.0), min(_GLF_IDENTITY(tan(0.0), min(_GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(-369.683)), bool(false))), tan(0.0))), tan(0.0))), 0.0, 0.0, 1.0, tan(0.0), exp(0.0)))) > injectionSwitch.y)))) && true)))) || false), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))), (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))) || false))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-29.05, -3997.1889)))).y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(log(1.0), (log(1.0)) * cos(0.0))) > injectionSwitch.y))), (bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0)) - 0.0) : _GLF_FUZZED(9.2))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), log(1.0), sin(0.0), length(vec2(0.0, 0.0)), _GLF_IDENTITY(tan(0.0), min(_GLF_IDENTITY(tan(0.0), min(_GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(_GLF_IDENTITY(-369.683, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(-369.683, mix(float(-369.683), float(_GLF_FUZZED(4294.4686)), bool(false))), sqrt(0.0), sin(abs(0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(tan(0.0), 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(tan(0.0), 1.0, 1.0), vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x) + (1.0), 1.0 * (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x) + (1.0), _GLF_IDENTITY(float(float(_GLF_ZERO(0.0, injectionSwitch.x) + (1.0))), (true ? float(float(_GLF_ZERO(0.0, injectionSwitch.x) + (1.0))) : _GLF_FUZZED(-453.762))))))), 0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0), transpose(transpose(mat4x3(_GLF_IDENTITY(-369.683, mix(float(-369.683), _GLF_IDENTITY(float(_GLF_FUZZED(4294.4686)), float(mat2x3(float(_GLF_FUZZED(4294.4686)), 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0))), bool(false))), sqrt(0.0), sin(abs(0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(tan(0.0), 1.0, 1.0), vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0)), dot(vec3(tan(0.0), 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0)))))))), bool(false))), tan(0.0))), tan(0.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0, tan(0.0), exp(0.0)))) > injectionSwitch.y)))) && true)))) || false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, max(0.0, 0.0))) > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(4380.0177) : (injectionSwitch.x))) - 0.0) > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, max(0.0, 0.0))) > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(4380.0177) : (injectionSwitch.x))) - 0.0) > injectionSwitch.y)))))), true, false, false))) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, false))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (false)), false || ((! _GLF_IDENTITY((false), ((false)) && true)))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((! (false)), false || _GLF_IDENTITY((_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (((! (false))))))), true, false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((! (false)), false || _GLF_IDENTITY((_GLF_IDENTITY((! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), bool(bvec3((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (((! (false))))))), true, false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((! (false)), false || _GLF_IDENTITY((_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (((! (false))))))), true, false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || false))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((! (false)), false || _GLF_IDENTITY((_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (((! (false))))))), true, false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((! (false)), false || _GLF_IDENTITY((_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (((! (false))))))), true, false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((! (false)), false || _GLF_IDENTITY((_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (((! (false))))))), true, false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))), false))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6596.5662), _GLF_FUZZED(float(55091))), bvec2(false, false))).y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(18.55), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3575.8684)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch)).y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(18.55), (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ 0)]), vec2((injectionSwitch)[0], _GLF_FUZZED(3575.8684)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch)).y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) * (injectionSwitch)) : _GLF_FUZZED(vec2(-1.0, _GLF_IDENTITY(-64.53, clamp(-64.53, -64.53, -64.53)))))), injectionSwitch)).x > injectionSwitch.y), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec2((! ((injectionSwitch.x > injectionSwitch.y))), false)))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true)))) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), max(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), clamp(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))))))), vec2(_GLF_FUZZED(362.097), _GLF_FUZZED(481.955)), bvec2(false, false))).x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true)))))) || false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true))) ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0)) * (injectionSwitch)) : _GLF_FUZZED(vec2(-1.0, _GLF_IDENTITY(-64.53, clamp(-64.53, -64.53, -64.53)))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), mat2(1.0) * (mat3x2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), mat2(1.0) * (mat3x2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), mat2(1.0) * (mat3x2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))))), vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), mat2(1.0) * (mat3x2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))))))).x > injectionSwitch.y), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! ((! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! ((! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true)))) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), vec2(_GLF_FUZZED(362.097), _GLF_FUZZED(481.955)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))).x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true)))) || false))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-15.42), (false ? _GLF_FUZZED(intBitsToFloat(-22520)) : _GLF_FUZZED(-15.42)))), bool(false))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(204.371, -9.1), vec2(0.0, 0.0) + (vec2(204.371, -9.1)))), min(_GLF_FUZZED(_GLF_IDENTITY(vec2(204.371, -9.1), vec2(0.0, 0.0) + (vec2(204.371, -9.1)))), _GLF_FUZZED(_GLF_IDENTITY(vec2(204.371, -9.1), vec2(0.0, 0.0) + (vec2(204.371, -9.1)))))))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(204.371, -9.1), vec2(0.0, 0.0) + (vec2(204.371, -9.1))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(204.371, -9.1), vec2(0.0, 0.0) + (vec2(204.371, -9.1))))), min((true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(204.371, -9.1), vec2(0.0, 0.0) + (vec2(204.371, -9.1))))), (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(204.371, -9.1), vec2(0.0, 0.0) + (vec2(204.371, -9.1)))))))))).x > injectionSwitch.y))) && _GLF_IDENTITY(true, ! (! (true))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), false || ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))))))))))) && true)))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))), false, true))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false))))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.6)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), (bool(bvec3(_GLF_DEAD(false), true, true))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1891.1323) : injectionSwitch.y))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1891.1323) : injectionSwitch.y))), false, false))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false || (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false || (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false || (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false || (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))), false)))), false, true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), (! (! (_GLF_IDENTITY(false, false || (false))))) && true)))))))
              barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((9.3))), bool(false))) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-83.74))), 1.0, sqrt(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), sqrt(0.0), 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), min(float(0.0), float(0.0))), float(_GLF_FUZZED(((_GLF_IDENTITY(-7.3 * 7.9, clamp(-7.3 * 7.9, -7.3 * 7.9, _GLF_IDENTITY(-7.3 * 7.9, clamp(-7.3 * 7.9, -7.3 * 7.9, -7.3 * 7.9)))))))), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), true && (! (bool(false)))))))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-83.74), clamp(_GLF_FUZZED(-83.74), _GLF_FUZZED(-83.74), _GLF_FUZZED(-83.74))))), 1.0, sqrt(1.0), 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x), abs(1.0), sqrt(0.0), 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(false, false || (false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false)))))))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5055.6298, -4.1)) : injectionSwitch)))).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))))) && true)), (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))), (false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))) && true)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! (_GLF_IDENTITY((_GLF_DEAD(false)) || false, ! (! ((_GLF_DEAD(false)) || false)))))))) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-44.00), (_GLF_IDENTITY(_GLF_FUZZED(-44.00), 1.0 * (_GLF_FUZZED(_GLF_IDENTITY(-44.00, float(vec2(-44.00, _GLF_ONE(1.0, injectionSwitch.y)))))))) - 0.0)))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y))))))))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))) && true))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true)))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9992.6621)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
