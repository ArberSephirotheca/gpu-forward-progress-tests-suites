#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true, false)), false || (bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), false || (bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 1.0))).x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((_GLF_IDENTITY(- 3382.7126, mix(float(- 3382.7126), float(_GLF_IDENTITY(_GLF_FUZZED((-7.8 / 0.8)), (_GLF_FUZZED((-7.8 / 0.8))) - determinant(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), bool(false)))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), bool(bvec4(false, false, true, false))))) || (injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || (injectionSwitch.x < injectionSwitch.y)))) || false)))), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 1.0))).x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((_GLF_IDENTITY(- 3382.7126, mix(float(- 3382.7126), float(_GLF_IDENTITY(_GLF_FUZZED((-7.8 / 0.8)), (_GLF_FUZZED((-7.8 / 0.8))) - determinant(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), bool(false)))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), bool(bvec4(false, false, true, false))))) || (injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || (injectionSwitch.x < injectionSwitch.y)))) || false)))), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 1.0))).x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((_GLF_IDENTITY(- 3382.7126, mix(float(- 3382.7126), float(_GLF_IDENTITY(_GLF_FUZZED((-7.8 / 0.8)), (_GLF_FUZZED((-7.8 / 0.8))) - determinant(mat3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), bool(false)))))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), bool(bvec4(false, false, true, false))))) || (injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) || (injectionSwitch.x < injectionSwitch.y)))) || false)))), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, false, true))))))), _GLF_IDENTITY(false, false || (false)), false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || _GLF_IDENTITY((false), bool(bvec4((false), true, false, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-915.032) : injectionSwitch.y)))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), false || (! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), true)))), bool(bvec3(_GLF_IDENTITY(! (! (! (false))), (! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (false)))), _GLF_IDENTITY((! (! (false))) || _GLF_IDENTITY(false, (false) && true), ! (! ((! (! (false))) || _GLF_IDENTITY(false, (false) && true))))), true, false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-893.793)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (injectionSwitch.y)), cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, round(length(normalize(1.0))))))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, true && (true)) ? injectionSwitch.x : _GLF_FUZZED(153.387))) > injectionSwitch.y), true, false)), bvec3(bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true && (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)))).x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(true, (true) && true) ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_id)))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u), (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u)) | 0u)) << 0u)) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(2u), uint(2u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (false ? _GLF_FUZZED((138573u & subgroup_local_id)) : 2u))) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (false ? _GLF_FUZZED((138573u & subgroup_local_id)) : 2u))) << 0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (false ? _GLF_FUZZED((138573u & subgroup_local_id)) : 2u))) << 0u), 1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(uint(2u), uint(_GLF_IDENTITY(2u, (2u) >> 0u)))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), clamp(uvec3(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (false ? _GLF_FUZZED((138573u & subgroup_local_id)) : 2u))) << 0u), 1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(uint(2u), uint(_GLF_IDENTITY(2u, (2u) >> 0u)))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (false ? _GLF_FUZZED((138573u & subgroup_local_id)) : 2u))) << 0u), 1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(uint(2u), uint(_GLF_IDENTITY(2u, (2u) >> 0u)))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), (uvec3(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (false ? _GLF_FUZZED((138573u & subgroup_local_id)) : 2u))) << 0u), 1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(uint(2u), uint(_GLF_IDENTITY(2u, (2u) >> 0u)))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) | (uvec3(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (false ? _GLF_FUZZED((138573u & subgroup_local_id)) : 2u))) << 0u), 1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(uint(2u), uint(_GLF_IDENTITY(2u, (2u) >> 0u)))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), uvec3(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (false ? _GLF_FUZZED((138573u & subgroup_local_id)) : 2u))) << 0u), 1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(uint(2u), uint(_GLF_IDENTITY(2u, (2u) >> 0u)))), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))) >> 0u)))), 0u), _GLF_IDENTITY((uvec2(0u, 0u) ^ uvec2(0u, 0u)), (_GLF_IDENTITY((uvec2(0u, 0u) ^ uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), uint(uvec4(_GLF_IDENTITY(0u, (0u) - 0u), 1u, (1u ^ 0u), 0u))), 0u)), uvec2(uvec2(_GLF_IDENTITY((uvec2(0u, 0u) ^ uvec2(0u, 0u)), ((uvec2(0u, 0u) ^ uvec2(0u, 0u))) >> uvec2(0u, 0u)))))) + uvec2(0u, 0u)) | _GLF_IDENTITY((uvec2((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), 0u ^ (_GLF_IDENTITY(uint(2u), uint(2u))))), 0u)), ((uvec2((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, ~ (~ (0u))))) ^ (_GLF_IDENTITY(uint(2u), uint(2u))))), 0u))) | ((uvec2((0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (false ? _GLF_FUZZED(subgroup_id) : uint(2u))), uint(2u)), 0u ^ (_GLF_IDENTITY(uint(2u), uint(2u))))), 0u)))))), clamp(uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(0u, (0u) >> 0u) << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), _GLF_IDENTITY((uvec2(0u, 0u) ^ uvec2(0u, 0u)), (_GLF_IDENTITY((uvec2(0u, 0u) ^ uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) - 0u), 0u)), _GLF_IDENTITY(uvec2(uvec2(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 0u) ^ (0u)), 0u) ^ uvec2(0u, 0u)), ((_GLF_IDENTITY(uvec2(0u, 0u) ^ uvec2(0u, 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(0u, 0u) ^ uvec2(0u, 0u)), (false ? _GLF_FUZZED(uvec2(542u, 66267u)) : ~ (uvec2(0u, 0u) ^ uvec2(0u, 0u)))), (_GLF_IDENTITY(~ (uvec2(0u, 0u) ^ uvec2(0u, 0u)), (false ? _GLF_FUZZED(uvec2(542u, 66267u)) : ~ (uvec2(0u, 0u) ^ uvec2(0u, 0u))))) | uvec2(0u, 0u)))))) >> uvec2(0u, 0u)))), min(uvec2(uvec2(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / (1u & 1u))) + 0u), min(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / (1u & 1u))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / (1u & 1u))) + 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / (1u & 1u))) + 0u), ~ (~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / (1u & 1u))) + 0u)))))))) ^ (0u)), 0u) ^ uvec2(0u, 0u)), ((_GLF_IDENTITY(uvec2(0u, 0u) ^ uvec2(0u, 0u), ~ (_GLF_IDENTITY(~ (uvec2(0u, 0u) ^ uvec2(0u, 0u)), (false ? _GLF_FUZZED(uvec2(542u, 66267u)) : ~ (uvec2(0u, 0u) ^ uvec2(0u, 0u)))))))) >> uvec2(0u, 0u)))), uvec2(uvec2(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7495.0155) : 0.0)), injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 0u) ^ (0u)), 0u) ^ uvec2(0u, 0u)), ((_GLF_IDENTITY(uvec2(0u, 0u) ^ uvec2(0u, 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(0u, 0u) ^ uvec2(0u, 0u)), uvec2(0u, 0u) ^ (_GLF_IDENTITY(~ (uvec2(0u, 0u) ^ uvec2(0u, 0u)), clamp(~ (uvec2(0u, 0u) ^ uvec2(0u, 0u)), ~ (uvec2(0u, 0u) ^ uvec2(0u, 0u)), ~ (uvec2(0u, 0u) ^ uvec2(0u, 0u)))))), (false ? _GLF_FUZZED(uvec2(542u, 66267u)) : ~ (uvec2(0u, 0u) ^ uvec2(0u, 0u)))))))) >> uvec2(0u, 0u)))))))) + _GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) - uvec2(0u, 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) - uvec2(0u, 0u)), (_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) - uvec2(0u, 0u))) - uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), ~ (_GLF_IDENTITY(~ (uvec2(0u, 0u)), (true ? ~ (uvec2(0u, 0u)) : _GLF_FUZZED(uvec2(123308u, 33674u))))))) - uvec2(0u, 0u))))) | (uvec2(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, _GLF_IDENTITY(uint(uint(2u)), clamp(uint(uint(2u)), uint(uint(2u)), uint(uint(2u)))))), uint(2u))), ((0u << _GLF_IDENTITY(uint(2u), uint(2u)))) | _GLF_IDENTITY(_GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, min(_GLF_IDENTITY(2u, 0u | (2u)), 2u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(2u)))), (((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, min(_GLF_IDENTITY(2u, 0u | (2u)), 2u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(2u))))) | (((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, min(_GLF_IDENTITY(2u, 0u | (2u)), 2u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(2u)))))), (((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, min(_GLF_IDENTITY(2u, 0u | (2u)), 2u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(2u))))) / 1u))) / 1u), 0u)))), uint(_GLF_IDENTITY(uvec2((0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u), _GLF_IDENTITY((uvec2(0u, 0u) ^ uvec2(0u, 0u)), (_GLF_IDENTITY((uvec2(0u, 0u) ^ uvec2(_GLF_IDENTITY(0u, (0u) - 0u), 0u)), uvec2(uvec2(_GLF_IDENTITY((uvec2(0u, 0u) ^ uvec2(0u, 0u)), ((_GLF_IDENTITY(uvec2(0u, 0u) ^ uvec2(0u, 0u), max(_GLF_IDENTITY(uvec2(0u, 0u) ^ uvec2(0u, 0u), ~ (_GLF_IDENTITY(~ (uvec2(0u, 0u) ^ uvec2(0u, 0u)), (~ (uvec2(0u, 0u) ^ uvec2(0u, 0u))) + uvec2(0u, 0u)))), uvec2(0u, 0u) ^ uvec2(0u, 0u))))) >> uvec2(0u, 0u)))))) + uvec2(0u, 0u)) | (uvec2((0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u)))), uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (false ? _GLF_FUZZED(185446u) : 0u << _GLF_IDENTITY(uint(2u), uint(2u))))), 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, ~ (~ (0u)))), max(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 0u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 0u), uvec2(uvec4(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 0u), 0u, 0u)))))) ^ uvec2(0u, 0u)) ^ uvec2(0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY((uvec2(0u, 0u) ^ _GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) - 0u), 0u), (uvec2(_GLF_IDENTITY(0u, (0u) - 0u), 0u)) - uvec2(0u, 0u))), uvec2(uvec2(_GLF_IDENTITY((uvec2(0u, 0u) ^ uvec2(0u, 0u)), ((uvec2(0u, 0u) ^ uvec2(0u, 0u))) >> uvec2(0u, 0u)))))) + uvec2(0u, 0u), ~ (~ ((_GLF_IDENTITY((uvec2(0u, 0u) ^ _GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) - 0u), 0u), (uvec2(_GLF_IDENTITY(0u, (0u) - 0u), 0u)) - _GLF_IDENTITY(uvec2(0u, 0u), uvec2(0u, 0u) ^ (uvec2(0u, 0u))))), uvec2(uvec2(_GLF_IDENTITY((uvec2(0u, 0u) ^ uvec2(0u, 0u)), ((uvec2(0u, 0u) ^ uvec2(0u, 0u))) >> uvec2(0u, 0u)))))) + uvec2(0u, 0u))))) | (uvec2((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(2u))))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_size)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_size)))), (~ (_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_size))))) << 0u))))), min(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), bool(bvec4(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), true, false, false)))))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))) || (_GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), bool(bvec2(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), false))))), bool(bvec3(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), true, false)))))) ? _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) >> 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) >> 0u), (_GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) >> 0u)) * 1u), _GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) >> 0u))))), (uint(uint(_GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) >> 0u)))) | (uint(uint(_GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) >> 0u))))))) : _GLF_FUZZED(subgroup_size), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y)), _GLF_IDENTITY(false, bool(bvec3(false, true, false))) || (_GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), bool(bvec2(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(bvec3(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), true, false)))))) ? _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) >> 0u))), (uint(uint(_GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) >> _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 0u ^ (0u))))))))) | (uint(uint(_GLF_IDENTITY(max(0u, 0u), (_GLF_IDENTITY(max(0u, 0u), ~ (~ (_GLF_IDENTITY(max(0u, 0u), (true ? max(0u, 0u) : _GLF_FUZZED(subgroup_size))))))) >> 0u))))))) : _GLF_FUZZED(subgroup_size), min(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, log(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))).y)), _GLF_IDENTITY(false, bool(bvec3(false, true, false))) || (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), bool(bvec2(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), false))))), bool(bvec3(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(log(vec2(2.0, 900.404))) : (injectionSwitch))) - vec2(0.0, 0.0)).y)), true, false)))))) ? _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) >> 0u))), (uint(uint(_GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) >> 0u)))) | (uint(uint(_GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) >> 0u))))))) : _GLF_FUZZED(subgroup_size), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(false, bool(bvec3(false, true, false))) || (_GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) + 0.0))), bool(bvec2(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), false))))), bool(bvec3(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), true, false)))))) ? _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) >> 0u))), (uint(uint(_GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) >> 0u)))) | (uint(uint(_GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) >> 0u))))))) : _GLF_FUZZED(subgroup_size))), 0u)), 0u + (uint(uvec2(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(false, bool(bvec3(false, true, false))) || (_GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), bool(bvec2(((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)).y)), false))))), bool(bvec3(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), true, false)))))) ? _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) >> 0u))), (uint(uint(_GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) >> 0u)))) | (uint(uint(_GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) >> 0u))))))) : _GLF_FUZZED(subgroup_size), min(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) && true)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(false, bool(bvec3(false, true, false))) || (_GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (injectionSwitch) - vec2(0.0, 0.0)).y)), bool(bvec2((_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))), false))))), bool(bvec3(! ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y)), true, false)))))) ? _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) >> 0u))), (uint(uint(_GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) >> 0u)))) | (uint(uint(_GLF_IDENTITY(max(0u, 0u), _GLF_IDENTITY((max(0u, 0u)) >> 0u, ((max(0u, 0u)) >> 0u) / 1u)))))))) : _GLF_FUZZED(subgroup_size), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false))) || (_GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), bool(bvec2(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), false))))), bool(bvec3(! ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, mix(float(_GLF_FUZZED(9.2)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), bool(true)))) / 1.0))), true, false)))))) ? _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(max(0u, 0u), min(max(0u, 0u), _GLF_IDENTITY(max(0u, 0u), ~ (~ (max(0u, 0u)))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(max(0u, 0u), (max(0u, _GLF_IDENTITY(0u, (0u) >> 0u))) >> 0u))), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) >> 0u), ~ (~ (_GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) >> 0u))))))) | (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) >> 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) >> 0u))))))))) : _GLF_FUZZED(subgroup_size))), 0u))))))))), ((~ (_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_size)))))) | 0u), (~ (_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_size))))))) + (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))))))));
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min((gl_WorkGroupSize.x) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u), gl_WorkGroupSize.x))) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (~ (_GLF_IDENTITY(~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))), (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u))) | (~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), max((gl_WorkGroupSize.x) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), vec2(1.0, 1.0) * (_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))))[0], injectionSwitch[1])), injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))))).x)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x) - uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), float(mat3x4(min(0.0, 0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0))), 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, tan(0.0), 1.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)))), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x) - uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x))))))))));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.4)), bool(false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(9.0)), min(float(_GLF_FUZZED(9.0)), float(_GLF_FUZZED(9.0)))), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch.y) * 1.0, (false ? _GLF_FUZZED(-549.510) : (injectionSwitch.y) * 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), mix(float(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), float(_GLF_FUZZED(vec4(-3.8, -7398.2418, 79.93, -32.26).s)), bool(false))), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 1.0), mat4x3(mat4(mat4x3(_GLF_IDENTITY((injectionSwitch.y) * 1.0, (false ? _GLF_FUZZED(-549.510) : (injectionSwitch.y) * 1.0)), 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0))), vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, 0.0, 1.0)))))))) - determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), false))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)), uint(uint(subgroup_id))) * subgroup_size, 0u | (subgroup_id * subgroup_size)), min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(18186u))), workgroup_base + subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))) * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size), (_GLF_IDENTITY(min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size), 0u ^ (_GLF_IDENTITY(min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size), ~ (~ (min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))))))) << 0u)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(4u, ~ (~ (4u)))))), (uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(4u, ~ (~ (4u))))))) >> 0u), uint(4u)))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), true, true), false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, false, true))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (true ? uint(1) : _GLF_FUZZED((num_workgroup)))), (_GLF_IDENTITY(uint(1), (true ? uint(1) : _GLF_FUZZED((_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, _GLF_IDENTITY(num_workgroup, (_GLF_IDENTITY(num_workgroup, 0u ^ (num_workgroup))) + 0u), num_workgroup))))))) >> _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))), _GLF_IDENTITY(4, min(4, 4)), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(false)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)) && true), true, false, true)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false) || false), true, false, true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)) && true), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), false || (bool((_GLF_DEAD(false))))))), (_GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), true)))) && true)) && true)))) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), false || (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, cos(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false, false, _GLF_IDENTITY(true, (true) && true)))), ! (! (false)))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (false || (true)) || false))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, true)))))))), (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0)))), false))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-947.798), _GLF_FUZZED(593.880)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)), false)), (_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0)))), false)), bool(_GLF_IDENTITY(bool(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0)))), false))), (bool(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0)))), false)))) && true)))) && true), ! (! (_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0)))), false))) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) - (0 >> _GLF_IDENTITY(int(5), int(5))))), clamp(_GLF_IDENTITY(64, (64) - _GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(int(5), int(5))))), _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), (64) - _GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(int(5), int(5))))), _GLF_IDENTITY(64, (64) - _GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(int(5), int(5))))))), _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) ^ 0)));
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) * 1.0), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y, 0.0 + (injectionSwitch.y))) * 1.0)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-6833.9315), min(_GLF_FUZZED(-6833.9315), _GLF_FUZZED(-6833.9315))), clamp(_GLF_IDENTITY(_GLF_FUZZED(-6833.9315), min(_GLF_FUZZED(-6833.9315), _GLF_FUZZED(-6833.9315))), _GLF_IDENTITY(_GLF_FUZZED(-6833.9315), min(_GLF_FUZZED(-6833.9315), _GLF_FUZZED(-6833.9315))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-6833.9315), min(_GLF_FUZZED(-6833.9315), _GLF_FUZZED(-6833.9315))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6833.9315), min(_GLF_FUZZED(-6833.9315), _GLF_FUZZED(-6833.9315)))), float(_GLF_FUZZED(15.80)), bool(false)))))), bool(false)), min(mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-6833.9315), min(_GLF_FUZZED(-6833.9315), _GLF_FUZZED(-6833.9315))), clamp(_GLF_IDENTITY(_GLF_FUZZED(-6833.9315), min(_GLF_FUZZED(-6833.9315), _GLF_FUZZED(-6833.9315))), _GLF_IDENTITY(_GLF_FUZZED(-6833.9315), min(_GLF_FUZZED(-6833.9315), _GLF_FUZZED(_GLF_IDENTITY(-6833.9315, (-6833.9315) - tan(0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-6833.9315), min(_GLF_FUZZED(-6833.9315), _GLF_FUZZED(-6833.9315))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6833.9315), min(_GLF_FUZZED(-6833.9315), _GLF_IDENTITY(_GLF_FUZZED(-6833.9315), max(_GLF_FUZZED(-6833.9315), _GLF_FUZZED(-6833.9315)))))), float(_GLF_FUZZED(15.80)), bool(false)))))), bool(false)), mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-6833.9315), min(_GLF_FUZZED(-6833.9315), _GLF_FUZZED(-6833.9315))), clamp(_GLF_IDENTITY(_GLF_FUZZED(-6833.9315), min(_GLF_FUZZED(-6833.9315), _GLF_FUZZED(-6833.9315))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-6833.9315), min(_GLF_IDENTITY(_GLF_FUZZED(-6833.9315), float(float(_GLF_IDENTITY(_GLF_FUZZED(-6833.9315), float(mat2x4(_GLF_FUZZED(-6833.9315), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))), _GLF_FUZZED(-6833.9315))), min(_GLF_FUZZED(-6833.9315), _GLF_FUZZED(-6833.9315))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-6833.9315), min(_GLF_FUZZED(-6833.9315), _GLF_FUZZED(-6833.9315))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-6833.9315, max(-6833.9315, _GLF_IDENTITY(-6833.9315, (true ? -6833.9315 : _GLF_FUZZED(-326.546)))))), min(_GLF_FUZZED(-6833.9315), _GLF_FUZZED(-6833.9315)))), float(_GLF_FUZZED(15.80)), bool(false)))))), bool(false)))), mix(float(mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-6833.9315), min(_GLF_FUZZED(-6833.9315), _GLF_FUZZED(-6833.9315))), clamp(_GLF_IDENTITY(_GLF_FUZZED(-6833.9315), min(_GLF_FUZZED(-6833.9315), _GLF_FUZZED(-6833.9315))), _GLF_IDENTITY(_GLF_FUZZED(-6833.9315), min(_GLF_FUZZED(-6833.9315), _GLF_FUZZED(-6833.9315))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-6833.9315), min(_GLF_FUZZED(-6833.9315), _GLF_FUZZED(-6833.9315))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-6833.9315, max(-6833.9315, -6833.9315))), min(_GLF_FUZZED(-6833.9315), _GLF_FUZZED(-6833.9315)))), float(_GLF_FUZZED(15.80)), bool(false)))))), bool(false))), float(_GLF_FUZZED(3.4)), bool(false)))), (_GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), (injectionSwitch.y))))) * 1.0)))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-6833.9315), cos(0.0) * (_GLF_FUZZED(-6833.9315))), min(_GLF_FUZZED(-6833.9315), _GLF_FUZZED(-6833.9315)))), _GLF_IDENTITY(bool(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, log(1.0))), max(vec2(vec4(injectionSwitch, 1.0, log(1.0))), vec2(vec4(injectionSwitch, 1.0, log(1.0)))))).x < injectionSwitch.y)) && _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(false)), bool(bvec4((bool(false)), true, true, true))), false, false, false)), (bool(bvec4(_GLF_IDENTITY((bool(false)), bool(bvec4((bool(false)), true, true, true))), false, false, false))) && true))))), (_GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)), clamp(clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)), _GLF_IDENTITY(clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)), max(_GLF_IDENTITY(clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)), clamp(clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)))), _GLF_IDENTITY(clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)), (false ? _GLF_FUZZED(78.69) : clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))))))))))) * 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-6833.9315), cos(0.0) * (_GLF_FUZZED(-6833.9315))), min(_GLF_FUZZED(-6833.9315), _GLF_FUZZED(-6833.9315)))), _GLF_IDENTITY(bool(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, log(1.0))), max(vec2(vec4(injectionSwitch, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), log(1.0))), vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, log(1.0)), max(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, log(1.0)), vec4(mat4x3(vec4(injectionSwitch, 1.0, log(1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0))), vec4(injectionSwitch, 1.0, log(1.0)))))))).x < injectionSwitch.y)) && _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(false)), bool(bvec4((bool(false)), true, true, true))), false, false, false)), (bool(bvec4(_GLF_IDENTITY((bool(false)), bool(bvec4((bool(false)), true, true, true))), false, false, false))) && true))))), (_GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)), clamp(clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)), _GLF_IDENTITY(clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)), max(_GLF_IDENTITY(clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)), clamp(clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)))), _GLF_IDENTITY(clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)), (false ? _GLF_FUZZED(78.69) : clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))))))))))) * 1.0) : _GLF_FUZZED(log(80.94)))))))) && true)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).y), false))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false))), false, _GLF_IDENTITY(true, ! (! (true)))))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false))))))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true), _GLF_IDENTITY(((true)) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((true)) && true, bool(bvec4(((true)) && true, true, true, false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(((true)) && true, bool(bvec4(((true)) && true, true, true, false)))), bool(bool(! (_GLF_IDENTITY(((true)) && true, bool(bvec4(((true)) && true, true, true, false))))))))))))), ! (! (_GLF_IDENTITY(! (true), true && (! (true))))))))))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))))), true && (false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0), mat4x2(mat4x2(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0), mat4x2(mat4x2(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0)))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.8)), bool(false))))), 0.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9048.7925)), float(0.0), bool(true))), sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 0.0), mat4x2(mat4x2(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0), mat4x2(mat4x2(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0)))))))))))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false), bool(bool(false)))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) ? _GLF_FUZZED((-7.8 - -1.2)) : injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) ? _GLF_FUZZED((-7.8 - -1.2)) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) ? _GLF_FUZZED((-7.8 - -1.2)) : injectionSwitch.x)))) > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED((-7.8 - _GLF_IDENTITY(-1.2, (-1.2) + sqrt(0.0)))), (true ? _GLF_FUZZED((-7.8 - _GLF_IDENTITY(-1.2, (-1.2) + sqrt(0.0)))) : _GLF_FUZZED(4.6))) : _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x)) > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)) ? _GLF_FUZZED((-7.8 - -1.2)) : injectionSwitch.x)) > injectionSwitch.y)))))) || false, ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)) ? _GLF_FUZZED((-7.8 - -1.2)) : injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)) ? _GLF_FUZZED((-7.8 - -1.2)) : injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)) ? _GLF_FUZZED((-7.8 - -1.2)) : injectionSwitch.x)) > injectionSwitch.y, true, false, false)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)) ? _GLF_FUZZED((-7.8 - -1.2)) : injectionSwitch.x)) > injectionSwitch.y, true, false, false))) || false))))))))))) || false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
