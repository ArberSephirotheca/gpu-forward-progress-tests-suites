#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(! (bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), false || (! (! (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), false || (! (bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), ((_GLF_IDENTITY(! (bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), false || (! (bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))) || false), (! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), false || (! (bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), ((_GLF_IDENTITY(! (bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), false || (! (bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))) || false)) || false)))) || false)))), ! (! (bool(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 else
  {
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x) << 0u, ((gl_WorkGroupID.x) << 0u) * 1u), min(_GLF_IDENTITY((gl_WorkGroupID.x) << 0u, ((gl_WorkGroupID.x) << 0u) * 1u), _GLF_IDENTITY((gl_WorkGroupID.x) << 0u, ((gl_WorkGroupID.x) << 0u) * 1u)))), (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x) << 0u, ((gl_WorkGroupID.x) << 0u) * 1u), min(_GLF_IDENTITY((gl_WorkGroupID.x) << 0u, ((gl_WorkGroupID.x) << 0u) * 1u), _GLF_IDENTITY((gl_WorkGroupID.x) << 0u, ((gl_WorkGroupID.x) << 0u) * 1u))))) - 0u);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))) && true), true))), bool(bool(false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), true))) && true), true))), bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec2((false), true))) && true), true))), bool(bool(false))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false)))))))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)))) || false))) || false))) || false))), false, true, false)))) || _GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))) && true), true))), bool(bool(false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(_GLF_IDENTITY(bvec2(bvec2((false), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2((false), true)), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2((false), true)), false)), false, true)))))))) && true), true))), bool(bool(false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec2((false), true))) && true), true))), bool(bool(false)))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec2((false), true))) && true), true))), bool(bool(false)))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false)))))))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)))) || false))) || false))) || false))), false, true, false)))) || _GLF_IDENTITY(false, bool(bvec2(false, true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) && ((false))) || false)) && true), true))), bool(bool(false)))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false))))), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false)))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY((false), bool(bvec2((false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (_GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true)))))) || false))))) && true), true))), bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec2((false), true))) && true), true))), bool(bool(false))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false)))))))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)))) || false))) || false))) || false))), false, true, false)))) || _GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))) && true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)))), bool(bool(false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), true)))) || false), bool(bool(false))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED((-1.2))), float(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))), bool(true))))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), _GLF_IDENTITY(bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED((-1.2))), float(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))), bool(true))))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED((-1.2))), float(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))), bool(true))))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(_GLF_IDENTITY(bvec2(bvec2((false), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2((false), true)), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2((false), true)), false)), false, true)))))))) && true), true))), bool(bool(false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec2((false), true))) && true, bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec2((false), true))) && true, true)))), true))), bool(bool(false)))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec2((false), true))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec2((false), true))) && true))), true))), bool(bool(false)))))))))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false)))))), true && ((! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false)))))))))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), (bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true)))))))))) && true)))) || false))) || false))) || false))), false, true, false)))) || _GLF_IDENTITY(false, bool(bvec2(false, true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))))) || false))), (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(false || (false), false))))) || false, _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), false))))) || false)), (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false)))))), false))))) || false)), ! (! (bool(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), false))))) || false)))))) && true)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-5.3))) > injectionSwitch.y)))))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), true))) && true), true))), bool(bool(false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true), true))), bool(bool(false)))))))))) || false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(_GLF_IDENTITY(false, true && (false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false))))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), true))) && true), true))), bool(bool(false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false)))))))))) || false, false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bool(false))))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(cos(82.56)))), injectionSwitch.y))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), true))) && true), true))), bool(bool(false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))), true))), bool(bool(false)))))))))) || false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), bool(bool((_GLF_IDENTITY(false, bool(bool(false))))))) || false))) || false))), false, true, false)))) || _GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (false))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, true && (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)), true, false))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))), true && (bool(_GLF_DEAD(false)))))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), bool(bvec3(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), bool(bvec3(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)));
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), clamp(int(5), int(5), _GLF_IDENTITY(int(5), 1 * (int(5))))), int(5)))); _GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((_injected_loop_counter --), ((_injected_loop_counter --)) / 1) ^ 0))
          {
           return;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec4(! (_GLF_DEAD(false)), false, false, true))), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, false, true))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (injectionSwitch.x < injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (injectionSwitch.x < injectionSwitch.y)))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y) && true))))), ! (! (bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), injectionSwitch.x)) < injectionSwitch.y, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < injectionSwitch.y)))), ! (! _GLF_IDENTITY((bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! ((bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), (_GLF_IDENTITY(bool(bvec2(true, true)), true && (bool(bvec2(true, true))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! ((bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), (_GLF_IDENTITY(bool(bvec2(true, true)), true && (bool(bvec2(true, true))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))))))))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec3(-3860.4386, 658.913, -2.7).b), mix(float(_GLF_FUZZED(6.5)), float(_GLF_FUZZED(vec3(-3860.4386, 658.913, -2.7).b)), bool(true))), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2956.1311), _GLF_FUZZED(-1.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)))))[0], _GLF_FUZZED(float(90808u))), bvec2(true, false))).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, abs(1.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6876.1251)), float(1.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(12.50)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0))))))), min(float(mat2x3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-5.1 - 841.041))), bool(false))))), 0.0, 0.0, 1.0, 0.0, round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0))))))), float(mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, round(length(normalize(sqrt(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-40.77) : 1.0)))))))))))), 0.0, sin(0.0), 0.0, 1.0))).x > injectionSwitch.y) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, abs(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-207.502)), bool(false))), _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 0.0, 1.0))), 1.0))))).x > injectionSwitch.y) || false, true && _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(abs(1.0), clamp(_GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), abs(1.0), abs(1.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-4.6))), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), sin(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), 0.0, 1.0))).x > injectionSwitch.y) || false), bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(abs(1.0), clamp(_GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), abs(1.0), abs(1.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-4.6))), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), sin(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), 0.0, 1.0))).x > injectionSwitch.y) || false), bool(bvec2(((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(abs(1.0), clamp(_GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), abs(1.0), abs(1.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-4.6))), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), sin(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), 0.0, 1.0))).x > injectionSwitch.y) || false), true)))))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.4))) : _GLF_FUZZED(3361.1897))), 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0))).x > injectionSwitch.y) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED(-828.431)), float(abs(1.0)), bool(true))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0))).x > injectionSwitch.y) || false))), true && ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, abs(1.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-943.448)), bool(false))), 0.0, sin(0.0), 0.0, 1.0))).x > injectionSwitch.y) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, abs(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0))).x > injectionSwitch.y) || false, true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * _GLF_IDENTITY(vec2(1.0, 1.0), vec2(0.0, 0.0) + (vec2(1.0, 1.0)))), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.7)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), abs(1.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, determinant(mat3(1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)), sin(0.0), tan(tan(0.0))))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-943.448)), bool(false))), 0.0, sin(0.0), 0.0, 1.0))).x > injectionSwitch.y) || false))) && true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-3860.4386, 658.913, -2.7).b), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(90808u))), bvec2(true, false))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-3860.4386, 658.913, -2.7).b), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(90808u))), bvec2(true, false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-3860.4386, 658.913, -2.7).b), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(90808u))), bvec2(true, false))), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-3860.4386, 658.913, -2.7).b), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(90808u))), bvec2(true, false))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), mix(vec2(_GLF_FUZZED(-5402.5949), _GLF_FUZZED(9.5)), vec2((vec2(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-3860.4386, 658.913, -2.7).b), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(90808u))), bvec2(true, false))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))[0], (vec2(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-3860.4386, 658.913, -2.7).b), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(90808u))), bvec2(true, false))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))[1]), bvec2(true, true)))))).y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-3860.4386, 658.913, -2.7).b), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(90808u))), bvec2(true, false))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-3860.4386, 658.913, -2.7).b), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(90808u))), bvec2(true, false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-3860.4386, 658.913, -2.7).b), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(90808u))), bvec2(true, false))), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-3860.4386, 658.913, -2.7).b), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(90808u))), bvec2(true, false))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), mix(vec2(_GLF_FUZZED(-5402.5949), _GLF_FUZZED(9.5)), vec2((vec2(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-3860.4386, 658.913, -2.7).b), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(90808u))), bvec2(true, false))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))[0], (vec2(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-3860.4386, 658.913, -2.7).b), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(90808u))), bvec2(true, false))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))[1]), bvec2(true, true)))))).y, false, true, true)), true && (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-3860.4386, 658.913, -2.7).b), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(90808u))), bvec2(true, false))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-3860.4386, 658.913, -2.7).b), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(90808u))), bvec2(true, false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-3860.4386, 658.913, -2.7).b), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(90808u))), bvec2(true, false))), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-3860.4386, 658.913, -2.7).b), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(90808u))), bvec2(true, false))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), mix(vec2(_GLF_FUZZED(-5402.5949), _GLF_FUZZED(9.5)), vec2((vec2(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-3860.4386, 658.913, -2.7).b), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(90808u))), bvec2(true, false))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))[0], (vec2(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-3860.4386, 658.913, -2.7).b), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(90808u))), bvec2(true, false))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)))[1]), bvec2(true, true)))))).y, false, true, true))))), _GLF_IDENTITY(true, ! (! (true))) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-3860.4386, 658.913, -2.7).b), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(90808u))), bvec2(true, false))).y)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-439.831)), float(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x2(1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))), bool(true)))) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(-4.9, -980.343)) : mat2(1.0) * (injectionSwitch))))), (true ? _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-439.831)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x2(1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))), max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x2(1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x2(1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))), float(mat4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x2(1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))), 1.0, cos(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0)))))), bool(true)))) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(-4.9, -980.343)) : mat2(1.0) * (injectionSwitch))))) : _GLF_FUZZED(injectionSwitch)))), abs(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), sin(0.0), 0.0, 1.0)), vec2(1.0, 1.0) * _GLF_IDENTITY((_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, abs(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-360.018)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sqrt(0.0))), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))))), 0.0, 1.0)), min(vec2(mat3x4(injectionSwitch, abs(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-541.720)), min(float(_GLF_FUZZED(-541.720)), _GLF_IDENTITY(float(_GLF_FUZZED(-541.720)), max(_GLF_IDENTITY(float(_GLF_FUZZED(-541.720)), max(float(_GLF_FUZZED(-541.720)), float(_GLF_FUZZED(-541.720)))), float(_GLF_FUZZED(-541.720)))))), float(0.0), bool(true))), sin(0.0), 0.0, 1.0)), vec2(mat3x4(injectionSwitch, abs(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(vec3(float(mat3x4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), 0.0, cos(0.0)))))))))), (true ? (_GLF_IDENTITY(vec2(mat3x4(injectionSwitch, abs(1.0), 0.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 0.0, 1.0, abs(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0, 0.0, sin(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-360.018)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-171.839), _GLF_FUZZED(-4.0)), bvec2(false, false))).x), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))))), 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.0)), bool(false))))), min(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), abs(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-541.720)), float(0.0), bool(true))), sin(0.0), 0.0, 1.0)), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), abs(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0))))) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y) || false)) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
      }
    }
   while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), false, true))));
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(true, false)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(bvec2(true, false)), true), bvec3(bvec4(bvec3(bvec2(bvec2(true, false)), true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(bvec2(true, false)), true), bvec3(bvec4(bvec3(bvec2(bvec2(true, false)), true), true)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(false, false, false)))), ! (! (false))))))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(_GLF_IDENTITY(int(5), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(10646, (_GLF_IDENTITY(10646, max(_GLF_IDENTITY(10646, (_GLF_IDENTITY(10646, 0 + (10646))) | (10646)), _GLF_IDENTITY(10646, (10646) ^ 0)))) / 1)) : int(5)), ((false ? _GLF_FUZZED(_GLF_IDENTITY(10646, (10646) / 1)) : int(5))) << 0)), int(5), int(5)))))); _injected_loop_counter --)
                {
                 return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
              }
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-0.8), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(172.486), _GLF_FUZZED(-9.7)), bvec2(false, false)))[0], _GLF_FUZZED(-495.544)), bvec2(true, false)), (mix(vec2(_GLF_FUZZED(-0.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-495.544)), bvec2(true, false))) * mat2(1.0))))).y), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), 0.0 + (float(injectionSwitch.y))))), float(_GLF_FUZZED(815.188)), bool(false)))) / 1.0)), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5439.8330)), bool(false)))))), float(_GLF_FUZZED(-2689.5253)), bool(false)), 1.0, cos(0.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-85.94) : 0.0)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 1.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), abs(1.0), 0.0))) : _GLF_FUZZED(-1.6)))), float(_GLF_FUZZED(75.87)), bool(false)))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-495.544, max(-495.544, _GLF_IDENTITY(-495.544, (false ? _GLF_FUZZED(faceforward(-31.45, 4.6, -143.678)) : -495.544)))))), _GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))), true, false))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))), true, false))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))), true, false))), false), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))).y), false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)))), 0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false))))) - 0.0), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)))), 0.0)))), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)))), 0.0)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false))) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)))), 0.0)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(degrees(1.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), max(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(-7313.6873), (vec2(0.0, 1.0))[1]), vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(-187.017)), bvec2(true, false))), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(mat4x2(vec2(0.0, 1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), vec2(0.0, 1.0))) * (1.0)))), 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), clamp(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)), _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) / vec2(1.0, 1.0)))))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)))), 0.0)))), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_IDENTITY((vec2(0.0, 1.0))[0], min((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[0])), (vec2(0.0, 1.0))[1]), vec2(_GLF_FUZZED(2.5), _GLF_FUZZED(22.27)), bvec2(false, false))), 0.0, 0.0, 1.0, determinant(mat3(sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), (vec2(mat2x3(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_IDENTITY((vec2(0.0, 1.0))[0], min((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[0])), (vec2(0.0, 1.0))[1]), vec2(_GLF_FUZZED(2.5), _GLF_FUZZED(22.27)), bvec2(false, false))), 0.0, 0.0, 1.0, determinant(mat3(sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) / vec2(1.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))), 0.0)))) : _GLF_FUZZED(vec2(-0.7, _GLF_IDENTITY(-5.0, clamp(_GLF_IDENTITY(-5.0, (-5.0) * 1.0), _GLF_IDENTITY(-5.0, (-5.0) / 1.0), -5.0))).y)))))), false || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false))), bool(bvec3(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false))), false, true)))))), 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), (_GLF_IDENTITY(true ? round(length(normalize(vec2(1.0, 1.0)))) : _GLF_FUZZED(mix(103.053, 6.2, 0.9)), (true ? round(length(normalize(vec2(1.0, 1.0)))) : _GLF_FUZZED(mix(103.053, 6.2, 0.9))) - 0.0))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), vec2(_GLF_FUZZED(-9.5), _GLF_FUZZED(0.8)), bvec2(false, false))), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) / exp(vec2(0.0, 0.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), vec2(_GLF_FUZZED(-9.5), _GLF_FUZZED(0.8)), bvec2(false, false))), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) / exp(vec2(0.0, 0.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), vec2(_GLF_FUZZED(-9.5), _GLF_FUZZED(0.8)), bvec2(false, false))), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) / exp(vec2(0.0, 0.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), vec2(_GLF_FUZZED(-9.5), _GLF_FUZZED(0.8)), bvec2(false, false))), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) / exp(vec2(0.0, 0.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)))))), 0.0))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, _GLF_IDENTITY(cos(0.0), 1.0 * (cos(0.0))), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)))), 0.0)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0)))))) * (1.0)))), 0.0)))), ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(44.36)))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)))), 0.0)))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-2689.5253)), (float(_GLF_FUZZED(-2689.5253))) * abs(1.0)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * _GLF_IDENTITY((1.0), min((1.0), (1.0)))))), 0.0)))), ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), _GLF_IDENTITY(float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), ! (! (bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(81.37)), bool(false)))) - 0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (_GLF_IDENTITY(1.0, float(mat2x3(1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0))))))), 0.0)), (float(mat2x4(mix(_GLF_IDENTITY(float(injectionSwitch.y), sqrt(1.0) * (float(injectionSwitch.y))), float(_GLF_FUZZED(_GLF_IDENTITY(-2689.5253, clamp(-2689.5253, -2689.5253, -2689.5253)))), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), sqrt(0.0) + (dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))) * (_GLF_IDENTITY(1.0, float(mat2x3(1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0))))))), 0.0))) - 0.0))))))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(75.87)), bool(false)), (_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) ? _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0))))) : _GLF_FUZZED(log2(51.11)))), injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(75.87)), bool(false)), max(mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(75.87)), bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, abs(0.0) + (injectionSwitch.y)), injectionSwitch.y))), float(_GLF_FUZZED(75.87)), bool(false))))) / 1.0)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-495.544, max(-495.544, _GLF_IDENTITY(-495.544, (false ? _GLF_FUZZED(faceforward(-31.45, 4.6, -143.678)) : -495.544)))))), _GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))), true, false))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))), true, false))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))), true, false))), false), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))).y), false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)))), 0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false))))) - 0.0), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)))), 0.0)))), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)))), 0.0)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false))) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)))), 0.0)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(degrees(1.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), max(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(-7313.6873), (vec2(0.0, 1.0))[1]), vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(-187.017)), bvec2(true, false))), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(mat4x2(vec2(0.0, 1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), vec2(0.0, 1.0))) * (1.0)))), 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), clamp(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)), _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) / vec2(1.0, 1.0)))))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)))), 0.0)))), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_IDENTITY((vec2(0.0, 1.0))[0], min((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[0])), (vec2(0.0, 1.0))[1]), vec2(_GLF_FUZZED(2.5), _GLF_FUZZED(22.27)), bvec2(false, false))), 0.0, 0.0, 1.0, determinant(mat3(sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), (vec2(mat2x3(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_IDENTITY((vec2(0.0, 1.0))[0], min((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[0])), (vec2(0.0, 1.0))[1]), vec2(_GLF_FUZZED(2.5), _GLF_FUZZED(22.27)), bvec2(false, false))), 0.0, 0.0, 1.0, determinant(mat3(sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) / vec2(1.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))), 0.0)))) : _GLF_FUZZED(vec2(-0.7, _GLF_IDENTITY(-5.0, clamp(_GLF_IDENTITY(-5.0, (-5.0) * 1.0), _GLF_IDENTITY(-5.0, (-5.0) / 1.0), -5.0))).y)))))), false || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false))), bool(bvec3(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false))), false, true)))))), 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), (_GLF_IDENTITY(true ? round(length(normalize(vec2(1.0, 1.0)))) : _GLF_FUZZED(mix(103.053, 6.2, 0.9)), (true ? round(length(normalize(vec2(1.0, 1.0)))) : _GLF_FUZZED(mix(103.053, 6.2, 0.9))) - 0.0))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), vec2(_GLF_FUZZED(-9.5), _GLF_FUZZED(0.8)), bvec2(false, false))), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) / exp(vec2(0.0, 0.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), vec2(_GLF_FUZZED(-9.5), _GLF_FUZZED(0.8)), bvec2(false, false))), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) / exp(vec2(0.0, 0.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), vec2(_GLF_FUZZED(-9.5), _GLF_FUZZED(0.8)), bvec2(false, false))), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) / exp(vec2(0.0, 0.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), vec2(_GLF_FUZZED(-9.5), _GLF_FUZZED(0.8)), bvec2(false, false))), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) / exp(vec2(0.0, 0.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)))))), 0.0))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, _GLF_IDENTITY(cos(0.0), 1.0 * (cos(0.0))), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)))), 0.0)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0)))))) * (1.0)))), 0.0)))), ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(44.36)))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)))), 0.0)))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-2689.5253)), (float(_GLF_FUZZED(-2689.5253))) * abs(1.0)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * _GLF_IDENTITY((1.0), min((1.0), (1.0)))))), 0.0)))), ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), _GLF_IDENTITY(float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), ! (! (bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(81.37)), bool(false)))) - 0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (_GLF_IDENTITY(1.0, float(mat2x3(1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0))))))), 0.0)), (float(mat2x4(mix(_GLF_IDENTITY(float(injectionSwitch.y), sqrt(1.0) * (float(injectionSwitch.y))), float(_GLF_FUZZED(_GLF_IDENTITY(-2689.5253, clamp(-2689.5253, -2689.5253, -2689.5253)))), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), sqrt(0.0) + (dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))) * (_GLF_IDENTITY(1.0, float(mat2x3(1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0))))))), 0.0))) - 0.0))))))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(75.87)), bool(false)), (_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) ? _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0))))) : _GLF_FUZZED(log2(51.11)))), injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(75.87)), bool(false)), max(mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(75.87)), bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, abs(0.0) + (injectionSwitch.y)), injectionSwitch.y))), float(_GLF_FUZZED(75.87)), bool(false))))) / 1.0)))))), false || (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-495.544, max(-495.544, _GLF_IDENTITY(-495.544, (false ? _GLF_FUZZED(faceforward(-31.45, 4.6, -143.678)) : -495.544)))))), _GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))), true, false))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))), true, false))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))), true, false))), false), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))).y), false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)))), 0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), (mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false))))) - 0.0), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)))), 0.0)))), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)))), 0.0)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false))) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)))), 0.0)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(degrees(1.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), max(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(-7313.6873), (vec2(0.0, 1.0))[1]), vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(-187.017)), bvec2(true, false))), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(mat4x2(vec2(0.0, 1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), vec2(0.0, 1.0))) * (1.0)))), 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), clamp(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)), _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) / vec2(1.0, 1.0)))))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)))), 0.0)))), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_IDENTITY((vec2(0.0, 1.0))[0], min((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[0])), (vec2(0.0, 1.0))[1]), vec2(_GLF_FUZZED(2.5), _GLF_FUZZED(22.27)), bvec2(false, false))), 0.0, 0.0, 1.0, determinant(mat3(sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), (vec2(mat2x3(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_IDENTITY((vec2(0.0, 1.0))[0], min((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[0])), (vec2(0.0, 1.0))[1]), vec2(_GLF_FUZZED(2.5), _GLF_FUZZED(22.27)), bvec2(false, false))), 0.0, 0.0, 1.0, determinant(mat3(sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) / vec2(1.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))), 0.0)))) : _GLF_FUZZED(vec2(-0.7, _GLF_IDENTITY(-5.0, clamp(_GLF_IDENTITY(-5.0, (-5.0) * 1.0), _GLF_IDENTITY(-5.0, (-5.0) / 1.0), -5.0))).y)))))), false || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false))), bool(bvec3(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false))), false, true)))))), 1.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), (_GLF_IDENTITY(true ? round(length(normalize(vec2(1.0, 1.0)))) : _GLF_FUZZED(mix(103.053, 6.2, 0.9)), (true ? round(length(normalize(vec2(1.0, 1.0)))) : _GLF_FUZZED(mix(103.053, 6.2, 0.9))) - 0.0))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), vec2(_GLF_FUZZED(-9.5), _GLF_FUZZED(0.8)), bvec2(false, false))), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) / exp(vec2(0.0, 0.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), vec2(_GLF_FUZZED(-9.5), _GLF_FUZZED(0.8)), bvec2(false, false))), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) / exp(vec2(0.0, 0.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), vec2(_GLF_FUZZED(-9.5), _GLF_FUZZED(0.8)), bvec2(false, false))), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) / exp(vec2(0.0, 0.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), vec2(_GLF_FUZZED(-9.5), _GLF_FUZZED(0.8)), bvec2(false, false))), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) / exp(vec2(0.0, 0.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)))))), 0.0))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, _GLF_IDENTITY(cos(0.0), 1.0 * (cos(0.0))), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)))), 0.0)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0)))))) * (1.0)))), 0.0)))), ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(44.36)))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (1.0)))), 0.0)))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), float(mat2x4(mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-2689.5253)), (float(_GLF_FUZZED(-2689.5253))) * abs(1.0)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * _GLF_IDENTITY((1.0), min((1.0), (1.0)))))), 0.0)))), ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), bool(false)), _GLF_IDENTITY(float(mat2x4(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2689.5253)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), ! (! (bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(81.37)), bool(false)))) - 0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))) * (_GLF_IDENTITY(1.0, float(mat2x3(1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0))))))), 0.0)), (float(mat2x4(mix(_GLF_IDENTITY(float(injectionSwitch.y), sqrt(1.0) * (float(injectionSwitch.y))), float(_GLF_FUZZED(_GLF_IDENTITY(-2689.5253, clamp(-2689.5253, -2689.5253, -2689.5253)))), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), (bool(false)) || false)))), 1.0, cos(0.0), 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), sqrt(0.0) + (dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))) * (_GLF_IDENTITY(1.0, float(mat2x3(1.0, exp(0.0), 1.0, 1.0, 0.0, 1.0))))))), 0.0))) - 0.0))))))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(75.87)), bool(false)), (_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) ? _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0))))) : _GLF_FUZZED(log2(51.11)))), injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(75.87)), bool(false)), max(mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(75.87)), bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, abs(0.0) + (injectionSwitch.y)), injectionSwitch.y))), float(_GLF_FUZZED(75.87)), bool(false))))) / 1.0))))))))))))))))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    return;
                   return;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(0, int(ivec2(0, (0 << _GLF_IDENTITY(int(7), int(7)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0))))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))
                    {
                     do
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, false))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, false))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)))))), (injectionSwitch.x < injectionSwitch.y))))
                        {
                         return;
                         if(_GLF_DEAD(false))
                          continue;
                        }
                       else
                        {
                        }
                      }
                     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))));
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  return;
                }
               return;
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), true && (true))))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), false, false, false))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
                      continue;
                     return;
                    }
                  }
                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) << 0))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(ivec3(1, 1, 0))), 1)), 1)), (_GLF_IDENTITY(1, (1) | 0)) | (1)) << _GLF_IDENTITY(int(_GLF_IDENTITY(7, int(_GLF_IDENTITY(ivec3(7, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(4), int(4))), 1), ivec3(ivec3(ivec3(7, (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(4), int(4))), 1))))))), int(7))) >> _GLF_IDENTITY(int(7), int(7))))) && true); _injected_loop_counter ++)
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                    continue;
                   return;
                   if(_GLF_DEAD(false))
                    return;
                  }
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  return;
                }
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true)))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       return;
                       if(_GLF_DEAD(false))
                        continue;
                      }
                    }
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), (false ? _GLF_FUZZED(8897.7058) : float(float(injectionSwitch.y)))))))))
                {
                }
               else
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       if(_GLF_DEAD(false))
                        return;
                       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                        continue;
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                     if(_GLF_DEAD(false))
                      return;
                     if(_GLF_DEAD(false))
                      return;
                     for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))))))))
                        return;
                      }
                     return;
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4368.2183) : injectionSwitch.x)) > injectionSwitch.y))))))
                    {
                     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) * 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (0 >> _GLF_IDENTITY(int(8), int(8))) | (_GLF_IDENTITY(int(2), ~ (~ (int(2)))))), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (0 >> _GLF_IDENTITY(int(8), int(8))) | (_GLF_IDENTITY(int(2), ~ (~ (int(2)))))), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (0 >> _GLF_IDENTITY(int(8), int(8))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) << 0)), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) << 0)), clamp(int(_GLF_IDENTITY(2, (2) << 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) << 0)), (int(_GLF_IDENTITY(2, (2) << 0))) ^ 0), int(_GLF_IDENTITY(2, (2) << 0)))) : _GLF_FUZZED(ivec4(-99840, -36142, 45207, -88677).w))), ~ (~ (int(2)))))), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), max(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))), _GLF_IDENTITY(int(2), (int(2)) | (int(2))), _GLF_IDENTITY(int(2), (int(2)) | (int(2)))))))))); _injected_loop_counter ++)
                      {
                       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                        continue;
                       return;
                      }
                    }
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))) && true)))))
                return;
              }
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), false))))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   return;
                  }
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.6), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-27.20)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-82.64), max(_GLF_FUZZED(-82.64), _GLF_IDENTITY(_GLF_FUZZED(-82.64), (_GLF_FUZZED(-82.64)) - 0.0)))), bool(false))), float(mat2x4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(155.920))), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), injectionSwitch.x))) / 1.0) > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, 1 * (_injected_loop_counter --)))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
                      {
                       return;
                      }
                     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), false), bvec2(bvec2(bvec2(false, false)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec3(bvec3(bvec2(false, false), false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec3(bvec3(bvec2(false, false), false))))), true, true))))))), true)))))), true, false)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), false), bvec2(bvec2(bvec2(false, false)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec3(bvec3(bvec2(false, false), false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec3(bvec3(bvec2(false, false), false))))), true, true))))))), true)))))), true, false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), false), bvec2(bvec2(bvec2(false, false)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec3(bvec3(bvec2(false, false), false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec3(bvec3(bvec2(false, false), false))))), true, true))))))), true)))))), true, false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), false), bvec2(bvec2(bvec2(false, false)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec3(bvec3(bvec2(false, false), false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec3(bvec3(bvec2(false, false), false))))), true, true))))))), true)))))), true, false)))))))), true, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), false), bvec2(bvec2(bvec2(false, false)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec3(bvec3(bvec2(false, false), false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec3(bvec3(bvec2(false, false), false))))), true, true))))))), true)))))), true, false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), false), bvec2(bvec2(bvec2(false, false)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec3(bvec3(bvec2(false, false), false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec3(bvec3(bvec2(false, false), false))))), true, true))))))), true)))))), true, false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), false), bvec2(bvec2(bvec2(false, false)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec3(bvec3(bvec2(false, false), false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec3(bvec3(bvec2(false, false), false))))), true, true))))))), true)))))), true, false)))))))), true, false)), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), false), bvec2(bvec2(bvec2(false, false)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec3(bvec3(bvec2(false, false), false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec3(bvec3(bvec2(false, false), false))))), true, true))))))), true)))))), true, false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), false), bvec2(bvec2(bvec2(false, false)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec3(bvec3(bvec2(false, false), false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec3(bvec3(bvec2(false, false), false))))), true, true))))))), true)))))), true, false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), false), bvec2(bvec2(bvec2(false, false)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec3(bvec3(bvec2(false, false), false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec3(bvec3(bvec2(false, false), false))))), true, true))))))), true)))))), true, false)))))))), true, false)), false, true)), false, false))))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))))))
                      return;
                    }
                  }
                 else
                  {
                  }
                }
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))
              {
               if(_GLF_DEAD(false))
                return;
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _GLF_IDENTITY(_injected_loop_counter --, 0 | _GLF_IDENTITY((_injected_loop_counter --), ((_injected_loop_counter --)) >> 0)))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)), false || (! (false)))))) || false), (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec4(0.4, 0.9, 65.11, 45.35) * mat2x4(9.3, -669.468, 8.0, 9.1, -5134.1427, -628.076, -649.189, 64.28))) : injectionSwitch)).x > injectionSwitch.y)))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (false) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), log(1.0)), transpose(transpose(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), log(1.0))))))) > injectionSwitch.y))), true, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * determinant(mat3(1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) && true), (_GLF_IDENTITY(false, (false) || false)) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(9.9)), (float(_GLF_FUZZED(9.9))) - 0.0), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x))) * 1.0) < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec2(! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, ! (! (false))))))), true)))), (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), log(1.0)), transpose(transpose(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, 0.0, abs(1.0), 1.0))), 0.0), vec3(0.0, 1.0, 1.0))), _GLF_IDENTITY(log(1.0), mix(float(log(1.0)), float(_GLF_FUZZED(8.7)), bool(false))))))))) > injectionSwitch.y))), true, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * determinant(mat3(1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0))))) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.9)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x))) * 1.0) < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y)))))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), (min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)) * mat2(1.0))).y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(0.7, 65.53, -73.11, -233.127)) : mat2(1.0)))), injectionSwitch), (min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)) * mat2(1.0))).y))))))
                        {
                         for(int _injected_loop_counter = (0 ^ (0 ^ 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                          {
                           if(_GLF_DEAD(false))
                            return;
                          }
                         if(_GLF_DEAD(false))
                          return;
                         return;
                        }
                       else
                        {
                        }
                       if(_GLF_DEAD(false))
                        continue;
                      }
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4)))), (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4))))) >> 0)) ^ 1)); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(false))
                        return;
                      }
                    }
                   else
                    {
                    }
                  }
                }
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   return;
                  }
                }
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || false)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            return;
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(1.0, min(1.0, 1.0)), abs(0.0), sqrt(0.0), 0.0, 0.0, 0.0, abs(0.0))), (_GLF_IDENTITY(true, (true) || false) ? float(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0, abs(0.0), sqrt(0.0), 0.0, 0.0, 0.0, abs(0.0))) : _GLF_FUZZED(-9918.9944))))))))
      {
      }
     else
      {
       do
        {
         return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
            return;
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) >> 0)))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch))[0], max(((injectionSwitch))[0], ((injectionSwitch))[0])), _GLF_FUZZED(-89.08)), vec2(_GLF_FUZZED(5304.9698), ((injectionSwitch))[1]), bvec2(false, true))) * mat2(1.0)).y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), true))), bvec2(bvec3(bvec2(true, false), false))), true)))))))
              {
               return;
              }
             else
              {
               do
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                  {
                   return;
                  }
                }
              }
             if(_GLF_DEAD(false))
              break;
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            break;
          }
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), (_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), (uvec2((subgroup_local_id + 1), 0u)) | (uvec2((subgroup_local_id + 1), 0u)))) | uvec2(0u, 0u))), 0u | (uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), (_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), uvec2(0u, 0u) | (uvec2((subgroup_local_id + 1), 0u)))) | uvec2(0u, 0u)))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), (uvec2((subgroup_local_id + 1), 0u)) | uvec2(0u, 0u))), 0u | (uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), (uvec2((subgroup_local_id + 1), 0u)) | uvec2(0u, 0u)))))))), (uint(uint(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), (uvec2((subgroup_local_id + 1), 0u)) | uvec2(0u, 0u))), 0u | (uint(_GLF_IDENTITY(uvec2((subgroup_local_id + 1), 0u), (uvec2((subgroup_local_id + 1), 0u)) | uvec2(0u, 0u))))))))) | 0u)) % subgroup_size);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))
      return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, clamp(4, 4, 4)))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (subgroup_size) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), (false ? _GLF_FUZZED(next_virtual_gid) : max(subgroup_size, subgroup_size)))))), subgroup_size, subgroup_size)), (false ? _GLF_FUZZED(next_virtual_gid) : subgroup_size))) >> 0u), ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))) || (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1) | 0u) < subgroup_size))))), bool(bool(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), (74187u & 0u), 1u, 1u), max(uvec4(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), (74187u & 0u), 1u, 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), (74187u & 0u), 1u, 1u), (uvec4(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), (74187u & 0u), 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)))))))))), subgroup_size, subgroup_size)), (false ? _GLF_FUZZED(next_virtual_gid) : subgroup_size))) >> 0u), ! (! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) < subgroup_size, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))) || (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1 < subgroup_size))), false || ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec4(1, 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))) < subgroup_size, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))) || (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) + 1 < subgroup_size)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    return;
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, ! _GLF_IDENTITY((! (_injected_loop_counter != 1)), ! (! (_GLF_IDENTITY((! (_injected_loop_counter != 1)), false || ((! (_injected_loop_counter != 1)))))))), true && (_GLF_IDENTITY(_injected_loop_counter != 1, ! _GLF_IDENTITY((! (_injected_loop_counter != 1)), ! (! (_GLF_IDENTITY((! (_injected_loop_counter != _GLF_IDENTITY(1, (1) | (1)))), false || ((! (_injected_loop_counter != 1)))))))))))), false || (_GLF_IDENTITY(_injected_loop_counter != 1, false || (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, ! _GLF_IDENTITY((! (_injected_loop_counter != 1)), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0) != 1)), false || ((! (_injected_loop_counter != 1)))))))), true && (_GLF_IDENTITY(_injected_loop_counter != 1, ! _GLF_IDENTITY((! (_injected_loop_counter != 1)), ! (! (_GLF_IDENTITY((! (_injected_loop_counter != _GLF_IDENTITY(1, (1) | (1)))), false || _GLF_IDENTITY(((! (_injected_loop_counter != 1))), _GLF_IDENTITY(bool(bvec2(((! (_injected_loop_counter != 1))), false)), (_GLF_IDENTITY(bool(bvec2(((! (_injected_loop_counter != 1))), false)), (bool(bvec2(((! (_injected_loop_counter != 1))), false))) || false)) && true)))))))))))))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY((bool(_GLF_WRAPPED_IF_FALSE(false))) && true, _GLF_IDENTITY(bool(bvec2((bool(_GLF_WRAPPED_IF_FALSE(false))) && true, true)), ! (! (bool(bvec2((bool(_GLF_WRAPPED_IF_FALSE(false))) && true, true))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false)))), _GLF_IDENTITY((bool(_GLF_WRAPPED_IF_FALSE(false))) && true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && (_GLF_IDENTITY((bool(_GLF_WRAPPED_IF_FALSE(false))) && true, bool(bvec2((bool(_GLF_WRAPPED_IF_FALSE(false))) && true, true))))))) || false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), (_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), (bool(_GLF_WRAPPED_IF_FALSE(false))) && true)) || false)), true, true))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), (bool(_GLF_WRAPPED_IF_FALSE(false))) && true), (_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY((bool(_GLF_WRAPPED_IF_FALSE(false))) && true, true && (_GLF_IDENTITY((bool(_GLF_WRAPPED_IF_FALSE(false))) && true, bool(bvec2((bool(_GLF_WRAPPED_IF_FALSE(false))) && true, true))))))) || false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), ! (! (_GLF_IDENTITY(false, (false) || false)))), true, true))))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), (_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), (bool(_GLF_WRAPPED_IF_FALSE(false))) && true)) || false)), true, true))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), ! (! (bool(_GLF_WRAPPED_IF_FALSE(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), (bool(_GLF_WRAPPED_IF_FALSE(false))) && true), (_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY((bool(_GLF_WRAPPED_IF_FALSE(false))) && true, true && (_GLF_IDENTITY((bool(_GLF_WRAPPED_IF_FALSE(false))) && true, bool(bvec2((bool(_GLF_WRAPPED_IF_FALSE(false))) && true, true))))))) || false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), (bool(_GLF_WRAPPED_IF_FALSE(false))) && true)) || false, ! (! ((_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY((bool(_GLF_WRAPPED_IF_FALSE(false))) && true, ! (! ((bool(_GLF_WRAPPED_IF_FALSE(false))) && true))))) || false))))), true, true))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), (bool(_GLF_WRAPPED_IF_FALSE(false))) && true), (_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY((bool(_GLF_WRAPPED_IF_FALSE(false))) && true, true && (_GLF_IDENTITY((bool(_GLF_WRAPPED_IF_FALSE(false))) && true, bool(bvec2((bool(_GLF_WRAPPED_IF_FALSE(false))) && true, true))))))) || false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), (_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), (bool(_GLF_WRAPPED_IF_FALSE(false))) && true)) || false)), true, true))))))), false || (! (! ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (bool(_GLF_WRAPPED_IF_FALSE(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_WRAPPED_IF_FALSE(false))))), (bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) && true), (_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY((bool(_GLF_WRAPPED_IF_FALSE(false))) && true, true && (_GLF_IDENTITY((bool(_GLF_WRAPPED_IF_FALSE(false))) && true, bool(bvec2((bool(_GLF_WRAPPED_IF_FALSE(false))) && true, true))))))) || false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), (_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), (bool(_GLF_WRAPPED_IF_FALSE(false))) && true)) || false)), true, true)))))))))), false, false, true))))))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             break;
            }
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))) && true)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))) && true)), false, true, true))), _GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (true) || false), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ((_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, false)))))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          break;
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))))))
          {
           if(_GLF_DEAD(false))
            continue;
           atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
           if(_GLF_DEAD(false))
            continue;
           for(int _injected_loop_counter = (_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY((int(_GLF_IDENTITY(6, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, (6) - 0)), _GLF_IDENTITY(min(~ (_GLF_IDENTITY(6, (6) - 0)), ~ (_GLF_IDENTITY(6, (6) - 0))), (0 >> _GLF_IDENTITY(int(5), int(5))) | (min(~ (_GLF_IDENTITY(6, (6) - 0)), ~ (_GLF_IDENTITY(6, (6) - 0)))))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2((int(6)), 0), _GLF_IDENTITY(ivec2(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(ivec2((int(6)), 0), ~ (~ (ivec2((int(6)), 0)))), ivec2(0, 0) | (ivec2(_GLF_IDENTITY((int(6)), ((int(6))) ^ 0), 0))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))), (ivec2(ivec4(_GLF_IDENTITY(ivec2((int(6)), 0), ivec2(0, 0) | (ivec2((int(6)), 0))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ ivec2(0, 0)))), (int(_GLF_IDENTITY(ivec2((int(6)), _GLF_IDENTITY(0, (0) / 1)), ivec2(ivec4(_GLF_IDENTITY(ivec2((int(6)), 0), ivec2(0, 0) | (ivec2((int(6)), 0))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))) * 1)) | (int(_GLF_IDENTITY(6, _GLF_IDENTITY((6), ((6)) - 0) | (_GLF_IDENTITY(6, _GLF_IDENTITY((_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) | (6)), _GLF_IDENTITY(6, (6) | (_GLF_IDENTITY(6, (_GLF_IDENTITY(6, min(6, 6))) - _GLF_IDENTITY(0, clamp(0, 0, 0)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, ~ (~ (6)))) | (6)), _GLF_IDENTITY(6, (6) | (6))))), ~ (~ ((_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) | (6)), _GLF_IDENTITY(6, (_GLF_IDENTITY(6, (false ? _GLF_FUZZED(-64821) : 6))) | (6))))))))) >> 0) / 1)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) ^ 0)), (int(6)) | (int(6)))) - 0)) - 0), int(6))), 0 | ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY((int(6)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2((int(6)), 0), ivec2(ivec4(_GLF_IDENTITY(ivec2((int(6)), 0), ivec2(0, 0) | (ivec2((int(6)), 0))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (int(_GLF_IDENTITY(ivec2((int(6)), 0), ivec2(ivec4(_GLF_IDENTITY(ivec2((int(6)), 0), ivec2(0, 0) | (ivec2((int(6)), 0))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))) * 1)) | (int(_GLF_IDENTITY(6, (6) | (_GLF_IDENTITY(6, _GLF_IDENTITY((_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) | (6)), _GLF_IDENTITY(6, (6) | (6))))), (_GLF_IDENTITY((_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) | (6)), _GLF_IDENTITY(6, (6) | (6))))), ~ (~ ((_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) | (6)), _GLF_IDENTITY(6, (6) | (6))))))))) >> 0) / 1)))))), (_GLF_IDENTITY(int(6), (int(6)) | (int(6)))) - 0)) - 0), max(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY((int(6)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2((int(6)), 0), ivec2(ivec4(_GLF_IDENTITY(ivec2((int(6)), 0), ivec2(0, 0) | (ivec2((int(6)), 0))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (int(_GLF_IDENTITY(ivec2((int(6)), 0), ivec2(ivec4(_GLF_IDENTITY(ivec2((int(6)), 0), ivec2(0, 0) | (ivec2((int(6)), 0))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))) * 1)) | (int(_GLF_IDENTITY(6, (6) | (_GLF_IDENTITY(6, _GLF_IDENTITY((_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) | (6)), _GLF_IDENTITY(6, (6) | (6))))), (_GLF_IDENTITY((_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) | (6)), _GLF_IDENTITY(6, (6) | (6))))), ~ (~ ((_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) | (6)), _GLF_IDENTITY(6, (6) | (6))))))))) >> 0) / 1)))))), (_GLF_IDENTITY(int(6), (int(6)) | (int(6)))) - 0)) - 0), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY((int(6)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2((int(6)), 0), ivec2(ivec4(_GLF_IDENTITY(ivec2((int(6)), 0), ivec2(0, 0) | (ivec2((int(6)), 0))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (int(_GLF_IDENTITY(ivec2((int(6)), 0), ivec2(ivec4(_GLF_IDENTITY(ivec2((int(6)), 0), ivec2(0, 0) | (ivec2((int(6)), 0))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))) * 1)) | (int(_GLF_IDENTITY(6, (6) | (_GLF_IDENTITY(6, _GLF_IDENTITY((_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) | (6)), _GLF_IDENTITY(6, (6) | (6))))), (_GLF_IDENTITY((_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) | (6)), _GLF_IDENTITY(6, (6) | (6))))), ~ (~ ((_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) | (6)), _GLF_IDENTITY(6, (6) | (6))))))))) >> 0) / 1)))))), (_GLF_IDENTITY(int(6), (int(6)) | (int(6)))) - 0)) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY((int(6)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2((int(6)), 0), ivec2(ivec4(_GLF_IDENTITY(ivec2((int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(int(6)), (false ? _GLF_FUZZED(-74339) : int(int(6))))))), 0), _GLF_IDENTITY(ivec2(0, 0) | (ivec2((int(6)), 0)), ~ (~ (ivec2(0, 0) | (ivec2((int(6)), 0)))))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2((int(6)), 0), ivec2(ivec4(_GLF_IDENTITY(ivec2((int(6)), 0), ivec2(0, 0) | (ivec2(_GLF_IDENTITY((int(6)), max((int(6)), (int(6)))), 0))), 1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).x)))))), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2((int(6)), 0), ivec2(ivec4(_GLF_IDENTITY(ivec2((int(6)), 0), ivec2(0, 0) | _GLF_IDENTITY((ivec2(_GLF_IDENTITY((int(6)), max((int(6)), (int(6)))), 0)), (_GLF_IDENTITY((ivec2(_GLF_IDENTITY((int(6)), max((int(6)), (int(6)))), 0)), (true ? (ivec2(_GLF_IDENTITY((int(6)), max((int(6)), (int(6)))), 0)) : _GLF_FUZZED(ivec2(-25584, -13818))))) / ivec2(1, 1))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2((int(6)), 0), ivec2(ivec4(_GLF_IDENTITY(ivec2((int(_GLF_IDENTITY(6, _GLF_IDENTITY(int(ivec2(6, 1)), (int(ivec2(6, 1))) | 0)))), 0), ivec2(0, 0) | (ivec2(_GLF_IDENTITY((int(6)), max((int(6)), (int(6)))), 0))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (int(_GLF_IDENTITY(ivec2((int(6)), 0), ivec2(ivec4(_GLF_IDENTITY(ivec2((int(6)), 0), ivec2(0, 0) | _GLF_IDENTITY((ivec2(_GLF_IDENTITY((int(6)), max((int(6)), (int(6)))), 0)), ivec2(0, 0) ^ (_GLF_IDENTITY((ivec2(_GLF_IDENTITY((int(6)), max((int(6)), (int(6)))), 0)), min((ivec2(_GLF_IDENTITY((int(6)), max((int(6)), (int(6)))), 0)), (ivec2(_GLF_IDENTITY((int(6)), max((int(6)), (int(6)))), 0))))))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))) | 0), int(_GLF_IDENTITY(ivec2((int(6)), 0), ivec2(ivec4(_GLF_IDENTITY(ivec2((int(6)), 0), ivec2(0, 0) | (ivec2(_GLF_IDENTITY((int(_GLF_IDENTITY(6, clamp(6, 6, 6)))), max((int(6)), (int(6)))), 0))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), int(_GLF_IDENTITY(ivec2((int(6)), 0), ivec2(ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((int(6)), max(_GLF_IDENTITY((int(6)), min((int(6)), _GLF_IDENTITY((int(6)), max((int(6)), (int(6)))))), (int(6)))), 0), ivec2(0, 0) | (ivec2(_GLF_IDENTITY((int(6)), max((int(6)), _GLF_IDENTITY((int(6)), min((int(6)), (int(6)))))), 0))), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))))))) * 1)) | (int(_GLF_IDENTITY(6, (6) | (_GLF_IDENTITY(_GLF_IDENTITY(6, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) | (6)), _GLF_IDENTITY(6, (6) | (6)))), (_GLF_IDENTITY(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) | (6)), _GLF_IDENTITY(6, (6) | (6)))), 0 | (_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) | (6)), _GLF_IDENTITY(6, (6) | (6))))))) >> 0)), (_GLF_IDENTITY((_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, (6) | (6)), min(_GLF_IDENTITY(6, (6) | (6)), _GLF_IDENTITY(6, (6) | (6)))), _GLF_IDENTITY(6, (6) | (6))))), ~ (~ ((_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) | (6)), _GLF_IDENTITY(6, (6) | (6))))))))) >> 0) / 1), (true ? _GLF_IDENTITY(6, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) | (6)), _GLF_IDENTITY(6, (6) | (6)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) | (6)), _GLF_IDENTITY(6, (6) | (6)))), (_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) | (6)), _GLF_IDENTITY(6, (6) | (6))))) >> (0 << _GLF_IDENTITY(int(7), int(7)))), 0 | (_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) | (6)), _GLF_IDENTITY(6, (6) | (6))))))) >> 0)), (_GLF_IDENTITY((_GLF_IDENTITY(6, max(_GLF_IDENTITY(_GLF_IDENTITY(6, (6) | (6)), min(_GLF_IDENTITY(6, (6) | (6)), _GLF_IDENTITY(6, (6) | (6)))), _GLF_IDENTITY(6, (6) | (6))))), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) | (6)), _GLF_IDENTITY(6, (6) | (6))))))), min((~ ((_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) | (6)), _GLF_IDENTITY(6, (6) | (6))))))), (~ ((_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) | (6)), _GLF_IDENTITY(6, (6) | (6))))))))))) >> 0) / 1) : _GLF_FUZZED(_injected_loop_counter)))))))), (_GLF_IDENTITY(int(6), (int(6)) | (int(_GLF_IDENTITY(6, (6) + int(_GLF_ZERO(0.0, injectionSwitch.x))))))) - 0)) - 0)) + 0), int(6))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 0 + (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) ? _injected_loop_counter : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), min(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))))), _GLF_IDENTITY(clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter), 1 * (clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))) < _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 | (int(_GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y)))) || false))
                  continue;
                 break;
                }
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(false || (true && (false)), (false || (true && (false))) || false)))))))
                    continue;
                   break;
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
               while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-5.0, 7511.0603)) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))))) || false), (! ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))))) || _GLF_IDENTITY(false, false || (false)))) || false)))));
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
              break;
             if(_GLF_DEAD(false))
              break;
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
              {
              }
             else
              {
               return;
              }
            }
           else
            {
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))) || false)), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))) || false)), true)), true && (bool(bvec2((_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))), ((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))) || false)), true)))))))))
          continue;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(true, true && (true))))), (injectionSwitch.x > injectionSwitch.y))) || false)))))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
              {
              }
             else
              {
               return;
              }
            }
           do
            {
             return;
             if(_GLF_DEAD(false))
              continue;
            }
           while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)), bool(bvec3(_GLF_WRAPPED_LOOP(false), false, true))), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), false, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), false, true)))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false)))))))));
          }
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      break;
    }
   while(_GLF_WRAPPED_LOOP(false));
   subgroupAll(false);
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, false || (false))))))))))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       continue;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
        break;
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               return;
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         if(_GLF_DEAD(false))
          continue;
         return;
         if(_GLF_DEAD(false))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      {
       if(_GLF_DEAD(false))
        break;
       continue;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec2((! (injectionSwitch.x > injectionSwitch.y)), false)))), (! (_GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-197.207))) > injectionSwitch.y)), false)), (bool(bvec2((! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-197.207))) > injectionSwitch.y)), false))) && true)))) || false), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec2((! (injectionSwitch.x > injectionSwitch.y)), false)))), (! (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec2((! (injectionSwitch.x > injectionSwitch.y)), false))))) || false), false, false, false)))))) && true))))));
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, int(ivec3(1, 0, 1)))));
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true))), (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true))), ! (! ((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true))))))) && true) && _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), true && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true))))), (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true))), ! (! ((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true))))))) && true) && _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))))))) || false))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false)), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
            continue;
           continue;
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, min(0, 0))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, min(0, 0))), (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, min(0, 0)))) || false))); _injected_loop_counter --)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 0.0), min(vec3(injectionSwitch.x, 0.0, 0.0), vec3(injectionSwitch.x, 0.0, 0.0))), min(vec3(injectionSwitch.x, 0.0, 0.0), vec3(injectionSwitch.x, 0.0, 0.0)))), float(mat4(float(_GLF_IDENTITY(vec3(injectionSwitch.x, 0.0, 0.0), min(vec3(injectionSwitch.x, 0.0, 0.0), vec3(injectionSwitch.x, 0.0, 0.0)))), determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.0) : _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-641.629 + -7.3))), bool(false))))), 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))), float(_GLF_FUZZED(99.80)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))), _GLF_IDENTITY(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec3(true, true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))), false, true)))) && (false))))), float(_GLF_FUZZED(0.8)), bool(false))) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(-913.708, 4120.4165, 2.7, -2.6).y) : injectionSwitch.x)), mix(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(mix(float(float(injectionSwitch.x)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(99.80), max(_GLF_FUZZED(99.80), _GLF_IDENTITY(_GLF_FUZZED(99.80), clamp(_GLF_FUZZED(99.80), _GLF_FUZZED(99.80), _GLF_IDENTITY(_GLF_FUZZED(99.80), min(_GLF_FUZZED(99.80), _GLF_FUZZED(99.80))))))), min(_GLF_FUZZED(99.80), _GLF_FUZZED(99.80)))), bool(_GLF_IDENTITY(false, true && (false)))), clamp(mix(float(float(injectionSwitch.x)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(99.80), max(_GLF_FUZZED(99.80), _GLF_IDENTITY(_GLF_FUZZED(99.80), clamp(_GLF_FUZZED(99.80), _GLF_FUZZED(99.80), _GLF_IDENTITY(_GLF_FUZZED(99.80), min(_GLF_FUZZED(99.80), _GLF_FUZZED(99.80))))))), min(_GLF_FUZZED(99.80), _GLF_FUZZED(99.80)))), bool(_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(mix(float(float(injectionSwitch.x)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(99.80), max(_GLF_FUZZED(99.80), _GLF_IDENTITY(_GLF_FUZZED(99.80), clamp(_GLF_FUZZED(99.80), _GLF_FUZZED(99.80), _GLF_IDENTITY(_GLF_FUZZED(99.80), min(_GLF_FUZZED(99.80), _GLF_FUZZED(99.80))))))), min(_GLF_FUZZED(99.80), _GLF_FUZZED(99.80)))), bool(_GLF_IDENTITY(false, true && (false)))), min(mix(float(float(injectionSwitch.x)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(99.80), max(_GLF_FUZZED(99.80), _GLF_IDENTITY(_GLF_FUZZED(99.80), clamp(_GLF_FUZZED(99.80), _GLF_FUZZED(99.80), _GLF_IDENTITY(_GLF_FUZZED(99.80), min(_GLF_FUZZED(99.80), _GLF_FUZZED(99.80))))))), min(_GLF_FUZZED(99.80), _GLF_FUZZED(99.80)))), bool(_GLF_IDENTITY(false, true && (false)))), mix(float(float(injectionSwitch.x)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(99.80), max(_GLF_FUZZED(99.80), _GLF_IDENTITY(_GLF_FUZZED(99.80), clamp(_GLF_FUZZED(99.80), _GLF_FUZZED(99.80), _GLF_IDENTITY(_GLF_FUZZED(99.80), min(_GLF_FUZZED(99.80), _GLF_FUZZED(99.80))))))), min(_GLF_FUZZED(99.80), _GLF_FUZZED(99.80)))), bool(_GLF_IDENTITY(false, true && (false)))))), mix(float(float(injectionSwitch.x)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(99.80), max(_GLF_FUZZED(99.80), _GLF_IDENTITY(_GLF_FUZZED(99.80), clamp(_GLF_FUZZED(99.80), _GLF_FUZZED(99.80), _GLF_IDENTITY(_GLF_FUZZED(99.80), min(_GLF_FUZZED(99.80), _GLF_FUZZED(99.80))))))), min(_GLF_FUZZED(99.80), _GLF_FUZZED(99.80)))), bool(_GLF_IDENTITY(false, true && (false))))))), float(_GLF_FUZZED(0.8)), bool(false))) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec4((_GLF_IDENTITY(false, (false) || false)), false, false, true)))))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec4((_GLF_IDENTITY(false, (false) || false)), false, false, true)))))) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec4((_GLF_IDENTITY(false, (false) || false)), false, false, true)))))) && true)), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec4((_GLF_IDENTITY(false, (false) || false)), false, false, true)))))) && true))) || false))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(-913.708, 4120.4165, 2.7, -2.6).y) : injectionSwitch.x)), mix(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(float(injectionSwitch.x)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(99.80), max(_GLF_FUZZED(99.80), _GLF_IDENTITY(_GLF_FUZZED(99.80), clamp(_GLF_FUZZED(99.80), _GLF_FUZZED(99.80), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(99.80), max(_GLF_IDENTITY(_GLF_FUZZED(99.80), max(_GLF_FUZZED(99.80), _GLF_FUZZED(99.80))), _GLF_FUZZED(99.80))), min(_GLF_FUZZED(99.80), _GLF_FUZZED(_GLF_IDENTITY(99.80, min(_GLF_IDENTITY(99.80, max(99.80, 99.80)), 99.80))))))))), min(_GLF_FUZZED(99.80), _GLF_FUZZED(99.80)))), bool(_GLF_IDENTITY(false, true && (false))))), float(_GLF_FUZZED(0.8)), bool(false))) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))))))))) && true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec4(-913.708, 4120.4165, 2.7, -2.6).y) : injectionSwitch.x)), mix(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(99.80), max(_GLF_FUZZED(99.80), _GLF_IDENTITY(_GLF_FUZZED(99.80), clamp(_GLF_FUZZED(99.80), _GLF_FUZZED(99.80), _GLF_IDENTITY(_GLF_FUZZED(99.80), min(_GLF_FUZZED(99.80), _GLF_FUZZED(99.80))))))), min(_GLF_FUZZED(99.80), _GLF_FUZZED(99.80)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(99.80), max(_GLF_FUZZED(99.80), _GLF_IDENTITY(_GLF_FUZZED(99.80), clamp(_GLF_FUZZED(99.80), _GLF_FUZZED(_GLF_IDENTITY(99.80, float(_GLF_IDENTITY(mat4x2(99.80, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, sqrt(1.0), 0.0, 1.0, tan(0.0)), transpose(transpose(_GLF_IDENTITY(mat4x2(99.80, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, sqrt(1.0), 0.0, 1.0, tan(0.0)), mat4x2(mat4(mat4x2(99.80, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, sqrt(1.0), 0.0, 1.0, tan(0.0))))))))))), _GLF_IDENTITY(_GLF_FUZZED(99.80), min(_GLF_FUZZED(99.80), _GLF_FUZZED(99.80))))))), min(_GLF_FUZZED(99.80), _GLF_FUZZED(99.80))))) / 1.0), bool(_GLF_IDENTITY(false, true && (false))))), float(_GLF_FUZZED(0.8)), bool(false))) > injectionSwitch.y)))))) && true)) || _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            continue;
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(3.7)), bool(false))))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))), bool(bvec3(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))), false, false))), false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))))), bool(bvec3(bool(bvec4(_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))), bool(bvec3(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))), false, false))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)))))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) ? _GLF_FUZZED(658.480) : injectionSwitch.x)) < injectionSwitch.y)), false, false))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  continue;
                 do
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), (_GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))))), bool(_GLF_IDENTITY(bool(bool(bvec4(false, true, true, _GLF_IDENTITY(true, ! (! (true)))))), ! (! (bool(bool(bvec4(false, true, true, _GLF_IDENTITY(true, ! (! (true)))))))))))) && true))))
                    return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    return;
                   do
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        return;
                       continue;
                      }
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        {
                         do
                          {
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)))) != 1); _GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY((_injected_loop_counter ++), ((_injected_loop_counter ++)) - 0) | 0))
                            {
                             if(_GLF_DEAD(false))
                              {
                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
                                {
                                 if(_GLF_DEAD(false))
                                  return;
                                }
                               continue;
                              }
                             do
                              {
                               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                                break;
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 return;
                                }
                               else
                                {
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              return;
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-229.422)), float(injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) || false)))))) && true))))))))))))))
                      break;
                    }
                   while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mix(injectionSwitch, vec2(-9456.9720, 2.1), bvec2(false, true))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), false || (bool(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)))))))), (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))))) || false))))))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mix(injectionSwitch, vec2(-9456.9720, 2.1), bvec2(false, true))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), false || (bool(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)))))))), (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))))) || false))))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mix(injectionSwitch, vec2(-9456.9720, 2.1), bvec2(false, true))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), false || (bool(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)))))))), (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))))) || false))))))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mix(injectionSwitch, vec2(-9456.9720, 2.1), bvec2(false, true))) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(177.485) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(656.292) : injectionSwitch.x)))) > injectionSwitch.y))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), ! (! (bool(bvec3(true, true, false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), false || (bool(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)))))))), (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))))) || false))))))))) || false)))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mix(injectionSwitch, vec2(-9456.9720, 2.1), bvec2(false, true))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), ((! (! (false)))) || false) && true)), (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))), (! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))) || false))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, length(vec4(0.0, 0.0, 0.0, 0.0)) + (injectionSwitch.y))), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, length(vec4(0.0, 0.0, 0.0, 0.0)) + (injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, length(vec4(0.0, 0.0, 0.0, 0.0)) + (injectionSwitch.y))))), false, true), bvec3(bvec3(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, length(vec4(0.0, 0.0, 0.0, 0.0)) + (injectionSwitch.y))))), false, true))))))))))))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), false || (bool(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-0.7)), bool(false))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(242.979), _GLF_FUZZED(4.8)), bvec2(false, false))).y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) && true))))))), true)), false || (bool(bvec2(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(14.04) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))))), true)))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY(((! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))))))), false || (_GLF_IDENTITY(((! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))))))), false || (((! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))))))))))), (! ((! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)))), true && (bool(bool(true))))))) || false))))))))) || false)) && true));
                  }
                }
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               break;
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
              {
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
               return;
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             do
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec4(_injected_loop_counter != 0, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))); _injected_loop_counter --)
                {
                 subgroupAll(_GLF_IDENTITY(true, false || (true)));
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
            }
          }
        }
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _injected_loop_counter -- : _GLF_FUZZED(71786))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), false || (! (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), ! (! (bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bool(false))))) && true)))))))) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true, true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
}
