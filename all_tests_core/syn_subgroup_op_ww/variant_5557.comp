#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) ^ 0u))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) ^ 0u))))), 0u, 0u)).x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u))))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), (! (false)) && true), (! (false)) && true)))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(packUnorm2x16(vec2(3.2, 1.5))) : workgroup_size))) - 0u))))) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), (injectionSwitch) / vec2(1.0, 1.0)).y, sin(0.0), 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((distance(vec4(6.4, -3.8, 494.456, 1.4), vec4(743.255, 7969.3484, 6.9, -1832.3996)) - fract(6129.8887))))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)))), dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (vec4(0.0, 1.0, 0.0, 0.0)) - tan(vec4(0.0, 0.0, 0.0, 0.0))), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(dot(vec4(1.0, sqrt(0.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-23.89) : 0.0)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))))), 1.0, 1.0, 1.0)), dot(vec4(1.0, sqrt(0.0), 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(65.59) : 0.0)), 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 0.0)), 1.0, 1.0, 1.0))))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)))), vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((3.0 + 6.8))), float(_GLF_IDENTITY(1.0, float(float(1.0)))), bool(true))), float(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY((vec3(1.0, 1.0, 1.0)), mix(vec3(_GLF_FUZZED(-591.897), ((vec3(1.0, 1.0, 1.0)))[1], _GLF_FUZZED(80.13)), vec3(((vec3(1.0, 1.0, 1.0)))[0], _GLF_FUZZED(351.978), ((vec3(1.0, 1.0, 1.0)))[2]), bvec3(true, false, true))) / vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5.1) : 1.0)), 1.0, 0.0, 0.0))), 0.0)), dot(vec4(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(log(1.0) + (1.0), mix(float(_GLF_FUZZED(218.061)), float(log(1.0) + (1.0)), bool(true)))), 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)))), vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0)))), mat3(1.0) * (vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)))), vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0), vec4(1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(33.65)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 1.0), vec4(mat4x2(vec4(1.0, 1.0, 0.0, 1.0), 1.0, 0.0, 1.0, 1.0))), vec4(0.0, 0.0, 1.0, 0.0)))), (true ? vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 1.0), vec4(mat4x2(vec4(1.0, 1.0, 0.0, 1.0), 1.0, 0.0, 1.0, 1.0))), vec4(0.0, 0.0, 1.0, 0.0)))) : _GLF_FUZZED(vec4(-9213.0624, -7.8, 8148.4994, 551.699)))), vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0)))))))))).y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u | (subgroup_id * subgroup_size), clamp(0u | (subgroup_id * subgroup_size), 0u | (subgroup_id * subgroup_size), 0u | (subgroup_id * subgroup_size)))) : _GLF_FUZZED(workgroup_id)))), ((_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u | (subgroup_id * subgroup_size), clamp(0u | (subgroup_id * subgroup_size), 0u | (subgroup_id * subgroup_size), 0u | (subgroup_id * subgroup_size)))) : _GLF_FUZZED(workgroup_id))))) >> 0u) - 0u);
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), workgroup_base + subgroup_base))), uint(uvec3(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base))), (0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, workgroup_base + subgroup_base)))) | (0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, workgroup_base + subgroup_base))))), 1u, 0u))))))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(0u | uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | 0u)) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (0u | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u))), 0u | (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), 0u ^ ((subgroup_base))) | (_GLF_IDENTITY(0u | uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? 0u | uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(144468u))))))), _GLF_IDENTITY(subgroup_base, (subgroup_base) | (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1), min((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1), (true ? (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) * 1u), (subgroup_local_id))), ((subgroup_local_id) | (subgroup_local_id)) | 0u)) + 1) : _GLF_FUZZED(workgroup_id))))) % subgroup_size), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(50524u & 0u, (50524u & 0u) - 0u)) | (_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), max(clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (workgroup_base)), workgroup_base), _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), (clamp(workgroup_base, workgroup_base, workgroup_base)) | _GLF_IDENTITY((clamp(workgroup_base, workgroup_base, workgroup_base)), 1u * ((clamp(workgroup_base, workgroup_base, workgroup_base)))))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_FUZZED(subgroup_id))))) / 1u))) + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), max(workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)) % subgroup_size), workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) | 0), 1, _GLF_IDENTITY(0, (0) | (0))))), (subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) | 0), 1, _GLF_IDENTITY(0, (0) | (0)))))) << 0u)) % subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(50524u & 0u, (50524u & 0u) - 0u)) | (_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), max(clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (workgroup_base)), workgroup_base), _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), (clamp(workgroup_base, workgroup_base, workgroup_base)) | _GLF_IDENTITY((clamp(workgroup_base, workgroup_base, workgroup_base)), 1u * ((clamp(workgroup_base, workgroup_base, workgroup_base)))))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_FUZZED(subgroup_id))))) / 1u))) + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), max(workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)) % subgroup_size), workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) | 0), 1, _GLF_IDENTITY(0, (0) | (0))))), (subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) | 0), 1, _GLF_IDENTITY(0, (0) | (0)))))) << 0u)) % subgroup_size))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(50524u & 0u, (50524u & 0u) - 0u)) | (_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), max(clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (workgroup_base)), workgroup_base), _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), (clamp(workgroup_base, workgroup_base, workgroup_base)) | _GLF_IDENTITY((clamp(workgroup_base, workgroup_base, workgroup_base)), 1u * ((clamp(workgroup_base, workgroup_base, workgroup_base)))))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_FUZZED(subgroup_id))))) / 1u))) + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), max(workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)) % subgroup_size), workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) | 0), 1, _GLF_IDENTITY(0, (0) | (0))))), (subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) | 0), 1, _GLF_IDENTITY(0, (0) | (0)))))) << 0u)) % subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(50524u & 0u, (50524u & 0u) - 0u)) | (_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), max(clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (workgroup_base)), workgroup_base), _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), (clamp(workgroup_base, workgroup_base, workgroup_base)) | _GLF_IDENTITY((clamp(workgroup_base, workgroup_base, workgroup_base)), 1u * ((clamp(workgroup_base, workgroup_base, workgroup_base)))))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_FUZZED(subgroup_id))))) / 1u))) + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), max(workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)) % subgroup_size), workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) | 0), 1, _GLF_IDENTITY(0, (0) | (0))))), (subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) | 0), 1, _GLF_IDENTITY(0, (0) | (0)))))) << 0u)) % subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(50524u & 0u, (50524u & 0u) - 0u)) | (_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), max(clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (workgroup_base)), workgroup_base), _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), (clamp(workgroup_base, workgroup_base, workgroup_base)) | _GLF_IDENTITY((clamp(workgroup_base, workgroup_base, workgroup_base)), 1u * ((clamp(workgroup_base, workgroup_base, workgroup_base)))))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_FUZZED(subgroup_id))))) / 1u))) + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), max(workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)) % subgroup_size), workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) | 0), 1, _GLF_IDENTITY(0, (0) | (0))))), (subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) | 0), 1, _GLF_IDENTITY(0, (0) | (0)))))) << 0u)) % subgroup_size)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(50524u & 0u, (50524u & 0u) - 0u)) | (_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), max(clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (workgroup_base)), workgroup_base), _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)), (clamp(workgroup_base, workgroup_base, workgroup_base)) | _GLF_IDENTITY((clamp(workgroup_base, workgroup_base, workgroup_base)), 1u * ((clamp(workgroup_base, workgroup_base, workgroup_base)))))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_FUZZED(subgroup_id))))) / 1u))) + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), max(workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)) % subgroup_size), workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) | 0), 1, _GLF_IDENTITY(0, (0) | (0))))), (subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) + 0) | 0), 1, _GLF_IDENTITY(0, (0) | (0)))))) << 0u)) % subgroup_size)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(int(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)))))), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if((subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_FUZZED(int(workgroup_id)) : 2))) == _GLF_IDENTITY(0, (0) - 0))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), true && (bool(bvec2(true, false))))), _GLF_IDENTITY(false, bool(bvec3(false, true, false))), true))) && (false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false, ! (! (false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false))), false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))), false, false), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))))), true, false, true)))) || false), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true), false || (bool(bvec2(false, true)))))))), true && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, false))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) && true))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(383.482), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6928.5933)), bvec2(true, false))).x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4309.6246)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), false || (bool(bvec2(_GLF_DEAD(false), false)))))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(true);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-423.778)), bool(false)))))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))), true, true, false))))), false || (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (2), _GLF_IDENTITY(int(ivec2(~ _GLF_IDENTITY((2), _GLF_IDENTITY(((2)) | 0, (((2)) | 0) | (_GLF_IDENTITY(((2)) | 0, (_GLF_IDENTITY(((2)) | 0, (((2)) | 0) >> 0)) * ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))))), 1)), _GLF_IDENTITY((int(ivec2(~ (2), 1))) ^ 0, max((int(ivec2(~ (2), 1))) ^ 0, (int(ivec2(~ (2), 1))) ^ 0)))), clamp(_GLF_IDENTITY(~ (2), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(~ (2), 1)), (int(ivec2(_GLF_IDENTITY(~ (2), 1 * (~ (2))), 1))) ^ 0), (_GLF_IDENTITY(int(ivec2(~ (2), 1)), (int(ivec2(~ (2), 1))) ^ 0)) / 1)), _GLF_IDENTITY(_GLF_IDENTITY(~ (2), _GLF_IDENTITY(int(ivec2(~ (2), 1)), (int(ivec2(~ (2), 1))) ^ 0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-51412) : _GLF_IDENTITY(~ (2), _GLF_IDENTITY(int(ivec2(~ (2), 1)), (int(ivec2(~ (2), 1))) ^ _GLF_IDENTITY(0, 0 | (0)))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (~ (2))), 2, 2))), _GLF_IDENTITY(int(ivec2(~ (2), 1)), _GLF_IDENTITY((int(ivec2(~ (2), 1))), ((int(ivec2(~ (2), 1)))) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) ^ 0)) ^ 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (2), (~ (2)) | (~ (2))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(~ (2), 1), ivec2(1, 1) * (ivec2(~ (2), 1)))), (int(ivec2(~ (2), 1))) ^ 0)), _GLF_IDENTITY(~ (2), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(~ (2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(81630) : ~ (2))), 1)), (int(ivec2(~ (2), 1))) ^ 0))))))))), 4, _GLF_IDENTITY(64, max(64, 64)), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))), ! (_GLF_IDENTITY(! ((! (false))), bool(bvec2(! ((! (false))), false)))))) && true))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), false || ((! (false))))), bool(bvec2(! ((! (false))), false)))))) && true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))), ! (_GLF_IDENTITY(! ((! (false))), bool(bvec2(! ((! (false))), false)))))) && true))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), false || ((! (false))))), bool(bvec2(! ((! (false))), false)))))) && true)))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (false))), bool(bvec2(! ((! (false))), false)))), ! (! (! (_GLF_IDENTITY(! ((! (false))), bool(bvec2(! ((! (false))), false))))))))) && true))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), false || ((! (false))))), _GLF_IDENTITY(bool(bvec2(! ((! (false))), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(! ((! (false))), false)), true, true, false)), (bool(bvec4(bool(bvec2(! ((! (false))), false)), true, true, false))) && true)))))) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))))), ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), false || ((! (false))))), bool(bvec2(! ((! (false))), false)))))) && true))))))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), false || ((! (false))))), bool(bvec2(! ((! (false))), false)))))) && true)), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), false || ((! (false))))), bool(bvec2(! ((! (false))), false)))))) && true))))))), ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), false || ((! (false))))), bool(bvec2(! ((! (false))), false)))))) && true)), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), false || ((! (false))))), bool(bvec2(! ((! (false))), false)))))) && true)))))))) && true))))))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) || false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED((_GLF_IDENTITY(9.1 * -2482.2391, (false ? _GLF_FUZZED(-5364.3417) : 9.1 * -2482.2391))))), bool(false)), min(mix(float(injectionSwitch.y), float(_GLF_FUZZED((_GLF_IDENTITY(9.1 * -2482.2391, (false ? _GLF_FUZZED(-5364.3417) : 9.1 * -2482.2391))))), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED((_GLF_IDENTITY(9.1 * -2482.2391, (false ? _GLF_FUZZED(-5364.3417) : 9.1 * -2482.2391))))), bool(false))))), injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, false || (false)) || (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((_GLF_IDENTITY(8.9 - (4022.3089 / -6541.2379), max(8.9 - (4022.3089 / -6541.2379), 8.9 - (4022.3089 / -6541.2379))))), _GLF_FUZZED((-91.52 + 4.0))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-382.958))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))))))) && true))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)), 1.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 0.0, 0.0, 1.0))).y))) || false), true, true, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) + 0.0) > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) && true)))), (injectionSwitch.x > injectionSwitch.y))) || false), true, _GLF_IDENTITY(true, ! (! (true))), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(distance(4.9, -4190.0791)) : (injectionSwitch.x))) - 0.0)) + 0.0) > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch, 1.0, 0.0))))))), min(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch, 1.0, 0.0))))))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch, 1.0, 0.0)))))))))).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) || false), true, true, false))))), true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) >> 0), ~ (~ (_GLF_IDENTITY(2, (2) >> 0))))) >> 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), 4, _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | _GLF_IDENTITY((64), _GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-46152) : 0))) ^ ((64)))), max(_GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(64, (64) | (64)))))))), _GLF_IDENTITY(4, 0 ^ (4)));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (! (true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))), true, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))) || false, ! (! ((_GLF_DEAD(false)) || false)))), false), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true) || false), _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false))), true), false)))))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(false)) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(false)) || false)))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))))))))) || false))) || false), false), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false)), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false)), (_GLF_DEAD(false)) || false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false)), (_GLF_DEAD(false)) || false), false, _GLF_IDENTITY(true, (true) || false))))) || false), false), true), false))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  return;
}
