#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_16 {
 vec4 _f0;
 mat4x3 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_17 {
 uvec2 _f0;
 vec3 _f1;
 _GLF_struct_16 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_14 {
 ivec2 _f0;
 vec4 _f1;
 uvec3 _f2;
 uvec4 _f3;
 ivec4 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_13 {
 mat2x4 _f0;
 uvec3 _f1;
 mat4x3 _f2;
 uint _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_12 {
 ivec4 _f0;
 mat2x4 _f1;
 vec2 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_15 {
 _GLF_struct_12 _f0;
 bvec4 _f1;
 _GLF_struct_13 _f2;
 _GLF_struct_14 _f3;
} ;

struct _GLF_struct_10 {
 mat2 _f0;
 vec3 _f1;
 vec3 _f2;
 mat3 _f3;
 bool _f4;
 vec3 _f5;
 float _f6;
} ;

struct _GLF_struct_9 {
 vec3 _f0;
 mat4x3 _f1;
 bvec3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_8 {
 mat2x4 _f0;
 uvec2 _f1;
 int _f2;
 uvec4 _f3;
 ivec4 _f4;
 ivec2 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_7 {
 vec4 _f0;
 uvec4 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_11 {
 vec2 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 uvec2 _f3;
 _GLF_struct_9 _f4;
 _GLF_struct_10 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_6 {
 mat3 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_4 {
 mat2x4 _f0;
} ;

struct _GLF_struct_3 {
 mat2x3 _f0;
 int _f1;
 uvec2 _f2;
 vec3 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_2 {
 bvec2 _f0;
 uvec2 _f1;
 mat3x4 _f2;
 float _f3;
} ;

struct _GLF_struct_1 {
 uint _f0;
 ivec3 _f1;
 ivec4 _f2;
 bool _f3;
 mat4 _f4;
} ;

struct _GLF_struct_5 {
 _GLF_struct_1 _f0;
 uvec4 _f1;
 _GLF_struct_2 _f2;
 vec3 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
} ;

struct _GLF_struct_18 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_11 _f2;
 _GLF_struct_15 _f3;
 uint virtual_gid;
 mat3x2 _f4;
 uvec4 _f5;
 _GLF_struct_17 _f6;
} ;

struct _GLF_struct_0 {
 uint workgroup_id;
 mat4 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(9918.6970, -170.848)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 1.0), mat4(1.0) * (vec4(1.0, 1.0, 0.0, 1.0))), (true ? vec4(1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0) : _GLF_FUZZED(vec4(38.14, 7.0, -704.002, 4875.4606)))))), min(1.0, 1.0))) / 1.0))), injectionSwitch)).x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(9918.6970, -170.848)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 1.0), mat4(1.0) * (vec4(1.0, 1.0, 0.0, 1.0))), (true ? vec4(1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0) : _GLF_FUZZED(vec4(38.14, 7.0, -704.002, 4875.4606)))))), min(1.0, 1.0))) / 1.0))), injectionSwitch)).x > injectionSwitch.y), true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))) * 1.0)), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) || false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(gl_WorkGroupID.x, mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-160.234)), float(1.0), bool(true)))));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_0.workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))), true, true), true)))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))))) || false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3933.0380)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), bool(bvec3(false, false, true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-64.32))))) > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(1u ^ _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uint(1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u ^ _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u), (_GLF_IDENTITY(1u, (1u) - 0u)) | (_GLF_IDENTITY(1u, (1u) - 0u))), (_GLF_IDENTITY(1u ^ _GLF_IDENTITY(1u, (1u) - 0u), 0u + (1u ^ _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) >> (_GLF_IDENTITY(uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(3u), uvec2(3u)), uvec2(0u, 0u) + (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(3u), uvec2(3u))))))), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) >> (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(3u), uvec2(3u)))), (_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) >> (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(3u), uvec2(3u))))) | uvec2(0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (uvec2(1u, 1u))), (uvec2(1u, 1u)) >> (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(3u), uvec2(3u))))))))) - 0u)))) / 1u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u ^ _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u), (_GLF_IDENTITY(1u, (1u) - 0u)) | (_GLF_IDENTITY(1u, (1u) - 0u))), (_GLF_IDENTITY(1u ^ _GLF_IDENTITY(1u, (1u) - 0u), 0u + (1u ^ _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) >> (_GLF_IDENTITY(uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(3u), uvec2(3u)), uvec2(0u, 0u) + (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(3u), uvec2(3u))))))), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) >> (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(3u), uvec2(3u)))), (_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) >> (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(3u), uvec2(3u))))) | uvec2(0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (uvec2(1u, 1u))), (uvec2(1u, 1u)) >> (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(3u), uvec2(3u))))))))) - 0u)))) / 1u), 1u), ~ (~ (uvec2(_GLF_IDENTITY(1u ^ _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u), (_GLF_IDENTITY(1u, (1u) - 0u)) | (_GLF_IDENTITY(1u, (1u) - 0u))), (_GLF_IDENTITY(1u ^ _GLF_IDENTITY(1u, (1u) - 0u), 0u + (1u ^ _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) >> (_GLF_IDENTITY(uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(3u), uvec2(3u)), uvec2(0u, 0u) + (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(3u), uvec2(3u))))))), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) >> (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(3u), uvec2(3u)))), (_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) >> (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(3u), uvec2(3u))))) | uvec2(0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (uvec2(1u, 1u))), (uvec2(1u, 1u)) >> (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(3u), uvec2(3u))))))))) - 0u)))) / 1u), 1u))))))) | _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) ^ 0u)))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u | (subgroup_id * subgroup_size), 0u ^ (_GLF_IDENTITY(0u | (subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(~ (0u | (subgroup_id * subgroup_size)), clamp(~ (0u | (subgroup_id * subgroup_size)), _GLF_IDENTITY(~ (0u | (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), min(0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))))), (~ (0u | (subgroup_id * subgroup_size))) << 0u), ~ (_GLF_IDENTITY(0u | (subgroup_id * subgroup_size), 0u | (0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)))))))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(_GLF_struct_5(_GLF_struct_1(1u, ivec3(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66721)))), ivec4(1), _GLF_IDENTITY(true, true && (true)), mat4(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 0u + _GLF_IDENTITY((1u), ((1u)) << (0u << _GLF_IDENTITY(uint(6u), uint(6u))))), 1u)), 1u, 1u))), ((_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(7u), uvec4(7u)), (uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(7u), uvec4(7u))) - uvec4(0u, 0u, 0u, 0u))) >> _GLF_IDENTITY(uvec4(7u), uvec4(7u))) * (uvec4(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 0u + _GLF_IDENTITY((1u), ((1u)) << _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(uint(6u), uint(6u))))))), ((0u << _GLF_IDENTITY(uint(6u), uint(6u)))) ^ 0u))), 1u)), 1u, 1u))))), max(uvec4(1u), uvec4(_GLF_IDENTITY(1u, min(1u, 1u))))), _GLF_struct_2(bvec2(true), uvec2(1u), mat3x4(1.0), 1.0), vec3(1.0), _GLF_struct_3(mat2x3(1.0), 1, uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u | 0u, _GLF_IDENTITY((_GLF_IDENTITY(1u | 0u, (1u | 0u) << 0u)) ^ 0u, uint(uvec3((_GLF_IDENTITY(1u | 0u, (1u | 0u) << 0u)) ^ 0u, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))) * (_GLF_IDENTITY(1u, (1u) ^ 0u)))), vec3(1.0), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | (uvec3(1u)))), _GLF_struct_4(mat2x4(1.0))), _GLF_struct_6(mat3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0))), 1.0)), 1.0))), mat4x3(1.0)), _GLF_struct_11(_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) - vec2(0.0, 0.0)), _GLF_struct_7(vec4(1.0), uvec4(1u), mat2(1.0)), _GLF_struct_8(mat2x4(1.0), uvec2(1u), 1, uvec4(1u), ivec4(1), ivec2(1), _GLF_IDENTITY(uvec4(1u), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uvec4(1u), max(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) ^ uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), max(_GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), (_GLF_IDENTITY(0u, (0u) >> 0u)) * 1u))), 0u, 0u, 0u)), uvec4(1u))))), min((~ (uvec4(1u))), (~ (uvec4(1u))))))), uvec2(1u), _GLF_struct_9(vec3(1.0), mat4x3(1.0), bvec3(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec4(true)), _GLF_struct_10(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), _GLF_IDENTITY(vec3(1.0), clamp(vec3(1.0), _GLF_IDENTITY(vec3(1.0), mat3(1.0) * (vec3(1.0))), vec3(1.0))), vec3(1.0), mat3(1.0), true, vec3(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(ceil(-198.796)), abs(abs(0.0)) + (_GLF_FUZZED(ceil(-198.796)))) : _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.3) : 1.0)), 1.0, 1.0))))), 1.0), mat2x3(1.0)), _GLF_struct_15(_GLF_struct_12(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ (0 ^ (1)))), 1))), mat2x4(1.0), vec2(1.0), vec2(1.0)), bvec4(true), _GLF_struct_13(mat2x4(1.0), uvec3(1u), mat4x3(1.0), 1u, bvec4(true)), _GLF_struct_14(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 1 * (1)), 1))), _GLF_IDENTITY(max(ivec2(1), ivec2(1)), (_GLF_IDENTITY(max(ivec2(1), ivec2(1)), (max(ivec2(1), ivec2(1))) | (_GLF_IDENTITY(max(ivec2(1), ivec2(1)), min(max(ivec2(1), ivec2(1)), max(ivec2(1), ivec2(1))))))) * ivec2(1, 1))), _GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), vec4(1.0))), uvec3(_GLF_IDENTITY(1u, 0u + (1u))), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) << uvec4(0u, 0u, 0u, 0u)), ivec4(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, 1 * (_GLF_IDENTITY((1) / 1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) ^ ((1) / 1)))))))), uvec4(1u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_base, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)))) / 1u), 0u + (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) + subgroup_base))) + subgroup_local_id, mat3x2(1.0), uvec4(1u), _GLF_struct_17(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) - 0u)), clamp(_GLF_IDENTITY(uvec2(1u), uvec2(uvec3(uvec2(1u), 1u))), uvec2(1u), uvec2(1u))), max(_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) ^ (uvec2(1u))), _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY((uvec2(1u)), (_GLF_IDENTITY((uvec2(1u)), uvec2(uvec4((uvec2(1u)), _GLF_IDENTITY(1u, 0u | (1u)), 1u)))) | (_GLF_IDENTITY((uvec2(1u)), uvec2(1u, 1u) * ((uvec2(1u)))))) / uvec2(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) << 0u))))))), vec3(1.0), _GLF_struct_16(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.1)), bool(false)))), min(_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_IDENTITY(_GLF_FUZZED(939.576), max(_GLF_FUZZED(939.576), _GLF_FUZZED(939.576))), _GLF_FUZZED(-2.9), _GLF_FUZZED(309.977), (vec4(1.0))[3]), vec4(_GLF_IDENTITY((vec4(1.0)), sin(vec4(0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY((vec4(1.0)), ((vec4(1.0))) + vec4(0.0, 0.0, 0.0, 0.0))))[0], _GLF_IDENTITY((vec4(1.0)), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(max(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1277.6010)), float(1.0), bool(true))))), 0.0, 1.0, 1.0, 0.0, 1.0)))), (vec4(1.0)) * mat4(1.0)), vec4(1.0)), min(max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0)), min(max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0)), vec4(0.0, 0.0, 0.0, 0.0) + (max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0))))))))), clamp(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0)), min(max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0)), min(max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0)), vec4(0.0, 0.0, 0.0, 0.0) + (max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0))))))))), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0)), min(_GLF_IDENTITY(max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0)), (max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0))) * mat4(1.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0)), min(max(_GLF_IDENTITY(vec4(1.0), (vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) * mat4(1.0)), vec4(1.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0)), vec4(0.0, 0.0, 0.0, 0.0) + (max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0))))))))), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0)), min(max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0)), min(max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0)), vec4(0.0, 0.0, 0.0, 0.0) + (max(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), vec4(1.0)))))))))))) : _GLF_FUZZED(uintBitsToFloat(uvec4(169406u, 195709u, 122106u, 71314u)))))[1], (_GLF_IDENTITY(vec4(1.0), min(_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), vec4(1.0))), vec4(1.0))))[2], _GLF_FUZZED(2612.8069)), bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(166.056) : injectionSwitch.x)) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(166.056) : injectionSwitch.x)) < injectionSwitch.y) || false))), _GLF_IDENTITY(true, bool(bool(true))), true, false))), vec4(1.0))), mat4x3(1.0), vec4(1.0)), bvec3(true)));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))), bool(bool(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, false || (true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))) && true)), (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))) && true)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), true)))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size)), 1u, 1u), (false ? _GLF_FUZZED(uvec3(60688u, _GLF_IDENTITY(197815u, (197815u) - 0u), 167815u)) : uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 1u), (uvec2(subgroup_size, 1u)) | (uvec2(subgroup_size, 1u))), _GLF_IDENTITY(uvec2(uvec3(_GLF_IDENTITY(uvec2(subgroup_size, 1u), (uvec2(subgroup_size, 1u)) | (uvec2(subgroup_size, 1u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), uvec2(0u, 0u) | (uvec2(uvec3(_GLF_IDENTITY(uvec2(subgroup_size, 1u), (uvec2(subgroup_size, 1u)) | (uvec2(subgroup_size, 1u))), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))), min(uint(_GLF_IDENTITY(uvec2(subgroup_size, 1u), (uvec2(subgroup_size, 1u)) | (uvec2(subgroup_size, 1u)))), uint(_GLF_IDENTITY(uvec2(subgroup_size, 1u), (uvec2(subgroup_size, 1u)) | (uvec2(subgroup_size, 1u))))))), (false ? _GLF_FUZZED(subgroup_size) : subgroup_size)), 1u, 1u))))), subgroup_size)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_struct_replacement_18.virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), max((1), (1))))) >> 0)), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) % 2, (subgroup_local_id % 2) | 0u)) == 0, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) % 2, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) % 2) | 0u)) == 0))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) % 2, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) % 2, ~ (~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) % 2))))), (subgroup_local_id % 2) | 0u)) == 0, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)))) % 2, (subgroup_local_id % 2) | 0u)) == 0))), true, false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   subgroupAll(true);
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-0.5)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(424.329)), max(_GLF_IDENTITY(float(_GLF_FUZZED(424.329)), max(_GLF_IDENTITY(float(_GLF_FUZZED(424.329)), float(mat3x4(float(_GLF_FUZZED(424.329)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(424.329)))), _GLF_IDENTITY(float(_GLF_FUZZED(424.329)), (float(_GLF_FUZZED(424.329))) + abs(0.0)))), float(float(_GLF_FUZZED(-0.5))), bool(true))), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(float(_GLF_FUZZED(-0.5)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(424.329), float(vec4(_GLF_FUZZED(424.329), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0)))), _GLF_IDENTITY(float(float(_GLF_FUZZED(-0.5))), mix(float(_GLF_FUZZED(3.8)), float(float(float(_GLF_FUZZED(-0.5)))), bool(true))), bool(true)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(float(_GLF_FUZZED(-0.5)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(424.329), float(vec4(_GLF_FUZZED(424.329), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0)))), _GLF_IDENTITY(float(float(_GLF_FUZZED(-0.5))), mix(float(_GLF_FUZZED(3.8)), float(float(float(_GLF_FUZZED(-0.5)))), bool(true))), bool(true)))), float(mat4x2((_GLF_IDENTITY(float(_GLF_FUZZED(-0.5)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(424.329), float(vec4(_GLF_FUZZED(424.329), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0)))), _GLF_IDENTITY(float(float(_GLF_FUZZED(-0.5))), mix(float(_GLF_FUZZED(3.8)), float(float(float(_GLF_FUZZED(-0.5)))), bool(true))), bool(true)))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(8539.1553)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || (bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))))))), injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-0.5)), (false ? _GLF_FUZZED(-6736.2310) : float(_GLF_FUZZED(-0.5)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-0.5, (false ? _GLF_FUZZED(421.061) : -0.5)))), (false ? _GLF_FUZZED(-6736.2310) : float(_GLF_FUZZED(-0.5)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-0.5, (false ? _GLF_FUZZED(421.061) : -0.5)))), (false ? _GLF_FUZZED(-6736.2310) : float(_GLF_FUZZED(-0.5)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-0.5, (false ? _GLF_FUZZED(421.061) : -0.5)))), (false ? _GLF_FUZZED(-6736.2310) : float(_GLF_FUZZED(-0.5)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y)))))) + 0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0)), float(vec3(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-0.5, (false ? _GLF_FUZZED(421.061) : -0.5)))), (false ? _GLF_FUZZED(-6736.2310) : float(_GLF_FUZZED(-0.5)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-0.5, (false ? _GLF_FUZZED(421.061) : -0.5)))), (false ? _GLF_FUZZED(-6736.2310) : float(_GLF_FUZZED(-0.5)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y)))))) + 0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0)), 0.0, 0.0)))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1190.7898))))))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-0.5)), (false ? _GLF_FUZZED(-6736.2310) : float(_GLF_FUZZED(-0.5)))), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, exp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))))))).y))), ! (_GLF_IDENTITY(! (bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, exp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))))))).y)))), false || (_GLF_IDENTITY(! (bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, exp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))))))).y)))), true && (! (bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, exp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))))))).y)))))))))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-0.5)), (false ? _GLF_FUZZED(-6736.2310) : float(_GLF_FUZZED(-0.5)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, exp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))))))).y))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))))))), bool(bvec2(! (! (! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-0.5)), (false ? _GLF_FUZZED(-6736.2310) : float(_GLF_FUZZED(-0.5)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, exp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))))))).y))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))))))), false))), bool(bvec4(_GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-0.5)), (false ? _GLF_FUZZED(-6736.2310) : float(_GLF_FUZZED(-0.5)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, exp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))))))).y))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))))))), bool(bvec2(! (! (! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-0.5)), (false ? _GLF_FUZZED(-6736.2310) : float(_GLF_FUZZED(-0.5)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, exp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))))))).y))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))))))), false))), true, true, false))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-0.5)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(424.329)), max(_GLF_IDENTITY(float(_GLF_FUZZED(424.329)), max(_GLF_IDENTITY(float(_GLF_FUZZED(424.329)), float(mat3x4(float(_GLF_FUZZED(424.329)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.2)), float(0.0), bool(true))), 0.0)), 0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(424.329)))), _GLF_IDENTITY(float(_GLF_FUZZED(424.329)), (float(_GLF_FUZZED(424.329))) + abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), float(float(_GLF_FUZZED(-0.5))), bool(true))), 0.0 + (_GLF_IDENTITY(float(_GLF_FUZZED(-0.5)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(424.329), float(vec4(_GLF_FUZZED(424.329), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0)))), _GLF_IDENTITY(float(float(_GLF_FUZZED(-0.5))), mix(float(_GLF_FUZZED(3.8)), float(float(float(_GLF_FUZZED(-0.5)))), bool(true))), bool(true))))), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || (bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)) > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-0.5, 1.0 * (-0.5)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-6736.2310), mix(float(_GLF_FUZZED(-6736.2310)), float(_GLF_FUZZED(-41.42)), bool(false))) : float(_GLF_FUZZED(-0.5)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-0.5, (false ? _GLF_FUZZED(421.061) : -0.5)))), (false ? _GLF_FUZZED(-6736.2310) : float(_GLF_FUZZED(-0.5)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-0.5)), (false ? _GLF_FUZZED(-6736.2310) : float(_GLF_FUZZED(-0.5)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, exp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))))))).y))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))))), ! (_GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-0.5)), (false ? _GLF_FUZZED(-6736.2310) : float(_GLF_FUZZED(-0.5)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, exp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))))))).y))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))))))), bool(bvec2(! (! (! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-0.5)), (false ? _GLF_FUZZED(-6736.2310) : float(_GLF_FUZZED(-0.5)))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, exp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))))))).y))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, float(float(0.0)))))))))), false)))))))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), ! (! (true))) && (bool(false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), vec2(vec2(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), mix(vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(injectionSwitch, 0.0)))[1]), vec2(_GLF_FUZZED(78.97), _GLF_FUZZED(8.0)), bvec2(false, false))))))).x > injectionSwitch.y) && true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), vec2(vec2(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), mix(vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(injectionSwitch, 0.0)))[1]), vec2(_GLF_FUZZED(78.97), _GLF_FUZZED(8.0)), bvec2(false, false))))))).x > injectionSwitch.y) && true)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), vec2(vec2(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), mix(vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(injectionSwitch, 0.0)))[1]), vec2(_GLF_FUZZED(78.97), _GLF_FUZZED(8.0)), bvec2(false, false))))))).x > injectionSwitch.y) && true))))))), true, false, true)), false || (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), vec2(vec2(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), mix(vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(injectionSwitch, 0.0)))[1]), vec2(_GLF_FUZZED(78.97), _GLF_FUZZED(8.0)), bvec2(false, false))))))).x > injectionSwitch.y) && true)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), vec2(vec2(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), mix(vec2((vec2(vec3(injectionSwitch, 0.0)))[0], (vec2(vec3(injectionSwitch, 0.0)))[1]), vec2(_GLF_FUZZED(78.97), _GLF_FUZZED(8.0)), bvec2(false, false))))))).x > injectionSwitch.y) && true))))))), true, false, true)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) - vec3(0.0, 0.0, 0.0))), vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), min(vec2(vec3(injectionSwitch, 0.0)), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), (vec2(vec3(injectionSwitch, 0.0))) * vec2(1.0, 1.0)))), (_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), min(vec2(vec3(injectionSwitch, 0.0)), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), (vec2(vec3(injectionSwitch, 0.0))) * vec2(1.0, 1.0))))) - vec2(0.0, 0.0)))))).x > injectionSwitch.y) && true))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), vec2(vec2(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), min(vec2(vec3(injectionSwitch, 0.0)), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), (vec2(vec3(injectionSwitch, 0.0))) * vec2(1.0, 1.0)))))))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), vec2(vec2(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), min(vec2(vec3(injectionSwitch, 0.0)), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), (vec2(vec3(injectionSwitch, 0.0))) * vec2(1.0, 1.0)))))))).x > injectionSwitch.y))) && true))), true)))))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))), true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec4(bvec2(false, false), _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-787.863) : injectionSwitch.x)) > injectionSwitch.y)))), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)))), true && (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)))), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)))), false))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) || false), false), false, false))), false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) || false), false), false, false))), false))))) || false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), uint(_GLF_IDENTITY(uvec2(uint(2), 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(2), 0u), (uvec2(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) << (0 >> _GLF_IDENTITY(int(3), int(3))))), 0u)) / uvec2(1u, 1u)), (uvec2(uint(2), 0u)) ^ uvec2(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), ((0u)) >> 0u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u))), max((_GLF_IDENTITY(0u, 0u | (0u))), (_GLF_IDENTITY(0u, 0u | (0u))))) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x)))))))) ^ uvec2(0u, 0u)))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((2.7 - -0.8))), vec2(_GLF_FUZZED(-6.4), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))) && _GLF_IDENTITY(true, bool(bvec3(true, true, false)))), bool(bool(! (_GLF_IDENTITY((false), ! (! ((false)))) && true))))))) && true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) && true, ! (! (_GLF_IDENTITY((false), ! (! ((false)))) && true)))), bool(bool(! (_GLF_IDENTITY((false), ! (! ((false)))) && true))))))) && true)), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (! (! (! ((false))))))) && true), bool(bool(! (_GLF_IDENTITY((false), ! (! ((false)))) && true))))))) && true))) || false), true, true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))) && _GLF_IDENTITY(true, bool(bvec3(true, true, false)))), bool(bool(! (_GLF_IDENTITY((false), ! (! ((false)))) && true))))))) && true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) && true, ! (! (_GLF_IDENTITY((false), ! (! ((false)))) && true)))), bool(bool(! (_GLF_IDENTITY((false), ! (! ((false)))) && true))))))) && true)), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (! (! (! ((false))))))) && true), bool(bool(! (_GLF_IDENTITY((false), ! (! ((false)))) && true))))))) && true))) || false), true, true))))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) && true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) && true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) && true, bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))) && true, true, true, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false)))) && true), bool(bool(! (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (! (! (! ((false))))))) && true))))))) && true))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) && true, bool(bool(_GLF_IDENTITY((false), ! (! ((false)))) && true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) && true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bvec3(((false)), true, true)), (bool(bvec3(((false)), true, true))) || false)))) && true), bool(bool(! (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! ((false))), ! (! ((! ((false)))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY((! ((false))), ! (! ((! ((false)))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bvec3(((false)), true, true)), (bool(bvec3(((false)), true, true))) || false)))) && true), bool(bool(! (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! ((false))), ! (! ((! ((false)))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY((! ((false))), ! (! ((! ((false)))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) && true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bvec3(((false)), true, true)), (bool(bvec3(((false)), true, true))) || false)))) && true), bool(bool(! (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! ((false))), ! (! ((! ((false)))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY((! ((false))), ! (! ((! ((false)))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bvec3(((false)), true, true)), (bool(bvec3(((false)), true, true))) || false)))) && true), bool(bool(! (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! ((false))), ! (! ((! ((false)))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY((! ((false))), ! (! ((! ((false)))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)))))))))))) && true))))))) || false), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), ! (! (bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))))))) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), true && (! (! (_GLF_IDENTITY((false), ! (! ((false))))))))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), false, false, true))))) && true), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), ! (! (((false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), ! (! (bool((false))))))))))))))) && true))))))) && _GLF_IDENTITY(true, (true) || false))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
