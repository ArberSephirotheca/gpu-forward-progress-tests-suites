#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 do
  {
   for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(6), int(6))) & -87254); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(7)))))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            return;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
        }
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
    break;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) || false), true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false)), true && (bool(bvec2(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false)))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false)), true && (bool(bvec2(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false))))) || false))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false)), true && (bool(bvec2(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false)))))), true))))) || false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-10.54) : 1.0))) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))));
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.8)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch) + vec2(0.0, 0.0)).y))))
  {
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, max(3, _GLF_IDENTITY(3, clamp(_GLF_IDENTITY(3, min(3, 3)), 3, 3))))), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        continue;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
              continue;
             return;
            }
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))));
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      continue;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-996.124)), float(injectionSwitch.y), bool(true))), 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-4097.1268, tan(0.0) + (-4097.1268))) : float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-996.124, float(vec3(-996.124, 0.0, 1.0))))), float(injectionSwitch.y), bool(true))), 0.0, 0.0, 0.0)))), float(mat2x4(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-996.124)), float(injectionSwitch.y), bool(true))), 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-4097.1268, tan(0.0) + (-4097.1268))) : float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-996.124, float(_GLF_IDENTITY(vec3(-996.124, 0.0, 1.0), vec3(0.0, 0.0, 0.0) + (vec3(-996.124, 0.0, 1.0))))))), float(injectionSwitch.y), bool(true))), 0.0, 0.0, 0.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))))))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! ((injectionSwitch.x > injectionSwitch.y) || false)))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! ((injectionSwitch.x > injectionSwitch.y) || false)))))))))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))) || false)))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          break;
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) || false)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), false || (! (_GLF_IDENTITY((false), ((false)) && true)))))) && true), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || (bool(bvec2(_GLF_DEAD(false), true))))))
  {
   do
    {
     return;
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(clamp(abs(-2238), _injected_loop_counter, _injected_loop_counter)))) != _GLF_IDENTITY(1, 0 ^ (1))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, 0 ^ (1)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    continue;
   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        break;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         return;
        }
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ((workgroup_id)) + (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) * 1u)));
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, (true) && true)))))))))
    {
     do
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         return;
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_IDENTITY(true, true && (true))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(tanh(-429.584))))))));
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        {
         return;
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))), false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))), false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))), false)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))), false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (true))), false))))))))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      break;
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 | (1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY(1 & 1, clamp(1 & 1, 1 & 1, 1 & 1))), ((_GLF_IDENTITY(1 & 1, clamp(1 & 1, 1 & 1, 1 & 1)))) >> (0 & int(-3.7)))); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
            break;
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))
            return;
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, ~ (~ (8))))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), max(_GLF_IDENTITY(min(1.0, 1.0), float(vec3(min(1.0, 1.0), 0.0, 1.0))), min(1.0, 1.0)))), 1.0), vec4(1.0, exp(0.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, exp(0.0), determinant(mat2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 1.0 * (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))), 0.0, 0.0)), 0.0))) + (_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | 0u), uint(3u)))))) + _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id), min(_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) >> 0u), _GLF_IDENTITY(~ (subgroup_local_id), uint(uvec3(~ (subgroup_local_id), 1u, 0u))))), 0u | (~ (subgroup_local_id))))), (subgroup_local_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, 0u | (7u))) >> 0u))) - 0u), ~ (~ (_GLF_IDENTITY(uint(7u), (uint(_GLF_IDENTITY(7u, (false ? _GLF_FUZZED(workgroup_size) : 7u)))) - 0u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) + _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) * 1) | (1))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id), min(_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) >> 0u), _GLF_IDENTITY(~ (subgroup_local_id), uint(uvec3(~ (subgroup_local_id), 1u, 0u))))), 0u | (~ (subgroup_local_id))))), (subgroup_local_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, 0u | (7u))) >> 0u))) - 0u), ~ (~ (_GLF_IDENTITY(uint(7u), (uint(_GLF_IDENTITY(7u, (false ? _GLF_FUZZED(workgroup_size) : 7u)))) - 0u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) + _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) * 1) | (1))) % subgroup_size)) >> 0u), max(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (subgroup_local_id) ^ uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0))) / 1.0), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 1.0))))), tan(0.0), 1.0, 0.0))), injectionSwitch.x), 1.0 * (_GLF_ZERO(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(-1088.8557)), bool(false))), 0.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-91.02) : 1.0)), 1.0))))), tan(0.0), 1.0, 0.0))), injectionSwitch.x)))))) << (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) - 0u), (_GLF_IDENTITY(uint(7u), (uint(7u)) - _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)))) / 1u)))) + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u | ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)), (_GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u), _GLF_IDENTITY((subgroup_local_id), ~ (~ (_GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) - _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)), _GLF_IDENTITY(1u, 0u + (1u)), 1u)), (uint(uvec3(_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)), _GLF_IDENTITY(1u, 0u + (1u)), 1u))) | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)), _GLF_IDENTITY(1u, 0u + (1u)), 1u)), (uint(uvec3(_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)), _GLF_IDENTITY(1u, 0u + (1u)), 1u))) + 0u))))))))) << (_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, uint(uint(0u))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + determinant(mat3(0.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0))), injectionSwitch.x)), 0u, 1u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(0u, 0u | (0u)), min(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(0u, 0u | (0u)), false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(0u, 0u | (0u)))))))))) + _GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) << (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u)), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), ~ (~ (uint(7u))))) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u))) | (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u))) ^ _GLF_IDENTITY((uint(7u)), 0u | ((uint(7u))))), (uint(7u)) - 0u)))))) + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1))) << 0)) % subgroup_size), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) << (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u)), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), ~ (~ (uint(7u))))) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u))) | (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u))) ^ _GLF_IDENTITY((uint(7u)), 0u | ((uint(7u))))), (uint(7u)) - 0u)))))) + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1))) << 0)) % subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) << (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u)), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), ~ (~ (uint(7u))))) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u))) | (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u))) ^ _GLF_IDENTITY((uint(7u)), 0u | ((uint(7u))))), (uint(7u)) - 0u)))))) + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1))) << 0)) % subgroup_size))), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) << (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u)), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), ~ (~ (uint(7u))))) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u))) | (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u))) ^ _GLF_IDENTITY((uint(7u)), 0u | ((uint(7u))))), (uint(7u)) - 0u)))))) + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1))) << 0)) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) << (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u)), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), ~ (~ (uint(7u))))) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u))) | (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u))) ^ _GLF_IDENTITY((uint(7u)), 0u | ((uint(7u))))), (uint(7u)) - 0u)))))) + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(0, min(0, 0)) | (1))) << 0)) % subgroup_size))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY((subgroup_local_id), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id)))), 0u + (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id)))), (~ (_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id))))) << 0u))))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) - sin(0.0)), 0.0, 1.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8064.8260))), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED((2.2 / -5.5))), float(sqrt(1.0)), bool(true))))), max(_GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, tan(0.0), 1.0, 1.0, sqrt(1.0))), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, mix(float((0.0) * 1.0), float(_GLF_FUZZED(8715.9746)), bool(false))), _GLF_IDENTITY((0.0) * 1.0, min(_GLF_IDENTITY((0.0) * 1.0, max((0.0) * 1.0, (0.0) * 1.0)), (0.0) * 1.0)), (0.0) * 1.0))), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-9016.5536)), float(sqrt(1.0)), bool(true))))), min(_GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, mix(float((0.0) * 1.0), float(_GLF_FUZZED(8715.9746)), bool(false))), _GLF_IDENTITY((0.0) * 1.0, min(_GLF_IDENTITY((0.0) * 1.0, max((0.0) * 1.0, (0.0) * 1.0)), (0.0) * 1.0)), (0.0) * 1.0))), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-9016.5536)), float(sqrt(1.0)), bool(true))))), min(float(mat4(0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, mix(float((0.0) * 1.0), float(_GLF_FUZZED(8715.9746)), bool(false))), _GLF_IDENTITY((0.0) * 1.0, min(_GLF_IDENTITY((0.0) * 1.0, max((0.0) * 1.0, (0.0) * 1.0)), (0.0) * 1.0)), (0.0) * 1.0))), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-9016.5536)), float(sqrt(1.0)), bool(true))))), float(mat4(0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, mix(float((0.0) * 1.0), float(_GLF_FUZZED(8715.9746)), bool(false))), _GLF_IDENTITY((0.0) * 1.0, min(_GLF_IDENTITY((0.0) * 1.0, max((0.0) * 1.0, (0.0) * 1.0)), (0.0) * 1.0)), (0.0) * 1.0))), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-9016.5536)), float(sqrt(1.0)), bool(true))))))), _GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, mix(float((0.0) * 1.0), float(_GLF_FUZZED(8715.9746)), bool(false))), _GLF_IDENTITY((0.0) * 1.0, min(_GLF_IDENTITY((0.0) * 1.0, max((0.0) * 1.0, (0.0) * 1.0)), (0.0) * 1.0)), (0.0) * 1.0))), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-9016.5536)), float(sqrt(1.0)), bool(true))))), (float(mat4(0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, mix(float((0.0) * 1.0), float(_GLF_FUZZED(8715.9746)), bool(false))), _GLF_IDENTITY((0.0) * 1.0, min(_GLF_IDENTITY((0.0) * 1.0, max((0.0) * 1.0, (0.0) * 1.0)), (0.0) * 1.0)), (0.0) * 1.0))), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-9016.5536)), float(sqrt(1.0)), bool(true)))))) - 0.0)))) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) + 0.0), clamp(1.0, 1.0, 1.0))), float(mat4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), (false ? _GLF_FUZZED(2.7) : clamp(0.0, 0.0, 0.0)))))), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, _GLF_IDENTITY(determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), round(length(normalize(vec2(1.0, 1.0)))))), dot(vec2(1.0, 0.0), vec2(0.0, round(length(normalize(vec2(1.0, 1.0)))))))), 1.0, 0.0, tan(0.0), 1.0, 1.0, sqrt(1.0)))))), injectionSwitch.x)))) << (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u)))) + _GLF_IDENTITY(1, 0 | (1)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY((subgroup_local_id), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id)))), 0u + (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id)))), (~ (_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id))))) << 0u))))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) - sin(0.0)), 0.0, 1.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8064.8260))), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED((2.2 / -5.5))), float(sqrt(1.0)), bool(true))))), max(_GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, tan(0.0), 1.0, 1.0, sqrt(1.0))), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, mix(float((0.0) * 1.0), float(_GLF_FUZZED(8715.9746)), bool(false))), _GLF_IDENTITY((0.0) * 1.0, min(_GLF_IDENTITY((0.0) * 1.0, max((0.0) * 1.0, (0.0) * 1.0)), (0.0) * 1.0)), (0.0) * 1.0))), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-9016.5536)), float(sqrt(1.0)), bool(true))))), min(_GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, mix(float((0.0) * 1.0), float(_GLF_FUZZED(8715.9746)), bool(false))), _GLF_IDENTITY((0.0) * 1.0, min(_GLF_IDENTITY((0.0) * 1.0, max((0.0) * 1.0, (0.0) * 1.0)), (0.0) * 1.0)), (0.0) * 1.0))), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-9016.5536)), float(sqrt(1.0)), bool(true))))), min(float(mat4(0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, mix(float((0.0) * 1.0), float(_GLF_FUZZED(8715.9746)), bool(false))), _GLF_IDENTITY((0.0) * 1.0, min(_GLF_IDENTITY((0.0) * 1.0, max((0.0) * 1.0, (0.0) * 1.0)), (0.0) * 1.0)), (0.0) * 1.0))), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-9016.5536)), float(sqrt(1.0)), bool(true))))), float(mat4(0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, mix(float((0.0) * 1.0), float(_GLF_FUZZED(8715.9746)), bool(false))), _GLF_IDENTITY((0.0) * 1.0, min(_GLF_IDENTITY((0.0) * 1.0, max((0.0) * 1.0, (0.0) * 1.0)), (0.0) * 1.0)), (0.0) * 1.0))), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-9016.5536)), float(sqrt(1.0)), bool(true))))))), _GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, mix(float((0.0) * 1.0), float(_GLF_FUZZED(8715.9746)), bool(false))), _GLF_IDENTITY((0.0) * 1.0, min(_GLF_IDENTITY((0.0) * 1.0, max((0.0) * 1.0, (0.0) * 1.0)), (0.0) * 1.0)), (0.0) * 1.0))), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-9016.5536)), float(sqrt(1.0)), bool(true))))), (float(mat4(0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, mix(float((0.0) * 1.0), float(_GLF_FUZZED(8715.9746)), bool(false))), _GLF_IDENTITY((0.0) * 1.0, min(_GLF_IDENTITY((0.0) * 1.0, max((0.0) * 1.0, (0.0) * 1.0)), (0.0) * 1.0)), (0.0) * 1.0))), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-9016.5536)), float(sqrt(1.0)), bool(true)))))) - 0.0)))) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) + 0.0), clamp(1.0, 1.0, 1.0))), float(mat4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), (false ? _GLF_FUZZED(2.7) : clamp(0.0, 0.0, 0.0)))))), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, _GLF_IDENTITY(determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), round(length(normalize(vec2(1.0, 1.0)))))), dot(vec2(1.0, 0.0), vec2(0.0, round(length(normalize(vec2(1.0, 1.0)))))))), 1.0, 0.0, tan(0.0), 1.0, 1.0, sqrt(1.0)))))), injectionSwitch.x)))) << (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u)))) + _GLF_IDENTITY(1, 0 | (1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY((subgroup_local_id), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id)))), 0u + (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id)))), (~ (_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id))))) << 0u))))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) - sin(0.0)), 0.0, 1.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8064.8260))), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED((2.2 / -5.5))), float(sqrt(1.0)), bool(true))))), max(_GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, tan(0.0), 1.0, 1.0, sqrt(1.0))), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, mix(float((0.0) * 1.0), float(_GLF_FUZZED(8715.9746)), bool(false))), _GLF_IDENTITY((0.0) * 1.0, min(_GLF_IDENTITY((0.0) * 1.0, max((0.0) * 1.0, (0.0) * 1.0)), (0.0) * 1.0)), (0.0) * 1.0))), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-9016.5536)), float(sqrt(1.0)), bool(true))))), min(_GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, mix(float((0.0) * 1.0), float(_GLF_FUZZED(8715.9746)), bool(false))), _GLF_IDENTITY((0.0) * 1.0, min(_GLF_IDENTITY((0.0) * 1.0, max((0.0) * 1.0, (0.0) * 1.0)), (0.0) * 1.0)), (0.0) * 1.0))), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-9016.5536)), float(sqrt(1.0)), bool(true))))), min(float(mat4(0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, mix(float((0.0) * 1.0), float(_GLF_FUZZED(8715.9746)), bool(false))), _GLF_IDENTITY((0.0) * 1.0, min(_GLF_IDENTITY((0.0) * 1.0, max((0.0) * 1.0, (0.0) * 1.0)), (0.0) * 1.0)), (0.0) * 1.0))), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-9016.5536)), float(sqrt(1.0)), bool(true))))), float(mat4(0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, mix(float((0.0) * 1.0), float(_GLF_FUZZED(8715.9746)), bool(false))), _GLF_IDENTITY((0.0) * 1.0, min(_GLF_IDENTITY((0.0) * 1.0, max((0.0) * 1.0, (0.0) * 1.0)), (0.0) * 1.0)), (0.0) * 1.0))), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-9016.5536)), float(sqrt(1.0)), bool(true))))))), _GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, mix(float((0.0) * 1.0), float(_GLF_FUZZED(8715.9746)), bool(false))), _GLF_IDENTITY((0.0) * 1.0, min(_GLF_IDENTITY((0.0) * 1.0, max((0.0) * 1.0, (0.0) * 1.0)), (0.0) * 1.0)), (0.0) * 1.0))), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-9016.5536)), float(sqrt(1.0)), bool(true))))), (float(mat4(0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, mix(float((0.0) * 1.0), float(_GLF_FUZZED(8715.9746)), bool(false))), _GLF_IDENTITY((0.0) * 1.0, min(_GLF_IDENTITY((0.0) * 1.0, max((0.0) * 1.0, (0.0) * 1.0)), (0.0) * 1.0)), (0.0) * 1.0))), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-9016.5536)), float(sqrt(1.0)), bool(true)))))) - 0.0)))) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) + 0.0), clamp(1.0, 1.0, 1.0))), float(mat4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), (false ? _GLF_FUZZED(2.7) : clamp(0.0, 0.0, 0.0)))))), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, _GLF_IDENTITY(determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), round(length(normalize(vec2(1.0, 1.0)))))), dot(vec2(1.0, 0.0), vec2(0.0, round(length(normalize(vec2(1.0, 1.0)))))))), 1.0, 0.0, tan(0.0), 1.0, 1.0, sqrt(1.0)))))), injectionSwitch.x)))) << (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u)))) + _GLF_IDENTITY(1, 0 | (1))))), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY((subgroup_local_id), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id)))), 0u + (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id)))), (~ (_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id))))) << 0u))))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) - sin(0.0)), 0.0, 1.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8064.8260))), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED((2.2 / -5.5))), float(sqrt(1.0)), bool(true))))), max(_GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, tan(0.0), 1.0, 1.0, sqrt(1.0))), (_GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, mix(float((0.0) * 1.0), float(_GLF_FUZZED(8715.9746)), bool(false))), _GLF_IDENTITY((0.0) * 1.0, min(_GLF_IDENTITY((0.0) * 1.0, max((0.0) * 1.0, (0.0) * 1.0)), (0.0) * 1.0)), (0.0) * 1.0))), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-9016.5536)), float(sqrt(1.0)), bool(true))))), min(_GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, mix(float((0.0) * 1.0), float(_GLF_FUZZED(8715.9746)), bool(false))), _GLF_IDENTITY((0.0) * 1.0, min(_GLF_IDENTITY((0.0) * 1.0, max((0.0) * 1.0, (0.0) * 1.0)), (0.0) * 1.0)), (0.0) * 1.0))), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-9016.5536)), float(sqrt(1.0)), bool(true))))), min(float(mat4(0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, mix(float((0.0) * 1.0), float(_GLF_FUZZED(8715.9746)), bool(false))), _GLF_IDENTITY((0.0) * 1.0, min(_GLF_IDENTITY((0.0) * 1.0, max((0.0) * 1.0, (0.0) * 1.0)), (0.0) * 1.0)), (0.0) * 1.0))), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-9016.5536)), float(sqrt(1.0)), bool(true))))), float(mat4(0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, mix(float((0.0) * 1.0), float(_GLF_FUZZED(8715.9746)), bool(false))), _GLF_IDENTITY((0.0) * 1.0, min(_GLF_IDENTITY((0.0) * 1.0, max((0.0) * 1.0, (0.0) * 1.0)), (0.0) * 1.0)), (0.0) * 1.0))), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-9016.5536)), float(sqrt(1.0)), bool(true))))))), _GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, mix(float((0.0) * 1.0), float(_GLF_FUZZED(8715.9746)), bool(false))), _GLF_IDENTITY((0.0) * 1.0, min(_GLF_IDENTITY((0.0) * 1.0, max((0.0) * 1.0, (0.0) * 1.0)), (0.0) * 1.0)), (0.0) * 1.0))), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-9016.5536)), float(sqrt(1.0)), bool(true))))), (float(mat4(0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp(_GLF_IDENTITY((0.0) * 1.0, mix(float((0.0) * 1.0), float(_GLF_FUZZED(8715.9746)), bool(false))), _GLF_IDENTITY((0.0) * 1.0, min(_GLF_IDENTITY((0.0) * 1.0, max((0.0) * 1.0, (0.0) * 1.0)), (0.0) * 1.0)), (0.0) * 1.0))), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(-9016.5536)), float(sqrt(1.0)), bool(true)))))) - 0.0)))) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) + 0.0), clamp(1.0, 1.0, 1.0))), float(mat4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), (false ? _GLF_FUZZED(2.7) : clamp(0.0, 0.0, 0.0)))))), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, _GLF_IDENTITY(determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) - _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), round(length(normalize(vec2(1.0, 1.0)))))), dot(vec2(1.0, 0.0), vec2(0.0, round(length(normalize(vec2(1.0, 1.0)))))))), 1.0, 0.0, tan(0.0), 1.0, 1.0, sqrt(1.0)))))), injectionSwitch.x)))) << (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u)))) + _GLF_IDENTITY(1, 0 | (1))))) % subgroup_size), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), (subgroup_local_id) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.2))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec2(_GLF_FUZZED(-972.003), _GLF_FUZZED(42.24)), vec2((vec2(0.0, _GLF_ZERO(0.0, injectionSwitch.x)))[0], (vec2(0.0, _GLF_ZERO(0.0, injectionSwitch.x)))[1]), bvec2(true, true))))))), 0.0, 1.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(8064.8260, mix(float(_GLF_FUZZED(1.3)), float(_GLF_IDENTITY(8064.8260, 1.0 * (8064.8260))), bool(true)))))), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED((2.2 / -5.5))), float(sqrt(1.0)), bool(true)))), (true ? _GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.2))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec2(_GLF_FUZZED(-972.003), _GLF_FUZZED(42.24)), vec2((vec2(0.0, _GLF_ZERO(0.0, injectionSwitch.x)))[0], (vec2(0.0, _GLF_ZERO(0.0, injectionSwitch.x)))[1]), bvec2(true, true))))))), 0.0, 1.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(8064.8260, mix(float(_GLF_FUZZED(1.3)), float(_GLF_IDENTITY(8064.8260, 1.0 * (8064.8260))), bool(true)))))), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED((2.2 / -5.5))), float(sqrt(1.0)), bool(true)))), (mat4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.2))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec2(_GLF_FUZZED(-972.003), _GLF_FUZZED(42.24)), vec2((vec2(0.0, _GLF_ZERO(0.0, injectionSwitch.x)))[0], (vec2(0.0, _GLF_ZERO(0.0, injectionSwitch.x)))[1]), bvec2(true, true))))))), 0.0, 1.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(8064.8260, mix(float(_GLF_FUZZED(1.3)), float(_GLF_IDENTITY(8064.8260, 1.0 * (8064.8260))), bool(true)))))), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED((2.2 / -5.5))), float(sqrt(1.0)), bool(true))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4(-5.1, 75.16, 29.50, -1.5, 3697.4833, -6511.2739, -4.9, 0.1, -87.01, -8651.8306, -2.3, -7398.2524, -9.5, -6.4, 11.02, -1978.7205))))), max(_GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, tan(0.0), 1.0, 1.0, sqrt(1.0))), (float(mat4(0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3890.3326) : 1.0)), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) + 0.0) : _GLF_FUZZED(393.278))))), 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 1.0))))), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(1.0, exp(0.0) * (1.0)), 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 1.0, 1.0, sqrt(1.0)))) * _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0), mat3(mat3(_GLF_IDENTITY(mat3(max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0), (true ? mat3(max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0) : _GLF_FUZZED(mat3(-7754.4747, 5.8, 2170.1291, 5846.2261, -25.95, 2.3, 51.33, 37.84, 3.1)))))))), (true ? float(_GLF_IDENTITY(mat3(max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0), mat3(mat3(_GLF_IDENTITY(mat3(max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0), (true ? mat3(max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0) : _GLF_FUZZED(mat3(-7754.4747, 5.8, 2170.1291, 5846.2261, -25.95, 2.3, 51.33, 37.84, 3.1)))))))) : _GLF_FUZZED(-3221.7991))))), (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.4)), float(0.0), bool(true))), clamp(0.0, 0.0, 0.0))))) - 0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, _GLF_IDENTITY(determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (determinant(mat3(1.0, _GLF_IDENTITY(exp(0.0), mix(float(_GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(2991.9132)), float(exp(0.0)), bool(true)))), float(_GLF_FUZZED((91.51 * -0.0))), bool(false))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, round(length(normalize(vec2(1.0, 1.0)))))), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(89.67)), bool(false))))), round(length(normalize(vec2(1.0, 1.0))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(89.67)), bool(false))))), round(length(normalize(vec2(1.0, 1.0))))), clamp(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(89.67)), bool(false))))), round(length(normalize(vec2(1.0, 1.0))))), vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(89.67)), bool(false))))), round(length(normalize(vec2(1.0, 1.0))))), vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(89.67)), bool(false))))), round(length(normalize(vec2(1.0, 1.0)))))))))))), 1.0, 0.0, tan(0.0), 1.0, 1.0, sqrt(1.0)), (mat4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0), mat3(mat3(_GLF_IDENTITY(mat3(max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0), (true ? mat3(max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0) : _GLF_FUZZED(mat3(-7754.4747, 5.8, 2170.1291, 5846.2261, -25.95, 2.3, 51.33, 37.84, 3.1)))))))), (true ? float(_GLF_IDENTITY(mat3(max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0), mat3(mat3(_GLF_IDENTITY(mat3(max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0), (true ? mat3(max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0) : _GLF_FUZZED(mat3(-7754.4747, 5.8, 2170.1291, 5846.2261, -25.95, 2.3, 51.33, 37.84, 3.1)))))))) : _GLF_FUZZED(-3221.7991))))), (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.4)), float(0.0), bool(true))), clamp(0.0, 0.0, 0.0))))) - 0.0), 0.0, 1.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, _GLF_IDENTITY(determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (determinant(mat3(1.0, _GLF_IDENTITY(exp(0.0), mix(float(_GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(2991.9132)), float(exp(0.0)), bool(true)))), float(_GLF_FUZZED((91.51 * -0.0))), bool(false))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, round(length(normalize(vec2(1.0, 1.0)))))), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(89.67)), bool(false))))), round(length(normalize(vec2(1.0, 1.0))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(89.67)), bool(false))))), round(length(normalize(vec2(1.0, 1.0))))), clamp(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(89.67)), bool(false))))), round(length(normalize(vec2(1.0, 1.0))))), vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(89.67)), bool(false))))), round(length(normalize(vec2(1.0, 1.0))))), vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(89.67)), bool(false))))), round(length(normalize(vec2(1.0, 1.0)))))))))))), 1.0, 0.0, tan(0.0), 1.0, 1.0, sqrt(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), injectionSwitch.x)))) << (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) - 0u)))) + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0))))))) % subgroup_size)) | (((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY((subgroup_local_id) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8064.8260))), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED((2.2 / -5.5))), float(sqrt(1.0)), bool(true))))), max(_GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, tan(0.0), 1.0, 1.0, sqrt(1.0))), (float(mat4(0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.6)))), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 1.0, 1.0, sqrt(1.0)))) * _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(mat4(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, abs(0.0), 1.0, _GLF_IDENTITY(determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (determinant(mat3(1.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.1))))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) - _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, round(length(normalize(vec2(1.0, 1.0)))))), (dot(vec2(1.0, 0.0), vec2(0.0, round(length(normalize(vec2(1.0, 1.0))))))) / _GLF_ONE(1.0, injectionSwitch.y)), dot(vec2(1.0, 0.0), vec2(0.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 1.0)))))))), 1.0, 0.0, tan(0.0), 1.0, 1.0, sqrt(1.0)))))), injectionSwitch.x)), ((subgroup_local_id) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8064.8260))), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, tan(0.0), 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED((2.2 / -5.5))), float(sqrt(1.0)), bool(true))))), max(_GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, tan(0.0), 1.0, 1.0, sqrt(1.0))), (float(mat4(0.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.6)))), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, abs(0.0), 1.0, determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), tan(0.0), 1.0, 1.0, sqrt(1.0)))) * _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(mat4(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, abs(0.0), 1.0, _GLF_IDENTITY(determinant(mat3(1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (determinant(mat3(1.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.1))))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) - _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, round(length(normalize(vec2(1.0, 1.0)))))), (dot(vec2(1.0, 0.0), vec2(0.0, round(length(normalize(vec2(1.0, 1.0))))))) / _GLF_ONE(1.0, injectionSwitch.y)), dot(vec2(1.0, 0.0), vec2(0.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 1.0)))))))), 1.0, 0.0, tan(0.0), 1.0, 1.0, sqrt(1.0)))))), injectionSwitch.x))) << 0u))) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u))), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY((uint(7u)) - 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((uint(7u)) - 0u)))))) + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size)))) >> 0u)) >> 0u))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(virtual_gid) : subgroup_id)))) * subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_id * subgroup_size)), (workgroup_base + subgroup_id * subgroup_size) ^ 0u), workgroup_base + subgroup_id * subgroup_size)) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) % subgroup_size), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, int(ivec3(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), clamp((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), clamp(int(ivec3(1, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) + 0), 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), ~ (~ (int(ivec3(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))), min(_GLF_IDENTITY(int(ivec3(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), ~ (~ (int(ivec3(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))), _GLF_IDENTITY(int(ivec3(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), ~ (~ (int(ivec3(1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))))))), int(ivec3(1, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0), 0)))))), (subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(atomicMin(num_workgroup, uvec2(124591u, 105240u).t)) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))) ^ (0u ^ _GLF_IDENTITY(0u, (0u) << (0u | 0u))))) << 0u), _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, 1u * (_GLF_IDENTITY(7u, uint(uint(7u)))))))) + (0u)) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1)))), (~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))))) * 1u))) % subgroup_size))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u)), ((subgroup_local_id + 1) % subgroup_size)))) ^ (0u ^ 0u))) << 0u)), ((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1)))), (~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))))) * 1u))) % subgroup_size))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u)), ((subgroup_local_id + 1) % subgroup_size)))) ^ (0u ^ 0u))) << 0u))) / 1u), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) + ((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + 0u) % subgroup_size))), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))) ^ (0u ^ 0u))) << 0u)))))), (_GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (true ? _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) : _GLF_FUZZED(workgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))))))))), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (0 | 0) ^ (1))), ~ (~ ((subgroup_local_id + 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(num_workgroup) : (subgroup_local_id + 1))))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1), ~ (~ ((subgroup_local_id + 1))))))) | (_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (subgroup_local_id + _GLF_IDENTITY(1, (1) + int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))))))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (true ? _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) : _GLF_FUZZED(workgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))))))))), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (0 | 0) ^ (1))), ~ (~ ((subgroup_local_id + 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(num_workgroup) : (subgroup_local_id + 1))))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1), ~ (~ ((subgroup_local_id + 1))))))) | (_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (subgroup_local_id + _GLF_IDENTITY(1, (1) + int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))))))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))), 1u), (uvec2(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (true ? _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) : _GLF_FUZZED(workgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))))))))), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (0 | 0) ^ (1))), ~ (~ ((subgroup_local_id + 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(num_workgroup) : (subgroup_local_id + 1))))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1), ~ (~ ((subgroup_local_id + 1))))))) | (_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (subgroup_local_id + _GLF_IDENTITY(1, (1) + int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))))))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))), 1u)) | (uvec2(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (true ? _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) : _GLF_FUZZED(workgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))))))))), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (0 | 0) ^ (1))), ~ (~ ((subgroup_local_id + 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(num_workgroup) : (subgroup_local_id + 1))))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1), ~ (~ ((subgroup_local_id + 1))))))) | (_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (subgroup_local_id + _GLF_IDENTITY(1, (1) + int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))))))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))), 1u)))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (true ? _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) : _GLF_FUZZED(workgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))))))))), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (0 | 0) ^ (1))), ~ (~ ((subgroup_local_id + 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(num_workgroup) : (subgroup_local_id + 1))))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1), ~ (~ ((subgroup_local_id + 1))))))) | (_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (subgroup_local_id + _GLF_IDENTITY(1, (1) + int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))))))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))), 1u), (uvec2(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (true ? _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) : _GLF_FUZZED(workgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))))))))), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (0 | 0) ^ (1))), ~ (~ ((subgroup_local_id + 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(num_workgroup) : (subgroup_local_id + 1))))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1), ~ (~ ((subgroup_local_id + 1))))))) | (_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (subgroup_local_id + _GLF_IDENTITY(1, (1) + int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))))))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))), 1u)) | (uvec2(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (true ? _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) : _GLF_FUZZED(workgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))))))))), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (0 | 0) ^ (1))), ~ (~ ((subgroup_local_id + 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(num_workgroup) : (subgroup_local_id + 1))))), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1), ~ (~ ((subgroup_local_id + 1))))))) | (_GLF_IDENTITY((subgroup_local_id + 1), clamp(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), (subgroup_local_id + _GLF_IDENTITY(1, (1) + int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))))))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))), 1u))))) << 0u))) % subgroup_size)), 0u | ((workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uint(_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))))) + 1) % subgroup_size))))) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 1u, 1u)), (uint(uvec4(_GLF_IDENTITY(subgroup_id, (subgroup_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 1u, 1u))) * 1u), uint(uint(uint(uvec4(subgroup_id, 0u, 1u, 1u)))))), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), subgroup_id), 0u | (_GLF_IDENTITY(max(subgroup_id, subgroup_id), (_GLF_IDENTITY(max(subgroup_id, subgroup_id), min(max(subgroup_id, subgroup_id), max(subgroup_id, subgroup_id)))) / 1u)))) * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (1) / 1)) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 0u, 0u)), (uint(uvec3(workgroup_base + subgroup_id * subgroup_size, 0u, 0u))) * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) << 0u) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size, 0u ^ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size)))) | (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), min(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 0u, 0u)), clamp(uint(uvec3(subgroup_size, 0u, 0u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup))), 0u, 0u)), uint(uvec3(subgroup_size, 0u, 0u))))))) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), (subgroup_local_id + 1) + 0u)) % subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(54548u, 4763u), max(uvec2(54548u, _GLF_IDENTITY(4763u, ~ (~ (4763u)))), uvec2(54548u, 4763u)))[0]) : (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + 0u)) % subgroup_size)))))));
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false))))))))))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false, true)))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5498.1991) : injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, abs(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, abs(0.0), tan(0.0)))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, abs(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, abs(0.0), tan(0.0)))), (_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, abs(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, abs(0.0), tan(0.0))))) / 1.0))), false)))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, true)))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        break;
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(817.712)), bool(false))), max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2(1.0) * (injectionSwitch)))), vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2(1.0) * (injectionSwitch)))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2(1.0) * (injectionSwitch)))))), 0.0, 0.0))).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, injectionSwitch.y)), injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0), (mat3x2(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, abs(abs(0.0)), 0.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 0.0))).y))))
          continue;
        }
       else
        {
         return;
        }
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 atomicStore(buf[virtual_gid], uint(1), 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) | 0, ((64) | 0) / 1)), 4);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     if(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) >> 0u) + _GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), (0 ^ (1)) | (0 ^ (1)))) < subgroup_size)
      {
       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), ~ (~ (_GLF_IDENTITY(uint(2), (uint(2)) << _GLF_IDENTITY(0u, (0u) - (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))), ~ (_GLF_IDENTITY(~ (uint(2)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), 1u * (uint(2)))) + 0u)), min(_GLF_IDENTITY(~ (uint(2)), uint(uvec3(_GLF_IDENTITY(~ (uint(2)), clamp(~ (uint(2)), ~ (uint(2)), ~ (uint(2)))), 0u, 0u))), ~ (uint(2))))) / 1u))), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))), false || (false || (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, false))))), true))))))) ? _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), ~ (~ (_GLF_IDENTITY(max(4, 4), (max(4, 4)) >> 0))))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-73837), (_GLF_FUZZED(-73837)) | (_GLF_FUZZED(-73837))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-73837), (_GLF_FUZZED(-73837)) | _GLF_IDENTITY((_GLF_FUZZED(-73837)), ((_GLF_FUZZED(-73837))) | ((_GLF_FUZZED(-73837))))), max(_GLF_IDENTITY(_GLF_FUZZED(-73837), _GLF_IDENTITY((_GLF_FUZZED(-73837)), max(_GLF_IDENTITY((_GLF_FUZZED(-73837)), ((_GLF_FUZZED(-73837))) | ((_GLF_FUZZED(-73837)))), (_GLF_FUZZED(-73837)))) | (_GLF_FUZZED(_GLF_IDENTITY(-73837, ~ (~ (-73837)))))), _GLF_IDENTITY(_GLF_FUZZED(-73837), _GLF_IDENTITY((_GLF_FUZZED(-73837)) | (_GLF_FUZZED(-73837)), ((_GLF_FUZZED(-73837)) | (_GLF_FUZZED(-73837))) << 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true))))))))), true))))) ? _GLF_IDENTITY(4, max(4, 4)) : _GLF_IDENTITY(_GLF_FUZZED(-73837), _GLF_IDENTITY((_GLF_FUZZED(-73837)) | (_GLF_FUZZED(-73837)), 0 | ((_GLF_FUZZED(-73837)) | (_GLF_FUZZED(-73837))))), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))) ? _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), int(_GLF_IDENTITY(int(max(4, 4)), (true ? int(max(4, 4)) : _GLF_FUZZED(-92023)))))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-73837), (_GLF_IDENTITY(_GLF_FUZZED(-73837), max(_GLF_FUZZED(-73837), _GLF_FUZZED(-73837)))) | (_GLF_FUZZED(_GLF_IDENTITY(-73837, 0 ^ (-73837))))), (_GLF_IDENTITY(_GLF_FUZZED(-73837), (_GLF_FUZZED(-73837)) | (_GLF_IDENTITY(_GLF_FUZZED(-73837), int(ivec2(_GLF_IDENTITY(_GLF_FUZZED(-73837), (_GLF_FUZZED(-73837)) * 1), 0)))))) >> 0)) ^ 0)) >> 0))), 64, 4);
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       do
        {
         do
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) << 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(5, (5) | (5)) : _GLF_FUZZED(atomicMax(_injected_loop_counter, _injected_loop_counter))))), (false ? _GLF_FUZZED(-41720) : int(5))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(5, (5) | (5)) : _GLF_FUZZED(atomicMax(_injected_loop_counter, _injected_loop_counter))))), (false ? _GLF_FUZZED(-41720) : int(5))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(5, (5) | (5)) : _GLF_FUZZED(atomicMax(_injected_loop_counter, _injected_loop_counter))))), (false ? _GLF_FUZZED(-41720) : int(5))), (_GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(5, (5) | (5)) : _GLF_FUZZED(atomicMax(_injected_loop_counter, _injected_loop_counter))))), (false ? _GLF_FUZZED(-41720) : int(5)))) - 0)))) | 0))), int(_GLF_IDENTITY(ivec2((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, int(ivec2(5, 1)))) << 0)), _GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(-41720) : int(5)))), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, int(ivec2(5, 1)))) << 0)), _GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(-41720) : int(5))))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) / 1), int(2))), 0 ^ ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) / 1), int(2))))) >> _GLF_IDENTITY(int(2), int(2)))), (ivec2((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(min(int(5), int(5)), (min(int(5), int(5))) | 0), (min(int(5), int(_GLF_IDENTITY(5, (false ? _GLF_FUZZED((_injected_loop_counter * -5170)) : 5))))) - 0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-41720, (false ? _GLF_FUZZED(81471) : -41720))) : int(5))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), ~ (~ (1 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) * (2), int(ivec4(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) * (2), ~ (~ (int(_GLF_ONE(1.0, injectionSwitch.y)) * (2)))), 0, 1, 0)))))))))) >> _GLF_IDENTITY(int(2), int(2))))) * ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0), 1)))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
            {
             do
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))) || false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
                  break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
                      {
                       if(_GLF_DEAD(false))
                        continue;
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         return;
                        }
                       else
                        {
                        }
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          break;
                         return;
                        }
                      }
                    }
                  }
                 subgroupAll(false);
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_DEAD(false))
                      return;
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).y))))
                    return;
                   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_DEAD(false), true, true, true)), false), bvec2(bvec3(bvec2(bool(bvec4(_GLF_DEAD(false), true, true, true)), false), false)))))))
                    continue;
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                break;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y)), true, false), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false)))), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false)))), true)))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false))), false)))), true)))))))))))), true, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch)).y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false)))), true))))))))), ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), false)))), true)))))))))) && true)))), true, false))) || false))));
             if(_GLF_DEAD(false))
              break;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))) || ((injectionSwitch.x > injectionSwitch.y))))))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), false, false))))), true, true))))))))), ! (! (_GLF_DEAD(false))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))
            {
             return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> 0)))))
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
            continue;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ZERO(0.0, injectionSwitch.x))), mat2(1.0) * (vec2(mat3x2(injectionSwitch, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ZERO(0.0, injectionSwitch.x)))))).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ZERO(0.0, injectionSwitch.x))), mat2(1.0) * (vec2(mat3x2(injectionSwitch, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ZERO(0.0, injectionSwitch.x)))))).x : _GLF_FUZZED(-43.80))) > injectionSwitch.y)))))))
            return;
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), (bool(_GLF_WRAPPED_LOOP(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))));
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          break;
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   return;
                  }
                }
               else
                {
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(((-3.9) + 6765.6237))), bool(false))) > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 return;
                }
               else
                {
                }
              }
            }
          }
         else
          {
           subgroupAll(true);
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0), vec4(1.0, sqrt(0.0), sin(0.0), 0.0)), dot(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0), vec4(1.0, sqrt(0.0), sin(0.0), 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0))).y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               return;
              }
             else
              {
              }
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            continue;
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) / 1.0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, (_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) && true))), true, true)), (bool(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) && true))), true, true))) && true))) && true)); _injected_loop_counter ++)
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))))
                    {
                     do
                      {
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))))));
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   do
                    {
                     return;
                     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                      return;
                    }
                   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec2(_GLF_WRAPPED_LOOP(false), true))));
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                  }
                }
              }
             else
              {
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))) || false)))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ ((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))); _injected_loop_counter ++)
        {
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))) && true)))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            {
            }
           else
            {
             return;
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
            continue;
          }
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED((~ 53080)))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(57606) : int(6)))) ^ 0)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
}
