#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), false || (true && (false))), ! (! (_GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true, true && (true)) && (false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7362.5594)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y) || false)))))))), (bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY(bool(bvec4(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), _GLF_IDENTITY((bool(bvec4(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY((bool(bvec4(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((bool(bvec4(! (! (false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1], injectionSwitch[1])))), injectionSwitch, injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))[1], injectionSwitch[1])))), injectionSwitch, injectionSwitch)).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))[1], injectionSwitch[1])))), injectionSwitch, injectionSwitch)).y, false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), false, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), false, false), false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, cos(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)) * mat3(1.0))), cos(0.0), 0.0)), (float(mat2x4(injectionSwitch.x, 1.0, 1.0, cos(0.0), 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), cos(0.0), 0.0))) / 1.0)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, cos(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)) * mat3(1.0))), cos(0.0), 0.0)), (float(mat2x4(injectionSwitch.x, 1.0, 1.0, cos(0.0), 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), cos(0.0), 0.0))) / 1.0), (false ? _GLF_FUZZED(-881.437) : _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, cos(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)) * mat3(1.0))), cos(0.0), 0.0)), (float(mat2x4(injectionSwitch.x, 1.0, 1.0, cos(0.0), 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), cos(0.0), 0.0))) / 1.0), (_GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, cos(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0, 1.0), transpose(transpose(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1.0, 1.0)))), (mat3(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1779.4258)), float(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))), bool(true))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)) * mat3(1.0))), cos(0.0), 0.0)), (float(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0, 1.0, cos(0.0), 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), cos(0.0), 0.0))) / 1.0)) - 0.0)))) > injectionSwitch.y))) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, cos(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)) * mat3(1.0))), cos(0.0), 0.0)), (float(mat2x4(injectionSwitch.x, 1.0, 1.0, cos(0.0), 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), cos(0.0), 0.0))) / 1.0)) > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, 1.0, cos(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0)))), 1.0, determinant(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED((mat4x3(8.7, -68.25, -256.186, -127.640, 864.562, 5.0, 1.6, -1.7, 5027.8162, 684.872, 2.0, -4.8) * mat3x4(-4.5, 465.203, -7.0, 1.7, 433.917, -7077.5254, 7407.2291, 2.8, -211.011, -3263.2716, -7174.1844, -1320.0764))) : _GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), (_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.3)), float(1.0), bool(true)))) + log(1.0)), 1.0), (false ? _GLF_FUZZED((mat4x3(8.7, -68.25, -256.186, -127.640, 864.562, 5.0, 1.6, -1.7, 5027.8162, 684.872, 2.0, -4.8) * mat3x4(-4.5, 465.203, -7.0, 1.7, 433.917, _GLF_IDENTITY(-7077.5254, mix(float(_GLF_IDENTITY(-7077.5254, (false ? _GLF_FUZZED(-3.9) : -7077.5254))), float(_GLF_FUZZED(-8.5)), bool(false))), 7407.2291, 2.8, -211.011, -3263.2716, -7174.1844, -1320.0764))) : _GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)) / mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY((mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)) * mat3(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)) * mat3(1.0) : _GLF_FUZZED(mat3(522.095, 4.9, 3149.2844, 5.8, -2042.4523, -0.0, 6.8, 7.4, -8.0)))))), cos(0.0), 0.0)), _GLF_IDENTITY((float(mat2x4(injectionSwitch.x, 1.0, 1.0, cos(0.0), 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 0.0))), clamp((float(mat2x4(injectionSwitch.x, 1.0, 1.0, cos(0.0), 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 0.0))), (float(mat2x4(injectionSwitch.x, 1.0, 1.0, cos(0.0), 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 0.0))), (float(mat2x4(injectionSwitch.x, 1.0, 1.0, cos(0.0), 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 0.0))))) / _GLF_IDENTITY(1.0, (1.0) - 0.0))) > injectionSwitch.y))))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(vec4(2089.5805, 92.03, 9.9, 8.1).p)), max(float(_GLF_FUZZED(_GLF_IDENTITY(vec4(2089.5805, 92.03, 9.9, 8.1).p, (vec4(2089.5805, 92.03, 9.9, 8.1).p) - 0.0))), float(_GLF_FUZZED(_GLF_IDENTITY(vec4(2089.5805, 92.03, 9.9, 8.1).p, clamp(_GLF_IDENTITY(vec4(2089.5805, 92.03, 9.9, 8.1).p, 1.0 * (vec4(2089.5805, 92.03, 9.9, 8.1).p)), vec4(2089.5805, 92.03, 9.9, 8.1).p, vec4(2089.5805, 92.03, 9.9, 8.1).p)))))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0), exp(0.0), sin(0.0), 0.0, 0.0, 0.0), (mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0), exp(0.0), sin(0.0), 0.0, 0.0, 0.0)) - mat2x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))))))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.9, -222.151)))).x, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.9, -222.151)))).x : _GLF_FUZZED(8872.9323))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(-1.4)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-895.708), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(-895.708), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-895.708), (injectionSwitch)[1]))), bvec2(false, true))).x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), true && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)))) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y)), mix(float(_GLF_FUZZED(-4.8)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))), bool(true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), sin(0.0), 0.0, 1.0, 1.0, 1.0))))), (true ? vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, sin(0.0), 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 0.0, sin(0.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 1.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0, 1.0, 1.0))))) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y)))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atanh(6.7)) : injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atanh(6.7)) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atanh(6.7)) : injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atanh(6.7)) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atanh(6.7)) : injectionSwitch.x)))))), (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true)))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true)))), false))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec3(gl_WorkGroupSize.x, 1u, 0u)), 0u | (uint(uvec3(gl_WorkGroupSize.x, 1u, 0u)))))) >> 0u), _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, ((gl_WorkGroupSize.x) / 1u) >> 0u)), gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), false || (bool(bvec3(_GLF_DEAD(false), true, false)))))) && _GLF_IDENTITY(true, ! (! (true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))) && (! (false)))))))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_size, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_size, 0u, 0u)), (uint(uvec3(workgroup_size, 0u, 0u))) * 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_size, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (uint(uvec3(workgroup_size, 0u, 0u))) * 1u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_size, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)), (uint(uvec3(workgroup_size, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))) | 0u), (uint(uvec3(workgroup_size, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))) * 1u)) * 1u, (true ? (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u | 1u) * (0u))) | (0u)), 0u)), (uint(uvec3(workgroup_size, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))) | 0u), (uint(uvec3(workgroup_size, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))) * 1u)) * 1u : _GLF_FUZZED(workgroup_size)))), _GLF_IDENTITY(uint(uvec3(workgroup_size, 0u, 0u)), (uint(uvec3(workgroup_size, 0u, 0u))) * 1u)))) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x), (true ? _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x) : _GLF_FUZZED(asin(-2.0)))))), min(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), 0u, _GLF_IDENTITY(0u, (0u) - 0u)), min(uvec3(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), 0u, _GLF_IDENTITY(0u, (0u) - 0u)), uvec3(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), 0u, _GLF_IDENTITY(0u, (0u) - 0u))))), uint(uvec3(workgroup_size, 0u, 0u))))), workgroup_size)) * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_size)))], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(13075))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(13075))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(13075))))), min(~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(13075))))), ~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(13075))))))))) ^ (0 << _GLF_IDENTITY(int(6), int(6)))), 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) << 0) - 0)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) << 0) - 0)) / 1), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) << 0) - 0)) / 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) << 0) - 0)) / 1), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) << 0) - 0)) / 1)) >> 0)))) | 0));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), ! (! ((false)))))))), _GLF_IDENTITY((_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec4((false), false, false, false)))), (! (! (false))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec4((false), false, false, false)))), (! (! (false))) && true)), ! (! ((_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true, true, true)))), bool(bvec4((false), false, false, false)))), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))))) && true)))))))) && true)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) && true), bool(bvec2(_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, (false) && true)))), (! ((! (false)))) && true), true)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false))), (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ! (_GLF_IDENTITY(! ((! (false))), (! _GLF_IDENTITY(((! (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(true, (true) && true) && (((! (false)))))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ! (_GLF_IDENTITY(! ((! (false))), (! _GLF_IDENTITY(((! (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(true, (true) && true) && (((! (false)))))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), ! (_GLF_IDENTITY(! ((! (false))), (! _GLF_IDENTITY(((! (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(true, (true) && true) && (((! (false)))))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))), true)))))))))), true, true)), _GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, true, true))), ! (! (true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true, true)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), injectionSwitch)).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (_GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)) && true)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), false, true, false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, false || (false))))))), true, true))), _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, false || (false)))) || (false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), true, true))), _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), bool(bvec3((! (true)), false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(false, false || (false)))) || (false))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, false || (false)))) || (false)))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))), true, true))), _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), bool(bvec3((! (true)), false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(false, false || (false)))) || (false))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, false || (false)))) || (false)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true), true, false)), true, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true), true, false)), true, false))))), false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0, 0.0, 1.0, determinant(mat3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, cos(0.0))), 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(-64.48, -5349.5175, 736.372, -992.118, 8.8, 6.9, 5624.3448, -7.0)) : mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 0.0, 0.0, 1.0, determinant(mat3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, cos(0.0))), 0.0, 1.0, 1.0))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) - 0), 2, _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, _GLF_IDENTITY((2), (_GLF_IDENTITY(true, ! (! (true))) ? (2) : _GLF_FUZZED(78269))) / 1), _GLF_IDENTITY(2, min(2, 2)), 2)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) ^ 0)) / 1), _GLF_IDENTITY(2, _GLF_IDENTITY(min(2, 2), (min(2, 2)) | 0)), 2)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), clamp(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY(2, min(2, 2)), 2))) | 0, clamp((_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), clamp(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY(2, min(2, 2)), 2))) | 0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), clamp(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY(2, min(2, 2)), 2))) | 0, int(ivec3((_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), clamp(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY(2, min(2, 2)), 2))) | 0, 0, 1))), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), clamp(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY(2, min(2, 2)), 2))) | 0))), _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) | _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(ivec3(0, 1, 1))))))))), 2)), _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (2) | (2)) : _GLF_FUZZED(-77624)))) / 1), _GLF_IDENTITY(2, min(2, 2)), 2)), (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY(2, min(2, 2)), 2))) << 0)))))) + 0)))), clamp((subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, 0 ^ (2)), 2, _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, _GLF_IDENTITY((2) / 1, min((2) / 1, (2) / 1))), _GLF_IDENTITY(2, _GLF_IDENTITY(min(_GLF_IDENTITY(2, clamp(2, 2, 2)), 2), clamp(min(_GLF_IDENTITY(2, clamp(2, 2, 2)), 2), min(_GLF_IDENTITY(2, clamp(2, 2, 2)), 2), _GLF_IDENTITY(min(_GLF_IDENTITY(2, clamp(2, 2, 2)), 2), (min(_GLF_IDENTITY(2, clamp(2, 2, 2)), 2)) + 0)))), 2))))) + 0)), (0 | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, 0 ^ (2)), 2, _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(int(2)))) << 0), _GLF_IDENTITY((2) / 1, min(_GLF_IDENTITY((2) / 1, (_GLF_IDENTITY((2) / 1, (true ? (2) / 1 : _GLF_FUZZED(-56791)))) | 0), (2) / 1))), _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, clamp(2, 2, 2)), 2)), 2))))) + 0))) | (0 | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, 0 ^ (2)), 2, _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, _GLF_IDENTITY((2) / 1, min((2) / 1, (2) / _GLF_IDENTITY(1, (1) << 0)))), _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, clamp(2, 2, 2)), 2)), 2))))) + 0)))))), (_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(0 | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY(2, min(2, 2)), 2))))) + 0)), (0 | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY(2, min(2, 2)), 2))))) + 0))) ^ 0)), (subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(0 | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) / _GLF_IDENTITY(1, int(ivec2(1, 1)))), _GLF_IDENTITY(2, min(2, 2)), 2))))) + 0)), (0 | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), min(2, 2)), 2))))) + 0))) ^ 0))) - 0u)), (subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), (0) ^ 0) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(clamp(2, 2, _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY(2, min(2, 2)), 2)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY(2, min(2, 2)), 2)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY(2, min(2, 2)), 2)), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false) ? _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY(2, min(2, 2)), 2)) : _GLF_FUZZED(-31093)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (2) | 0)))), min(2, 2)), 2)), (true ? _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY(2, min(2, 2)), 2)) : _GLF_FUZZED(-31093))))) >> 0))), _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY(2, _GLF_IDENTITY(min(2, 2), (min(2, 2)) >> 0)), 2)), _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY(2, min(2, 2)), 2)), (true ? _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY(2, _GLF_IDENTITY(min(2, 2), (_GLF_IDENTITY(min(2, 2), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min(2, 2) : _GLF_FUZZED(70063)))) | 0)), 2)) : _GLF_FUZZED(-45650)))))), _GLF_IDENTITY(0 | (clamp(_GLF_IDENTITY(2, clamp(2, 2, 2)), 2, _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY(2, min(2, 2)), 2)))), int(ivec4(0 | (clamp(2, 2, _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY(2, _GLF_IDENTITY(min(2, 2), 0 | (min(2, 2)))), 2)))), 0, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (0 >> _GLF_IDENTITY(int(5), int(5))) * 1)), 1)))))) + 0)))))) == _GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, ~ (~ (0))), 1))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), true && (! (false)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((4) - _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_GLF_IDENTITY(-28487, (-28487) - 0)))), ((4) - _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, 0 | (0)) : _GLF_FUZZED(-28487)))) - 0)));
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5486.8701)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5486.8701)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))), 1.0, 1.0, 1.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))) && true, false || (_GLF_IDENTITY((! (! (false))) && true, ((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true) && true)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))) && true, false || (_GLF_IDENTITY((! (! (false))) && true, ((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true) && true)))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))) && true, false || (_GLF_IDENTITY((! (! (false))) && true, ((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true) && true)))))))), true, false, true)), false || (bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))) && true, false || (_GLF_IDENTITY((! (! (false))) && true, ((! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true) && true)))))))), true, false, true)))))) && true)), bool(bool((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) && true), (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)) || false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), 1.0, abs(0.0), 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), 1.0, abs(0.0), 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), float(mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), 1.0, abs(0.0), 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), 1.0, abs(0.0), 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0)))))), 0.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.1), _GLF_FUZZED(-3.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) - vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-36.07)), bool(false))), (false ? _GLF_FUZZED(atan(-3.2)) : injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-607.123)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-607.123)), float(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.4)), float(0.0), bool(true))), injectionSwitch.x)), bool(true))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-607.123)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(_GLF_IDENTITY(true, (true) && true)))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-607.123)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))))))).y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), false || ((_GLF_IDENTITY(false, bool(bool(false)))))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec3(false, true, false)), ! _GLF_IDENTITY((! (bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec4(bool(bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec4(bool(bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))) && true), false)))), ! (! (_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, true && (true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), true && (bool(bvec4(false, false, true, false))))))), true, _GLF_IDENTITY(false, true && (false)))))))))))), true && ((! (bool(bvec3(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), true))))), false)))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-2.8))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-645.774, 4.9)))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4((! (_GLF_DEAD(false))), true, false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))))))))), (bool(bvec4((! (_GLF_DEAD(false))), true, false, _GLF_IDENTITY(false, ! (! (false)))))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 1.0, log(1.0))), (float(vec3(injectionSwitch.x, 1.0, log(1.0)))) + 0.0)), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 1.0, log(1.0))), (float(vec3(injectionSwitch.x, 1.0, log(1.0)))) + 0.0)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 1.0, log(1.0))), (float(vec3(injectionSwitch.x, 1.0, log(1.0)))) + 0.0)))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 1.0, log(1.0))), (float(vec3(injectionSwitch.x, 1.0, log(1.0)))) + 0.0)), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 1.0, log(1.0))), (float(vec3(injectionSwitch.x, 1.0, log(1.0)))) + 0.0)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 1.0, log(1.0))), (float(vec3(injectionSwitch.x, 1.0, log(1.0)))) + 0.0)))) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 1.0, log(1.0))), (float(vec3(injectionSwitch.x, 1.0, log(1.0)))) + 0.0)), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 1.0, log(1.0))), (float(vec3(injectionSwitch.x, 1.0, log(1.0)))) + 0.0)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 1.0, log(1.0))), (float(vec3(injectionSwitch.x, 1.0, log(1.0)))) + 0.0)))) > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-5.6)), float(injectionSwitch.x), bool(true)), mix(float(mix(float(_GLF_FUZZED(-5.6)), float(injectionSwitch.x), bool(true))), float(_GLF_FUZZED((- 6571.1687))), bool(false)))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(427.652) : injectionSwitch.y))) - 0.0)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, bool(bvec2(true, false))), true && ((false) && _GLF_IDENTITY(true, bool(bvec2(true, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), 0u | _GLF_IDENTITY((uint(2)), ((uint(2))) << 0u)), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, (64) >> 0))))) | (64)), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
}
