#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))) && true))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)), (false) || false)), false || (! (_GLF_IDENTITY(false, (false) || false))))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)), (false) || false)), false || (! (_GLF_IDENTITY(false, (false) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)), (false) || false)), false || (! (_GLF_IDENTITY(false, (false) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)), (false) || false)), false || (! (_GLF_IDENTITY(false, (false) || false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(580.271)), max(float(_GLF_FUZZED(580.271)), float(_GLF_FUZZED(580.271)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), (true ? float(injectionSwitch.y) : _GLF_FUZZED(1.8)))), min(float(_GLF_IDENTITY(float(injectionSwitch.y), (true ? float(injectionSwitch.y) : _GLF_FUZZED(1.8)))), float(_GLF_IDENTITY(float(injectionSwitch.y), (true ? float(injectionSwitch.y) : _GLF_FUZZED(1.8))))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true), false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(false, (false) && true)))), false || (! (bool(bool(_GLF_IDENTITY(false, (false) && true))))))) && true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))), bool(bvec2(_GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, bool(_GLF_IDENTITY(bvec3(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)) || false, true, false), bvec3(bvec4(bvec3(((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)) || false, true, false), true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(26.20) : injectionSwitch.x))) * cos(0.0)), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, abs(0.0), 1.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(vec4(-3.1, -17.90, -7.5, 5.4).x), _GLF_FUZZED(-2.7)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-81.66, 8.1)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[1]), bvec2(true, true))).y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), (! ((! (false)))) && true))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), false || (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mod(vec2(4.2, -8.3), injectionSwitch)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))), injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), true && (true && (false)))) && true))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))) ? _GLF_FUZZED(_GLF_IDENTITY(-47.93, mix(float(_GLF_FUZZED(vec2(-778.251, -891.952).s)), float(-47.93), bool(true)))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, abs(1.0), exp(0.0)))).x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), false || (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), false, true)))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, length(0.0), 1.0, round(length(normalize(1.0))), 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, cos(0.0)), (false ? _GLF_FUZZED(mat4(-5.3, 0.9, 91.07, 9.4, _GLF_IDENTITY(1743.3914, min(1743.3914, _GLF_IDENTITY(1743.3914, min(1743.3914, 1743.3914)))), -3624.4766, -408.518, 5.0, 91.74, 2.3, -7.2, 859.351, 58.79, 84.45, -0.7, 9509.8613)) : mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, length(0.0), 1.0, round(length(normalize(1.0))), 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, cos(0.0))))), vec2(mat2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, length(0.0), 1.0, round(length(normalize(1.0))), 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, cos(0.0)), (false ? _GLF_FUZZED(mat4(-5.3, 0.9, 91.07, 9.4, 1743.3914, -3624.4766, -408.518, 5.0, 91.74, 2.3, -7.2, 859.351, 58.79, 84.45, -0.7, 9509.8613)) : mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, length(0.0), 1.0, round(length(normalize(1.0))), 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, cos(0.0))))), min(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, length(0.0), 1.0, round(length(normalize(1.0))), 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, cos(0.0)), (false ? _GLF_FUZZED(mat4(-5.3, 0.9, 91.07, 9.4, 1743.3914, -3624.4766, -408.518, 5.0, 91.74, 2.3, -7.2, 859.351, 58.79, 84.45, -0.7, 9509.8613)) : mat4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, length(0.0), 1.0, round(length(normalize(1.0))), 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, cos(0.0))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, length(0.0), 1.0, round(length(normalize(1.0))), 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, cos(0.0)), (false ? _GLF_FUZZED(mat4(-5.3, 0.9, 91.07, 9.4, 1743.3914, -3624.4766, -408.518, 5.0, 91.74, 2.3, -7.2, 859.351, 58.79, 84.45, -0.7, 9509.8613)) : mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, length(0.0), 1.0, round(length(normalize(1.0))), 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, cos(0.0)))), transpose(transpose(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, length(0.0), 1.0, round(length(normalize(1.0))), 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, cos(0.0)), (false ? _GLF_FUZZED(mat4(-5.3, 0.9, 91.07, 9.4, 1743.3914, -3624.4766, -408.518, 5.0, 91.74, 2.3, -7.2, 859.351, 58.79, 84.45, -0.7, 9509.8613)) : mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, length(0.0), 1.0, round(length(normalize(1.0))), 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, cos(0.0)))))))))), 0.0, 0.0)))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))), false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))) || false)))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))), bool(bool(! (_GLF_IDENTITY((false) || false, ! (! ((false) || false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))) || false)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), ((false) || false) || false))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))), _GLF_IDENTITY(false, true && (false)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))))) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))) || false)), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))) || false)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), ((false) || false) || false))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))), _GLF_IDENTITY(false, true && (false)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))))) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))) || false)), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)) || (false))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(true, true && (true)), true)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(true, true && (true)), true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) << 0u, ((workgroup_id) << 0u) | ((workgroup_id) << 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, abs(0.0), determinant(mat4(exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0)), 1.0)), (float(vec4(0.0, abs(0.0), determinant(mat4(exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0)), 1.0))) / 1.0))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) | 0u))), min(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) | 0u))), 0u ^ ((0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) | 0u))))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) | 0u))))) ^ (subgroup_size)), (true ? subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(workgroup_id))), uint(uint(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(_GLF_IDENTITY(7u, uint(_GLF_IDENTITY(uvec4(7u, 0u, 1u, 1u), (uvec4(7u, 0u, 1u, 1u)) | (uvec4(7u, 0u, 1u, 1u))))))) | 0u))) ^ (subgroup_size)), (true ? subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(workgroup_id))))));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(uvec4(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), 0u, 0u, 1u))) + subgroup_local_id) | (workgroup_base + subgroup_base + subgroup_local_id));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.5)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 0.0)))), bool(true))) : _GLF_FUZZED(-8.0))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-8.0, (true ? -8.0 : _GLF_FUZZED(-2.6)))))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-8.0, min(-8.0, -8.0)))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).y)))))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), 0u + (subgroup_local_id + 1))) % subgroup_size, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id)) + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) >> 0u) * (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1)))))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), subgroup_local_id + 1))) % subgroup_size) - 0u)), max((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(94133) : _GLF_IDENTITY(1, (1) ^ 0))), clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), 0u + (subgroup_local_id + 1))) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), uint(uint(((subgroup_local_id + 1) % subgroup_size)))) - _GLF_IDENTITY(0u, (0u) / 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), subgroup_local_id + 1, subgroup_local_id + 1)), max(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), subgroup_local_id + 1, subgroup_local_id + 1)))), 0u + (subgroup_local_id + 1))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) - 0u))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)), true))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.5)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), false, true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(exp2(9.1), float(vec3(_GLF_IDENTITY(exp2(9.1), float(mat2x3(_GLF_IDENTITY(exp2(9.1), max(exp2(9.1), exp2(9.1))), 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0, 0.0)))))))), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), false, false, false))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), false, false, false))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) && true), (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(false, (false) && true), false))))), _GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), true, true, false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), ! (! _GLF_IDENTITY((false), true && ((false)))))) && true))), _GLF_IDENTITY(! (! (false || (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false))))))))), (! (! _GLF_IDENTITY((false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! _GLF_IDENTITY((false), true && ((false))))))), _GLF_IDENTITY(((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! _GLF_IDENTITY((false), true && ((false)))))))) && true, bool(bvec4(_GLF_IDENTITY(((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! _GLF_IDENTITY((false), true && ((false)))))))) && true, (_GLF_IDENTITY(((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! _GLF_IDENTITY((false), true && ((false)))))))) && true, bool(bvec4(((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! _GLF_IDENTITY((false), true && ((false)))))))) && true, true, true, true)))) && true), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ((false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! _GLF_IDENTITY((false), true && ((false))))))), ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! _GLF_IDENTITY((false), true && ((false)))))))) && true))) && true))) || false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true)))) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), true && (true && ((false)))))))))))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), true && (_GLF_IDENTITY((false), true && ((false)))))))))), true, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), (_GLF_IDENTITY(true && ((false)), false || (true && ((false))))) || false))))))), true, true)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))), _GLF_IDENTITY(true, ! (! (true))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))), _GLF_IDENTITY(true, ! (! (true))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))), _GLF_IDENTITY(true, ! (! (true))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), bool(bool(true && ((false)))))))))), (false || (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), (true && ((false))) || false))))))) || false)), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(_GLF_IDENTITY(((false)), ! (! (((false))))), bool(bvec2(_GLF_IDENTITY(((false)), false || (((false)))), false))))))))), true, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false)), true && (bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false))))) || (((false)))), false))))))))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || (((false)))), false)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || (((false)))), false))))))))) || false)), true, true))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)))), ! (! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((false)), (((false))) || _GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || (((false)))), false))))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false), true)), (bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, (false) || false)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || (((false)))), false)))), ! (! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || (((false)))), false)))))))))))), true, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(true, false || (true)) && ((false)))))))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), false || (! _GLF_IDENTITY((false), true && ((false)))))) || false)))))), true, true))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false))))))), (false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_IDENTITY(true && ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), (true && ((false))) || false))), ((! _GLF_IDENTITY((false), _GLF_IDENTITY(true && ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), (true && ((false))) || false)))) && true))))) || false)), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || (((false)))), false)))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || (((false)))), false))))))))))), true, _GLF_IDENTITY(true, bool(bvec2(true, false))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || (((false)))), false))))))))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || (((false)))), false))))))))), true, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || (((false)))), false))))))))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || (((false)))), false))))))))), true, true))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || (((false)))), false))))))))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || (((false)))), false))))))))), true, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || (((false)))), false))))))))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || (((false)))), false))))))))), true, true))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) || false)))))))))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), true && (_GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), false || ((! _GLF_IDENTITY((false), true && ((false)))))))))))), true, true))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false))))))), (false || (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), (true && ((false))) || false))))))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || (((false)))), false))))))))), true, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || ((_GLF_IDENTITY((false), ((false)) && true)))), false))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((false), true)))))), false)))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((false), true)))))), false)))))))))), ! (! ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2((false), true)))))), false))))))))))))))))), true, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || (((false)))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))))))))), true, true))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || (((false)))), false))))))))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || (((false)))), false))))))))), true, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), true && _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), false || (_GLF_IDENTITY(((false)), false || (((false))))))))), false, true, false))), false))))), _GLF_IDENTITY(bool(bvec3((! _GLF_IDENTITY((false), true && _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), false || (_GLF_IDENTITY(((false)), false || (((false))))))))), false, true, false))), false))))), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3((! _GLF_IDENTITY((false), true && _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), false || (_GLF_IDENTITY(((false)), false || (((false))))))))), false, true, false))), false))))), true, true)), false || (bool(bvec3((! _GLF_IDENTITY((false), true && _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), false || (_GLF_IDENTITY(((false)), false || (((false))))))))), false, true, false))), false))))), true, true)))))))))))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || (((false)))), false))))))))), true, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || (((false)))), false))))))))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || (((false)))), false))))))))), true, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), true && _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), false || (_GLF_IDENTITY(((false)), false || (((false))))))))), false, true, false))), false))))), _GLF_IDENTITY(bool(bvec3((! _GLF_IDENTITY((false), true && _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), false || (_GLF_IDENTITY(((false)), false || (((false))))))))), false, true, false))), false))))), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3((! _GLF_IDENTITY((false), true && _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), false || (_GLF_IDENTITY(((false)), false || (((false))))))))), false, true, false))), false))))), true, true)), false || (bool(bvec3((! _GLF_IDENTITY((false), true && _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), false || (_GLF_IDENTITY(((false)), false || (((false))))))))), false, true, false))), false))))), true, true)))))))))))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || (((false)))), false))))))))), true, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || (((false)))), false))))))))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || (((false)))), false))))))))), true, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), true && _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), false || (_GLF_IDENTITY(((false)), false || (((false))))))))), false, true, false))), false))))), _GLF_IDENTITY(bool(bvec3((! _GLF_IDENTITY((false), true && _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), false || (_GLF_IDENTITY(((false)), false || (((false))))))))), false, true, false))), false))))), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3((! _GLF_IDENTITY((false), true && _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), false || (_GLF_IDENTITY(((false)), false || (((false))))))))), false, true, false))), false))))), true, true)), false || (bool(bvec3((! _GLF_IDENTITY((false), true && _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((false)), false || (((false)))), false || (_GLF_IDENTITY(((false)), false || (((false))))))))), false, true, false))), false))))), true, true)))))))))))), true, true)), (bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), (false) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), bool(bvec2(_GLF_IDENTITY(((false)), false || (((false)))), false))))))))), true, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))) || false)))))))))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && true)))), true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (true) && true), true))))), false, false, false)))), false))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && true)))), true))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ((true) && true) && true)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (true) && true), true))))), false, false, false)))), false))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), (bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))) && true))), bool(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), (bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))) && true))))))), (_GLF_DEAD(false)) || false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))) * (injectionSwitch.y))))))) && _GLF_IDENTITY(true, ! (! (true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), (false ? _GLF_FUZZED(next_virtual_gid) : min(next_virtual_gid, next_virtual_gid))))], uint(_GLF_IDENTITY(2, _GLF_IDENTITY(min(2, _GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, 1 * (_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, min(2, 2))), (false ? _GLF_FUZZED(-70625) : (_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), min(2, 2))))) | (2))))), (true ? (_GLF_IDENTITY(2, 1 * (_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(2, min(2, 2))), clamp((_GLF_IDENTITY(2, min(2, 2))), (_GLF_IDENTITY(2, min(2, 2))), (_GLF_IDENTITY(2, min(2, 2))))), (false ? _GLF_FUZZED(-70625) : (_GLF_IDENTITY(2, min(2, 2))))) | (2))))) : _GLF_FUZZED(63764))) >> 0)), (min(2, _GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, 1 * (_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, min(2, 2))), (false ? _GLF_FUZZED(-70625) : (_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), min(2, 2))))) | (2))))), (true ? (_GLF_IDENTITY(2, 1 * (_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(2, min(2, 2))), clamp((_GLF_IDENTITY(2, min(2, 2))), (_GLF_IDENTITY(2, min(2, 2))), (_GLF_IDENTITY(2, min(2, 2))))), (false ? _GLF_FUZZED(-70625) : (_GLF_IDENTITY(2, min(2, 2))))) | (2))))) : _GLF_FUZZED(63764))) >> 0))) | 0))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(74969))), float(injectionSwitch.y), bool(true)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), 0.0, 1.0))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), 0.0, 1.0))).y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), 0.0, 1.0))).y), true, true, true)), ! (! (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), 0.0, 1.0))).y), true, true, true))))))) && true)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) && true))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0))).x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.7)), bool(false)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-579.493 + 0.7))), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))), true, false), true))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, abs(0.0)), vec3(mat3(vec3(injectionSwitch, abs(0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(948.145))), 0.0, 0.0, 1.0, 0.0, 0.0))))), injectionSwitch)).y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(3.3), float(mat3(_GLF_FUZZED(3.3), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(-87472))), bvec2(true, false))).x > injectionSwitch.y) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.3), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.8)), bvec2(true, false))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), bool(bool((_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)) || false))))) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))) && (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))), false || (bool(_GLF_IDENTITY(false, ! (! (false))))))))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), true, true)))))), true && (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), true, true))))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true, false || (true)) && (true)) && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) * vec2(1.0, 1.0)) + vec2(0.0, 0.0)).y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, false))), false))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-771.283) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(450.657) : injectionSwitch.y)), injectionSwitch.y))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-771.283) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(450.657) : injectionSwitch.y)), injectionSwitch.y))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), true)), false, false))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
