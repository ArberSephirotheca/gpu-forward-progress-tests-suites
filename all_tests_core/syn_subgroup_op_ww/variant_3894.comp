#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_13 {
 mat4x3 _f0;
 uvec2 _f1;
 uvec4 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_12 {
 mat3 _f0;
 ivec3 _f1;
 int _f2;
 uvec2 _f3;
 mat3 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_11 {
 mat2 _f0;
 ivec3 _f1;
 int _f2;
 uvec4 _f3;
 mat4x3 _f4;
 int _f5;
} ;

struct _GLF_struct_14 {
 bool _f0;
 float _f1;
 _GLF_struct_11 _f2;
 _GLF_struct_12 _f3;
 _GLF_struct_13 _f4;
} ;

struct _GLF_struct_9 {
 vec4 _f0;
 ivec2 _f1;
 mat3 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_8 {
 ivec2 _f0;
 mat3 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_7 {
 vec2 _f0;
 bvec2 _f1;
 vec3 _f2;
 ivec3 _f3;
 bool _f4;
 ivec2 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_10 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 bvec4 _f2;
 _GLF_struct_9 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_15 {
 _GLF_struct_10 _f0;
 _GLF_struct_14 _f1;
 uint num_workgroup;
 mat3 _f2;
 uvec2 _f3;
 mat2x4 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_4 {
 mat4x2 _f0;
 ivec3 _f1;
 int _f2;
 vec4 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
 bvec3 _f1;
 mat3x2 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 uint _f1;
 mat2 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 int _f1;
 float _f2;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 mat3x2 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
 uint next_virtual_gid;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_10(_GLF_struct_7(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), vec2(mat2(vec2(1.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(-62424))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0))), mix(vec2(_GLF_FUZZED(7.8), _GLF_FUZZED(-129.393)), vec2((_GLF_IDENTITY(vec2(1.0), vec2(mat2(vec2(1.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(-62424))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0))))[0], (_GLF_IDENTITY(vec2(1.0), vec2(mat2(vec2(1.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(-62424))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0))))[1]), bvec2(true, true))), _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec4(bvec2(bvec2(bvec2(true))), false, false)))), false, _GLF_IDENTITY(true, true && (true)))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec4(bvec2(bvec2(bvec2(true))), false, false)))), false, _GLF_IDENTITY(true, true && (true)))))))), vec3(1.0), ivec3(1), true, _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(40475, 85331)) : ivec2(1))), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, abs(0.0), _GLF_IDENTITY(1.0, (1.0) - abs(0.0)), tan(0.0), 0.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) / sqrt(1.0)), sin(0.0), 0.0, 0.0), mat4x3(mat4(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, abs(0.0), 1.0, tan(0.0), 0.0, cos(0.0), sin(0.0), 0.0, 0.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, false), bvec2(bvec3(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || _GLF_IDENTITY(false, (false) || false), false), bvec2(bvec3(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, false), bvec2(bvec3(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), false || (! (injectionSwitch.x < injectionSwitch.y))))))))) || false, false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || _GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, true && (false))), bvec2(bvec3(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(refract(-1615.1861, 8578.4035, -535.835)) : injectionSwitch.y)), injectionSwitch.y))))))) || false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec2(bvec2((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, false), bvec2(bvec3(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))), (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))))) && true))), ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || _GLF_IDENTITY(false, (false) || false), false), bvec2(bvec3(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || _GLF_IDENTITY(false, (false) || false), false), bvec2(bvec3(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) || false, false), bvec2(bvec3(bvec2((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))) || false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(765.655) : _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0)))))), ! (! (injectionSwitch.x < injectionSwitch.y))))), false || ((! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(765.655) : _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0)))))), ! (! (injectionSwitch.x < injectionSwitch.y))))))) || false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true))), false, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true))), false, true)), false, false))))))) || false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0)), vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(-5416.2858)), bvec2(false, false))).y, ! (! (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false))))) || false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7.0) : injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, true && (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 1.0, abs(0.0), sqrt(1.0)), vec4(mat3x2(vec4(injectionSwitch.x, 1.0, abs(0.0), sqrt(1.0)), 1.0, 1.0))))) < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, bool(bvec3((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) && true)) || false, false), bvec2(bvec3(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(! (! (injectionSwitch.x < injectionSwitch.y)), ! (! (! (! (injectionSwitch.x < injectionSwitch.y)))))) && true, ! (! ((_GLF_IDENTITY(! (! (injectionSwitch.x < injectionSwitch.y)), ! (! (! (! (injectionSwitch.x < injectionSwitch.y)))))) && true))))))) || false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))) || false, false), bvec2(bvec3(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x < injectionSwitch.y))))))))), ((bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))) || false, false), bvec2(bvec3(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x < injectionSwitch.y)))))))))) || false) || false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(! (! (injectionSwitch.x < injectionSwitch.y)), true && (! (! (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x < injectionSwitch.y))))) || false) && true), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x < injectionSwitch.y))))) || false) && true), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))), injectionSwitch)).x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! _GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ((! _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), ! (! ((! _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, false), bvec2(bvec3(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))) || false, false), bvec2(bvec3(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, false), bvec2(bvec2(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec2(0.0, 0.0)))))))))) || false, _GLF_IDENTITY(false, ! (! (false))))))), bvec2(bvec3(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))), ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ vec2(8.7, 4.6)).t)), float(injectionSwitch.y), bool(true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)) : _GLF_FUZZED(acos(sinh(vec2(-8084.5678, 1.6)))))).y)))), (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), (exp(0.0)) + 0.0) * (injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) || false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, ! (! ((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.2)), float(injectionSwitch.x), bool(true))) < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) || false, false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))), bvec2(bvec3(bvec2(bvec3(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) || false, false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))), true))))), (bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (injectionSwitch.x)) < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), bvec2(bvec3(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(refract((mat4x2(42.83, 334.360, 266.730, -2.0, 4.7, -0.7, -67.03, 14.16) * vec4(8.0, 2.6, 30.19, -6428.1681)), injectionSwitch, 211.865)) : injectionSwitch)).x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(refract((mat4x2(42.83, 334.360, 266.730, -2.0, 4.7, -0.7, -67.03, 14.16) * vec4(8.0, 2.6, 30.19, -6428.1681)), injectionSwitch, 211.865)) : injectionSwitch)).x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(refract((mat4x2(42.83, 334.360, 266.730, -2.0, 4.7, -0.7, -67.03, 14.16) * vec4(8.0, 2.6, 30.19, -6428.1681)), injectionSwitch, 211.865)) : injectionSwitch)).x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), true && (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(refract((mat4x2(42.83, 334.360, 266.730, -2.0, 4.7, -0.7, -67.03, 14.16) * vec4(8.0, 2.6, 30.19, -6428.1681)), injectionSwitch, 211.865)) : injectionSwitch)).x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(refract((mat4x2(42.83, 334.360, 266.730, -2.0, 4.7, -0.7, -67.03, 14.16) * vec4(8.0, 2.6, 30.19, -6428.1681)), injectionSwitch, 211.865)) : injectionSwitch)).x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))))), (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, ! (! _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), (((injectionSwitch.x < injectionSwitch.y))) && true))))))) || false, false), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), true && (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), true && (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))) && true) || false, false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-850.301) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(93.92))))))))), (bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), true)), false)))))) || false, false), bvec2(bvec3(bvec2((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(! (! (injectionSwitch.x < injectionSwitch.y)), false, false, true))))))))) || false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)))))))) ? _GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(40475, _GLF_IDENTITY(85331, ~ (~ (_GLF_IDENTITY(85331, int(ivec3(85331, (44035 & 0), 1)))))))) : ivec2(1))) : _GLF_FUZZED(ivec2(12767, -66598)))), mat4x3(1.0)), _GLF_struct_8(ivec2(1), _GLF_IDENTITY(mat3(1.0), (false ? _GLF_FUZZED(mat3(-4.9, -347.103, -8196.8093, 54.76, 3.5, -34.65, -6.7, 0.3, -7481.5263)) : mat3(1.0))), ivec3(1)), bvec4(true), _GLF_struct_9(vec4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), ivec2(1, 1) * (ivec2(1))), ivec2(0, _GLF_IDENTITY(0, clamp(0, 0, 0))) + (ivec2(1))), mat3(1.0), ivec4(1)), mat2x3(1.0)), _GLF_struct_14(true, 1.0, _GLF_struct_11(mat2(1.0), ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-20179) : 1))) + 0)), 1, uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), _GLF_IDENTITY(1u * ((1u)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u * ((1u)), min(1u * ((1u)), 1u * ((1u))))))) | (_GLF_IDENTITY(1u, (1u) - 0u))), clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 1u * ((1u))) | (1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (1u))))))), _GLF_IDENTITY((1u), 1u * ((1u))) | (1u)), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))) * ((1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))) * ((1u)), uint(uvec3(_GLF_IDENTITY(1u, ~ (~ (1u))) * ((1u)), 0u, 0u))), _GLF_IDENTITY(1u, ~ (~ (1u))) * ((1u)), _GLF_IDENTITY(1u, ~ (~ (1u))) * ((1u))))) | (1u))))), mat4x3(1.0), 1), _GLF_struct_12(mat3(1.0), ivec3(1), 1, uvec2(1u), mat3(1.0), bvec4(true)), _GLF_struct_13(mat4x3(1.0), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), uvec4(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) : _GLF_FUZZED(subgroup_id)))), mat3x2(1.0))), gl_NumWorkGroups.x, mat3(1.0), uvec2(_GLF_IDENTITY(1u, (1u) - 0u)), mat2x4(1.0), vec3(1.0));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(345u, 88750u, 38235u)) : gl_WorkGroupID))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((gl_WorkGroupID), min((gl_WorkGroupID), (gl_WorkGroupID))) + uvec3(0u, 0u, 0u)).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / (0u ^ 1u)), _GLF_IDENTITY((subgroup_id * subgroup_size), 0u | ((subgroup_id * subgroup_size))) ^ 0u)) << 0u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))))))) && true)))))
  {
   for(int _injected_loop_counter = (((0 | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | 0)) >> _GLF_IDENTITY(int(5), int(5))) << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), ! (! ((! (true)))))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true))), true, true)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true))), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), false || (false))))), true))), true, true))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, false || (false))))), true))), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true))), true, true))), false)))), true))))))))))
          {
          }
         else
          {
           do
            {
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       do
                        {
                         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (true ? _injected_loop_counter ++ : _GLF_FUZZED(_injected_loop_counter)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))
                          {
                           return;
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
        }
      }
    }
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_5(_GLF_struct_0(ivec3(1), 1, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6754.5834) : 1.0)), 1.0))), mat3x2(1.0), _GLF_struct_1(uvec2(1u), 1u, mat2(1.0), mat3x2(1.0)), _GLF_struct_2(vec3(1.0), _GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))), mat3x2(1.0), bvec2(true)), _GLF_struct_3(mat4x2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2684.0473) : 1.0)))), _GLF_struct_4(mat4x2(1.0), ivec3(1), 1, vec4(1.0), mat2x4(1.0))), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), max(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), ~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(87184) : 1)))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(87184) : 1)))) ^ 0u), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(87184) : 1)))) ^ 0u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) >> 0u), _GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), ((subgroup_local_id + 1)) ^ 0u) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), uint(uvec4(uint(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(1, ~ (~ (1))) * (_GLF_IDENTITY(1, 0 + (1)))))) ^ 0u) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), 1u, 1u, _GLF_IDENTITY(0u, (0u) | 0u))))) - 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), ((subgroup_local_id + 1)) ^ 0u) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), uint(uvec4(uint(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(1, ~ (~ (1))) * (_GLF_IDENTITY(1, 0 + (1)))))) ^ 0u) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), 1u, 1u, 0u)))) - 0u)) ^ 0u))), (subgroup_local_id + 1) % subgroup_size))) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))))), ~ (_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u)))))))), 0u | (~ (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u)))))))))))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))))), uint(_GLF_IDENTITY(uvec2(0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))))), 1u), max(_GLF_IDENTITY(uvec2(0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))))), 1u), ~ (~ (uvec2(0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))))), 1u)))), uvec2(0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))))), 1u)))))) | _GLF_IDENTITY(0u, 0u ^ (0u)))), 0u | ((0u << _GLF_IDENTITY(uint(0u), uint(0u))))))));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))); _injected_loop_counter ++)
  {
   atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), (_GLF_IDENTITY((~ (1)), int(ivec4((~ (1)), 1, 1, 1)))) >> 0))), 4, 64, 4);
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))) + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u + (subgroup_local_id + 1), (0u + (subgroup_local_id + 1)) | (0u + (subgroup_local_id + 1)))), uint(uint(subgroup_local_id + 1))))))) < subgroup_size)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))))))
    {
     do
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     do
                      {
                       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, true && (_injected_loop_counter != 1))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, true && (_injected_loop_counter != 1)))))); _injected_loop_counter ++)
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)))
                          {
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               do
                                {
                                 do
                                  {
                                   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.next_virtual_gid, clamp(_GLF_struct_replacement_6.next_virtual_gid, _GLF_struct_replacement_6.next_virtual_gid, _GLF_struct_replacement_6.next_virtual_gid)), (_GLF_struct_replacement_6.next_virtual_gid) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_6.next_virtual_gid), (_GLF_IDENTITY((_GLF_struct_replacement_6.next_virtual_gid), ((_GLF_struct_replacement_6.next_virtual_gid)) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), uint(uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 1u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, min(0u, 0u))), uint(0u)))))))) | 0u), 0u + (_GLF_IDENTITY((_GLF_struct_replacement_6.next_virtual_gid), (_GLF_IDENTITY((_GLF_struct_replacement_6.next_virtual_gid), ((_GLF_struct_replacement_6.next_virtual_gid)) >> 0u)) | 0u)))), (_GLF_struct_replacement_6.next_virtual_gid) * ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((~ (1u)), clamp((~ (1u)), (~ (1u)), (~ (1u)))))))), ((_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), clamp(~ (1u), _GLF_IDENTITY(~ (1u), uint(uvec2(~ (1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (1u))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), (false ? _GLF_FUZZED((~ (-- subgroup_id))) : _GLF_IDENTITY((1u), 0u ^ ((1u))))))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))), min(((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), 1u * (~ (~ (1u))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), (true ? _GLF_IDENTITY((~ (1u)), ((~ (1u))) - 0u) : _GLF_FUZZED(workgroup_base)))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))))), (50111u & 0u))), (true ? uint(uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), clamp((1u), (1u), _GLF_IDENTITY((1u), 1u * ((1u))))))))))))), min(((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))))), (50111u & 0u))) : _GLF_FUZZED(subgroup_id)))) | ((_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY((~ (1u)), clamp((~ (1u)), (~ (1u)), (~ (1u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((~ (1u)), clamp((~ (1u)), (~ (1u)), (~ (1u)))), (_GLF_IDENTITY((~ (1u)), clamp((~ (1u)), (~ (1u)), (~ (1u))))) | (_GLF_IDENTITY((~ (1u)), clamp((~ (1u)), (~ (1u)), (~ (1u)))))), _GLF_IDENTITY((~ (1u)), clamp((~ (1u)), (~ (1u)), (~ (1u)))), _GLF_IDENTITY((~ (1u)), clamp((~ (1u)), (~ (1u)), (~ (1u)))))))))), ((_GLF_IDENTITY(1u, ~ (~ (1u))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> (0u | 0u))) + 0u)))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))), min(((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), 0u | (_GLF_IDENTITY(~ (~ (1u)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), ~ (1u)))), max(~ (~ (1u)), ~ (~ (1u)))), ~ (~ (1u))))))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))))), (50111u & 0u)), max(uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))), min(((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), 0u | (_GLF_IDENTITY(~ (~ (1u)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), ~ (1u)))), max(~ (~ (1u)), ~ (~ (1u)))), ~ (~ (1u))))))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))))), (50111u & 0u)), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))), min(((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), 0u | (_GLF_IDENTITY(~ (~ (1u)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), ~ (1u)))), max(~ (~ (1u)), ~ (~ (1u)))), ~ (~ (1u))))))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))))), (50111u & 0u)), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))), min(((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), 0u | (_GLF_IDENTITY(~ (~ (1u)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), ~ (1u)))), max(~ (~ (1u)), ~ (~ (1u)))), ~ (~ (1u))))))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))))), (50111u & 0u)), clamp(uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))), min(((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), 0u | (_GLF_IDENTITY(~ (~ (1u)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), ~ (1u)))), max(~ (~ (1u)), ~ (~ (1u)))), ~ (~ (1u))))))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))))), (50111u & 0u)), uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))), min(((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), 0u | (_GLF_IDENTITY(~ (~ (1u)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), ~ (1u)))), max(~ (~ (1u)), ~ (~ (1u)))), ~ (~ (1u))))))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))))), (50111u & 0u)), uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))), min(((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), 0u | (_GLF_IDENTITY(~ (~ (1u)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), ~ (1u)))), max(~ (~ (1u)), ~ (~ (1u)))), ~ (~ (1u))))))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))))), (50111u & 0u))))) | (uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))), min(((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), 0u | (_GLF_IDENTITY(~ (~ (1u)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), clamp(~ (1u), ~ (1u), ~ (1u)))), max(~ (~ (1u)), ~ (~ (1u)))), ~ (~ (1u))))))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))))), (50111u & 0u))))))), (true ? uint(uvec2(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) * 1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))), min(((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), 0u | (_GLF_IDENTITY(1u, ~ (~ (1u))))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), uint(uvec2((~ (1u)), 1u)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), max(~ (~ (1u)), _GLF_IDENTITY(~ (~ (1u)), min(~ (~ (1u)), ~ (~ (1u))))))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))))), (50111u & 0u))) : _GLF_FUZZED(subgroup_id)))) | ((_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u))))))))))))) << 0u)), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), clamp(_GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))), uint(1u), uint(1u)))) + 0u), clamp(uint(1u), uint(1u), uint(1u)))) | (uint(1u))))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(1u))))))], uint(2), 4, 64, 4);
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                             else
                              {
                              }
                            }
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true), false))));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
   subgroupAll(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false, false)))))));
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       atomicStore(buf[_GLF_struct_replacement_6.next_virtual_gid], uint(2), 4, 64, 4);
      }
     else
      {
      }
    }
   subgroupAll(true);
  }
}
