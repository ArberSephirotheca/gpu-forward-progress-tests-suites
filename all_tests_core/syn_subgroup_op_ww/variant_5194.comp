#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(((-615.058))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-78.61 - 80.42))), bvec2(true, false))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0))), injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, (_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), _GLF_IDENTITY((subgroup_id), uint(uvec3(_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))), 1u, (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ~ (~ (3u))))))))), (subgroup_id))) ^ 0u) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(workgroup_base))) ^ 0u)), max((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(workgroup_base))) ^ 0u)), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(workgroup_base))) ^ 0u))))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))), _GLF_IDENTITY(max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, clamp(_GLF_IDENTITY((subgroup_id) ^ 0u, ((subgroup_id) ^ 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (subgroup_id) ^ 0u, (subgroup_id) ^ 0u))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) | (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, ((_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) ^ 0u) | (_GLF_IDENTITY((subgroup_id) ^ 0u, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u), (false ? _GLF_FUZZED(subgroup_id) : (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u))))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (false ? _GLF_FUZZED(67268u) : _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, (_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), _GLF_IDENTITY((subgroup_id), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))), 0u ^ (_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))))), 1u, (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, ~ (~ (3u))))))))), (subgroup_id))) ^ 0u) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(workgroup_base))) ^ 0u)), max((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(workgroup_base))) ^ 0u)), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(workgroup_base))) ^ 0u))))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))), _GLF_IDENTITY(max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, (false ? _GLF_FUZZED(num_workgroup) : (subgroup_id) ^ 0u))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, clamp(_GLF_IDENTITY((subgroup_id) ^ 0u, ((subgroup_id) ^ 0u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (subgroup_id) ^ 0u, (subgroup_id) ^ 0u))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((~ workgroup_id))))) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) | (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ 0u)), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, ((_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) ^ 0u) | (_GLF_IDENTITY((subgroup_id) ^ 0u, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u), (false ? _GLF_FUZZED(subgroup_id) : (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u))))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, ((_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) ^ 0u) | (_GLF_IDENTITY((subgroup_id) ^ 0u, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u), (false ? _GLF_FUZZED(subgroup_id) : (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u))))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(subgroup_id) : (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, ((_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) ^ 0u) | (_GLF_IDENTITY((subgroup_id) ^ 0u, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u), (false ? _GLF_FUZZED(subgroup_id) : (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u))))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) + 0u)) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)))) - 0.0)))), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) - 0.0))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) >> 0u), (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(workgroup_base))) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, ~ (_GLF_IDENTITY(~ ((subgroup_id) ^ 0u), (~ ((subgroup_id) ^ 0u)) - 0u)))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, ~ (_GLF_IDENTITY(~ ((subgroup_id) ^ 0u), (~ ((subgroup_id) ^ 0u)) - 0u)))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ ((~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, ~ (_GLF_IDENTITY(~ ((subgroup_id) ^ 0u), (~ ((subgroup_id) ^ 0u)) - 0u)))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0u)))))) | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u), clamp(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u), _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u), _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u)))) | 0u) ^ 0u)), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), 0u | (~ (subgroup_id))))))), _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)), (((subgroup_id))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u) ^ 0u))))) | 0u)))), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), (uint(uint(subgroup_id))) | (uint(uint(subgroup_id))))), max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id))))) ^ 0u) | (_GLF_IDENTITY((subgroup_id) ^ 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u))), (((_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) ^ 0u) | (_GLF_IDENTITY((subgroup_id) ^ 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u)))) | 0u))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(workgroup_base))) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, ((_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) ^ 0u, (_GLF_IDENTITY((subgroup_id) ^ 0u, 0u ^ ((subgroup_id) ^ 0u))) | ((subgroup_id) ^ 0u)), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u), ((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u)) | 0u))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(workgroup_base))) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) | 0u) : _GLF_FUZZED(num_workgroup))), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.2))), injectionSwitch.x))))))))) | _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, ((_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) << 0u)))) ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), 0u + ((subgroup_id))) ^ 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, ((_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) << 0u)))) ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), 0u + ((subgroup_id))) ^ 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) * 1u)), 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(workgroup_base))) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, ((_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) ^ 0u, (_GLF_IDENTITY((subgroup_id) ^ 0u, 0u ^ ((subgroup_id) ^ 0u))) | ((subgroup_id) ^ 0u)), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u), ((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u)) | 0u))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(workgroup_base))) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) | 0u) : _GLF_FUZZED(num_workgroup))), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.2))), injectionSwitch.x))))))))) | _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, ((_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) << 0u)))) ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), 0u + ((subgroup_id))) ^ 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, ((_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) << 0u)))) ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), 0u + ((subgroup_id))) ^ 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) * 1u)), 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(workgroup_base))) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, ((_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) ^ 0u, (_GLF_IDENTITY((subgroup_id) ^ 0u, 0u ^ ((subgroup_id) ^ 0u))) | ((subgroup_id) ^ 0u)), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u), ((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u)) | 0u))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(workgroup_base))) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) | 0u) : _GLF_FUZZED(num_workgroup))), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.2))), injectionSwitch.x))))))))) | _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, ((_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) << 0u)))) ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), 0u + ((subgroup_id))) ^ 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, ((_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) << 0u)))) ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), 0u + ((subgroup_id))) ^ 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) * 1u)), 0u)))), uint(uvec4(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(workgroup_base))) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, ((_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) ^ 0u, (_GLF_IDENTITY((subgroup_id) ^ 0u, 0u ^ ((subgroup_id) ^ 0u))) | ((subgroup_id) ^ 0u)), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u), ((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u)) | 0u))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0u), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (true ? (subgroup_id) : _GLF_FUZZED(workgroup_base))) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) | 0u) : _GLF_FUZZED(num_workgroup))), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.2))), injectionSwitch.x))))))))) | _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, ((_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) << 0u)))) ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), 0u + ((subgroup_id))) ^ 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, ((_GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) << 0u)))) ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), 0u + ((subgroup_id))) ^ 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) * 1u)), 0u)))), 1u, 0u, 0u)))) ^ 0u)) / 1u))))) * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)) ^ 0u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (true ? (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) : _GLF_FUZZED((subgroup_id ++)))) | 0u), 1u, 0u)), 1u * (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) | 0u), 1u, 0u)))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) >> 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), 0u ^ ((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - (1u ^ 1u))) ^ 0u)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), 0u ^ ((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), 0u ^ ((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))), max(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), 0u ^ ((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), 0u ^ ((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))))) + 0u)) | (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), 0u ^ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))), (true ? ((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) : _GLF_FUZZED((-- virtual_gid))))))), min(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), 0u ^ ((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))), (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), 0u ^ ((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))) | (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), 0u ^ ((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) - 0u) ^ 0u)), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (subgroup_id) ^ 0u)), 0u ^ ((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))) | (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), 0u ^ ((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) ^ 0u), max(subgroup_id, subgroup_id))), 0u ^ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))))), (subgroup_id) ^ 0u)), _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), 1u * (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), 1u * (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), 1u * (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), 1u * (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), 1u * (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), 1u * (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))))))))), min((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))))), (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))))))), ~ (~ ((~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), 1u * (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))))), min((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), 1u * (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))))), min((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))))), 1u, 1u, ((0u | 0u) << _GLF_IDENTITY(uint(0u), uint(0u)))), max(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), 1u * (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))))), min((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))))), 1u, 1u, ((0u | 0u) << _GLF_IDENTITY(uint(0u), uint(0u)))), uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), 1u * (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))))), min((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))))), 1u, 1u, ((0u | 0u) << _GLF_IDENTITY(uint(0u), uint(0u))))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), 1u * (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))))), min((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))))), 1u, 1u, ((0u | 0u) << _GLF_IDENTITY(uint(0u), uint(0u)))), max(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), 1u * (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))))), min((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))))), 1u, 1u, ((0u | 0u) << _GLF_IDENTITY(uint(0u), uint(0u)))), uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), 1u * (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))))), min((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))))), 1u, 1u, ((0u | 0u) << _GLF_IDENTITY(uint(0u), uint(0u)))))))) << 0u)), (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), max(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | 0u), (subgroup_id)))))) ^ _GLF_IDENTITY(0u, ~ (~ (0u))))))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) + 0u), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (subgroup_id) : _GLF_FUZZED(virtual_gid))) ^ 0u, ((subgroup_id) ^ 0u) | ((subgroup_id) ^ 0u))) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), uint(uvec3(_GLF_IDENTITY((subgroup_id) ^ 0u, ((subgroup_id) ^ 0u) * 1u), 0u, 1u)))))) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)), clamp(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)), (float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) + 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)), clamp(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)))))), float(_GLF_FUZZED(1.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, ((subgroup_id) ^ 0u) | (_GLF_IDENTITY((subgroup_id) ^ 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ 0u)), ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ 0u))) | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ 0u)))), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, ((subgroup_id) ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) ^ 0u, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : (subgroup_id) ^ 0u)), (_GLF_IDENTITY((subgroup_id) ^ 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0u, min((~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ 0u)), ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ 0u))) | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ 0u)))), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, ((subgroup_id) ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) ^ 0u, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : (subgroup_id) ^ 0u)), (_GLF_IDENTITY((subgroup_id) ^ 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0u, (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ 0u)), ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ 0u))) | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ 0u)))), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, ((subgroup_id) ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) ^ 0u, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : (subgroup_id) ^ 0u)), (_GLF_IDENTITY((subgroup_id) ^ 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0u)))))) * subgroup_size, 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), 1u * ((subgroup_id))) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) | 0u)))), 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(20546u, 23264u, 72606u, 156306u)) : uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u, 0u)))), (false ? _GLF_FUZZED(workgroup_size) : uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0))), 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(20546u, 23264u, 72606u, _GLF_IDENTITY(156306u, (156306u) | 0u))) : uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 0u, 0u)))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, _GLF_IDENTITY(((subgroup_id) ^ 0u) | (_GLF_IDENTITY((subgroup_id) ^ 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u))), 0u + (((subgroup_id) ^ 0u) | (_GLF_IDENTITY((subgroup_id) ^ 0u, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u), max((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u), 0u + ((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u))))))))))))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), ((_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) / 1u), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))), (subgroup_id) ^ 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) ^ 0u)), (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, _GLF_IDENTITY(((subgroup_id) ^ 0u) | (_GLF_IDENTITY((subgroup_id) ^ 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u))), 0u + (((subgroup_id) ^ 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))) | (subgroup_id))) ^ 0u, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u), max((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u), 0u + ((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u), max((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u), max((false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u))), 0u + ((_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) ^ 0u) / 1u))))))) | 0u))))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ _GLF_IDENTITY(0u, (0u) / 1u))) * subgroup_size))) << (0u | 0u)) + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | (4)), 4)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, int(ivec3(64, (1 & _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75863)))), max((1) | (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-75863)), ((true ? 1 : _GLF_FUZZED(-75863))) + 0))), (1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75863)))))))), _GLF_IDENTITY(0, (0) >> 0)))), 4);
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
  }
}
