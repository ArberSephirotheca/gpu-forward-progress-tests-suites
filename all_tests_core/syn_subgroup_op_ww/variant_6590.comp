#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_19 {
 mat3x4 _f0;
} ;

struct _GLF_struct_18 {
 ivec2 _f0;
} ;

struct _GLF_struct_20 {
 float _f0;
 uvec4 _f1;
 mat2x3 _f2;
 vec3 _f3;
 mat3 _f4;
 _GLF_struct_18 _f5;
 _GLF_struct_19 _f6;
} ;

struct _GLF_struct_21 {
 _GLF_struct_20 _f0;
 bvec4 _f1;
 uint workgroup_base;
} ;

struct _GLF_struct_17 {
 uint workgroup_id;
 float _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_14 {
 bvec2 _f0;
 mat3x2 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_13 {
 bvec2 _f0;
 mat3x2 _f1;
 mat3x4 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_12 {
 mat2x4 _f0;
} ;

struct _GLF_struct_15 {
 _GLF_struct_12 _f0;
 vec2 _f1;
 uvec3 _f2;
 _GLF_struct_13 _f3;
 _GLF_struct_14 _f4;
} ;

struct _GLF_struct_10 {
 vec2 _f0;
 vec2 _f1;
 mat3 _f2;
 vec4 _f3;
 uvec3 _f4;
 mat3x4 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_9 {
 mat4x3 _f0;
 mat3x4 _f1;
 ivec4 _f2;
 float _f3;
 int _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_8 {
 float _f0;
 bool _f1;
 bvec2 _f2;
 ivec3 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_7 {
 mat3x2 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 uvec2 _f1;
 mat4x2 _f2;
 mat4x2 _f3;
 bvec4 _f4;
 uint _f5;
} ;

struct _GLF_struct_11 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
 mat4x2 _f4;
 _GLF_struct_10 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_4 {
 uvec3 _f0;
 mat3x4 _f1;
 ivec4 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_3 {
 uvec2 _f0;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 ivec3 _f1;
 _GLF_struct_4 _f2;
} ;

struct _GLF_struct_16 {
 _GLF_struct_5 _f0;
 _GLF_struct_11 _f1;
 uint subgroup_local_id;
 _GLF_struct_15 _f2;
} ;

struct _GLF_struct_0 {
 uint subgroup_id;
 uvec2 _f0;
 vec2 _f1;
 mat2 _f2;
 float _f3;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_2 {
 mat4x2 _f0;
 vec2 _f1;
 _GLF_struct_1 _f2;
 vec2 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(mat4x2(1.0), vec2(1.0), _GLF_struct_1(mat3x2(1.0), _GLF_struct_0(gl_SubgroupID, uvec2(1u), vec2(1.0), mat2(1.0), 1.0)), vec2(1.0));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)))) / _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(186.660, 890.896)) : vec2(1.0, 1.0))), vec2(1.0, 1.0)))) / vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), mix(vec2(_GLF_FUZZED((-7.7 + 402.624)), (_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(186.660, 890.896)) : vec2(1.0, 1.0))), vec2(1.0, 1.0)))) / vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)))[1]), vec2((_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(186.660, 890.896)) : vec2(1.0, 1.0))), vec2(1.0, 1.0)))) / vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)))[0], _GLF_FUZZED((253.180 - 7.0))), bvec2(true, false)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))), _GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), false, true, true)))))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = (((1 ^ 0) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --))) / 1))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
        }
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_struct_5(_GLF_struct_3(_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) | (uvec2(1u)))), ivec3(_GLF_IDENTITY(1, (1) | (1))), _GLF_struct_4(uvec3(1u), mat3x4(1.0), ivec4(1), mat3(1.0))), _GLF_struct_11(_GLF_struct_6(mat2x4(1.0), uvec2(1u), mat4x2(1.0), mat4x2(1.0), bvec4(true), 1u), _GLF_struct_7(mat3x2(1.0), mat4(1.0)), _GLF_struct_8(1.0, _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))), false))), bvec2(_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) / 1)))) >> _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-25203) : 0)))), ivec3(0, 0, 0) ^ (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (0) + 0), (false ? _GLF_FUZZED(-25203) : 0)))))), (true ? ivec3(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-25203) : 0)))) : _GLF_FUZZED(ivec3(66289, 6100, 17271)))), mat3(1.0)), _GLF_struct_9(mat4x3(1.0), mat3x4(1.0), ivec4(1), 1.0, 1, mat4x3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, determinant(mat2(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (_GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), min(1.0, 1.0)))) - 0.0))))))), float(_GLF_FUZZED(2406.3811)), bool(false))), 1.0)))), mat4x2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(1.9)), float(mat4x2((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(1.9)), tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))))), 1.0, 0.0))) : _GLF_FUZZED(9.4))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-5.9) : 1.0), ((false ? _GLF_FUZZED(-5.9) : 1.0)) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-5.9) : 1.0), ((false ? _GLF_FUZZED(-5.9) : 1.0)) / 1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-5.9) : 1.0), ((false ? _GLF_FUZZED(-5.9) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) / 1.0), _GLF_IDENTITY((false ? _GLF_FUZZED(-5.9) : 1.0), ((false ? _GLF_FUZZED(-5.9) : 1.0)) / 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-5.9) : 1.0, (false ? _GLF_FUZZED(-5.9) : 1.0) + 0.0)), ((false ? _GLF_FUZZED(-5.9) : 1.0)) / 1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-27.54)), bool(false))), 1.0, 1.0, 1.0), mat2(mat2x4(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, exp(0.0) * (1.0))), float(_GLF_FUZZED(-27.54)), bool(false))), 1.0, 1.0, 1.0))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-27.54)), bool(false))), 1.0, 1.0, 1.0), mat2(mat2x4(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, exp(0.0) * (1.0))), float(_GLF_FUZZED(-27.54)), bool(false))), 1.0, 1.0, 1.0))))), float(vec3(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-27.54)), bool(false))), 1.0, 1.0, 1.0), mat2(mat2x4(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, exp(0.0) * (1.0))), float(_GLF_FUZZED(-27.54)), bool(false))), 1.0, 1.0, 1.0))))), max(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-27.54)), bool(false))), 1.0, 1.0, 1.0), mat2(mat2x4(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, exp(0.0) * (1.0))), float(_GLF_FUZZED(-27.54)), bool(false))), 1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-27.54)), bool(false))), 1.0, 1.0, 1.0), mat2(mat2x4(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, exp(0.0) * (1.0))), float(_GLF_FUZZED(-27.54)), bool(false))), 1.0, 1.0, 1.0))))))), 1.0, 0.0))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-27.54)), bool(false))), 1.0, 1.0, 1.0), mat2(mat2x4(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, exp(0.0) * (1.0))), float(_GLF_FUZZED(-27.54)), bool(false))), 1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-27.54)), bool(false))), 1.0, 1.0, 1.0), mat2(mat2x4(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, exp(0.0) * (1.0))), float(_GLF_FUZZED(-27.54)), bool(false))), 1.0, 1.0, 1.0)))))))), float(mat2x3(1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), (false ? _GLF_FUZZED(-5.9) : 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-5.9, max(-5.9, _GLF_IDENTITY(-5.9, min(-5.9, -5.9)))), mix(float(_GLF_FUZZED(float(false))), float(_GLF_IDENTITY(-5.9, max(-5.9, _GLF_IDENTITY(-5.9, min(-5.9, -5.9))))), bool(true)))) : 1.0), max((false ? _GLF_FUZZED(-5.9) : 1.0), (false ? _GLF_FUZZED(-5.9) : 1.0)))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-1287.5657)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-1287.5657, min(-1287.5657, -1287.5657)))), float(vec4(_GLF_IDENTITY(float(_GLF_FUZZED(-1287.5657)), (float(_GLF_FUZZED(-1287.5657))) - 0.0), 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-1287.5657)), float(_GLF_FUZZED(-1287.5657)))), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-5.9) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(dot(vec2(-676.151, -87.42), injectionSwitch)))), (false ? _GLF_FUZZED(875.456) : false ? _GLF_FUZZED(-5.9) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(dot(vec2(-676.151, -87.42), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(((uvec4(79678u, 46116u, 109585u, 175795u) == uvec4(101450u, 17117u, 72672u, 176154u)) ? injectionSwitch : vec2(873.109, -3.7)))))))))))))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-5.9), 0.0 + (_GLF_FUZZED(-5.9))) : 1.0), mix(float((false ? _GLF_FUZZED(-5.9) : _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-3.5 + 4587.2458))), bool(false))))))), float(_GLF_FUZZED(vec2(-3.9, 37.23).s)), bool(false)))), mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-5.9), 0.0 + (_GLF_FUZZED(-5.9))) : 1.0), mix(float((false ? _GLF_FUZZED(-5.9) : _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-3.5 + 4587.2458))), bool(false))))))), float(_GLF_FUZZED(vec2(-3.9, 37.23).s)), bool(false))))), float(_GLF_FUZZED(601.635)), bool(false)))))))), _GLF_struct_10(vec2(1.0), vec2(1.0), mat3(1.0), _GLF_IDENTITY(vec4(1.0), vec4(_GLF_IDENTITY(mat2x4(vec4(1.0), 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2x4(vec4(1.0), 1.0, 0.0, 0.0, 1.0)))))), uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(105026u) : 1u))), mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), ivec4(1)), mat2x4(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), gl_SubgroupInvocationID, _GLF_struct_15(_GLF_struct_12(mat2x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0), float(mat4x2(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (1.0) - 0.0), 1.0, 1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, sqrt(1.0))))))), vec2(1.0), uvec3(1u), _GLF_struct_13(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), true)))))), mat3x2(1.0), mat3x4(1.0), mat3x4(1.0)), _GLF_struct_14(bvec2(true), mat3x2(1.0), mat4(1.0))));
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(gl_WorkGroupID.x, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), mix(float(_GLF_FUZZED(-474.227)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), max(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0)))), bool(true))), 1.0)), mat2x3(_GLF_IDENTITY(1.0, min(1.0, 1.0))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0) != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) * 1))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(_GLF_struct_20(1.0, uvec4(1u), mat2x3(1.0), vec3(1.0), mat3(1.0), _GLF_struct_18(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(int(int(1)), (int(int(1))) >> 0)))), (true ? int(int(1)) : _GLF_FUZZED(11179)))))), (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(int(int(1)), (int(int(1))) >> 0)))), (true ? int(int(1)) : _GLF_FUZZED(11179))))))) | (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(int(int(1)), (int(int(1))) >> 0)))), (true ? int(_GLF_IDENTITY(int(1), min(int(1), int(1)))) : _GLF_FUZZED(11179)))))))))), _GLF_struct_19(mat3x4(1.0))), bvec4(true), _GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_17.workgroup_id, uint(_GLF_IDENTITY(uvec3(workgroup_size * _GLF_struct_replacement_17.workgroup_id, (0u | 0u), 1u), (uvec3(workgroup_size * _GLF_struct_replacement_17.workgroup_id, (0u | 0u), 1u)) >> uvec3(0u, 0u, 0u)))));
 uint virtual_gid = _GLF_struct_replacement_21.workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f1.subgroup_id, (false ? _GLF_FUZZED(subgroup_size) : _GLF_struct_replacement_2._f2._f1.subgroup_id)) * subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_16.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_16.subgroup_local_id, (_GLF_struct_replacement_16.subgroup_local_id) << 0u)) ^ 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_struct_replacement_21.workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), 0u | (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), clamp(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u), uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)), 1u, 0u, 0u)), 1u * (uint(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)), 1u, 0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), uint(uvec4(_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), 0u, 0u, 0u))))), _GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), (0u & 187070u) ^ (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(clamp(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, 0u)), (false ? _GLF_FUZZED(uvec3(26055u, 26294u, 13114u)) : clamp(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u | (_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec4(_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 0u, 1u)))))))) | (_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, 0u)))), (true ? _GLF_IDENTITY(clamp(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u)), (_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x))), (_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0u, ~ (~ (0u))))), 0u), uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) << 0u)) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, 0u)), uvec3(uvec4(clamp(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f1.subgroup_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f1.subgroup_id, (_GLF_struct_replacement_2._f2._f1.subgroup_id) + 0u), _GLF_struct_replacement_2._f2._f1.subgroup_id, _GLF_struct_replacement_2._f2._f1.subgroup_id)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((subgroup_size) | (subgroup_size), clamp((subgroup_size) | (subgroup_size), (subgroup_size) | (subgroup_size), (subgroup_size) | (subgroup_size))), 1u)), uint(uvec2(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((subgroup_size) | (subgroup_size), clamp((subgroup_size) | (subgroup_size), (subgroup_size) | (subgroup_size), (subgroup_size) | (subgroup_size))), 1u)), uint(uint(uint(uvec2(_GLF_IDENTITY((subgroup_size) | (subgroup_size), clamp((subgroup_size) | (subgroup_size), (subgroup_size) | (subgroup_size), (subgroup_size) | (subgroup_size))), 1u))))), 0u))))))))) >> 0u)) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u))))), 0u ^ ((_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f1.subgroup_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f1.subgroup_id, (_GLF_struct_replacement_2._f2._f1.subgroup_id) + 0u), _GLF_struct_replacement_2._f2._f1.subgroup_id, _GLF_struct_replacement_2._f2._f1.subgroup_id)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (subgroup_size), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((subgroup_size) | (subgroup_size), clamp((subgroup_size) | (subgroup_size), (subgroup_size) | (subgroup_size), (subgroup_size) | (subgroup_size))), 1u)), uint(uvec2(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((subgroup_size) | (subgroup_size), clamp((subgroup_size) | (subgroup_size), (subgroup_size) | (subgroup_size), (subgroup_size) | (subgroup_size))), 1u)), uint(uint(uint(uvec2(_GLF_IDENTITY((subgroup_size) | (subgroup_size), clamp((subgroup_size) | (subgroup_size), (subgroup_size) | (subgroup_size), (subgroup_size) | (subgroup_size))), 1u))))), 0u))))))))) >> 0u)) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u)))))))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))) | 0u)))))) >> 0u)) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-72.10)), float(injectionSwitch.x), bool(true))), injectionSwitch.x))))), (_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) << (0u | 0u)))), 0u, 0u), uvec3(_GLF_IDENTITY(_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))), ((_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))) | ((_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_struct_replacement_2._f2._f1.subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), clamp(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), _GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), 0u ^ (uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))), uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))))) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, 0u)), 0u))) : _GLF_FUZZED(_GLF_IDENTITY(((virtual_gid % num_workgroup) * uvec3(130551u, 100220u, 172695u)), (((virtual_gid % num_workgroup) * uvec3(130551u, 100220u, 172695u))) / uvec3(1u, 1u, 1u)))))))) + ((_GLF_struct_replacement_16.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, clamp(1, 1, 1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) >> 0)) | (_GLF_IDENTITY(1, (1) / 1))), 1 * (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), max(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), ~ (~ (_GLF_IDENTITY(1, 1 * (1)))))))))) % subgroup_size);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false))))))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.8) : injectionSwitch.x)))) > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     do
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
         for(int _injected_loop_counter = (1 ^ _GLF_IDENTITY(0, (0) ^ 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), false, false, true)))))))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(663.832)), float(injectionSwitch.y), bool(true)))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > injectionSwitch.y)))))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) && true)) || _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, false, false)), _GLF_IDENTITY((bool(bvec4((false), true, false, false))), ((bool(bvec4((false), true, false, false)))) || false) || false)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))), true))), ! (! (_GLF_IDENTITY(false || _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), true, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), true, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), true, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false)), false, true)))), bool(bvec4(false || _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), true, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true, false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(7.0, -4.2)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), mix(vec2(_GLF_FUZZED(-74.95), _GLF_FUZZED(458.388)), vec2((false ? _GLF_FUZZED(vec2(7.0, -4.2)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))[0], (false ? _GLF_FUZZED(vec2(7.0, -4.2)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))[1]), bvec2(true, true))))), mix(vec2(_GLF_FUZZED((1625.6991 / -91.05)), _GLF_FUZZED((mat3(548.112, 4.5, 983.505, -851.338, -19.49, 4060.7040, -4568.8663, 3.6, -482.283) * vec3(4.1, -318.538, 496.145)).s)), vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.0, -4.2)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))))[0], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec2(7.0, -4.2)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y))))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) - 0), int(_GLF_ONE(1.0, injectionSwitch.y))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (_GLF_IDENTITY(0, 0 | (0))) ^ 0), ! (! (_injected_loop_counter > 0)))); _GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((_injected_loop_counter --) | 0, 0 ^ ((_injected_loop_counter --) | 0))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = ((_GLF_IDENTITY(1, 0 ^ (1)) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(atomicAdd(_injected_loop_counter, 88710)) : _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), _GLF_IDENTITY(max(int(1), int(1)), (true ? max(int(1), int(1)) : _GLF_FUZZED(_injected_loop_counter))))) / 1))), (true ? _GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(atomicAdd(_injected_loop_counter, 88710)) : _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), max(int(1), int(1)))) / 1), clamp(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), max(int(1), int(1)))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), max(int(1), int(1)))) / 1), (_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), max(int(1), int(1)))) / 1)) ^ 0), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), max(int(1), int(1)))) / 1))))) : _GLF_FUZZED(62434))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(_GLF_IDENTITY(int(1), (int(1)) | (int(_GLF_IDENTITY(1, (1) ^ 0)))), int(1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_16.subgroup_local_id + 1, ~ (~ (_GLF_struct_replacement_16.subgroup_local_id + 1))), (_GLF_IDENTITY(_GLF_struct_replacement_16.subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_16.subgroup_local_id + 1, min(_GLF_struct_replacement_16.subgroup_local_id + 1, _GLF_IDENTITY(_GLF_struct_replacement_16.subgroup_local_id + 1, 0u ^ (_GLF_struct_replacement_16.subgroup_local_id + 1)))), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_struct_replacement_16.subgroup_local_id + 1)))))) | (_GLF_IDENTITY(_GLF_struct_replacement_16.subgroup_local_id + 1, ~ (~ (_GLF_struct_replacement_16.subgroup_local_id + 1))))) < _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_16.subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_16.subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_16.subgroup_local_id + 1, (_GLF_struct_replacement_16.subgroup_local_id + 1) | 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_16.subgroup_local_id + 1, ~ (~ (_GLF_struct_replacement_16.subgroup_local_id + 1)))), 0u ^ ((_GLF_IDENTITY(_GLF_struct_replacement_16.subgroup_local_id + 1, ~ (~ (_GLF_struct_replacement_16.subgroup_local_id + 1)))))) | (_GLF_IDENTITY(_GLF_struct_replacement_16.subgroup_local_id + 1, _GLF_IDENTITY(~ (~ (_GLF_struct_replacement_16.subgroup_local_id + 1)), (false ? _GLF_FUZZED(2872u) : ~ (~ (_GLF_struct_replacement_16.subgroup_local_id + 1))))))) < subgroup_size, true, false, false))))
      {
       do
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) - 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(205.802)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.2), _GLF_FUZZED(1517.0412)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y : _GLF_FUZZED(tanh(-1.7))))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   do
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(! (! (! ((injectionSwitch.x > injectionSwitch.y))))), (bool(! (! (! ((injectionSwitch.x > injectionSwitch.y)))))) || false))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) || false)));
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), _GLF_IDENTITY(false, true && (false)), true), bvec3(bvec3(bvec3(! (false), false, true)))))))))))));
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
              barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _GLF_IDENTITY(_injected_loop_counter ++, (true ? _injected_loop_counter ++ : _GLF_FUZZED(24625))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), bool(bvec3(! (! (_GLF_IDENTITY(false, true && (false)))), false, true))), true, false, false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))) || false) && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), bool(bvec4(! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))))), true, true, _GLF_IDENTITY(false, (false) && true))))))))), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, ! (! (true)))))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), false, false))))), false || (_GLF_IDENTITY(false, true && (false)))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec2(true && (false), true))))))), false || (_GLF_IDENTITY(false, true && (false))))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), true && ((_GLF_IDENTITY(false, true && (false))))))), false || (_GLF_IDENTITY(false, true && (false))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false))))))))), false || (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && true)), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))))))), _GLF_IDENTITY(bool(bvec3((! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), true && ((_GLF_IDENTITY(false, true && (false))))))), false || (_GLF_IDENTITY(false, true && (false))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false))))))))), false || (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && true)), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))))))), false, false)), (bool(bvec3((! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), true && ((_GLF_IDENTITY(false, true && (false))))))), false || (_GLF_IDENTITY(false, true && (false))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false))))))))), false || (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && true)), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))))))), false, false))) && true)))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), true, false, true)), true && (bool(bvec4(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), true, false, true))))))))), false || (_GLF_IDENTITY(false, true && (false))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), true, false, true)), _GLF_IDENTITY(true, false || (true)) && (bool(bvec4(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), true, false, true))))))))), false || (_GLF_IDENTITY(false, true && (false))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true && (false), (true && (false)) && true)))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), false || (bool(bvec3(false, false, true))))) || (_GLF_IDENTITY(false, true && (false)))))))))))), ! (! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false)), true && (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), ! (! (! (! (_GLF_IDENTITY(false, true && (false)))))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || false))), false || (_GLF_IDENTITY(false, true && (false))))))))))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), bool(bvec2((false), false))), true, true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(_GLF_IDENTITY((false), bool(bvec2((false), false))), true, true, true))))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, false)))))) && true)) && (false))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))) || ((_GLF_IDENTITY(false, true && (false))))))), bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), false || ((_GLF_IDENTITY(false, true && (false)))))))))))))), true && _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))), bool(bool(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true && (false))))), false || (_GLF_IDENTITY(false, true && (false)))))))))))), ! (! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (false))), bool(bvec4(bool(! (! (false))), false, true, false)))), ! (! (bool(_GLF_IDENTITY(bool(! (! (false))), bool(bvec4(bool(! (! (false))), false, true, false))))))))))), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))) || false))))))), _GLF_IDENTITY(true && _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))), false, true), bvec3(bvec3(bvec3(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))), false, true)))), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))), false, true), bvec3(bvec3(bvec3(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))), false, true)))), true)))), false, false)))), bool(bvec3(true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(false, ! (! (false))), false)))))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), bool(bvec2((false), false))), true, true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(_GLF_IDENTITY((false), bool(bvec2((false), false))), true, true, true))))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, false)))))) && true)) && (false))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))) || ((_GLF_IDENTITY(false, true && (false))))))), bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), false || ((_GLF_IDENTITY(false, true && (false)))))))))))))), true && _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))), bool(bool(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true && (false))))), false || (_GLF_IDENTITY(false, true && (false)))))))))))), ! (! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (false))), bool(bvec4(bool(! (! (false))), false, true, false)))), ! (! (bool(_GLF_IDENTITY(bool(! (! (false))), bool(bvec4(bool(! (! (false))), false, true, false))))))))))), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))) || false))))))), _GLF_IDENTITY(true && _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))), false, true), bvec3(bvec3(bvec3(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))), false, true)))), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))), false, true), bvec3(bvec3(bvec3(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))), false, true)))), true)))), false, false)))), bool(bvec3(true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(false, ! (! (false))), false))))))))))), ! (! (! ((! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), bool(bvec2((false), false))), true, true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(_GLF_IDENTITY((false), bool(bvec2((false), false))), true, true, true))))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, false)))))) && true)) && (false))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))) || ((_GLF_IDENTITY(false, true && (false))))))), bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), false || ((_GLF_IDENTITY(false, true && (false)))))))))))))), true && _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))), bool(bool(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true && (false))))), false || (_GLF_IDENTITY(false, true && (false)))))))))))), ! (! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (false))), bool(bvec4(bool(! (! (false))), false, true, false)))), ! (! (bool(_GLF_IDENTITY(bool(! (! (false))), bool(bvec4(bool(! (! (false))), false, true, false))))))))))), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))) || false))))))), _GLF_IDENTITY(true && _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))), false, true), bvec3(bvec3(bvec3(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))), false, true)))), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))), false, true), bvec3(bvec3(bvec3(((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))), false, true)))), true)))), false, false)))), bool(bvec3(true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))), false || (_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(false, ! (! (false))), false)))))))))))))))))), false, true, false)))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, (_GLF_IDENTITY((true) && true, true && ((true) && true))) && true))))
                {
                 for(int _injected_loop_counter = (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), 0 + (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), (false ? _GLF_FUZZED(-81761) : _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), (0 >> _GLF_IDENTITY(int(6), int(6))) / 1)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                }
               else
                {
                }
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), float(vec3((injectionSwitch.y), 1.0, 0.0))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec3(bool(bvec3(false, false, false)), false, false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), clamp(_GLF_IDENTITY(int(4), (int(4)) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), (_GLF_IDENTITY(int(4), (int(4)) ^ 0)) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) + 0)) ^ 0), int(3))), int(3)))), _GLF_IDENTITY(int(4), (int(4)) ^ 0)))), 1 * (int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) * int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(int(4), max(int(4), int(4)))) ^ 0))))));
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((((0 | 1) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 + (int(4))))) >> _GLF_IDENTITY(int(4), int(4))), 0 | (_GLF_IDENTITY((((0 | 1) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 + (int(4))))) >> _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY((((0 | 1) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 + (int(4))))) >> _GLF_IDENTITY(int(4), int(4))), max((((0 | 1) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 + (int(4))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | 0), int(4))), (((0 | 1) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 + (int(4))))) >> _GLF_IDENTITY(int(4), int(4)))))) / 1)))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     barrier();
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         barrier();
                        }
                       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), (! (_GLF_WRAPPED_LOOP(false))) && true))));
                      }
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)))))))))
                      barrier();
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
              barrier();
            }
           do
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
                {
                }
               else
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0)), vec2(mat4x3(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0)), 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))).x, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))) > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) && true))
          barrier();
         subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && _GLF_IDENTITY(true, bool(bvec3(true, true, false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), (bool((false))) && true))) || false), (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), abs(1.0))), _GLF_IDENTITY(max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), abs(1.0))), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), abs(1.0)))), (max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), abs(1.0))), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), abs(1.0))))) + sin(0.0))))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), abs(1.0))), _GLF_IDENTITY(max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), abs(1.0))), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), abs(1.0)))), (max(float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), abs(1.0))), float(mat2(injectionSwitch.y, 0.0, sqrt(0.0), abs(1.0))))) + sin(0.0))))))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(223.946) : injectionSwitch.y))))))
                    barrier();
                   for(int _injected_loop_counter = ((_GLF_IDENTITY((((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(_GLF_IDENTITY(int((((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), (int((((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))) << 0)), int(ivec2(int(_GLF_IDENTITY(int(((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) | 0)) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, 0 + (1)), 1)), 0 ^ (int(ivec2(_GLF_IDENTITY(1, 0 + (1)), 1)))))))) >> _GLF_IDENTITY(int(1), int(1))), (int((((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), max(int(4), int(4)))) | (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))) << 0)), 1))))) | 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) >> 0, 0 ^ (_GLF_IDENTITY((_injected_loop_counter) >> 0, min((_injected_loop_counter) >> 0, (_injected_loop_counter) >> 0))))))) != (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), ~ (~ (int(4)))), int(4), int(4)))))); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, false)))))
                      {
                       if(_GLF_DEAD(false))
                        {
                         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 0)), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 0)))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_injected_loop_counter ++))) >> 0))
                          {
                           barrier();
                          }
                        }
                       barrier();
                      }
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   do
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true)))))))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), false || (false || (true))))))
                              {
                               barrier();
                              }
                             else
                              {
                              }
                            }
                           else
                            {
                            }
                          }
                         do
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                            {
                             barrier();
                            }
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)) || (false))))
                            barrier();
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           else
                            {
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             barrier();
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                          }
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 if(_GLF_DEAD(false))
                                  barrier();
                                }
                               else
                                {
                                }
                              }
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 0.0, 1.0, log(1.0), 1.0, abs(0.0), 0.0, sqrt(0.0)))), float(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-18.27))), 0.0, 0.0, cos(0.0), 0.0)))))));
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! _GLF_IDENTITY((! ((! (! (! (false)))))), bool(bvec2((! ((! (! (! (false)))))), true))))))))), true, false, false))))))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                    }
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                }
               barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false)))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
              barrier();
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) + (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) | (0)), _GLF_IDENTITY(0, (0) | (0)))) & 85242))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) + (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 + (0)))))) | (0)))) & 85242))), 0u | (uint(_GLF_IDENTITY(2, (2) + (_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, min(0, 0)))), 0)), min(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, (0) | (0)))) & 85242)))))) * 1u), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(4, int(int(4))), 1)), 0 ^ (_GLF_IDENTITY(int(ivec2(4, 1)), (int(ivec2(4, 1))) - 0)))));
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
          barrier();
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           subgroupAll(_GLF_IDENTITY(true, false || (true)));
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           else
            {
            }
          }
         else
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y))))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(true && _GLF_IDENTITY((false || (false)), ! (! (_GLF_IDENTITY((false || (false)), bool(bvec3((false || (false)), false, true)))))), _GLF_IDENTITY(bool(bool(true && (false || (false)))), ! (! (_GLF_IDENTITY(bool(bool(true && (false || (false)))), (bool(bool(true && (false || _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), false))))))))) && true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(true && _GLF_IDENTITY((false || (false)), ! (! (_GLF_IDENTITY((false || (false)), bool(bvec3((false || (false)), false, true)))))), _GLF_IDENTITY(bool(bool(true && (false || (false)))), ! (! (_GLF_IDENTITY(bool(bool(true && (false || (false)))), (bool(bool(true && (false || _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), false))))))))) && true)))))), true && (_GLF_IDENTITY(false || (false), _GLF_IDENTITY(true && _GLF_IDENTITY((false || (false)), ! (! (_GLF_IDENTITY((false || (false)), bool(bvec3((false || (false)), false, true)))))), _GLF_IDENTITY(bool(bool(true && (false || (false)))), ! (! (_GLF_IDENTITY(bool(bool(true && (false || (false)))), (bool(bool(true && (false || _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), false))))))))) && true))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(true && _GLF_IDENTITY((false || (false)), ! (! (_GLF_IDENTITY((false || (false)), bool(bvec3((false || (false)), false, true)))))), _GLF_IDENTITY(bool(bool(true && (false || (false)))), ! (! (_GLF_IDENTITY(bool(bool(true && (false || (false)))), (bool(bool(true && (false || _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), false))))))))) && true)))))), true && (_GLF_IDENTITY(false || (false), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || (false)), ! (! (! (false || (false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false || (false)), bool(bvec3((false || (false)), false, true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((false || (false)), bool(bvec3((false || (false)), false, true)))), ! (! (! (_GLF_IDENTITY((false || (false)), bool(bvec3((false || (false)), false, true))))))))))), _GLF_IDENTITY(bool(bool(true && (false || (false)))), ! (! (_GLF_IDENTITY(bool(bool(true && (_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), false || (false || (false)))))))), (bool(bool(true && (false || _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), false))))))))) && true)))))))))) && true))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))), false, false))))))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
                      barrier();
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), true))) || false)), ! (! (false)))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))) * (injectionSwitch), vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(intBitsToFloat(55008)) : 1.0))) * (injectionSwitch), 1.0, 0.0), (mat2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(intBitsToFloat(55008)) : 1.0))) * (injectionSwitch), 1.0, 0.0)) * mat2(1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && (true), ! (! (true && (true)))), false, _GLF_IDENTITY(true, (true) && true)), bvec3(bvec3(bvec3(_GLF_IDENTITY(true && (true), ! (! (true && (true)))), false, _GLF_IDENTITY(true, (true) && true))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && (true), ! (! (true && (true)))), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true && (true), ! (! (true && (true)))), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(true && (true), ! (! (true && (true)))), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)), false)))))))))))) ? mat2(mat2(_GLF_IDENTITY(1.0, float(float(1.0)))) * (injectionSwitch), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.9)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), 0.0))))))) + abs(0.0))) : _GLF_FUZZED(mat2(1572.9833, 1.4, 6227.0173, 7.6)), mat2(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && (true), ! (! (true && (true)))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true && (true), ! (! (true && (true)))), false, true), true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true && (true), ! (! (true && (true)))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true && (true), ! (! (true && (true)))), false, true)))))))))) ? mat2(mat2(1.0) * (injectionSwitch), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0), mat3(mat4x3(mat3(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))))) + abs(0.0))) : _GLF_FUZZED(mat2(1572.9833, 1.4, 6227.0173, 7.6)), transpose(transpose(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && (true), ! (_GLF_IDENTITY(! (true && (true)), false || (_GLF_IDENTITY(! (true && (true)), ! (! (_GLF_IDENTITY(! (true && (true)), bool(bool(! (true && (true)))))))))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && (true), ! (! (true && (true)))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true && (true), ! (! (true && (true)))), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(true && (true), ! (! (true && (true)))), false, true)), false))))))))))) ? mat2(mat2(1.0) * (injectionSwitch), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat3(mat4x3(mat3(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))))) + abs(0.0))) : _GLF_FUZZED(mat2(1572.9833, _GLF_IDENTITY(1.4, min(1.4, 1.4)), 6227.0173, 7.6))))))))))))).x > injectionSwitch.y), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9026.3362) : injectionSwitch.x)) > injectionSwitch.y)), ! (! (false || (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9026.3362) : injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9026.3362) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-9026.3362, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(-9026.3362, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, false || (true)))), ! (! (bool(bool(_GLF_IDENTITY(true, false || (true)))))))) ? -9026.3362 : _GLF_FUZZED(8.8))), 1.0, 1.0, 0.0, 0.0, 1.0)), (float(mat2x3(_GLF_IDENTITY(-9026.3362, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) ? -9026.3362 : _GLF_IDENTITY(_GLF_FUZZED(8.8), mix(float(_GLF_FUZZED((-16.92 / 6620.5014))), float(_GLF_FUZZED(8.8)), bool(true))))), 1.0, 1.0, 0.0, 0.0, 1.0))) * 1.0))) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x3(mat2(1.0) * (injectionSwitch), 0.0, sin(0.0), 1.0, sin(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0)), 1.0 * (float(mat2x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))))) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(0.0, 0.0, tan(0.0), 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec4(0.0, 0.0, tan(0.0), 1.0)))), 1.0, cos(0.0), 0.0, 0.0, 1.0)))).x, _GLF_IDENTITY(float(float(false ? _GLF_FUZZED(_GLF_IDENTITY(-9026.3362, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(-9026.3362, (true ? -9026.3362 : _GLF_FUZZED(8.8))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0)), _GLF_IDENTITY((float(mat2x3(_GLF_IDENTITY(-9026.3362, (_GLF_IDENTITY(true ? -9026.3362 : _GLF_FUZZED(8.8), float(_GLF_IDENTITY(vec2(true ? -9026.3362 : _GLF_FUZZED(8.8), sqrt(exp(0.0))), max(vec2(true ? -9026.3362 : _GLF_FUZZED(8.8), sqrt(exp(0.0))), vec2(true ? -9026.3362 : _GLF_FUZZED(8.8), sqrt(exp(0.0))))))))), 1.0, 1.0, 0.0, 0.0, 1.0))) * 1.0, clamp((float(mat2x3(_GLF_IDENTITY(-9026.3362, (_GLF_IDENTITY(true ? -9026.3362 : _GLF_FUZZED(8.8), float(_GLF_IDENTITY(vec2(true ? -9026.3362 : _GLF_FUZZED(8.8), sqrt(exp(0.0))), max(vec2(true ? -9026.3362 : _GLF_FUZZED(8.8), sqrt(exp(0.0))), vec2(true ? -9026.3362 : _GLF_FUZZED(8.8), sqrt(exp(0.0))))))))), 1.0, 1.0, 0.0, 0.0, 1.0))) * 1.0, (float(mat2x3(_GLF_IDENTITY(-9026.3362, (_GLF_IDENTITY(true ? -9026.3362 : _GLF_FUZZED(8.8), float(_GLF_IDENTITY(vec2(true ? -9026.3362 : _GLF_FUZZED(8.8), sqrt(exp(0.0))), max(vec2(true ? -9026.3362 : _GLF_FUZZED(8.8), sqrt(exp(0.0))), vec2(true ? -9026.3362 : _GLF_FUZZED(8.8), sqrt(exp(0.0))))))))), 1.0, 1.0, 0.0, 0.0, 1.0))) * 1.0, (float(mat2x3(_GLF_IDENTITY(-9026.3362, (_GLF_IDENTITY(true ? -9026.3362 : _GLF_FUZZED(8.8), float(_GLF_IDENTITY(vec2(true ? -9026.3362 : _GLF_FUZZED(8.8), sqrt(exp(0.0))), max(vec2(true ? -9026.3362 : _GLF_FUZZED(8.8), sqrt(exp(0.0))), vec2(true ? -9026.3362 : _GLF_FUZZED(8.8), sqrt(exp(0.0))))))))), 1.0, 1.0, 0.0, 0.0, 1.0))) * 1.0))))) : injectionSwitch.x)), _GLF_IDENTITY(1.0 * (float(float(false ? _GLF_FUZZED(_GLF_IDENTITY(-9026.3362, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(-9026.3362, (true ? -9026.3362 : _GLF_FUZZED(8.8))), 1.0, 1.0, 0.0, 0.0, 1.0)), (float(mat2x3(_GLF_IDENTITY(-9026.3362, _GLF_IDENTITY((true ? -9026.3362 : _GLF_FUZZED(_GLF_IDENTITY(8.8, 1.0 * (_GLF_IDENTITY(8.8, clamp(8.8, _GLF_IDENTITY(8.8, float(float(8.8))), 8.8)))))), max(_GLF_IDENTITY((true ? -9026.3362 : _GLF_FUZZED(8.8)), clamp(_GLF_IDENTITY((true ? -9026.3362 : _GLF_FUZZED(8.8)), 0.0 + ((true ? -9026.3362 : _GLF_FUZZED(8.8)))), _GLF_IDENTITY((true ? -9026.3362 : _GLF_FUZZED(8.8)), float(mat3x2((true ? -9026.3362 : _GLF_FUZZED(8.8)), 0.0, 0.0, 1.0, 0.0, 1.0))), (true ? -9026.3362 : _GLF_FUZZED(8.8)))), _GLF_IDENTITY((true ? -9026.3362 : _GLF_FUZZED(8.8)), ((true ? -9026.3362 : _GLF_FUZZED(8.8))) * 1.0)))), 1.0, 1.0, 0.0, 0.0, 1.0))) * 1.0))) : injectionSwitch.x))), (_GLF_IDENTITY(1.0 * (float(float(false ? _GLF_FUZZED(_GLF_IDENTITY(-9026.3362, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(-9026.3362, (true ? -9026.3362 : _GLF_FUZZED(8.8))), 1.0, 1.0, 0.0, 0.0, 1.0)), (float(mat2x3(_GLF_IDENTITY(-9026.3362, _GLF_IDENTITY((true ? -9026.3362 : _GLF_FUZZED(_GLF_IDENTITY(8.8, 1.0 * (_GLF_IDENTITY(8.8, clamp(8.8, _GLF_IDENTITY(8.8, float(float(8.8))), 8.8)))))), max(_GLF_IDENTITY((true ? -9026.3362 : _GLF_FUZZED(8.8)), clamp(_GLF_IDENTITY((true ? -9026.3362 : _GLF_FUZZED(8.8)), 0.0 + ((true ? -9026.3362 : _GLF_FUZZED(8.8)))), _GLF_IDENTITY((true ? -9026.3362 : _GLF_FUZZED(8.8)), float(mat3x2((true ? -9026.3362 : _GLF_FUZZED(8.8)), 0.0, 0.0, 1.0, 0.0, 1.0))), (true ? -9026.3362 : _GLF_FUZZED(8.8)))), _GLF_IDENTITY((true ? -9026.3362 : _GLF_FUZZED(8.8)), ((true ? -9026.3362 : _GLF_FUZZED(8.8))) * 1.0)))), 1.0, 1.0, 0.0, 0.0, 1.0))) * 1.0))) : injectionSwitch.x))), (_GLF_IDENTITY(1.0 * (float(float(false ? _GLF_FUZZED(_GLF_IDENTITY(-9026.3362, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(-9026.3362, (true ? -9026.3362 : _GLF_FUZZED(8.8))), 1.0, 1.0, 0.0, 0.0, 1.0)), (float(mat2x3(_GLF_IDENTITY(-9026.3362, _GLF_IDENTITY((true ? -9026.3362 : _GLF_FUZZED(_GLF_IDENTITY(8.8, 1.0 * (_GLF_IDENTITY(8.8, clamp(8.8, _GLF_IDENTITY(8.8, float(float(8.8))), 8.8)))))), max(_GLF_IDENTITY((true ? -9026.3362 : _GLF_FUZZED(8.8)), clamp(_GLF_IDENTITY((true ? -9026.3362 : _GLF_FUZZED(8.8)), 0.0 + ((true ? -9026.3362 : _GLF_FUZZED(8.8)))), _GLF_IDENTITY((true ? -9026.3362 : _GLF_FUZZED(8.8)), float(mat3x2((true ? -9026.3362 : _GLF_FUZZED(8.8)), 0.0, 0.0, 1.0, 0.0, 1.0))), (true ? -9026.3362 : _GLF_FUZZED(8.8)))), _GLF_IDENTITY((true ? -9026.3362 : _GLF_FUZZED(8.8)), ((true ? -9026.3362 : _GLF_FUZZED(8.8))) * 1.0)))), 1.0, 1.0, 0.0, 0.0, 1.0))) * 1.0))) : injectionSwitch.x))), max(1.0 * (float(float(false ? _GLF_FUZZED(_GLF_IDENTITY(-9026.3362, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(-9026.3362, (true ? -9026.3362 : _GLF_FUZZED(8.8))), 1.0, 1.0, 0.0, 0.0, 1.0)), (float(mat2x3(_GLF_IDENTITY(-9026.3362, _GLF_IDENTITY((true ? -9026.3362 : _GLF_FUZZED(_GLF_IDENTITY(8.8, 1.0 * (_GLF_IDENTITY(8.8, clamp(8.8, _GLF_IDENTITY(8.8, float(float(8.8))), 8.8)))))), max(_GLF_IDENTITY((true ? -9026.3362 : _GLF_FUZZED(8.8)), clamp(_GLF_IDENTITY((true ? -9026.3362 : _GLF_FUZZED(8.8)), 0.0 + ((true ? -9026.3362 : _GLF_FUZZED(8.8)))), _GLF_IDENTITY((true ? -9026.3362 : _GLF_FUZZED(8.8)), float(mat3x2((true ? -9026.3362 : _GLF_FUZZED(8.8)), 0.0, 0.0, 1.0, 0.0, 1.0))), (true ? -9026.3362 : _GLF_FUZZED(8.8)))), _GLF_IDENTITY((true ? -9026.3362 : _GLF_FUZZED(8.8)), ((true ? -9026.3362 : _GLF_FUZZED(8.8))) * 1.0)))), 1.0, 1.0, 0.0, 0.0, 1.0))) * 1.0))) : injectionSwitch.x))), 1.0 * (float(float(false ? _GLF_FUZZED(_GLF_IDENTITY(-9026.3362, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(-9026.3362, (true ? -9026.3362 : _GLF_FUZZED(8.8))), 1.0, 1.0, 0.0, 0.0, 1.0)), (float(mat2x3(_GLF_IDENTITY(-9026.3362, _GLF_IDENTITY((true ? -9026.3362 : _GLF_FUZZED(_GLF_IDENTITY(8.8, 1.0 * (_GLF_IDENTITY(8.8, clamp(8.8, _GLF_IDENTITY(8.8, float(float(8.8))), 8.8)))))), max(_GLF_IDENTITY((true ? -9026.3362 : _GLF_FUZZED(8.8)), clamp(_GLF_IDENTITY((true ? -9026.3362 : _GLF_FUZZED(8.8)), 0.0 + ((true ? -9026.3362 : _GLF_FUZZED(8.8)))), _GLF_IDENTITY((true ? -9026.3362 : _GLF_FUZZED(8.8)), float(mat3x2((true ? -9026.3362 : _GLF_FUZZED(8.8)), 0.0, 0.0, 1.0, 0.0, 1.0))), (true ? -9026.3362 : _GLF_FUZZED(8.8)))), _GLF_IDENTITY((true ? -9026.3362 : _GLF_FUZZED(8.8)), ((true ? -9026.3362 : _GLF_FUZZED(8.8))) * 1.0)))), 1.0, 1.0, 0.0, 0.0, 1.0))) * 1.0))) : injectionSwitch.x)))))) - 0.0)) + 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(float(float((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))))), _GLF_ZERO(0.0, injectionSwitch.x) + (float(float((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))) / abs(1.0)))))), true, true, false)), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) && true) && (_GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.2, 3.9)))).y), false || _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))).x, (_GLF_IDENTITY(false, (false) || false) ? _GLF_IDENTITY(_GLF_FUZZED(-9026.3362), (true ? _GLF_FUZZED(-9026.3362) : _GLF_FUZZED(-369.257))) : injectionSwitch.x)) > injectionSwitch.y)), ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))).x, (_GLF_IDENTITY(false, (false) || false) ? _GLF_IDENTITY(_GLF_FUZZED(-9026.3362), (true ? _GLF_FUZZED(-9026.3362) : _GLF_FUZZED(-369.257))) : injectionSwitch.x)) > injectionSwitch.y))) || false))), true, true, false)), false || (bool(bvec4(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(376.637)), bool(false))), 0.0, 1.0, 1.0, 1.0, 1.0))).x, (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) && true), false), true, false)))))) ? _GLF_FUZZED(-9026.3362) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-88.57)), bool(false))))))), true, true, false))))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0)))) && true)))
        barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))), false))))
  barrier();
}
