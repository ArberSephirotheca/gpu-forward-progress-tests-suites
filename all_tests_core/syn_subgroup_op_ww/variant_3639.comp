#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizesubgroup_size;
 uvec4 GLF_merged3_0_2_55_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_idnum_workgroupvirtual_gid;
 uvec4 GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id;
 uvec2 GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged3_0_2_55_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_idnum_workgroupvirtual_gid.xy = GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 else
  {
  }
 GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw = GLF_merged3_0_2_55_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_idnum_workgroupvirtual_gid.xy;
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size;
 GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizesubgroup_size.xyz = GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_size;
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uvec2 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
    barrier();
  }
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6491.2433, -6109.5825))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
        continue;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.4))) > injectionSwitch.y))));
   barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0)), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 ^ (1))), max(_GLF_IDENTITY(int(1), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), 1)), (int(ivec2(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), 1))) | _GLF_IDENTITY((int(ivec2(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), 1))), ~ (~ (_GLF_IDENTITY((int(ivec2(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), 1))), ((int(ivec2(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), 1)))) >> 0)))))), (int(1)) | (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), 0 ^ (int(1))))))), 0, 1, 0))), int(1))), _GLF_IDENTITY(int(1), (int(1)) | _GLF_IDENTITY((int(1)), 0 ^ ((int(1)))))))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.xy = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size;
          }
         else
          {
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))))) > injectionSwitch.y))));
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.1)), float(0.0), bool(true)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.1)), float(0.0), bool(true)))) > injectionSwitch.y)))) || false)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)) || false))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, sqrt(0.0), sqrt(tan(0.0)), 1.0, abs(1.0)), mat2(1.0) * (mat3x2(injectionSwitch, sqrt(0.0), sqrt(tan(0.0)), 1.0, abs(1.0)))))).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.1)), float(0.0), bool(true)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.1)), float(0.0), bool(true)))) > injectionSwitch.y)))) || false)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (false ? _GLF_FUZZED(-813.375) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))) > injectionSwitch.y)) || false)))))) && true)))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) + 0.0), injectionSwitch.y, injectionSwitch.y)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) + 0.0), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) + 0.0), injectionSwitch.y, injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) + 0.0), injectionSwitch.y, injectionSwitch.y))))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) + 0.0), injectionSwitch.y, injectionSwitch.y)))))))))) || false)))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizesubgroup_size.w = subgroup_size;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & (1 & 1))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   GLF_merged3_0_2_55_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_idnum_workgroupvirtual_gid.z = num_workgroup;
  }
 GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizesubgroup_size.xyz.y = GLF_merged3_0_2_55_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_idnum_workgroupvirtual_gid.z;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizesubgroup_size.xyz.z = workgroup_size;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y = _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizesubgroup_size.xyz.z, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizesubgroup_size.xyz.z, (_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizesubgroup_size, (GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizesubgroup_size) | (GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizesubgroup_size)).xyz.z) * 1u)));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(mat4x3((injectionSwitch) / vec2(1.0, 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), (false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * _GLF_IDENTITY(1.0, max(1.0, 1.0)), max((injectionSwitch.y) * 1.0, _GLF_IDENTITY((injectionSwitch.y) * 1.0, mix(float(_GLF_FUZZED(3504.6035)), float((injectionSwitch.y) * 1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(mat4x3((injectionSwitch) / vec2(1.0, 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.6)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), max(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-61.73, 5.0)) : false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))))))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(mat4x3((injectionSwitch) / vec2(1.0, 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.6)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), max(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-61.73, 5.0)) : false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(mat4x3((injectionSwitch) / vec2(1.0, 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.6)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), max(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-61.73, 5.0)) : false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(mat4x3((injectionSwitch) / vec2(1.0, 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.6)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), max(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-61.73, 5.0)) : false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))))))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(mat4x3((injectionSwitch) / vec2(1.0, 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.6)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), max(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-61.73, 5.0)) : false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))))))) : _GLF_FUZZED(vec2(-9135.8456, -9.1)))))).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, max((injectionSwitch.y) * 1.0, _GLF_IDENTITY((injectionSwitch.y) * 1.0, mix(float(_GLF_FUZZED(3504.6035)), float(_GLF_IDENTITY((injectionSwitch.y) * 1.0, min((injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0))), bool(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(mat4x3((injectionSwitch) / vec2(1.0, 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.6)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), max(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-61.73, 5.0)) : false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))))))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(mat4x3((injectionSwitch) / vec2(1.0, 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.6)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), max(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-61.73, 5.0)) : false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(mat4x3((injectionSwitch) / vec2(1.0, 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.6)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), max(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-61.73, 5.0)) : false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(mat4x3((injectionSwitch) / vec2(1.0, 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.6)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), max(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-61.73, 5.0)) : false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))))))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(mat4x3((injectionSwitch) / vec2(1.0, 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.6)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), max(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-61.73, 5.0)) : false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))))))) : _GLF_FUZZED(vec2(-9135.8456, -9.1)))))).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, max((injectionSwitch.y) * 1.0, _GLF_IDENTITY((injectionSwitch.y) * 1.0, mix(float(_GLF_FUZZED(3504.6035)), float(_GLF_IDENTITY((injectionSwitch.y) * 1.0, min((injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0))), bool(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), (injectionSwitch.x < injectionSwitch.y))))))))), false, true, true)), (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(mat4x3((injectionSwitch) / vec2(1.0, 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.6)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), max(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-61.73, 5.0)) : false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))))))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(mat4x3((injectionSwitch) / vec2(1.0, 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.6)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), max(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-61.73, 5.0)) : false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(mat4x3((injectionSwitch) / vec2(1.0, 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.6)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), max(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-61.73, 5.0)) : false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(mat4x3((injectionSwitch) / vec2(1.0, 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.6)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), max(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-61.73, 5.0)) : false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))))))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(mat4x3((injectionSwitch) / vec2(1.0, 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.6)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), max(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), (false ? _GLF_FUZZED(vec2(-61.73, 5.0)) : false ? _GLF_FUZZED(vec2(-5.2, 809.785)) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))))))) : _GLF_FUZZED(vec2(-9135.8456, -9.1)))))).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * 1.0, max((injectionSwitch.y) * 1.0, _GLF_IDENTITY((injectionSwitch.y) * 1.0, mix(float(_GLF_FUZZED(3504.6035)), float(_GLF_IDENTITY((injectionSwitch.y) * 1.0, min((injectionSwitch.y) * 1.0, (injectionSwitch.y) * 1.0))), bool(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), (injectionSwitch.x < injectionSwitch.y))))))))), false, true, true))) && true)))) || false), true && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) && true))))), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))) || false))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true))), true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true))), true, false))))))))))))) || false)))))))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, false)))) && true))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))) || false))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((_GLF_IDENTITY(false, bool(bool(false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true))), true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true))), true, false))))))))))))) || false)))), ((bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))) || false))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((_GLF_IDENTITY(false, bool(bool(false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true))), true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true))), true, false))))))))))))) || false))))) || false)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) && true))))), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))) || false))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true))), true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true))), true, false))))))))))))) || false)))))))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, false)))) && true))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))) || false))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((_GLF_IDENTITY(false, bool(bool(false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true))), true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true))), true, false))))))))))))) || false)))), ((bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))) || false))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((_GLF_IDENTITY(false, bool(bool(false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true))), true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true))), true, false))))))))))))) || false))))) || false)))))))), true)), false || (bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) && true))))), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))) || false))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true))), true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true))), true, false))))))))))))) || false)))))))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, false)))) && true))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))) || false))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((_GLF_IDENTITY(false, bool(bool(false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true))), true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true))), true, false))))))))))))) || false)))), ((bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))) || false))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((_GLF_IDENTITY(false, bool(bool(false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true))), true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (! _GLF_IDENTITY((false), bool(bvec3((false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true, true))), true, false))))))))))))) || false))))) || false)))))))), true))))))
    {
    }
   else
    {
     do
      {
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.xy.y = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))));
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(90.08, -8.0)))).y)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, ! (! (((injectionSwitch.x > injectionSwitch.y)) && true)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(90.08, -8.0)))).y)) && true), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(90.08, -8.0)))).y)) && true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(faceforward(distance(vec4(89.63, 655.019, 964.108, 3.2), vec4(-3.4, 2.1, 10.79, 788.376)), -4.9, 53.03)) : injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-54.20)), vec2(_GLF_FUZZED(718.926), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.xy.y * workgroup_id;
 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = workgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   else
    {
    }
   barrier();
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizesubgroup_size, (_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizesubgroup_size, (GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizesubgroup_size) + uvec4(0u, 0u, 0u, 0u))) | uvec4(0u, 0u, 0u, 0u)).w;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 for(int _injected_loop_counter = (_GLF_IDENTITY(0, min(0, 0)) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), (! ((false) && true)) && true)))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))), true, true))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y)))))))), false), false))))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))), bvec2(bvec3(bvec2(false, false), false)))), true, true, true)), bool(bvec4(bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec3(bvec2(false, false), false)))), true, true, true)), true, false, false))))), false)))))
    {
    }
   else
    {
     GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.x = subgroup_base;
    }
  }
 uint virtual_gid = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw), uvec2(uvec4(~ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw), 0u, 1u))))).x + _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y, 0u ^ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y));
 GLF_merged3_0_2_55_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_idnum_workgroupvirtual_gid.w = virtual_gid;
 GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.xy.x = GLF_merged3_0_2_55_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_idnum_workgroupvirtual_gid.w;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(dot(vec3(98.19, -8747.2430, 6.5), vec3(87.49, 9.9, -68.09))))) > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false)))))))
                  barrier();
                }
               else
                {
                }
              }
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.x, min(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.x, 0u ^ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.x)), _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.x, (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.x) | (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.x)))) + ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y, _GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), _GLF_IDENTITY(((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)), (((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y))) | (((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)))) / 1u) >> 0u) + 1, (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y, _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)) / 1u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)) / 1u), (_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)) / 1u)) * 1u)), uint(uvec3(~ (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)) / 1u), (_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)) / 1u)) * 1u)), 1u, 1u)))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)) / 1u), (_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)) / 1u)) * 1u)), uint(uvec3(~ (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)) / 1u), (_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)) / 1u)) * 1u)), 1u, 1u))))) | 0u)) >> 0u) + 1) << 0u)) % GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizesubgroup_size.w), max(GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.x, min(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.x, 0u ^ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.x)), _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.x, (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.x) | (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.x)))) + ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y, _GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), _GLF_IDENTITY(((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)), (((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y))) | (((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)))) / 1u) >> 0u) + 1, (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y, _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)) / 1u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)) / 1u), (_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)) / 1u)) * 1u)), uint(uvec3(~ (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)) / 1u), (_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)) / 1u)) * 1u)), 1u, 1u)))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)) / 1u), (_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)) / 1u)) * 1u)), uint(uvec3(~ (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)) / 1u), (_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)) / 1u)) * 1u)), 1u, 1u))))) | 0u)) >> 0u) + 1) << 0u)) % GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizesubgroup_size.w), GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.x, min(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.x, 0u ^ (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.x)), _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.x, (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.x) | (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.x)))) + ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y, _GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), _GLF_IDENTITY(((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)), (((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y))) | (((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)))) / 1u) >> 0u) + 1, (_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y, _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)) / 1u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)) / 1u), (_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)) / 1u)) * 1u)), uint(uvec3(~ (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)) / 1u), (_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)) / 1u)) * 1u)), 1u, 1u)))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)) / 1u), (_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)) / 1u)) * 1u)), uint(uvec3(~ (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)) / 1u), (_GLF_IDENTITY((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y), ((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y)) / 1u)) * 1u)), 1u, 1u))))) | 0u)) >> 0u) + 1) << 0u)) % GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizesubgroup_size.w)));
 do
  {
   do
    {
     _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizesubgroup_size.xyz.x = next_virtual_gid, (false ? _GLF_FUZZED(workgroup_base) : GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizesubgroup_size.xyz.x = next_virtual_gid));
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 atomicStore(buf[_GLF_IDENTITY(GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.xy.x, (GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.xy.x) - 0u)], uint(1), 4, 64, 4);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) || false))))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(bool(bvec2(_GLF_DEAD(false), false)), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                barrier();
               return;
               if(_GLF_DEAD(false))
                return;
              }
             barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(6, (6) - 0), min(_GLF_IDENTITY(6, (6) - 0), _GLF_IDENTITY(6, (6) - 0)))), _GLF_IDENTITY(_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), int(ivec2(_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), (1 * (_GLF_IDENTITY(int(6), (int(6)) - _GLF_IDENTITY(0, (0) << 0)))) >> 0)), clamp(~ (_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), (1 * (_GLF_IDENTITY(int(6), (int(6)) - 0))) >> 0)), ~ (_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), (1 * (_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - 0), ~ (~ (_GLF_IDENTITY(int(6), (int(6)) - 0)))))) >> 0)), ~ (_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), (1 * (_GLF_IDENTITY(int(6), (int(6)) - 0))) >> 0)))))), 1))), (_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), int(ivec2(_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), (1 * (_GLF_IDENTITY(int(6), (int(6)) - _GLF_IDENTITY(0, (0) << 0)))) >> 0)), clamp(~ (_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), (1 * (_GLF_IDENTITY(int(6), (int(6)) - 0))) >> 0)), ~ (_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), (1 * (_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - 0), ~ (~ (_GLF_IDENTITY(int(6), (int(6)) - 0)))))) >> 0)), ~ (_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), (1 * (_GLF_IDENTITY(int(6), (int(6)) - 0))) >> 0)))))), _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, int(ivec3(1, 0, 0))), 0))) : _GLF_FUZZED(_injected_loop_counter))))))) - (0 << _GLF_IDENTITY(int(3), int(3))))), int(6)), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(6, (6) - 0), min(_GLF_IDENTITY(6, (6) - 0), _GLF_IDENTITY(6, (6) - 0)))), _GLF_IDENTITY(_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), int(ivec2(_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), (1 * (_GLF_IDENTITY(int(6), (int(6)) - _GLF_IDENTITY(0, (0) << 0)))) >> 0)), clamp(~ (_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), (1 * (_GLF_IDENTITY(int(6), (int(6)) - 0))) >> 0)), ~ (_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), (1 * (_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - 0), ~ (~ (_GLF_IDENTITY(int(6), (int(6)) - 0)))))) >> 0)), ~ (_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), (1 * (_GLF_IDENTITY(int(6), (int(6)) - 0))) >> 0)))))), 1))), (_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), int(ivec2(_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), (1 * (_GLF_IDENTITY(int(6), (int(6)) - _GLF_IDENTITY(0, (0) << 0)))) >> 0)), clamp(~ (_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), (1 * (_GLF_IDENTITY(int(6), (int(6)) - 0))) >> 0)), ~ (_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), (1 * (_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - 0), ~ (~ (_GLF_IDENTITY(int(6), (int(6)) - 0)))))) >> 0)), ~ (_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), (1 * (_GLF_IDENTITY(int(6), (int(6)) - 0))) >> 0)))))), _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, int(ivec3(1, 0, 0))), 0))) : _GLF_FUZZED(_injected_loop_counter))))))) - (0 << _GLF_IDENTITY(int(3), int(3))))), int(6))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(6, (6) - 0), min(_GLF_IDENTITY(6, (6) - 0), _GLF_IDENTITY(6, (6) - 0)))), _GLF_IDENTITY(_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), int(ivec2(_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), (1 * (_GLF_IDENTITY(int(6), (int(6)) - _GLF_IDENTITY(0, (0) << 0)))) >> 0)), clamp(~ (_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), (1 * (_GLF_IDENTITY(int(6), (int(6)) - 0))) >> 0)), ~ (_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), (1 * (_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - 0), ~ (~ (_GLF_IDENTITY(int(6), (int(6)) - 0)))))) >> 0)), ~ (_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), (1 * (_GLF_IDENTITY(int(6), (int(6)) - 0))) >> 0)))))), 1))), (_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), int(ivec2(_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), (1 * (_GLF_IDENTITY(int(6), (int(6)) - _GLF_IDENTITY(0, (0) << 0)))) >> 0)), clamp(~ (_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), (1 * (_GLF_IDENTITY(int(6), (int(6)) - 0))) >> 0)), ~ (_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), (1 * (_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - 0), ~ (~ (_GLF_IDENTITY(int(6), (int(6)) - 0)))))) >> 0)), ~ (_GLF_IDENTITY(1 * (_GLF_IDENTITY(int(6), (int(6)) - 0)), (1 * (_GLF_IDENTITY(int(6), (int(6)) - 0))) >> 0)))))), _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, int(ivec3(1, 0, 0))), 0))) : _GLF_FUZZED(_injected_loop_counter))))))) - (0 << _GLF_IDENTITY(int(3), int(3))))), int(6)))))); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      break;
     if((GLF_merged2_0_2_50_2_2_55GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_sizeGLF_merged2_0_1_13_1_1_17subgroup_basesubgroup_local_id.zw.y % 2) == 0)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             do
              {
               do
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           else
            {
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(4, 4, 4))), int(_GLF_IDENTITY(4, _GLF_IDENTITY(max(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, 4)), 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) | 0)), ~ (~ (_GLF_IDENTITY(max(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, 4)), 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) | 0)), ~ (~ (max(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, 4)), 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) | 0)))))))))))) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
         subgroupAll(true);
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-76.72)), vec2(1.0, 1.0) * (vec2((injectionSwitch)[0], _GLF_FUZZED(-76.72)))), vec2(_GLF_FUZZED(4.9), (injectionSwitch)[1]), bvec2(false, true))).y))))
          continue;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))) && true), false)))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(331.120))))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         atomicStore(buf[_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizesubgroup_size.xyz.x, (GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizesubgroup_size.xyz.x) * _GLF_IDENTITY(1u, uint(uint(1u))))], uint(_GLF_IDENTITY(2, min(2, 2))), 4, 64, 4);
        }
       else
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))) || false));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(mat2x3((injectionSwitch), 0.0, 0.0, 0.0, 1.0))) / vec2(1.0, 1.0)), injectionSwitch)).y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, 0.0, 1.0, 0.0, 0.0, abs(1.0))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-853.797), _GLF_IDENTITY(_GLF_FUZZED(6.7), min(_GLF_IDENTITY(_GLF_FUZZED(6.7), mix(float(_GLF_FUZZED(6.7)), float(_GLF_FUZZED(-5.0)), bool(false))), _GLF_FUZZED(6.7)))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[_GLF_IDENTITY(1, int(ivec3(1, 1, 0)))]))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(mat2x3((injectionSwitch), 0.0, 0.0, 0.0, 1.0))) / vec2(1.0, 1.0)), injectionSwitch)).y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, 0.0, 1.0, 0.0, 0.0, abs(1.0))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-853.797), _GLF_IDENTITY(_GLF_FUZZED(6.7), min(_GLF_IDENTITY(_GLF_FUZZED(6.7), mix(float(_GLF_FUZZED(6.7)), float(_GLF_FUZZED(-5.0)), bool(false))), _GLF_FUZZED(6.7)))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[_GLF_IDENTITY(1, int(ivec3(1, 1, 0)))]))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, 0.0, 1.0, 0.0, 0.0, abs(1.0))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-853.797), _GLF_FUZZED(6.7)), vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)))))), max(vec2(vec2(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)))))), vec2(vec2(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)))))))))[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, 0.0, 1.0, 0.0, 0.0, abs(1.0))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-853.797), _GLF_FUZZED(6.7)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))) || false))), _GLF_IDENTITY(true, ! (! (true)))))).y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) && true))), _GLF_IDENTITY(false, (false) || false) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))))))))))))
        {
         for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(refract(-25.94, 9363.6492, -379.613)), max(_GLF_FUZZED(refract(-25.94, 9363.6492, -379.613)), _GLF_FUZZED(refract(-25.94, 9363.6492, -379.613)))) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), max(false ? _GLF_IDENTITY(_GLF_FUZZED(refract(-25.94, 9363.6492, -379.613)), max(_GLF_FUZZED(refract(-25.94, 9363.6492, -379.613)), _GLF_FUZZED(refract(-25.94, 9363.6492, -379.613)))) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), false ? _GLF_IDENTITY(_GLF_FUZZED(refract(-25.94, 9363.6492, -379.613)), max(_GLF_FUZZED(refract(-25.94, 9363.6492, -379.613)), _GLF_FUZZED(refract(-25.94, 9363.6492, -379.613)))) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0)))) != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))), true))), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), ! (! (false || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), bool(bvec4((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != 1)), true, true, false)))) || false)), _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), bool(bvec4((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), true, true, false)))) || false))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), bool(bvec4((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), true, true, false)))) || false))) || false), _GLF_IDENTITY(bool(bvec3(! ((! (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), bool(bvec4((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), true, true, false)))) || false))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(! ((! (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), bool(bvec4((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), true, true, false)))) || false))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1)))))), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (_GLF_IDENTITY(! (_injected_loop_counter != 1), bool(bool(! (_injected_loop_counter != 1)))))))), false || (false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (_GLF_IDENTITY(! (_injected_loop_counter != 1), bool(bool(! (_injected_loop_counter != 1))))))))))))))))), true, false))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (_GLF_IDENTITY(! (_injected_loop_counter != 1), false || (! (_injected_loop_counter != 1)))))), false || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), ! (! ((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))) || false)) || false)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), bool(bvec4((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), false, false, false))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), bool(bvec4((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), false, false, false)))), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), bool(bvec4((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), false, false, false)))), false, true))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (_GLF_IDENTITY(! (_injected_loop_counter != 1), false || (! (_injected_loop_counter != 1)))))), false || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), ! (! ((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))) || false)) || false)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), bool(bvec4((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), false, false, false))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), bool(bvec4((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), false, false, false)))), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), bool(bvec4((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), false, false, false)))), false, true))))))))))), ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (_GLF_IDENTITY(! (_injected_loop_counter != 1), false || (! (_injected_loop_counter != 1)))))), false || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), ! (! ((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))) || false)) || false)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), bool(bvec4((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), false, false, false))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), bool(bvec4((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), false, false, false)))), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), bool(bvec4((_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), false, false, false)))), false, true)))))))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY((_injected_loop_counter != 1) || false, bool(bvec4((_injected_loop_counter != 1) || false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)) != _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))))))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))) && true)), bool(bvec2((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))), false)))))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(1, int(ivec4(1, 1, 0, 1))), _GLF_IDENTITY(_GLF_IDENTITY((_injected_loop_counter != 1) || false, ! (! ((_injected_loop_counter != 1) || false))), bool(bvec4((_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) || false)) || false, true, false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)) && true))))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))))))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))) && true)), bool(bvec2((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter))) + 0) != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | (1)))))), false)))))))), _GLF_IDENTITY(true, true && (true)), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY((_injected_loop_counter != 1) || false, bool(bvec4((_injected_loop_counter != 1) || _GLF_IDENTITY(false, false || (false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))), (bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))) || false)), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), 1 * ((1))), _GLF_IDENTITY((1), int(ivec3((1), 0, 0))))), min(~ (1), ~ (1))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), 1 * ((1))), _GLF_IDENTITY((1), int(ivec3((1), 0, 0))))), min(~ (1), ~ (1))))))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), 1 * ((1))), _GLF_IDENTITY((1), int(ivec3((1), 0, 0))))), min(~ (1), ~ (1))))))), ((~ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), 1 * ((1))), _GLF_IDENTITY((1), int(ivec3((1), 0, 0))))), min(~ (1), ~ (1)))))))) | ((~ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), 1 * ((1))), _GLF_IDENTITY((1), int(ivec3((1), 0, 0))))), min(~ (1), ~ (1))))))))))))) ^ 0))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))) && true)), bool(bvec2((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) * 1)))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))), false)))))))), true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY((_injected_loop_counter != 1) || false, bool(bvec4((_injected_loop_counter != 1) || _GLF_IDENTITY(false, false || (false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))), (bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))))))) || false)), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), 1 * ((1))), _GLF_IDENTITY((1), int(ivec3((1), 0, 0))))), min(~ (1), ~ (1))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), 1 * ((1))), _GLF_IDENTITY((1), int(ivec3((1), 0, 0))))), min(~ (1), ~ (1))))))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), 1 * ((1))), _GLF_IDENTITY((1), int(ivec3((1), 0, 0))))), min(~ (1), ~ (1))))))), ((~ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), 1 * ((1))), _GLF_IDENTITY((1), int(ivec3((1), 0, 0))))), min(~ (1), ~ (1)))))))) | ((~ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), 1 * ((1))), _GLF_IDENTITY((1), int(ivec3((1), 0, 0))))), min(~ (1), ~ (1))))))))))))) ^ 0))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))) && true)), bool(bvec2((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) * 1)))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))), false)))))))), true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))))))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))); _injected_loop_counter ++)
          {
           do
            {
             if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false, true))), false))))
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                continue;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             do
              {
               if(_GLF_DEAD(false))
                break;
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-312.389, 73.38)))).y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
             else
              {
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           continue;
          }
         do
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = (_GLF_IDENTITY(1, min(1, 1)) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         subgroupAll(false);
         for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, sqrt(0.0), 1.0, 1.0))), injectionSwitch.y))))))
              {
              }
             else
              {
               barrier();
              }
            }
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec3(-6.9, 0.9, 7.7).gr)))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 0.0, 1.0)))) : _GLF_FUZZED(vec3(-6.9, 0.9, 7.7).gr)))).y) && _GLF_IDENTITY(true, false || (true)))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
              {
               barrier();
              }
             else
              {
              }
            }
           break;
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         atomicStore(buf[GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_sizesubgroup_size.xyz.x], uint(2), 4, 64, 4);
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, _GLF_IDENTITY(bool(bool(_injected_loop_counter != 0)), bool(bvec2(bool(bool(_injected_loop_counter != 0)), false))))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_injected_loop_counter --)))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y))))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             do
              {
               for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 | _GLF_IDENTITY((_GLF_IDENTITY(int(5), int(int(int(5))))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), int(int(int(5))))), min((_GLF_IDENTITY(int(5), int(int(int(5))))), (_GLF_IDENTITY(int(5), int(int(_GLF_IDENTITY(int(5), min(int(5), _GLF_IDENTITY(int(5), 1 * (int(5)))))))))))))), int(5))), clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 | _GLF_IDENTITY((_GLF_IDENTITY(int(5), int(int(int(5))))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), int(int(int(5))))), min((_GLF_IDENTITY(int(5), int(int(int(5))))), (_GLF_IDENTITY(int(5), int(int(_GLF_IDENTITY(int(5), min(int(5), _GLF_IDENTITY(int(5), 1 * (int(5)))))))))))))), int(5))), int(ivec2((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 | _GLF_IDENTITY((_GLF_IDENTITY(int(5), int(int(int(5))))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), int(int(int(5))))), min((_GLF_IDENTITY(int(5), int(int(int(5))))), (_GLF_IDENTITY(int(5), int(int(_GLF_IDENTITY(int(5), min(int(5), _GLF_IDENTITY(int(5), 1 * (int(5)))))))))))))), int(5))), 1))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 | _GLF_IDENTITY((_GLF_IDENTITY(int(5), int(int(int(5))))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), int(int(int(5))))), min((_GLF_IDENTITY(int(5), int(int(int(5))))), (_GLF_IDENTITY(int(5), int(int(_GLF_IDENTITY(int(5), min(int(5), _GLF_IDENTITY(int(5), 1 * (int(5)))))))))))))), int(5))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 | _GLF_IDENTITY((_GLF_IDENTITY(int(5), int(int(int(5))))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), int(5))), int(int(int(5))))), min((_GLF_IDENTITY(int(5), int(int(int(5))))), (_GLF_IDENTITY(int(5), int(int(_GLF_IDENTITY(int(5), min(int(5), _GLF_IDENTITY(int(5), 1 * (int(5)))))))))))))), int(5))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5)))))); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (1 | ((_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), (1 << _GLF_IDENTITY(int(2), int(2))) * 1), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))), 1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))))))))) + int(_GLF_ZERO(0.0, injectionSwitch.x))), (1 << _GLF_IDENTITY(int(2), int(2))) * 1)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) << 0), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | 0), 0 | (int(2)))))), ! (! (_injected_loop_counter < (1 | ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | 0), 0 | _GLF_IDENTITY((int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (0 ^ 0) ^ (2))) | (_GLF_IDENTITY(2, (2) << (1 ^ 1)))))), ~ (~ ((int(2))))))))))))); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(0, (0) / 1))) | 0)); _injected_loop_counter --)
                        {
                         return;
                        }
                      }
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        return;
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        break;
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                     if(_GLF_DEAD(false))
                      continue;
                    }
                  }
                 else
                  {
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
      barrier();
    }
  }
}
