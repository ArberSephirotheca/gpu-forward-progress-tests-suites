#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 mat2 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 float _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_5 {
 bvec2 _f0;
 vec3 _f1;
 _GLF_struct_1 _f2;
 uint num_workgroup;
 uvec3 _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_4 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))) || false), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), vec2(vec2((injectionSwitch))))[0], _GLF_FUZZED(1.5)), vec2(_GLF_FUZZED(-86.55), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(false, true))).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-914.200)), bool(false)))))).y, injectionSwitch.y)), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))
          barrier();
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, true, false))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), true && (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))))), true && (_GLF_IDENTITY((false), ! (! ((false)))))) || false)))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
            {
            }
           else
            {
             barrier();
            }
          }
         for(int _injected_loop_counter = (0 & _GLF_IDENTITY(-43884, int(_GLF_IDENTITY(int(-43884), min(int(-43884), _GLF_IDENTITY(int(-43884), (int(-43884)) | 0)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(60999) : _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1))) != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ 0))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) >> 0)); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
                {
                 barrier();
                }
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(bvec2(true), vec3(1.0), _GLF_struct_1(_GLF_struct_0(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), max(uvec3(1u), _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | uvec3(0u, 0u, 0u))) >> (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))))))) * uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), ivec2(1)), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])))).x, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) ^ (uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u + (0u))) ^ uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) ^ (uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u + (0u))) ^ uvec3(0u, 0u, 0u))))), _GLF_struct_2(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, tan(_GLF_IDENTITY(0.0, 0.0 + (0.0))), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(injectionSwitch[0]) : 1.0)), mix(float(1.0), float(_GLF_FUZZED(-360.850)), bool(false))))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) / vec3(1.0, 1.0, 1.0))), (dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - 0.0)))))), vec3(0.0, 1.0, 0.0))) - log(1.0))), _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0))))), min(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, tan(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(injectionSwitch[0]) : 1.0)), mix(float(1.0), float(_GLF_FUZZED(-360.850)), bool(false))))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, log(1.0), 1.0), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, log(1.0), 1.0)))), 1.0 * (float(_GLF_IDENTITY(mat2x3(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, log(1.0), 1.0), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, log(1.0), 1.0))))))))), 0.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(vec3(-278.078, -8.5, -4.9).z)))), min(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(vec3(-278.078, -8.5, -4.9).z)))), _GLF_IDENTITY(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(vec3(-278.078, -8.5, -4.9).z)))), sqrt(vec3(1.0, 1.0, 1.0)) * (vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(vec3(-278.078, -8.5, -4.9).z)))))))))))), vec3(0.0, 1.0, 0.0)), (dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(float(false)))), 1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - 0.0)))))), vec3(0.0, 1.0, 0.0))) - log(1.0))), _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0))))), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(tan(_GLF_IDENTITY(0.0, 0.0 + (0.0))), float(mat4x2(_GLF_IDENTITY(tan(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0 + (tan(_GLF_IDENTITY(0.0, 0.0 + (0.0))))), 1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(injectionSwitch[0]) : 1.0)), mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(-360.850, (-360.850) / 1.0))), bool(false))))), 0.0, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(98210))), bool(false))), 1.0))))), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0), round(length(normalize(vec3(1.0, 1.0, 1.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(-9.9, -1.5, 7.1)) : vec3(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0), round(length(normalize(vec3(1.0, 1.0, 1.0))))))), vec3(0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, sqrt(0.0)))), _GLF_IDENTITY(0.0, 1.0 * (0.0)))), _GLF_IDENTITY((dot(vec3(1.0, 0.0, round(length(normalize(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - 0.0)))))), vec3(0.0, 1.0, 0.0))), mix(float((dot(vec3(1.0, 0.0, round(length(normalize(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - 0.0)))))), vec3(0.0, 1.0, 0.0)))), float(_GLF_FUZZED(-8.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) - log(1.0))), _GLF_IDENTITY(abs(_GLF_IDENTITY(0.0, min(0.0, 0.0))), (abs(0.0)) / 1.0))))), (vec3(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, tan(_GLF_IDENTITY(0.0, 0.0 + (0.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7828.4041) : 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(injectionSwitch[0]) : 1.0)), mix(float(1.0), float(_GLF_FUZZED(-360.850)), bool(false))))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), (dot(vec3(1.0, 0.0, round(length(normalize(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(-59429))), bool(false)))) / 1.0), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - 0.0)))))), vec3(0.0, 1.0, 0.0))) - log(1.0))), _GLF_IDENTITY(abs(0.0), _GLF_IDENTITY((abs(0.0)), mix(float(_GLF_IDENTITY((abs(0.0)), (true ? (abs(0.0)) : _GLF_FUZZED(1.5)))), float(_GLF_FUZZED(6.5)), bool(false))) / 1.0)))))) / vec3(1.0, 1.0, 1.0))) / vec3(1.0, 1.0, 1.0)), vec3(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, tan(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.3), _GLF_FUZZED(69.51)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))) + log(vec2(1.0, 1.0)))[0]) : 1.0)), mix(float(1.0), float(_GLF_FUZZED(-360.850)), bool(false))))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.5)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(628.887)))), bool(true))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * abs(sqrt(1.0))))), (dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), clamp(_GLF_IDENTITY((1.0), max((1.0), (1.0))), (1.0), (1.0))) - 0.0)) - 0.0)))))), vec3(0.0, 1.0, 0.0))) - log(1.0))), _GLF_IDENTITY(abs(0.0), _GLF_IDENTITY((abs(0.0)), (false ? _GLF_FUZZED(2.2) : (abs(0.0)))) / 1.0))))))), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, tan(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), max(round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0))))))), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(mat3(1.0) * (vec3(0.0, 1.0, 0.0)), min(mat3(1.0) * _GLF_IDENTITY((vec3(0.0, 1.0, 0.0)), mat3(1.0) * ((vec3(0.0, 1.0, 0.0)))), _GLF_IDENTITY(mat3(1.0) * (vec3(0.0, 1.0, 0.0)), (mat3(1.0) * (vec3(0.0, 1.0, 0.0))) / sqrt(vec3(1.0, 1.0, 1.0))))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(6.8)), float(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), abs(0.0))))), mix(vec3((_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-21.50)), bool(false))), 0.0, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, abs(1.0), sqrt(1.0), 0.0))), 0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), mat2(1.0) * (vec2(1.0, 0.0))))), 0.0))), abs(0.0))), (true ? _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-21.50)), bool(false))), 0.0, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, abs(1.0), sqrt(1.0), 0.0))), 0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), mat2(1.0) * (vec2(1.0, 0.0))))), 0.0))), abs(0.0))), (_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-21.50)), bool(false))), 0.0, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, abs(1.0), sqrt(1.0), 0.0))), 0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), mat2(1.0) * (vec2(1.0, 0.0))))), 0.0))), abs(0.0))), float(float(float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-21.50)), bool(false))), 0.0, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, abs(1.0), sqrt(1.0), 0.0))), 0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), mat2(1.0) * (vec2(1.0, 0.0))))), 0.0))), abs(0.0))))))) + 0.0) : _GLF_FUZZED(log2(4628.1889)))))), vec3(_GLF_IDENTITY(mat3x4(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-21.50)), bool(false))), 0.0, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, abs(1.0), sqrt(1.0), 0.0))), 0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), mat2(1.0) * (vec2(1.0, 0.0))))), 0.0))), abs(0.0))), (true ? _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-21.50)), bool(false))), 0.0, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, abs(1.0), sqrt(1.0), 0.0))), 0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), mat2(1.0) * (vec2(1.0, 0.0))))), 0.0))), abs(0.0))), (_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-21.50)), bool(false))), 0.0, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, abs(1.0), sqrt(1.0), 0.0))), 0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), mat2(1.0) * (vec2(1.0, 0.0))))), 0.0))), abs(0.0))), float(float(float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-21.50)), bool(false))), 0.0, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, abs(1.0), sqrt(1.0), 0.0))), 0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), mat2(1.0) * (vec2(1.0, 0.0))))), 0.0))), abs(0.0))))))) + 0.0) : _GLF_FUZZED(log2(4628.1889)))))), 0.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) / 1.0)), 1.0, 0.0), mat3x4(mat4(mat3x4(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-21.50)), bool(false))), 0.0, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, abs(1.0), sqrt(1.0), 0.0))), 0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), mat2(1.0) * (vec2(1.0, 0.0))))), 0.0))), abs(0.0))), (true ? _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-21.50)), bool(false))), 0.0, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, abs(1.0), sqrt(1.0), 0.0))), 0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), mat2(1.0) * (vec2(1.0, 0.0))))), 0.0))), abs(0.0))), (_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-21.50)), bool(false))), 0.0, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, abs(1.0), sqrt(1.0), 0.0))), 0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), mat2(1.0) * (vec2(1.0, 0.0))))), 0.0))), abs(0.0))), float(float(float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-21.50)), bool(false))), 0.0, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, abs(1.0), sqrt(1.0), 0.0))), 0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), mat2(1.0) * (vec2(1.0, 0.0))))), 0.0))), abs(0.0))))))) + 0.0) : _GLF_FUZZED(log2(4628.1889)))))), 0.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), (dot(vec2(1.0, 0.0), vec2(0.0, 1.0))) / 1.0)), 1.0, 0.0)))))), mix(vec3(_GLF_FUZZED(-97.23), (vec3(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1623.3378) : 0.0)), 0.0)), 1.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, abs(1.0), sqrt(1.0), 0.0))), 0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0))), abs(0.0))))))[1], _GLF_FUZZED(696.196)), vec3((vec3(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, abs(1.0), sqrt(1.0), 0.0))), 0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, sin(0.0), 1.0), vec4(0.0, 0.0, sin(0.0), 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, sin(0.0), 1.0), vec4(0.0, 0.0, sin(0.0), 1.0)), (dot(vec4(0.0, 0.0, sin(0.0), 1.0), vec4(0.0, 0.0, sin(0.0), 1.0))) / 1.0)) * (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0, 1.0))))), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), vec3(vec4(vec3(0.0, 1.0, 0.0), 0.0)))))), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0))), abs(0.0))))))[0], _GLF_FUZZED(4958.4974), _GLF_IDENTITY((vec3(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, abs(1.0), sqrt(1.0), 0.0))), 0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0))), abs(0.0)))))), min((vec3(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, abs(1.0), sqrt(1.0), 0.0))), 0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0))), abs(0.0)))))), _GLF_IDENTITY((vec3(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, abs(1.0), sqrt(1.0), 0.0))), 0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0))), abs(0.0)))))), clamp(_GLF_IDENTITY((vec3(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, abs(1.0), sqrt(1.0), 0.0))), 0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0))), abs(0.0)))))), max((vec3(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, abs(1.0), sqrt(1.0), 0.0))), 0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0))), abs(0.0)))))), (vec3(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, abs(1.0), sqrt(1.0), 0.0))), 0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0))), abs(0.0)))))))), (vec3(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, abs(1.0), sqrt(1.0), 0.0))), 0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0))), abs(0.0)))))), (vec3(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0 + (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, abs(1.0), sqrt(1.0), 0.0))), 0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0))), abs(0.0))))))))))[2]), bvec3(true, false, true))))[0], (vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, tan(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 1.0, 1.0)))))), round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5028.4632) : 0.0)), (0.0) * 1.0), 1.0, 0.0))), abs(0.0)))), _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(-5.8) : max(1.0, 1.0)))), 0.0, 0.0, tan(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0))), abs(0.0)))), _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, tan(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0))), (_GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), clamp(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, 1.0))))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)))) - 0.0), abs(0.0))))), min(min(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(tan(_GLF_IDENTITY(0.0, 0.0 + (0.0))), _GLF_IDENTITY(float(mat3x4(tan(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), float(_GLF_IDENTITY(mat4x3(float(mat3x4(tan(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0), mat4x3(mat4x3(mat4x3(float(mat3x4(tan(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0))), abs(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(526.024))), 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.6)), float(0.0), bool(true))))))))), _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(1.5)), float(float(1.0)), bool(true))))), 1.0)), 0.0, 0.0, tan(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0))), abs(0.0))))), min(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4564.2709)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(1.0, 1.0)), 0.0, 0.0, tan(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(abs(0.0), (abs(0.0)) / cos(0.0))))), _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0))), abs(0.0))))))))))[1], (vec3(_GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0))), float(_GLF_FUZZED((-51.18 * -5354.8165))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), max(1.0, 1.0)), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(-8236.0887))), tan(_GLF_IDENTITY(0.0, 0.0 + (0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.2)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), 1.0)))), float(mat3(round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.2)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)))))), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.2)), bool(false))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(round(length(normalize(vec3(1.0, 1.0, 1.0)))), max(round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0))))))), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0))))), vec3(0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(1920.8848))), 0.0)), min(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), (true ? dot(vec3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-336.055) : float(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(-4478.5428), max(_GLF_FUZZED(-4478.5428), _GLF_IDENTITY(_GLF_FUZZED(-4478.5428), max(_GLF_FUZZED(-4478.5428), _GLF_FUZZED(-4478.5428))))))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), clamp(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), vec3(0.0, 1.0, 0.0)), min(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), (true ? dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)) : _GLF_FUZZED(-4478.5428))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), min(dot(vec3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), (true ? dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)) : _GLF_FUZZED(-4478.5428))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(-3.3) : length(normalize(vec3(1.0, 1.0, 1.0))))))), vec3(0.0, 1.0, 0.0)), min(dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)), (true ? dot(vec3(1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec3(0.0, 1.0, 0.0)) : _GLF_FUZZED(-4478.5428))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY((- _GLF_IDENTITY(-99.07, max(-99.07, -99.07))), ((- _GLF_IDENTITY(-99.07, max(-99.07, -99.07)))) - 0.0))), bool(false))))), abs(0.0))))))[2]), vec3(_GLF_FUZZED(2.1), _GLF_FUZZED(62.64), _GLF_FUZZED(9.8)), bvec3(false, false, false))) : _GLF_FUZZED(vec3(vec4(1.6, 2237.7662, 2350.8383, -3948.6660)))))), _GLF_struct_4(_GLF_struct_3(mat2(1.0), ivec4(1)), 1.0, uvec4(_GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u) ^ (0u))))));
 uint workgroup_size = gl_WorkGroupSize.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(reflect(vec2(-75.38, -68.16), injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) ^ 0u), uint(_GLF_IDENTITY(uvec2(subgroup_id, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size)))))), _GLF_IDENTITY(clamp(uvec2(subgroup_id, 1u), uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id)), 1u), uvec2(subgroup_id, 1u)), (_GLF_IDENTITY(clamp(uvec2(subgroup_id, 1u), uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id)), 1u), uvec2(subgroup_id, 1u)), (true ? clamp(uvec2(subgroup_id, 1u), uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id)), 1u), uvec2(subgroup_id, 1u)) : _GLF_FUZZED(uvec2(40150u, 28475u))))) << uvec2(0u, 0u))))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) ^ 0u), uint(_GLF_IDENTITY(uvec2(subgroup_id, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size)))))), _GLF_IDENTITY(clamp(uvec2(subgroup_id, 1u), uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id)), 1u), uvec2(subgroup_id, 1u)), (_GLF_IDENTITY(clamp(uvec2(subgroup_id, 1u), uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id)), 1u), uvec2(subgroup_id, 1u)), (true ? clamp(uvec2(subgroup_id, 1u), uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id)), 1u), uvec2(subgroup_id, 1u)) : _GLF_FUZZED(uvec2(40150u, 28475u))))) << uvec2(0u, 0u))))) * subgroup_size) ^ 0u) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(min(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u))), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u))))), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u)) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u)) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u)))))))))), (true ? min(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u))), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)), clamp(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)), (0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u))) + 0u), 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)), (0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u))) | 0u)))))), ~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u)) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u)) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u)) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u)) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u)))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u)) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u)) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u)))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u)) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u)) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u)))))))) : _GLF_FUZZED(workgroup_base))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u)) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u)) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u)))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u)) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u)) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u))))))))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u)) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u)) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u)))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u)) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u)) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size)), ((~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size))) - 0u)))))))))))) : _GLF_FUZZED((++ workgroup_base))))) + ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-39427)))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0), max(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), _GLF_IDENTITY(_GLF_IDENTITY(~ (1), ~ (~ (~ (1)))), (~ (1)) | (~ (1))))))), 1)), _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1))))))) % subgroup_size);
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       atomicStore(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)], uint(1), 4, 64, 4);
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_GLF_IDENTITY(34833, _GLF_IDENTITY((_GLF_IDENTITY(34833, (false ? _GLF_FUZZED(42151) : 34833))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(34833, (_GLF_IDENTITY(false ? _GLF_FUZZED(42151) : 34833, (false ? _GLF_FUZZED(42151) : 34833) | (false ? _GLF_FUZZED(42151) : 34833))))), _GLF_IDENTITY(int(int((_GLF_IDENTITY(34833, (false ? _GLF_FUZZED(42151) : 34833))))), 1 * (int(int((_GLF_IDENTITY(34833, (false ? _GLF_FUZZED(42151) : 34833)))))))), _GLF_IDENTITY((_GLF_IDENTITY(34833, (false ? _GLF_FUZZED(42151) : 34833))), ((_GLF_IDENTITY(_GLF_IDENTITY(34833, (true ? 34833 : _GLF_FUZZED(-37094))), (false ? _GLF_FUZZED(42151) : 34833)))) | 0), (_GLF_IDENTITY(34833, (_GLF_IDENTITY(false ? _GLF_FUZZED(42151) : 34833, min(false ? _GLF_FUZZED(42151) : 34833, false ? _GLF_FUZZED(42151) : 34833))))))) | 0)))) < subgroup_size)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        barrier();
      }
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
     for(int _injected_loop_counter = _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(4), int(4))), clamp(_GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(4), int(4))), clamp((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(4), int(4))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4))))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(4), int(4))))), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).x)), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x))) | (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), max(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) | (4))), int(4))), int(4))), (false ? _GLF_FUZZED(-84097) : (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) >> (0 & -70887))) << 0)), max(int(4), int(4))), int(4))))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (true ? _GLF_IDENTITY(int(4), int(4)) : _GLF_FUZZED(-63176)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       subgroupAll(false);
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mat3x2(309.220, _GLF_IDENTITY(7.6, (_GLF_IDENTITY(7.6, max(7.6, 7.6))) - 0.0), -6.2, 5.7, 30.53, -7.9)[_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (true ? _GLF_IDENTITY(2, (2) << 0) : _GLF_FUZZED(-59905)))))]))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), min(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(64, min(64, 64)))), 4);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & ivec2(-30123, -21009).t)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(true);
    }
  }
}
