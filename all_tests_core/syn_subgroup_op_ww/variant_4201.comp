#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_11num_workgroupsubgroup_idsubgroup_sizevirtual_gid;
 uvec4 GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_17next_virtual_gidsubgroup_idsubgroup_local_idnext_virtual_gid;
 uvec2 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid;
 uvec4 GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14num_workgroupsubgroup_sizeworkgroup_idworkgroup_size;
 uvec3 GLF_merged3_0_1_16_1_1_11_2_1_17next_virtual_gidsubgroup_idsubgroup_local_id;
 GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_17next_virtual_gidsubgroup_idsubgroup_local_idnext_virtual_gid.xyz = GLF_merged3_0_1_16_1_1_11_2_1_17next_virtual_gidsubgroup_idsubgroup_local_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_11num_workgroupsubgroup_idsubgroup_sizevirtual_gid.y = subgroup_id;
 GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_17next_virtual_gidsubgroup_idsubgroup_local_idnext_virtual_gid.xyz.y = GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_11num_workgroupsubgroup_idsubgroup_sizevirtual_gid.y;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_11num_workgroupsubgroup_idsubgroup_sizevirtual_gid.z = subgroup_size;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
  {
   GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14num_workgroupsubgroup_sizeworkgroup_idworkgroup_size.y = GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_11num_workgroupsubgroup_idsubgroup_sizevirtual_gid.z;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x = subgroup_local_id;
 GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_17next_virtual_gidsubgroup_idsubgroup_local_idnext_virtual_gid.xyz.z = GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_11num_workgroupsubgroup_idsubgroup_sizevirtual_gid.x = num_workgroup;
 GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14num_workgroupsubgroup_sizeworkgroup_idworkgroup_size.x = GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_11num_workgroupsubgroup_idsubgroup_sizevirtual_gid.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14num_workgroupsubgroup_sizeworkgroup_idworkgroup_size.w = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 do
  {
   GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14num_workgroupsubgroup_sizeworkgroup_idworkgroup_size.z = workgroup_id;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_base = GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14num_workgroupsubgroup_sizeworkgroup_idworkgroup_size.w * GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14num_workgroupsubgroup_sizeworkgroup_idworkgroup_size.z;
 uint virtual_gid = workgroup_base + GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_17next_virtual_gidsubgroup_idsubgroup_local_idnext_virtual_gid.xyz.y * GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14num_workgroupsubgroup_sizeworkgroup_idworkgroup_size.y + GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_17next_virtual_gidsubgroup_idsubgroup_local_idnext_virtual_gid.xyz.z;
 GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_11num_workgroupsubgroup_idsubgroup_sizevirtual_gid.w = virtual_gid;
 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y = GLF_merged4_0_1_13_1_1_11_2_1_13_3_1_11num_workgroupsubgroup_idsubgroup_sizevirtual_gid.w;
 uint next_virtual_gid = workgroup_base + GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_17next_virtual_gidsubgroup_idsubgroup_local_idnext_virtual_gid.xyz.y * GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14num_workgroupsubgroup_sizeworkgroup_idworkgroup_size.y + ((GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_17next_virtual_gidsubgroup_idsubgroup_local_idnext_virtual_gid.xyz.z + 1) % GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14num_workgroupsubgroup_sizeworkgroup_idworkgroup_size.y);
 GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_17next_virtual_gidsubgroup_idsubgroup_local_idnext_virtual_gid.w = next_virtual_gid;
 GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_17next_virtual_gidsubgroup_idsubgroup_local_idnext_virtual_gid.xyz.x = GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_17next_virtual_gidsubgroup_idsubgroup_local_idnext_virtual_gid.w;
 atomicStore(buf[GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y], uint(1), 4, 64, 4);
 if(GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_17next_virtual_gidsubgroup_idsubgroup_local_idnext_virtual_gid.xyz.z + 1 < GLF_merged4_0_1_13_1_1_13_2_1_12_3_1_14num_workgroupsubgroup_sizeworkgroup_idworkgroup_size.y)
  {
   atomicStore(buf[GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_17next_virtual_gidsubgroup_idsubgroup_local_idnext_virtual_gid.xyz.x], uint(2), 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[GLF_merged2_0_3_76_3_1_16GLF_merged3_0_1_16_1_1_11_2_1_17next_virtual_gidsubgroup_idsubgroup_local_idnext_virtual_gid.xyz.x], uint(2), 4, 64, 4);
   subgroupAll(true);
  }
}
