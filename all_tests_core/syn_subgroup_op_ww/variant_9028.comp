#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 vec3 _f0;
 bvec2 _f1;
 int _f2;
 int _f3;
} ;

struct _GLF_struct_0 {
 int _f0;
 uint subgroup_size;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 mat3x4 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (false)))))) || false))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (injectionSwitch.x > injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y)))) || false)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(60.97), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2466.0484)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y)) || (! (! (false)))))) || false))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (injectionSwitch.x > injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y)))) || false)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(60.97), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2466.0484)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (mix(vec2(_GLF_FUZZED(60.97), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2466.0484)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) * mat2(1.0))).x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false))) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(mat3x2(3785.7892, -864.885, 5.1, -1.1, 2.2, -9.2)) : mat3x2(injectionSwitch, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))).y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false) && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (false) || false)), false || (bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))), false || (bool(_GLF_IDENTITY(false, (false) || false))))), false, false, false))))))))
              barrier();
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(6480.8349), clamp(_GLF_IDENTITY(_GLF_FUZZED(6480.8349), float(vec2(_GLF_IDENTITY(_GLF_FUZZED(6480.8349), clamp(_GLF_FUZZED(6480.8349), _GLF_FUZZED(6480.8349), _GLF_FUZZED(6480.8349))), 1.0))), _GLF_IDENTITY(_GLF_FUZZED(6480.8349), clamp(_GLF_FUZZED(6480.8349), _GLF_FUZZED(6480.8349), _GLF_FUZZED(6480.8349))), _GLF_IDENTITY(_GLF_FUZZED(6480.8349), min(_GLF_FUZZED(6480.8349), _GLF_FUZZED(6480.8349))))))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, sin(0.0), round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(1.0))), 0.0, 1.0, 1.0))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 0.0))), injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) + length(vec3(0.0, 0.0, 0.0)))))) > injectionSwitch.y)))))) || false)), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), false, true)))))))))))))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, _GLF_IDENTITY(! (! ((_GLF_DEAD(false)) && true)), bool(bvec4(_GLF_IDENTITY(! (! ((_GLF_DEAD(false)) && true)), true && (! (! ((_GLF_DEAD(false)) && true)))), false, false, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       do
        {
         barrier();
         if(_GLF_DEAD(false))
          break;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), true, false)))) || false)))));
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
        continue;
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
        {
         return;
        }
       else
        {
        }
      }
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(44.22, -5.4)) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.7), _GLF_FUZZED(15.94)), bvec2(false, false))), injectionSwitch)))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(44.22, -5.4)) : injectionSwitch)).y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(44.22, -5.4)), max(_GLF_FUZZED(vec2(44.22, -5.4)), _GLF_FUZZED(vec2(44.22, -5.4)))) : injectionSwitch)).y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(44.22, -5.4)), max(_GLF_FUZZED(vec2(44.22, -5.4)), _GLF_FUZZED(vec2(44.22, -5.4)))) : injectionSwitch)).y), true && (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(44.22, -5.4)), max(_GLF_FUZZED(vec2(44.22, -5.4)), _GLF_FUZZED(vec2(44.22, -5.4)))) : injectionSwitch)).y)))))))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(44.22, -5.4)), max(_GLF_FUZZED(vec2(44.22, -5.4)), _GLF_FUZZED(vec2(44.22, -5.4)))) : injectionSwitch)).y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(44.22, -5.4)), max(_GLF_FUZZED(vec2(44.22, -5.4)), _GLF_FUZZED(vec2(44.22, -5.4)))) : injectionSwitch)).y), true && (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(44.22, -5.4)), max(_GLF_FUZZED(vec2(44.22, -5.4)), _GLF_FUZZED(vec2(44.22, -5.4)))) : injectionSwitch)).y)))))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(44.22, -5.4)), max(_GLF_FUZZED(vec2(44.22, -5.4)), _GLF_FUZZED(vec2(44.22, -5.4)))) : injectionSwitch)).y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(44.22, -5.4)), max(_GLF_FUZZED(vec2(44.22, -5.4)), _GLF_FUZZED(vec2(44.22, -5.4)))) : injectionSwitch)).y), true && (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(44.22, -5.4)), max(_GLF_FUZZED(vec2(44.22, -5.4)), _GLF_FUZZED(vec2(44.22, -5.4)))) : injectionSwitch)).y))))))))) || false)))))) || false)))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(_GLF_struct_0(1, gl_SubgroupSize), _GLF_struct_1(_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY((vec3(1.0)) * mat3(_GLF_IDENTITY(1.0, 1.0 * (1.0))), ((vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)))) * mat3(1.0)) / vec3(1.0, 1.0, 1.0))), bvec2(true), 1, 1), mat4x2(1.0)), mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-2.2), max(_GLF_IDENTITY(_GLF_FUZZED(-2.2), min(_GLF_FUZZED(-2.2), _GLF_FUZZED(-2.2))), _GLF_FUZZED(-2.2)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), float(mat4(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-2.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)))), float(mat2(mix(float(1.0), float(_GLF_FUZZED(-2.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0, 0.0, 1.0))), 1.0, 1.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(vec2(float(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 0.0)), (float(vec2(float(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), exp(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)), 0.0))) / 1.0))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0))), 0.0, 1.0))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-715.856) : 1.0)), 1.0, 1.0)))), float(mat4((1.0) / _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-715.856) : 1.0)), 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3005.1749))), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec3(_injected_loop_counter > 0, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))); _injected_loop_counter --)
    {
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))))
  barrier();
 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x = subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true && (false), ! (! (true && (false))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec3(_injected_loop_counter, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), (true ? ivec3(_injected_loop_counter, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0) : _GLF_FUZZED(ivec3(51720, 4502, -80410)))))) != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          break;
         barrier();
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(false, ! (! (false))) || ((! (false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec3(! (! (false)), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (! (false)), false, false), bvec3(bvec4(bvec3(! (! (false)), false, false), true))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (! (false)), false, false), bvec3(bvec4(bvec3(! (! (false)), false, false), true))), true)), false)))))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false))))))))), false, true), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))))), false, true), false)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), _GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(false, false, false)), true)), false || (bool(bvec2(bool(bvec3(false, false, false)), true)))))))), ! (! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(false, false, false)), true)), false || (bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), false)), _GLF_IDENTITY(true, ! (! (true))) && (bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), false)))), true))))))))))))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, false || (false))))))), ! (! (false)))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, false || (false))))))), ! (! (false)))), false, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, false || (false))))))), ! (! (false)))), false, true), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))))), (bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))))) || false)))))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), float(_GLF_IDENTITY(mat2x3((injectionSwitch.x), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(7792.0874, 827.962, -998.635, 0.2, -751.345, 82.49)) : mat2x3((injectionSwitch.x), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0))))) * 1.0) < injectionSwitch.y), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))) || ((injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, max((injectionSwitch.x) * 1.0, (injectionSwitch.x) * 1.0))) < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)))) - 0.0) < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))), false, true, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))), false, true, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))), false, true, false)), false)), true && (bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))), false, true, false)), false))))), false)))) && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)) < injectionSwitch.y)) || false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / 1.0)))), true))))))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))) - 0.0))))), true && (_GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))) - 0.0))))), ! (! (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))) - 0.0))))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((5.2 / -6899.8301))), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) / 1.0)))), true)))))))))))))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), true), true, true)), false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec4(0, 1, 0, 0)))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 0u))).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, tan(0.0), 0.0, abs(1.0), 1.0), mat2(1.0) * (mat3x2(injectionSwitch.x, 0.0, tan(0.0), 0.0, abs(1.0), 1.0))))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true))))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-7.9), float(_GLF_IDENTITY(mat4x3(_GLF_FUZZED(-7.9), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, sqrt(0.0), 0.0, 1.0), (true ? mat4x3(_GLF_FUZZED(-7.9), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, sqrt(0.0), 0.0, 1.0) : _GLF_FUZZED(mat4x3(-6075.1547, 64.43, 8.2, 6.9, -5652.2943, -91.91, -3.6, -8.5, 3464.5589, 0.8, 29.20, 99.18))))))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), bool(bool(bool(true)))))) > injectionSwitch.y))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) || false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), true, false))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 << _GLF_IDENTITY(int(7), int(7))), bool(bvec3(_injected_loop_counter != (0 << _GLF_IDENTITY(int(7), int(7))), true, true)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y = workgroup_id;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-80.00)), bool(false))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-725.801)), float(injectionSwitch.y), bool(true)))))))))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.1) : injectionSwitch.y))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, determinant(mat3(0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, sin(0.0), 0.0, 1.0, 0.0, 1.0))).x > injectionSwitch.y))), false, false)), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, determinant(mat3(0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, sin(0.0), 0.0, 1.0, 0.0, 1.0))).x > injectionSwitch.y))), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, determinant(mat3(0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, sin(0.0), 0.0, 1.0, 0.0, 1.0))).x > injectionSwitch.y))), false, false)), true))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, determinant(mat3(0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, sin(0.0), 0.0, 1.0, 0.0, 1.0))).x > injectionSwitch.y))), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, determinant(mat3(0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, sin(0.0), 0.0, 1.0, 0.0, 1.0))).x > injectionSwitch.y))), false, false)), true))), false, false)), false, false)))))))))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        continue;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (true))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)))
          {
          }
         else
          {
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
    }
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)).y;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_struct_replacement_3._f0._f0.subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, log(1.0), exp(0.0), 0.0, cos(0.0), 0.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0)) * mat4(1.0))), clamp(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0)) * mat4(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0)) * mat4(1.0))), (float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x)), 0.0, 0.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0)) * mat4(1.0)))) * 1.0), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0)) * mat4(1.0)))))), float(mat2x3(injectionSwitch.x, log(1.0), exp(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 0.0, cos(0.0), 0.0))) : _GLF_FUZZED(68.60))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bvec4(bool(bvec2(true, false)), false, false, true))))) || false) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))) && true), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) + 0.0), (injectionSwitch.y) * 1.0)))))) && true)))))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      break;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) * (injectionSwitch)).x, (false ? _GLF_FUZZED(739.756) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) * (injectionSwitch)).x)) > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false), false))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            return;
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), (workgroup_base) >> _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) + 0u), _GLF_IDENTITY(0u, max(0u, 0u)), 0u)))) + (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY((uint(6u)) << 0u, 0u + ((uint(6u)) << 0u)), (false ? _GLF_FUZZED(virtual_gid) : (uint(6u)) << 0u)))), uint(uvec3(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (true ? _GLF_IDENTITY(6u, (6u) * 1u) : _GLF_FUZZED(((virtual_gid)))))), _GLF_IDENTITY(_GLF_IDENTITY((uint(6u)) << 0u, 0u + (_GLF_IDENTITY((uint(6u)) << 0u, ((uint(6u)) << 0u) << 0u))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY((uint(6u)), ((uint(6u))) << 0u) << 0u)))), 0u, 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), (workgroup_base) >> _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) + 0u), _GLF_IDENTITY(0u, max(0u, 0u)), 0u)))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), (workgroup_base) >> _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) + 0u), _GLF_IDENTITY(0u, max(0u, 0u)), 0u)))), max((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), (workgroup_base) >> _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) + 0u), _GLF_IDENTITY(0u, max(0u, 0u)), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), (workgroup_base) >> _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) + 0u), _GLF_IDENTITY(0u, max(0u, 0u)), 0u)))))))) + (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY((uint(6u)) << 0u, 0u + ((uint(6u)) << 0u)), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(uint(uint(6u)), ~ (~ (uint(uint(6u)))))))) << 0u)))), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY((uint(6u)) << 0u, 0u + ((uint(6u)) << 0u)), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(uint(uint(6u)), ~ (~ (uint(uint(6u)))))))) << 0u))))) | (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY((uint(6u)) << 0u, 0u + ((uint(6u)) << 0u)), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(uint(uint(6u)), ~ (~ (uint(uint(6u)))))))) << 0u)))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) >> _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) + 0u), _GLF_IDENTITY(0u, max(0u, 0u)), 0u)))) + (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY((uint(6u)) << 0u, 0u + _GLF_IDENTITY(((uint(6u)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | 0u)), (((uint(6u)) << 0u)) / 1u)), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(uint(uint(6u)), (false ? _GLF_FUZZED(workgroup_size) : uint(uint(6u)))))), uint(uvec4(uint(_GLF_IDENTITY(6u, _GLF_IDENTITY(uint(uint(6u)), (false ? _GLF_FUZZED(workgroup_size) : uint(uint(6u)))))), 1u, 1u, 1u)))) << 0u)))))))) + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) | (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1))) << _GLF_IDENTITY(0u, max(0u, 0u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, 0u | (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1)), _GLF_IDENTITY(uint(uint(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1)), max(uint(_GLF_IDENTITY(uint(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), 0u | (uint(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, min(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x))) << 0u) + 1)))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))).x + 1, min(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))).x + 1, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))).x + 1)), (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / (_GLF_IDENTITY((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), clamp(uint(uvec3(1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(uvec3(1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(uvec3(1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))), uvec2(_GLF_IDENTITY(1u, 0u + (1u))))))), (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), clamp(uint(uvec3(1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(uvec3(1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(uvec3(1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))), uvec2(_GLF_IDENTITY(1u, 0u + (1u))))))), min((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), clamp(uint(uvec3(1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(uvec3(1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(uvec3(1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))), uvec2(_GLF_IDENTITY(1u, 0u + (1u))))))), (uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), clamp(uint(uvec3(1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(uvec3(1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(uvec3(1u, 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))), uvec2(_GLF_IDENTITY(1u, 0u + (1u))))))))) : _GLF_FUZZED(uvec2(13263u, 63424u)))) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))).x + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), min(uvec2(1u), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) | (uvec2(1u)))))) >> uvec2(0u, 0u)), uvec2(1u)))).x, (true ? _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), min(uvec2(1u), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) | (uvec2(1u)))))) >> uvec2(0u, 0u)), uvec2(1u)))).x : _GLF_FUZZED(subgroup_local_id))) + 1))))))), clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | 0)) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), 0u | (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1)), _GLF_IDENTITY(uint(uint(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1)), max(uint(_GLF_IDENTITY(uint(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), 0u | (uint(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, min(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x))) << 0u) + 1)))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))).x + 1, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))).x + 1) | (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))), 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) >> uvec2(0u, 0u)), uvec2(1u)))).x + 1))))))), 0u | (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, 0u | (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), (uint(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1)) / 1u)), max(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x) * 1u) + 1), 0u | (uint(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, min(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x))) << 0u) + 1)))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), max(uvec2(1u), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) ^ (uvec2(1u)))))))).x, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), max(uvec2(1u), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) ^ (uvec2(1u)))))))).x, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), max(uvec2(1u), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) ^ (uvec2(1u)))))))).x) | (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), max(uvec2(1u), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) ^ (uvec2(1u)))))))).x)))) + 1, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))).x + 1) | (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(uvec4(uvec2(1u), 0u, 0u))), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))).x + 1))))))))), _GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, 0u | (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) >> 0u))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, 0u ^ (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, ~ (~ (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1))))))), max(uint(_GLF_IDENTITY(uint(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), 0u | (uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, min(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x))) << 0u) + 1, 1u * (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, min(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id)).x, min(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, clamp(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, (true ? GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x : _GLF_FUZZED(virtual_gid))), GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x))) >> 0u)))) << 0u) + 1)))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u)))), (false ? _GLF_FUZZED(uvec2(78193u, 198353u)) : _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u))), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))))) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))).x + 1, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))).x + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))), (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u))))) << (uvec2(0u, 0u) | uvec2(0u, 0u))), _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))))).x + _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, clamp(1, 1, 1)), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))))))))))), max(false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, _GLF_IDENTITY(0u, (0u) + 0u) | (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1)), max(uint(_GLF_IDENTITY(uint(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), 0u | (uint(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, min(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x))) << 0u) + 1)))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))).x + 1, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))).x + 1) | (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))).x + 1)))))), (_GLF_IDENTITY(uint(uint(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1)), max(uint(_GLF_IDENTITY(uint(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), 0u | (uint(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, min(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x))) << 0u) + 1)))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))).x + 1, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))).x + 1) | (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))).x + 1))))))) ^ 0u)), false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, 0u | (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x)) + 1)), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), uint(uvec3(uint(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), 1u, 1u))), 0u | (uint(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, min(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x))) << 0u) + 1)))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(1u)), (_GLF_IDENTITY(uvec2(1u), uvec2(1u))) | (_GLF_IDENTITY(uvec2(1u), uvec2(1u)))))).x + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 1 * (1)), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) + uvec2(0u, 0u)), (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))).x + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))), uvec2(0u, 0u) | (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))))).x + 1))))))))), false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1)))), 0u | (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1)), _GLF_IDENTITY(uint(uint(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1)), max(uint(_GLF_IDENTITY(uint(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), 0u | (uint(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, min(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x))) << 0u) + 1)))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))).x, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))).x) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / (_GLF_IDENTITY((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))), (false ? _GLF_FUZZED(uvec2(148321u, 33427u)) : (uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))))) >> _GLF_IDENTITY(uvec2(1u), uvec2(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (1u) | (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))))))).x + 1) | (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), clamp(_GLF_IDENTITY(uvec2(1u), (false ? _GLF_FUZZED(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) : uvec2(1u))), uvec2(1u), uvec2(1u))))) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))).x + _GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(int(2), int(2)))))))))))))))), max((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, max(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) >> uvec2(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | (0u)))), clamp(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) >> uvec2(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, uvec2(uvec3(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, 1u))), (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) >> uvec2(0u, 0u)), (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) >> uvec2(0u, 0u))) - uvec2(0u, 0u)), _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) >> uvec2(0u, 0u)))).x + 1, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u)) : GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), _GLF_IDENTITY(uint(uvec2((false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) << 0u)), 1u)), uint(uvec4(uint(uvec2(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_base), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_base), ~ (~ (_GLF_FUZZED(subgroup_base))))) | (_GLF_FUZZED(subgroup_base)))) | _GLF_IDENTITY((_GLF_FUZZED(subgroup_base)), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_FUZZED(subgroup_base))))) : GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), uint(uvec4((false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_base), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_base), ~ (~ (_GLF_FUZZED(subgroup_base))))) | (_GLF_FUZZED(subgroup_base)))) | _GLF_IDENTITY((_GLF_FUZZED(subgroup_base)), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_FUZZED(subgroup_base))))) : GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1), 1u, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), 1u)), 0u, 1u, 0u)))))))) % _GLF_IDENTITY(_GLF_struct_replacement_3._f0._f0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_3._f0._f0.subgroup_size, 1u * (_GLF_struct_replacement_3._f0._f0.subgroup_size))) - (155527u & 0u)));
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (uint(1)), (~ (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), uint(uint(uint(1))))) | _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(virtual_gid))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uint(uint(1)))), (_GLF_IDENTITY(uint(1), uint(uint(uint(1))))) / 1u)) | 0u) | ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uint(uint(1)))), uint(uvec4(_GLF_IDENTITY(uint(1), uint(uint(uint(1)))), 1u, 0u, (1u | uint(_GLF_ONE(1.0, injectionSwitch.y))))))) | 0u))))) >> 0u))), 4, 64, 4);
 if((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x % 2) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bool((! (true))))))))
    {
     do
      {
       subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))) || (true), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5615.7395, -4.1)) : injectionSwitch)))).x > injectionSwitch.y)))))))) || _GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) || false), false || (_GLF_IDENTITY((true), ((true)) || false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) : _GLF_FUZZED(-6.4))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(586.133) : injectionSwitch.y)))))))))) || (true), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), false || ((! (injectionSwitch.x > injectionSwitch.y)))))))))) || _GLF_IDENTITY((true), _GLF_IDENTITY(((true)) || false, bool(bvec3(((true)) || false, true, false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))) || (true), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_IDENTITY((true), ((true)) || false))))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec4(bvec2(! (injectionSwitch.x > injectionSwitch.y), true), false, true)))))))))))) || (true), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_IDENTITY((true), _GLF_IDENTITY(((true)) || false, ! (! ((_GLF_IDENTITY((true), ((true)) && true)) || false)))))))))))))));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) * 1), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) * 1), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) * 1), max(_GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) * 1), _GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) * 1))), _GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) * 1))), _GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) * 1))) : _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (0 & 69018) ^ (_GLF_IDENTITY(int(7), int(7)))), (_GLF_IDENTITY(int(7), int(7))) ^ 0))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) * 1), (true ? _GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) * 1) : _GLF_FUZZED(-10246))) : _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0)))))), int(ivec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (false ? _GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) * 1) : _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (false ? _GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) * 1) : _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0)))))) ^ 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (false ? _GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) * 1) : _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (false ? _GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) * 1) : _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0)))))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (false ? _GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) * 1) : _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (false ? _GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) * 1) : _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (false ? _GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) * 1) : _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0))))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (false ? _GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) * 1) : _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (false ? _GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) * 1) : _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0))))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (false ? _GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) * 1) : _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0))))))))))) << _GLF_IDENTITY(0, (0) / 1)), 0)))))) << 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 | (int(7))), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (false ? _GLF_IDENTITY(_GLF_FUZZED(6682), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) | (_GLF_FUZZED(6682)))), ((_GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) | (_GLF_FUZZED(6682))))) / (1 | 1)) * 1) : _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0)))))) << 0)), clamp(_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 | (int(7))), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (false ? _GLF_IDENTITY(_GLF_FUZZED(6682), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) | (_GLF_FUZZED(6682)))), ((_GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) | (_GLF_FUZZED(6682))))) / (1 | 1)) * 1) : _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0)))))) << 0)), _GLF_IDENTITY(int(ivec3(0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 | (int(7))), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (false ? _GLF_IDENTITY(_GLF_FUZZED(6682), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) | (_GLF_FUZZED(6682)))), ((_GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) | (_GLF_FUZZED(6682))))) / (1 | 1)) * 1) : _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0)))))) << 0)), 1, 0)), int(int(int(ivec3(0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 | (int(7))), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (false ? _GLF_IDENTITY(_GLF_FUZZED(6682), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) | (_GLF_FUZZED(6682)))), ((_GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) | (_GLF_FUZZED(6682))))) / (1 | 1)) * 1) : _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0)))))) << 0)), 1, 0)))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 | (int(7))), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (false ? _GLF_IDENTITY(_GLF_FUZZED(6682), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) | (_GLF_FUZZED(6682)))), ((_GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) | (_GLF_FUZZED(6682))))) / (1 | 1)) * 1) : _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0)))))) << 0)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 | (int(7))), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (false ? _GLF_IDENTITY(_GLF_FUZZED(6682), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) | (_GLF_FUZZED(6682)))), ((_GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) | (_GLF_FUZZED(6682))))) / (1 | 1)) * 1) : _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0)))))) << 0)))), (true ? 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 | (int(_GLF_IDENTITY(7, max(7, 7))))), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (false ? _GLF_IDENTITY(_GLF_FUZZED(6682), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) | (_GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) - 0)))), ((_GLF_IDENTITY(_GLF_FUZZED(6682), (_GLF_FUZZED(6682)) | (_GLF_FUZZED(6682))))) / (1 | 1)) * 1) : _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0), 0)))))))) << 0)) : _GLF_FUZZED(82251)))) - 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | _GLF_IDENTITY(0, _GLF_IDENTITY((0), ~ (~ ((0)))) - 0))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) && true) && true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) / 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
              {
               barrier();
              }
            }
           barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, 0))) | (0), ((_GLF_IDENTITY(0, clamp(0, 0, 0))) | (0)) << 0))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               barrier();
              }
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         else
          {
          }
        }
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), ((_GLF_IDENTITY(false, bool(bvec2(false, true))))) || false) && true))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(float(true))), vec2(_GLF_FUZZED(3.1), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))).y))))
        barrier();
       barrier();
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))), false, false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))), false, false)))))), true)))))), (false) || false), _GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y) || false))), true))))) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bool(bool(bvec3(false, true, true))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(64.95))) < injectionSwitch.y))))))), true && (_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, true && (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(64.95), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(64.95), min(true ? injectionSwitch.x : _GLF_FUZZED(64.95), true ? injectionSwitch.x : _GLF_FUZZED(64.95))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0), max(vec4(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(64.95), min(true ? injectionSwitch.x : _GLF_FUZZED(64.95), true ? injectionSwitch.x : _GLF_FUZZED(64.95))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0), vec4(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(64.95), min(true ? injectionSwitch.x : _GLF_FUZZED(64.95), true ? injectionSwitch.x : _GLF_FUZZED(64.95))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0)))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(64.95), min(true ? injectionSwitch.x : _GLF_FUZZED(64.95), true ? injectionSwitch.x : _GLF_FUZZED(64.95))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0), max(vec4(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(64.95), min(true ? injectionSwitch.x : _GLF_FUZZED(64.95), true ? injectionSwitch.x : _GLF_FUZZED(64.95))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0), vec4(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(64.95), min(true ? injectionSwitch.x : _GLF_FUZZED(64.95), true ? injectionSwitch.x : _GLF_FUZZED(64.95))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0)))), float(mat3x4(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(64.95), min(true ? injectionSwitch.x : _GLF_FUZZED(64.95), true ? injectionSwitch.x : _GLF_FUZZED(64.95))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0), max(vec4(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(64.95), min(true ? injectionSwitch.x : _GLF_FUZZED(64.95), true ? injectionSwitch.x : _GLF_FUZZED(64.95))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0), vec4(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(64.95), min(true ? injectionSwitch.x : _GLF_FUZZED(64.95), true ? injectionSwitch.x : _GLF_FUZZED(64.95))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(64.95), min(true ? injectionSwitch.x : _GLF_FUZZED(64.95), true ? injectionSwitch.x : _GLF_FUZZED(64.95))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0), max(vec4(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(64.95), min(true ? injectionSwitch.x : _GLF_FUZZED(64.95), true ? injectionSwitch.x : _GLF_FUZZED(64.95))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0), vec4(_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(64.95), min(true ? injectionSwitch.x : _GLF_FUZZED(64.95), true ? injectionSwitch.x : _GLF_FUZZED(64.95))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0))))))))) < injectionSwitch.y)))))))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))) || false)))
                  barrier();
                 return;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   return;
                  }
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false)))))))
                  {
                   return;
                   if(_GLF_DEAD(false))
                    return;
                  }
                 else
                  {
                  }
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  return;
                }
              }
            }
           else
            {
            }
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, min(1, 1))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, min(1, 1))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), 1 * (min(1, 1)))))))))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5554.4921), _GLF_FUZZED(386.731)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5554.4921), _GLF_FUZZED(386.731)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5554.4921), _GLF_FUZZED(386.731)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5554.4921), _GLF_FUZZED(386.731)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5554.4921), _GLF_FUZZED(386.731)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5554.4921), _GLF_FUZZED(386.731)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-25.28)), _GLF_FUZZED(-2.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, injectionSwitch.y)), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.8, -50.84)) : injectionSwitch)).y))), 1.0 * (_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), float(mat3x2(float(vec3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 1.0, 0.0, 0.0, 0.0))))))))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       continue;
                      }
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                    }
                   else
                    {
                    }
                  }
                }
               else
                {
                }
              }
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3853.3532, 2730.9688)) : injectionSwitch)), injectionSwitch)).y))))
      {
      }
     else
      {
       barrier();
      }
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.3), _GLF_FUZZED(9831.6939)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y))).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false)))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || _GLF_IDENTITY(false, true && (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.x : _GLF_FUZZED(-3.8))) > injectionSwitch.y)))))))
        continue;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(true, (true) || false) && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) / _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0)))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) / _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0)))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) / _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0)))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0)), float(mat2x4(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), mix(float(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(-51.25)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0)))) > injectionSwitch.y) && true)) && true)))), true, false, true)))))), true && _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), bool(_GLF_IDENTITY(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), true), bvec2(bvec3(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           barrier();
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))))), (! (_GLF_DEAD(false))) || false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)), (bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))) && true)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(99.36) : injectionSwitch.x)))) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(99.36) : injectionSwitch.x)))) > injectionSwitch.y)) && true))))
          {
           if(_GLF_DEAD(false))
            barrier();
           continue;
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          continue;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
          continue;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0)), injectionSwitch.y))))));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         subgroupAll(false);
        }
       do
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)));
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --)))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0) != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0)), sin(0.0), 0.0)), min(_GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0)), sin(0.0), 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat2x3(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0)), sin(0.0), 0.0)))), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0)), sin(0.0), 0.0)), (vec2(mat2x3(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0)), sin(0.0), 0.0))) / vec2(1.0, 1.0))))).y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
      return;
     barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ -6.1))), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3.0)), float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0)))), bool(true)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}
