#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))), true && ((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))))))), false, false)))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)))))) && true)))
      return;
     return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), true, false, false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false, false))), true && (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false, false)))))), (! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (false)), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))) && true))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (true && (false)), (! (_GLF_IDENTITY(true, false || (true)) && (false))) && true)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (true && (false)), (! (_GLF_IDENTITY(true, false || (true)) && (false))) && true)))), ! (! (! (! (! (_GLF_IDENTITY(! (true && (false)), (! (_GLF_IDENTITY(true, false || (true)) && (false))) && true)))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false))), true && (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false))), bool(_GLF_IDENTITY(bvec3(! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (false)), (! (_GLF_IDENTITY(true, false || (true)) && (false))) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (false)), (! (_GLF_IDENTITY(true, false || (true)) && (false))) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false), bool(bvec3(true, false, true))) && (false)), (! (_GLF_IDENTITY(true, false || (true)) && (false))) && true))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true, true))) && (false)), (! (_GLF_IDENTITY(true, false || (true)) && (false))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (false)), (! (_GLF_IDENTITY(true, false || (true)) && (false))) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (false)), (! (_GLF_IDENTITY(true, false || (true)) && (false))) && true)))))))), false), true, false)))))))) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (true && (false)), (! (_GLF_IDENTITY(true, false || (true)) && (false))) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(! (true && (false)), (! (_GLF_IDENTITY(true, false || (true)) && (false))) && true))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false))), true && (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false)))))), true && (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false))), true && (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (false)), (! (_GLF_IDENTITY(true, false || (true)) && (false))) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (false)))), (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (false || (true))))) && (false))) && _GLF_IDENTITY(true, (true) && true))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, false, true)), bvec3(bvec4(bvec3(bvec3(true, false, true)), true))))))) && (false)), (! (_GLF_IDENTITY(true, false || (true)) && (false))) && true))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (false)), (! (_GLF_IDENTITY(true, false || (true)) && (false))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true))))) && (false))) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true))))) && (false))) && true)))))))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (false)), (! (_GLF_IDENTITY(true, false || (true)) && (false))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true))))) && (false))) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true))))) && (false))) && true)))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (false)), (! (_GLF_IDENTITY(true, false || (true)) && (false))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true))))) && (false))) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true))))) && (false))) && true)))))))), false)))), false, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (false)), (! (_GLF_IDENTITY(true, false || (true)) && (false))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true))))) && (false))) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true))))) && (false))) && true)))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (false)), (! (_GLF_IDENTITY(true, false || (true)) && (false))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true))))) && (false))) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(true, false, true))) && (false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true))))) && (false))) && true)))))))), false)))), false, true)), true, false)))), true, false)))))))) || false))))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x))))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0))
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), false || ((_GLF_WRAPPED_IF_FALSE(false))))) && true) || false))
      {
      }
     else
      {
       return;
      }
    }
  }
 else
  {
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-60.46 - -339.055))), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(tan(vec2(0.0, 0.0))), mix(vec2((exp(tan(vec2(0.0, 0.0))))[0], (exp(tan(vec2(0.0, 0.0))))[1]), vec2(_GLF_FUZZED(vec2(-6.2, 9415.1093).g), _GLF_FUZZED(vec3(-5073.0553, -400.235, 767.803).x)), bvec2(false, false)))))), injectionSwitch)).y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED((-60.46 - -339.055)), clamp(_GLF_FUZZED((-60.46 - -339.055)), _GLF_FUZZED((-60.46 - -339.055)), _GLF_IDENTITY(_GLF_FUZZED((-60.46 - -339.055)), mix(float(_GLF_FUZZED(-2443.7148)), float(_GLF_IDENTITY(_GLF_FUZZED((-60.46 - -339.055)), float(mat2x4(_GLF_FUZZED((-60.46 - -339.055)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))), bool(true)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(0.0) : injectionSwitch.x)))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(step(8.8, (+ -8.6))) : injectionSwitch.x))), bool(true))) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(8.2), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-59.82)), bvec2(true, false)))) * exp(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) / exp(tan(vec2(0.0, 0.0)))))), injectionSwitch)).y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))) + (float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(-1.8)), bool(false))) < injectionSwitch.y) || false), true, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), true, false))))))))))), false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(475u, 158733u, 42595u))))) | (gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) >> uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))) >> (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u)))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(6100.4648), min(_GLF_FUZZED(6100.4648), _GLF_IDENTITY(_GLF_FUZZED(6100.4648), 1.0 * (_GLF_FUZZED(6100.4648))))) : injectionSwitch.y))), min(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6100.4648) : injectionSwitch.y))), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6100.4648) : injectionSwitch.y)))))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(6100.4648, min(6100.4648, 6100.4648))) : injectionSwitch.y)))), false)))))), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), true, false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y)))))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))))) || false)))))))))))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.0)), float(injectionSwitch.y), bool(true))))), bool(bvec3(_GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), true, false)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y)))))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))))) || false)))))))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y)))))))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)), bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))))) || false)))))))))))))))), bool(bvec4(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))), bool(bvec2(_GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))), bool(_GLF_IDENTITY(bvec2((false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))), false), bvec2(bvec3(bvec2((false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))), false), false))))), true))))), false || ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-5576.1363)), vec2(_GLF_FUZZED(-1.5), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))) : _GLF_IDENTITY(_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))), mix(vec2((_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))[0], (_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))[1]), vec2(_GLF_FUZZED(vec3(-86.03, -6.0, -9.6).s), _GLF_FUZZED(-7.8)), bvec2(false, false))))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))) : _GLF_IDENTITY(_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))), mix(vec2((_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))[0], (_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))[1]), vec2(_GLF_FUZZED(vec3(-86.03, -6.0, -9.6).s), _GLF_FUZZED(-7.8)), bvec2(false, false))))).y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))) : _GLF_IDENTITY(_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))), mix(vec2((_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))[0], (_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))[1]), vec2(_GLF_FUZZED(vec3(-86.03, -6.0, -9.6).s), _GLF_FUZZED(-7.8)), bvec2(false, false))))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))) : _GLF_IDENTITY(_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))), mix(vec2((_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))[0], (_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))[1]), vec2(_GLF_FUZZED(vec3(-86.03, -6.0, -9.6).s), _GLF_FUZZED(-7.8)), bvec2(false, false))))).y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y)))))), true)), false || (bool(bvec2(((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))) : _GLF_IDENTITY(_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))), mix(vec2((_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))[0], (_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))[1]), vec2(_GLF_FUZZED(vec3(-86.03, -6.0, -9.6).s), _GLF_FUZZED(-7.8)), bvec2(false, false))))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))) : _GLF_IDENTITY(_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))), mix(vec2((_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))[0], (_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))[1]), vec2(_GLF_FUZZED(vec3(-86.03, -6.0, -9.6).s), _GLF_FUZZED(-7.8)), bvec2(false, false))))).y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y)))))), true))))) || false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))))), true, true, true)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))), false || ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))))), true, true, true))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))), false || ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))))), true, true, true)))))) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))), false || ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))))), true, true, true))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))), false || ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))))), true, true, true)))))) || false))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))), false || ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))))), true, true, true))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))), false || ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))))), true, true, true)))))) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))), false || ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))))), true, true, true))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))), false || ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))))), true, true, true)))))) || false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))), false || ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))))), true, true, true))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))), false || ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))))), true, true, true)))))) || false), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))), false || ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))))), true, true, true))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))), false || ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))))), true, true, true)))))) || false), true), false), false)))))))))) || false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), false || ((_GLF_IDENTITY(false, true && (false))))) || _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6100.4648) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6100.4648) : injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))) ? _GLF_FUZZED(6100.4648) : injectionSwitch.y))))), min(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(6100.4648, min(6100.4648, 6100.4648))) : injectionSwitch.y))), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(9.3, 3762.7078, 4.0, -55.09)))) * (injectionSwitch)).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6100.4648) : injectionSwitch.y)))))), bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false) ? _GLF_FUZZED(6100.4648) : injectionSwitch.y)))), false)))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), _GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), bool(bvec3(_GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), bool(bvec3((false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true))) && true)), false, false, true))))), true, false))), true, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)))), (false) || _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y), 1.0 * (clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))))) || false))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y)))))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))))) || false)), (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y)))))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))))) || false)), (true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1736.6721), _GLF_FUZZED(-8.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, log(_GLF_ONE(1.0, injectionSwitch.y)))))))), injectionSwitch.y)))))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))))) || false))) || false)) || false)))))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), length(vec3(0.0, 0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y), (clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), length(vec3(0.0, 0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)))).y)) / 1.0))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y)))))))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))))) || false))))), ! (! ((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), length(vec3(0.0, 0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y), (clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), length(vec3(0.0, 0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)))).y)) / 1.0))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), injectionSwitch.y)))))))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))))) || false))))))))))))))) || false)))), bool(bvec4(false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), true))), ! (! (_GLF_IDENTITY((false), bool(bvec2((false), true))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-34.07), _GLF_FUZZED(-1445.0958)), bvec2(false, false))), injectionSwitch, injectionSwitch)).y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_IDENTITY(_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))), (_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921))))) - vec2(0.0, 0.0)))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))))), false || ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x)) > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0))) * 1.0) > injectionSwitch.y)))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY(vec2(mat2(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)), vec2(mat3x2(vec2(mat2(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)), 0.0, abs(1.0), 0.0, 1.0))))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921))))), ((true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))) / sqrt(vec2(1.0, 1.0)))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false), (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(7275.9412), _GLF_FUZZED(-529.117)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))) * mat2(1.0)))) : _GLF_FUZZED(abs(_GLF_IDENTITY(tan(vec2(-7893.6591, 731.921)), mix(vec2((tan(vec2(-7893.6591, 731.921)))[0], (tan(vec2(-7893.6591, 731.921)))[1]), vec2(_GLF_FUZZED(5301.0513), _GLF_FUZZED(82.89)), bvec2(false, false)))))), min((true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(7275.9412), _GLF_FUZZED(-529.117)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))) * mat2(1.0)))) : _GLF_FUZZED(abs(_GLF_IDENTITY(tan(vec2(-7893.6591, 731.921)), mix(vec2((tan(vec2(-7893.6591, 731.921)))[0], (tan(vec2(-7893.6591, 731.921)))[1]), vec2(_GLF_FUZZED(5301.0513), _GLF_FUZZED(82.89)), bvec2(false, false)))))), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(7275.9412), _GLF_FUZZED(-529.117)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))) * mat2(1.0)))) : _GLF_FUZZED(abs(_GLF_IDENTITY(tan(vec2(-7893.6591, 731.921)), mix(vec2((tan(vec2(-7893.6591, 731.921)))[0], (tan(vec2(-7893.6591, 731.921)))[1]), vec2(_GLF_FUZZED(5301.0513), _GLF_FUZZED(82.89)), bvec2(false, false))))))))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y))))) || _GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(true, (true) && true) && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)))))))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 | (0))))], injectionSwitch[1]))) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, _GLF_IDENTITY(731.921, mix(float(_GLF_IDENTITY(731.921, float(mat2(_GLF_IDENTITY(731.921, (false ? _GLF_FUZZED(-6.7) : 731.921)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0)))), float(_GLF_FUZZED(((8.6 / -4.2) / 0.6))), bool(false))))))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false)) && true)) && true))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y) && true)))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) || false)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y)))), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y)))), true && ((injectionSwitch.x > injectionSwitch.y)))))) && true))))))))))))), true, true, true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, _GLF_IDENTITY(731.921, (731.921) - abs(0.0)))))))).y), true && ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) > injectionSwitch.y)))))) || false))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, log(1.0), cos(determinant(mat2(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(_GLF_IDENTITY(abs(tan(_GLF_IDENTITY(vec2(-7893.6591, 731.921), max(vec2(-7893.6591, 731.921), vec2(-7893.6591, 731.921))))), max(_GLF_IDENTITY(abs(tan(vec2(-7893.6591, 731.921))), (true ? abs(tan(vec2(-7893.6591, 731.921))) : _GLF_IDENTITY(_GLF_FUZZED((vec2(7.6, 9.0) * mat2(-5.0, -3.4, 2505.6499, 6953.3322))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_FUZZED((vec2(7.6, 9.0) * mat2(-5.0, -3.4, 2505.6499, 6953.3322))), (true ? _GLF_FUZZED((vec2(7.6, 9.0) * mat2(-5.0, -3.4, 2505.6499, 6953.3322))) : _GLF_FUZZED(vec2(1446.1801, -8.5)))))))), abs(tan(_GLF_IDENTITY(vec2(-7893.6591, 731.921), mix(vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(54.96)), vec2((vec2(-7893.6591, 731.921))[0], (vec2(-7893.6591, 731.921))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))))), false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921))))), max((true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921))))), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))))).y), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), max(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), min(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), vec2(mat3x2(sqrt(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0)))))))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - 0.0)))))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, _GLF_IDENTITY(731.921, (731.921) + 0.0))))))).y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))))) || false))))), ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - 0.0))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && ((injectionSwitch.x > injectionSwitch.y)))))) || false)))))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921))))), max((true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921))))), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))))).y), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), max(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), min(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), vec2(mat3x2(sqrt(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0)))))))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - 0.0)))))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, _GLF_IDENTITY(731.921, (731.921) + 0.0))))))).y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))))) || false))))), ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - 0.0))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && ((injectionSwitch.x > injectionSwitch.y)))))) || false)))))) && true)), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921))))), max((true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921))))), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))))).y), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), max(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), min(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), vec2(mat3x2(sqrt(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0)))))))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - 0.0)))))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, _GLF_IDENTITY(731.921, (731.921) + 0.0))))))).y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))))) || false))))), ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - 0.0))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && ((injectionSwitch.x > injectionSwitch.y)))))) || false)))))) && true)))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921))))), max((true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921))))), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))))).y), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), max(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), min(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), vec2(mat3x2(sqrt(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0)))))))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - 0.0)))))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, _GLF_IDENTITY(731.921, (731.921) + 0.0))))))).y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))))) || false))))), ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - 0.0))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && ((injectionSwitch.x > injectionSwitch.y)))))) || false)))))) && true)), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921))))), max((true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921))))), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))))).y), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), max(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), min(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), vec2(mat3x2(sqrt(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0)))))))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - 0.0)))))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, _GLF_IDENTITY(731.921, (731.921) + 0.0))))))).y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))))) || false))))), ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - 0.0))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && ((injectionSwitch.x > injectionSwitch.y)))))) || false)))))) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921))))), max((true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921))))), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))))).y), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), max(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), min(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), vec2(mat3x2(sqrt(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0)))))))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - 0.0)))))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, _GLF_IDENTITY(731.921, (731.921) + 0.0))))))).y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))))) || false))))), ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - 0.0))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && ((injectionSwitch.x > injectionSwitch.y)))))) || false)))))) && true)), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921))))), max((true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921))))), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))))).y), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), max(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), min(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), vec2(mat3x2(sqrt(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0)))))))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - 0.0)))))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, _GLF_IDENTITY(731.921, (731.921) + 0.0))))))).y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))))) || false))))), ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - sqrt(vec2(0.0, 0.0))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), (float(float(1.0))) - 0.0))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))).y), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) && ((injectionSwitch.x > injectionSwitch.y)))))) || false)))))) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), false))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 0.0), mat2x4(mat2x4(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 0.0)))))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), false || ((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 0.0), mat2x4(mat2x4(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, 0.0)))))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), false || ((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))))))))))), _GLF_IDENTITY(true, bool(bool(true))), true, true))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(mat2x3(-8.1, 21.16, -8.3, 66.55, 522.386, 7.3))) : mat2(1.0)))))) : _GLF_IDENTITY(_GLF_FUZZED(abs(tan(vec2(_GLF_IDENTITY(-7893.6591, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(-7893.6591, max(_GLF_IDENTITY(-7893.6591, min(-7893.6591, -7893.6591)), _GLF_IDENTITY(-7893.6591, (false ? _GLF_FUZZED(5.5) : -7893.6591)))) : _GLF_FUZZED(-6.4))), 731.921)))), (_GLF_FUZZED(abs(tan(vec2(_GLF_IDENTITY(-7893.6591, (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(-7893.6591, max(_GLF_IDENTITY(-7893.6591, min(-7893.6591, -7893.6591)), _GLF_IDENTITY(-7893.6591, (false ? _GLF_FUZZED(5.5) : -7893.6591)))) : _GLF_FUZZED(-6.4))), 731.921))))) - vec2(0.0, 0.0)))).y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(_GLF_IDENTITY(vec2(_GLF_IDENTITY(-7893.6591, (true ? -7893.6591 : _GLF_FUZZED(2602.7530))), 731.921), max(_GLF_IDENTITY(vec2(-7893.6591, 731.921), clamp(vec2(-7893.6591, 731.921), vec2(-7893.6591, 731.921), vec2(-7893.6591, _GLF_IDENTITY(731.921, sqrt(0.0) + (731.921))))), vec2(-7893.6591, 731.921)))))))).y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))))))) || false))))), false || ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, _GLF_IDENTITY(731.921, (731.921) - 0.0))))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_IDENTITY(_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))), min(_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))), _GLF_IDENTITY(_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))), max(_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))), _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, _GLF_IDENTITY(731.921, (731.921) - 0.0))))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_IDENTITY(_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))), min(_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))), _GLF_IDENTITY(_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))), max(_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))), _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false)), bool(bool(! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_FUZZED(abs(tan(vec2(-7893.6591, _GLF_IDENTITY(731.921, (731.921) - 0.0))))))).y), true && ((injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) : _GLF_IDENTITY(_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))), min(_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))), _GLF_IDENTITY(_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))), max(_GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))), _GLF_FUZZED(abs(tan(vec2(-7893.6591, 731.921)))))))))).y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))), true, false, true)))))))), ! (! ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))), true, false, true))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true)))))))))))))))), true, true, true)))))) || false))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(594.303), _GLF_FUZZED(-61.59)), bvec2(false, false))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) : _GLF_FUZZED(-1845.7881))) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, (true) && true))), _GLF_IDENTITY((bool(bvec2(false, true))) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false))), false || ((bool(bvec2(false, true))) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)))))))))
      return;
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) / 1u), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) / 1u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) / 1u))))))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(84286u) : _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u + (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u + (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) + (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u))))))) | _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u + (0u)), 0u)))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id, uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) / 1u))))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(84286u) : _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u + _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), clamp((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), ((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) / 1u), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u + _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), clamp((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), ((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) / 1u), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u + _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), clamp((_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, uint(uvec3(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 1u, 1u)))), ((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) / 1u), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))))) - 0u)) - 0u)) | _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u + (0u)), 0u)))) >> 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, uint(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), clamp((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), ((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id)) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id))) / 1u))))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(84286u) : _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u + _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), clamp((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), ((workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) / 1u), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))))) | _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u + (0u)), 0u)))) >> 0u)))) + uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-43.35), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((vec4(-0.7, -6.8, -6922.1514, 3.0).w / (-77.25 / 1.1)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FUZZED(-663.092)), bvec2(true, false))).x)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), ! (! (false)))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))), bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))), ! (! ((! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false)))))))), false, false, false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || false))))), bool(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))), ! (! (! (! _GLF_IDENTITY((false), ! (! ((false))))))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), bool(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), ! (! (! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! ((false))))))))))))), false)))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
          {
           do
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, sin(sqrt(0.0)))), vec2(vec2(vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, sin(sqrt(0.0)))))))).y))))
                continue;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 break;
                }
               break;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               continue;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, bool(bool(false))))), (bool(! (_GLF_IDENTITY(false, bool(bool(false)))))) || false))))), (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (4) / 1));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
      continue;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))) && true))))
        continue;
       return;
      }
     if(_GLF_DEAD(false))
      break;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) - 0u) < subgroup_size, true, false), bvec3(bvec4(bvec3(subgroup_local_id + 1 < subgroup_size, true, false), false)))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (false ? _GLF_FUZZED(atomicCompSwap(subgroup_size, 34191u, workgroup_size)) : subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))) < subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), max((1), (1)))), (false ? _GLF_FUZZED(atomicCompSwap(subgroup_size, 34191u, workgroup_size)) : subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), max((1), (1)))), (false ? _GLF_FUZZED(atomicCompSwap(subgroup_size, 34191u, workgroup_size)) : subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), max((1), (1)))), (false ? _GLF_FUZZED(atomicCompSwap(subgroup_size, 34191u, workgroup_size)) : subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))))) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) - 0u) < subgroup_size) && true), true, _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, (true) && true), false)))), false))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))) || (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, false), bvec3(bvec3(bvec3(subgroup_local_id + 1 < subgroup_size, true, false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u | 0u)) + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY((false ? _GLF_FUZZED(atomicCompSwap(subgroup_size, 34191u, workgroup_size)) : subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1 & ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))) * (_GLF_IDENTITY(1, max(1, 1))))) | (1))), ((false ? _GLF_FUZZED(atomicCompSwap(subgroup_size, 34191u, workgroup_size)) : subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))) + 0u)) < subgroup_size, true, _GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), false))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u | 0u)) + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY((false ? _GLF_FUZZED(atomicCompSwap(subgroup_size, 34191u, workgroup_size)) : subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), ((false ? _GLF_FUZZED(atomicCompSwap(subgroup_size, 34191u, workgroup_size)) : subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), min(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) | (_GLF_IDENTITY(1, (1) | (1)))))))) + 0u)) < subgroup_size, true, _GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), false))))), ((bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < subgroup_size, true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (0u | 0u)) + _GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY((false ? _GLF_FUZZED(atomicCompSwap(subgroup_size, 34191u, workgroup_size)) : subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))), ((false ? _GLF_FUZZED(atomicCompSwap(subgroup_size, 34191u, workgroup_size)) : subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), min(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) | (_GLF_IDENTITY(1, (1) | (1)))))))) + 0u)) < subgroup_size, true, _GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, max(2, 2)), 2, _GLF_IDENTITY(2, int(int(2)))))), _GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) ^ (0 & 92660)), (false ? _GLF_FUZZED(-39188) : _GLF_IDENTITY(64, (64) ^ (0 & 92660)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) ^ (0 & 92660)), (false ? _GLF_FUZZED(-39188) : _GLF_IDENTITY(64, (64) ^ (0 & 92660)))))))), ~ (~ (_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) ^ (0 & 92660)), (false ? _GLF_FUZZED(-39188) : _GLF_IDENTITY(64, (64) ^ (0 & 92660))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) ^ (0 & 92660)), (false ? _GLF_FUZZED(-39188) : _GLF_IDENTITY(64, (64) ^ (0 & 92660)))))))), (_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) ^ (0 & 92660)), (false ? _GLF_FUZZED(-39188) : _GLF_IDENTITY(64, (64) ^ (0 & 92660))))))))) | 0), _GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) ^ (0 & 92660)), (false ? _GLF_FUZZED(-39188) : _GLF_IDENTITY(64, (64) ^ (0 & 92660)))))))), ~ (~ (_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) ^ (0 & 92660)), (false ? _GLF_FUZZED(-39188) : _GLF_IDENTITY(64, (64) ^ (0 & 92660))))))))))))), 4);
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      break;
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
         if(_GLF_DEAD(false))
          break;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false), (injectionSwitch.x > injectionSwitch.y))) || false)));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true, false, false)))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
    }
   else
    {
    }
   subgroupAll(false);
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0)); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)))
                break;
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              break;
             break;
            }
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               return;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
            break;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
            {
            }
           else
            {
             return;
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, sin(sin(0.0)) + (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, sin(sin(0.0)) + (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, sin(sin(0.0)) + (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y, true, false, true))), true, false)))))))), _GLF_IDENTITY(false, true && (false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, sin(sin(0.0)) + (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, sin(sin(0.0)) + (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false)))))), false))))), ! (! (_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.5, -4.7)))))))).x, sin(sin(0.0)) + (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y))))), _GLF_IDENTITY(false, true && (false))))), (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, sin(sin(0.0)) + (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y))))), _GLF_IDENTITY(false, true && (false)))))) || false))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, sin(sin(0.0)) + (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, sin(sin(0.0)) + (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false)))))), false))))), ! (! (_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.5, -4.7)))))))).x, sin(sin(0.0)) + (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y))))), _GLF_IDENTITY(false, true && (false))))), (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, sin(sin(0.0)) + (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y))))), _GLF_IDENTITY(false, true && (false)))))) || false)))))), false || (bool((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, sin(sin(0.0)) + (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, sin(sin(0.0)) + (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false)))))), false))))), ! (! (_GLF_IDENTITY(! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.5, -4.7)))))))).x, sin(sin(0.0)) + (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y))))), _GLF_IDENTITY(false, true && (false))))), (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, sin(sin(0.0)) + (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y))))), _GLF_IDENTITY(false, true && (false)))))) || false))))))))))), false || (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((6.6 * 647.092)), _GLF_FUZZED(-9.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((6.6 * 647.092)), _GLF_FUZZED(-9.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((6.6 * 647.092)), _GLF_FUZZED(-9.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))), false)))))))))
            break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               return;
              }
            }
           break;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(ivec2(3, 1)))), _GLF_IDENTITY(int(3), (int(3)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(ivec2(3, 1)))), _GLF_IDENTITY(int(3), (int(3)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(ivec2(3, 1)))), _GLF_IDENTITY(int(3), (int(3)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))) >> _GLF_IDENTITY(int(3), int(3)))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++)))) + 0, 0 | ((_GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++)))) + 0)))) - (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) | (int(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(0, max(0, 0)))))))) << 0)) ^ 0), int(0)))), (_injected_loop_counter ++) << 0))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            return;
          }
         continue;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), true && (bool(bvec4(false, true, false, true)))))))
        break;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
        {
         return;
        }
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((false), false)), (bool(bvec2((false), false))) || false), true && (_GLF_IDENTITY(bool(bvec2((false), false)), (bool(bvec2((false), false))) || false)))) && true)), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)), true)), ! (! (bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)), true))))))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, ~ (_GLF_IDENTITY(~ (_injected_loop_counter ++), ~ (_GLF_IDENTITY(~ (~ (_injected_loop_counter ++)), (false ? _GLF_FUZZED((_injected_loop_counter << 22624)) : ~ (~ (_injected_loop_counter ++)))))))), 1 * (_GLF_IDENTITY(_injected_loop_counter ++, ~ (_GLF_IDENTITY(~ (_injected_loop_counter ++), ~ (_GLF_IDENTITY(~ (~ (_injected_loop_counter ++)), (false ? _GLF_IDENTITY(_GLF_FUZZED((_injected_loop_counter << 22624)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_FUZZED((_injected_loop_counter << 22624)), (_GLF_FUZZED((_injected_loop_counter << 22624))) ^ 0), 1, 1, 1)), (int(ivec4(_GLF_IDENTITY(_GLF_FUZZED((_injected_loop_counter << 22624)), (_GLF_FUZZED((_injected_loop_counter << 22624))) ^ 0), 1, 1, 1))) << 0)) : ~ (_GLF_IDENTITY(~ (_injected_loop_counter ++), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter ++), 0 ^ (~ (_injected_loop_counter ++)))), (~ (_GLF_IDENTITY(~ (_injected_loop_counter ++), 0 ^ (~ (_injected_loop_counter ++))))) * 1)))))))))))))
      {
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) ^ 0), 2, 2))) | 0)) << 0, ~ (~ ((_GLF_IDENTITY(2, (2) | 0)) << 0))))), 4, 64, 4);
   subgroupAll(_GLF_IDENTITY(true, true && (true)));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-248.059), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(88.24)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) - 0.0))), mix(float(_GLF_FUZZED(714.816)), float((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), bool(true))) / 1.0)) - 0.0, min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) - 0.0))), mix(float(_GLF_FUZZED(714.816)), float((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), bool(true))) / 1.0)) - 0.0, _GLF_IDENTITY(float(vec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) - 0.0))), mix(float(_GLF_FUZZED(714.816)), float((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), bool(true))) / 1.0)) - 0.0, 0.0, 0.0)), float(mat4x2(float(vec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) - 0.0))), mix(float(_GLF_FUZZED(714.816)), float((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), bool(true))) / 1.0)) - 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), clamp((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) - 0.0))), mix(float(_GLF_FUZZED(714.816)), float((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), bool(true))) / 1.0)) - 0.0))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0, min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0, abs(1.0) * ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch)).x)) - 0.0))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(714.816, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(714.816, clamp(714.816, 714.816, _GLF_IDENTITY(714.816, (714.816) / 1.0))), cos(0.0), 1.0, 1.0)), clamp(float(mat2(_GLF_IDENTITY(714.816, clamp(714.816, 714.816, _GLF_IDENTITY(714.816, (714.816) / 1.0))), cos(0.0), 1.0, 1.0)), float(mat2(_GLF_IDENTITY(714.816, clamp(714.816, _GLF_IDENTITY(714.816, clamp(714.816, 714.816, 714.816)), _GLF_IDENTITY(714.816, (714.816) / 1.0))), cos(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), 1.0, 1.0)), float(mat2(_GLF_IDENTITY(714.816, clamp(714.816, 714.816, _GLF_IDENTITY(714.816, (_GLF_IDENTITY(714.816, (714.816) + 0.0)) / 1.0))), cos(0.0), 1.0, 1.0))))))), _GLF_IDENTITY(float((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), max(_GLF_IDENTITY(float((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(0.0, 0.0) + (max(injectionSwitch, injectionSwitch)))))).x)), float(mat4x3(float((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x)))), bool(true))) / _GLF_IDENTITY(1.0, 1.0 * (1.0)))) - 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0, min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0, abs(1.0) * ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch)).x)) - 0.0))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(714.816, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(714.816, clamp(714.816, 714.816, _GLF_IDENTITY(714.816, (714.816) / 1.0))), cos(0.0), 1.0, 1.0)), clamp(float(mat2(_GLF_IDENTITY(714.816, clamp(714.816, 714.816, _GLF_IDENTITY(714.816, (714.816) / 1.0))), cos(0.0), 1.0, 1.0)), float(mat2(_GLF_IDENTITY(714.816, clamp(714.816, _GLF_IDENTITY(714.816, clamp(714.816, 714.816, 714.816)), _GLF_IDENTITY(714.816, (714.816) / 1.0))), cos(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), 1.0, 1.0)), float(mat2(_GLF_IDENTITY(714.816, clamp(714.816, 714.816, _GLF_IDENTITY(714.816, (_GLF_IDENTITY(714.816, (714.816) + 0.0)) / 1.0))), cos(0.0), 1.0, 1.0))))))), _GLF_IDENTITY(float((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), max(_GLF_IDENTITY(float((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(0.0, 0.0) + (max(injectionSwitch, injectionSwitch)))))).x)), float(mat4x3(float((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x)))), bool(true))) / _GLF_IDENTITY(1.0, 1.0 * (1.0)))) - 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)))).x) / 1.0) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(205.522, -37.38)))) / vec2(1.0, 1.0)).y))) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(1.0)))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), false))))))))
          {
          }
         else
          {
           do
            {
             for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-32.31) : injectionSwitch.x))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(6.6)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x)), clamp(max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(6.6)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(6.6)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(6.6)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x)), (true ? max(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), mix(float(_GLF_FUZZED(6.6)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(9201.3928))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))
                return;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          break;
         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false, false)), (bool(bvec4(false, true, false, false))) || _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) || false)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), true, true)))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, true))))), bool(bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true)))))))))))), bvec3(bvec3(bvec3(true, true, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (true)))) && true), (injectionSwitch.x < injectionSwitch.y)))))))), true)), false || (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), false, false))), _GLF_IDENTITY(bool(bvec2((bool(bvec4(false, true, false, false))), true)), bool(bool(_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false))))), true)), bool(bvec3(bool(bvec2((bool(bvec4(false, true, false, false))), true)), false, true))))))), true && (_GLF_IDENTITY((bool(bvec4(false, true, false, false))), ((bool(bvec4(false, true, false, false)))) && true))) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) && true))), true, true)))))))
            return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) || false), false || (! (_GLF_IDENTITY(false, (false) || false))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) || false), false || (! (_GLF_IDENTITY(false, (false) || false))))), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ((_GLF_IDENTITY(false, (false) || false))) || false), false || (! (_GLF_IDENTITY(false, (false) || false)))))))))))));
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, cos(0.0), 1.0, 1.0, 0.0))) : _GLF_FUZZED(9.5))))))))))))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      continue;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(vec2(-58.76, -43.13))) : injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(length(vec2(-58.76, -43.13)), mix(float(_GLF_IDENTITY(length(vec2(-58.76, -43.13)), clamp(_GLF_IDENTITY(length(vec2(-58.76, -43.13)), max(length(vec2(-58.76, -43.13)), length(vec2(-58.76, -43.13)))), length(vec2(-58.76, -43.13)), length(vec2(-58.76, -43.13))))), float(_GLF_FUZZED(-8825.6417)), bool(false))), min(_GLF_IDENTITY(_GLF_IDENTITY(length(vec2(-58.76, -43.13)), mix(float(_GLF_IDENTITY(length(vec2(-58.76, -43.13)), clamp(_GLF_IDENTITY(length(vec2(-58.76, -43.13)), max(length(vec2(-58.76, -43.13)), length(vec2(-58.76, -43.13)))), length(vec2(-58.76, -43.13)), length(vec2(-58.76, -43.13))))), float(_GLF_FUZZED(-8825.6417)), bool(false))), 0.0 + (_GLF_IDENTITY(length(vec2(-58.76, -43.13)), mix(float(_GLF_IDENTITY(length(vec2(-58.76, -43.13)), clamp(_GLF_IDENTITY(length(vec2(-58.76, -43.13)), max(length(vec2(-58.76, -43.13)), length(vec2(-58.76, -43.13)))), length(vec2(-58.76, -43.13)), length(vec2(-58.76, -43.13))))), float(_GLF_FUZZED(-8825.6417)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(length(vec2(-58.76, -43.13)), mix(float(_GLF_IDENTITY(length(vec2(-58.76, -43.13)), clamp(_GLF_IDENTITY(length(vec2(-58.76, -43.13)), max(length(vec2(-58.76, -43.13)), length(vec2(-58.76, -43.13)))), length(vec2(-58.76, -43.13)), length(vec2(-58.76, -43.13))))), float(_GLF_FUZZED(-8825.6417)), bool(false))), (false ? _GLF_FUZZED(7.7) : _GLF_IDENTITY(length(vec2(-58.76, -43.13)), mix(float(_GLF_IDENTITY(length(vec2(-58.76, -43.13)), clamp(_GLF_IDENTITY(length(vec2(-58.76, -43.13)), max(length(vec2(-58.76, -43.13)), length(vec2(-58.76, -43.13)))), length(vec2(-58.76, -43.13)), length(vec2(-58.76, -43.13))))), float(_GLF_FUZZED(-8825.6417)), bool(false)))))))) : injectionSwitch.y))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0))) > injectionSwitch.y))))
            return;
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) * 1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) * _GLF_IDENTITY(1, max(1, 1)))), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), 0 + (int(0))), (true ? int(0) : _GLF_FUZZED(_injected_loop_counter))), (int(0)) * 1))) ^ 0)) << int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              continue;
             return;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))
          break;
         return;
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        break;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = ((int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY((int(7)) | (_GLF_IDENTITY(int(7), (int(7)) | (int(7)))), ((int(7)) | (int(7))) ^ 0)), (_GLF_IDENTITY(int(7), _GLF_IDENTITY((int(7)) | (int(7)), ((int(7)) | (int(7))) ^ 0))) | (_GLF_IDENTITY(int(7), _GLF_IDENTITY((int(7)) | (int(7)), (_GLF_IDENTITY((int(7)) | (int(7)), max((int(7)) | (int(7)), _GLF_IDENTITY((int(7)) | (int(7)), 0 ^ ((int(7)) | (int(7))))))) ^ 0)))))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))) || (_injected_loop_counter != 0))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              break;
             return;
            }
           if(_GLF_DEAD(false))
            return;
          }
        }
       else
        {
        }
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          continue;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     do
      {
       return;
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), vec2(mat2(injectionSwitch, 0.0, 0.0))).y))));
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    {
     for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
}
