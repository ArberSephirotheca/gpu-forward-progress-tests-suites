#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 bvec4 _f0;
 vec3 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 bool _f1;
 uvec3 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 vec2 _f1;
 uint subgroup_size;
 mat2x3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_16_1_1_11next_virtual_gidvirtual_gid;
 uvec4 GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x = subgroup_id;
  }
 else
  {
  }
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(ivec4(1), _GLF_struct_0(bvec3(true), true, uvec3(1u), uvec4(1u)), _GLF_struct_1(bvec4(true), vec3(1.0), bvec2(true))), vec2(1.0), gl_SubgroupSize, mat2x3(1.0));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
  {
   GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y = _GLF_struct_replacement_3.subgroup_size;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z = workgroup_id;
 uint workgroup_base = GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.w * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.z;
 uint subgroup_base = GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.x * GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 GLF_merged2_0_1_16_1_1_11next_virtual_gidvirtual_gid.y = virtual_gid;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % GLF_merged4_0_1_11_1_1_13_2_1_12_3_1_14subgroup_idsubgroup_sizeworkgroup_idworkgroup_size.y);
 GLF_merged2_0_1_16_1_1_11next_virtual_gidvirtual_gid.x = next_virtual_gid;
 atomicStore(buf[GLF_merged2_0_1_16_1_1_11next_virtual_gidvirtual_gid.y], uint(1), 4, 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     subgroupAll(true);
    }
   atomicStore(buf[GLF_merged2_0_1_16_1_1_11next_virtual_gidvirtual_gid.x], uint(2), 4, 64, 4);
  }
 else
  {
   subgroupAll(false);
   atomicStore(buf[GLF_merged2_0_1_16_1_1_11next_virtual_gidvirtual_gid.x], uint(2), 4, 64, 4);
  }
}
