#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false)))))
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(1 & 1, (_GLF_IDENTITY(1 & 1, 0 ^ (1 & _GLF_IDENTITY(1, max(1, 1))))) << 0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_injected_loop_counter != 0), false || (_GLF_IDENTITY(! (_injected_loop_counter != _GLF_IDENTITY(0, max(0, 0))), false || (! (_injected_loop_counter != 0)))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec2(_injected_loop_counter != 0, true)))), false || (_GLF_IDENTITY(! (_injected_loop_counter != _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(max(-88855, 6826))))), false || (! (_injected_loop_counter != 0))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_injected_loop_counter != 0), false || (_GLF_IDENTITY(! (_injected_loop_counter != _GLF_IDENTITY(0, max(0, 0))), false || (! (_injected_loop_counter != 0)))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec2(_injected_loop_counter != 0, true)))), false || (_GLF_IDENTITY(! (_injected_loop_counter != _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(max(-88855, 6826))))), false || (! (_injected_loop_counter != 0))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_injected_loop_counter != 0), false || (_GLF_IDENTITY(! (_injected_loop_counter != _GLF_IDENTITY(0, max(0, 0))), false || (! (_injected_loop_counter != 0)))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec2(_injected_loop_counter != 0, true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)) != _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(max(-88855, 6826))))), false || (! (_injected_loop_counter != 0))))))))))))))))); _injected_loop_counter --)
    {
     do
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(6), int(6))), ((0 >> _GLF_IDENTITY(int(6), int(6)))) | ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6)))))))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(6), int(6))), ((0 >> _GLF_IDENTITY(int(6), int(6)))) | ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6))))))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(6), int(6))), ((0 >> _GLF_IDENTITY(int(6), int(6)))) | ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6)))))))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(6), int(6))), ((0 >> _GLF_IDENTITY(int(6), int(6)))) | ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6))))))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(6), int(6))), ((0 >> _GLF_IDENTITY(int(6), int(6)))) | ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6)))))))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(6), int(6))), ((0 >> _GLF_IDENTITY(int(6), int(6)))) | ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6))))))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(6), int(6))), ((0 >> _GLF_IDENTITY(int(6), int(6)))) | ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6)))))))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(6), int(6))), ((0 >> _GLF_IDENTITY(int(6), int(6)))) | ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(6))))))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(bool(bvec4(_injected_loop_counter != 1, true, false, true)), ! (! (bool(bvec4(_injected_loop_counter != 1, true, _GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)), true))), true))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, 1, (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(7)))))))) != 1, true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1))), false, true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1))), false, true)))))) && true)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))), false, true)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(bool(bvec4(_injected_loop_counter != 1, true, false, true)), ! (! (bool(bvec4(_injected_loop_counter != 1, true, false, true)))))), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), true, true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(bool(bvec4(_injected_loop_counter != 1, true, false, true)), ! (! (bool(bvec4(_injected_loop_counter != _GLF_IDENTITY(1, clamp(1, 1, 1)), true, false, true)))))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(bool(bvec4(_injected_loop_counter != 1, true, false, true)), ! (! (bool(bvec4(_injected_loop_counter != 1, true, false, true)))))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, (true) || false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(bool(bvec4(_injected_loop_counter != 1, true, false, true)), ! (! (bool(bvec4(_injected_loop_counter != 1, true, false, true)))))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false)))), false)), bool(bvec3(bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(bool(bvec4(_injected_loop_counter != 1, true, false, true)), ! (! (bool(bvec4(_injected_loop_counter != 1, true, false, true)))))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(bool(bvec4(_injected_loop_counter != 1, true, false, true)), ! (! (bool(bvec4(_injected_loop_counter != 1, true, false, true)))))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false)))), false)), true, true)))))), false, false)))))); _GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), clamp(length(normalize(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) * (injectionSwitch[0])), injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), clamp(length(normalize(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) * (injectionSwitch[0])), injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), clamp(length(normalize(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) * (injectionSwitch[0])), injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), clamp(length(normalize(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) * (injectionSwitch[0])), injectionSwitch[1])).x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(false, ! (! (false)))), false, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false, false))), false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-96.84)), bool(false)))), float(_GLF_FUZZED(-1.2)), bool(false))) > injectionSwitch.y)), false), false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))))), bool(_GLF_IDENTITY(bvec2(false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))))), false), bvec2(bvec4(bvec2(false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(vec2(4.6, -248.152), 6.9)) : injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(vec2(4.6, -248.152), 6.9)) : injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(vec2(4.6, -248.152), 6.9)) : injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(vec2(4.6, -248.152), 6.9)) : injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), false), false)), false))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(vec2(4.6, -248.152), 6.9)) : injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(vec2(4.6, -248.152), 6.9)) : injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(vec2(4.6, -248.152), 6.9)) : injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(vec2(4.6, -248.152), 6.9)) : injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), false), false)), false))))))), false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(vec2(4.6, -248.152), 6.9)) : injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(vec2(4.6, -248.152), 6.9)) : injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(vec2(4.6, -248.152), 6.9)) : injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(vec2(4.6, -248.152), 6.9)) : injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), false), false)), false))))))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(vec2(4.6, -248.152), 6.9)) : injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(vec2(4.6, -248.152), 6.9)) : injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(vec2(4.6, -248.152), 6.9)) : injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(vec2(4.6, -248.152), 6.9)) : injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), false), false)), false))))))), false))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(vec2(4.6, -248.152), 6.9)) : injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(vec2(4.6, -248.152), 6.9)) : injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(vec2(4.6, -248.152), 6.9)) : injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(vec2(4.6, -248.152), 6.9)) : injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), false), false)), false))))))), false))), bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(vec2(4.6, -248.152), 6.9)) : injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(vec2(4.6, -248.152), 6.9)) : injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(vec2(4.6, -248.152), 6.9)) : injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(vec2(4.6, -248.152), 6.9)) : injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), false), false)), false))))))), false))))))))))))))), true, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(intBitsToFloat(ivec2(42589, -13505))))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-1.8, (false ? _GLF_FUZZED(smoothstep(8.8, 8.6, 4.2)) : _GLF_IDENTITY(-1.8, _GLF_IDENTITY(float(vec2(-1.8, 0.0)), (float(vec2(-1.8, 0.0))) / 1.0)))))), vec2(_GLF_FUZZED(-4.6), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))).x, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((false ? exp2(injectionSwitch) : vec2(0.8, 360.056))) : injectionSwitch)).x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-57.87) : injectionSwitch.x))), 0.0), clamp(vec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat2x4(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(2181.5751, 6.3, -0.8, -17.96)) : _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(502.328, 147.992, 86.95, -8850.9709)) : mat2(1.0)))))))) * (injectionSwitch)).x, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(injectionSwitch.x, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(injectionSwitch.x, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), (vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)) / _GLF_IDENTITY(vec4(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0), vec4(_GLF_IDENTITY(mat2x3(vec4(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0), 1.0, 0.0), mat2x3(mat2x3(mat2x3(vec4(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0), 1.0, 0.0)))))))), max(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (vec4(injectionSwitch.x, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), min(float(0.0), _GLF_IDENTITY(float(0.0), mix(float(_GLF_IDENTITY(float(0.0), clamp(float(0.0), float(0.0), float(0.0)))), float(_GLF_FUZZED(-6.6)), bool(false))))), float(_GLF_FUZZED(488.292)), bool(false)))) + 0.0), 0.0)))) / vec4(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.2), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(4.9), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(6.7)), bvec2(true, false)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5271.6025)), bvec2(true, false))).x), 0.0), _GLF_IDENTITY((vec4(injectionSwitch.x, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0), ((vec4(injectionSwitch.x, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), 0.0)) / vec4(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0)))), (float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.2), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(4.9), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(6.7)), bvec2(true, false)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5271.6025)), bvec2(true, false))).x), 0.0), _GLF_IDENTITY((vec4(injectionSwitch.x, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0), ((vec4(injectionSwitch.x, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)) - vec4(0.0, 0.0, 0.0, 0.0))))) - _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))) > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), true, true, false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(54.63), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-58.94)), bvec2(true, false))).x > injectionSwitch.y)), false), false)))), true, true), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false)))))))))), false || (bool(bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), false)))))))))))), bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))), true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))), bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y)), false), false)))), true, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))), (_GLF_IDENTITY((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))), bool(bvec4((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))), false, true, false)))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))), (_GLF_IDENTITY((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))), bool(bvec4((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))), false, true, false)))) || false), (_GLF_IDENTITY((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))), (_GLF_IDENTITY((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))), bool(bvec4((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))), false, true, false)))) || false)) || false), true, _GLF_IDENTITY(false, false || (false)), false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))), (_GLF_IDENTITY((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))), bool(bvec4((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))), false, true, false)))) || false), (_GLF_IDENTITY((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))), (_GLF_IDENTITY((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))), bool(bvec4((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))), false, true, false)))) || false)) || false), true, _GLF_IDENTITY(false, false || (false)), false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))), (_GLF_IDENTITY((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))), bool(bvec4((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))), false, true, false)))) || false), (_GLF_IDENTITY((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))), (_GLF_IDENTITY((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))), bool(bvec4((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))), false, true, false)))) || false)) || false), true, _GLF_IDENTITY(false, false || (false)), false)))))))) && true))) && true)) || false)), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch)).y)), false), false)))), true, true), false)))), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), true)))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0)), (vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0))) * vec2(1.0, 1.0))).y))))
              barrier();
             barrier();
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) / 1)) | _GLF_IDENTITY(0, int(ivec3(0, 0, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))))))), 0 | ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) / 1)) | _GLF_IDENTITY(0, int(ivec3(0, 0, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(~ (int(1)), max(_GLF_IDENTITY(~ (int(1)), min(~ (int(1)), ~ (int(1)))), ~ (int(1)))))), int(1))) >> _GLF_IDENTITY(int(1), int(1))))))))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(ivec4(-32640, -34335, -45654, 15638)[3]) : _GLF_IDENTITY(int(6), 1 * (int(6))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, ~ (~ (0)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
           barrier();
          }
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))) && true, ((! (_GLF_DEAD(false))) && true) && true))))))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (workgroup_id)), min(workgroup_id, workgroup_id));
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | (subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) > 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(sin(vec2(4.5, 4792.4135))) : vec2(0.0, 0.0))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))) - vec2(0.0, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (_GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(0.0, 0.0) + (_GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch))), max(_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, true && (true)), true, true)))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && true)) ? _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))) - vec2(0.0, 0.0) : _GLF_FUZZED(injectionSwitch), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))) - vec2(0.0, 0.0) : _GLF_FUZZED(injectionSwitch))))))) - vec2(0.0, 0.0)).y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : workgroup_base + subgroup_id * subgroup_size))) | 0u, 0u + ((workgroup_base + subgroup_id * subgroup_size) | 0u)), (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) | 0u, ((workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((workgroup_id ^ virtual_gid)) : subgroup_size))) | 0u) + 0u)) - 0u)) + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u), ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), 0u ^ ((~ (subgroup_local_id + 1)))))) % subgroup_size), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) % subgroup_size), 0u ^ (((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec3((subgroup_local_id + 1), 1u, 0u)), _GLF_IDENTITY(0u | (uint(uvec3((subgroup_local_id + 1), 1u, 0u))), (_GLF_IDENTITY(0u | (uint(uvec3((subgroup_local_id + 1), 1u, 0u))), (0u | (uint(uvec3((subgroup_local_id + 1), 1u, 0u)))) | (0u | (uint(uvec3((subgroup_local_id + 1), 1u, 0u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) % subgroup_size))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) - 0)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) - 0)), 0u ^ (uint(_GLF_IDENTITY(1, (1) - 0)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (uint(_GLF_IDENTITY(1, (1) - 0))), ((0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (uint(_GLF_IDENTITY(1, (1) - 0)))) << 0u)))), _GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, ~ (_GLF_IDENTITY(~ ((4) / 1), (~ ((4) / 1)) | (~ ((4) / 1)))))), 64, 4);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))));
        }
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0))))))))).x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || false))))
        barrier();
       barrier();
      }
    }
   if(subgroup_local_id + 1 < subgroup_size)
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), ! (! ((false) || _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false)))), _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))), true, true, true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))) && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), bool(bvec4(! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), true, false, false))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))), true, true, true))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), (_GLF_IDENTITY((~ (1)), clamp((~ (1)), (_GLF_IDENTITY(~ (1), (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 0, 1), (ivec4(1, 1, 0, 1)) | (_GLF_IDENTITY(ivec4(1, 1, 0, 1), clamp(ivec4(1, 1, 0, 1), ivec4(1, 1, 0, 1), ivec4(1, 1, 0, 1))))))))) * 1)), (~ (1))))) + _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), 0)))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + (4)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0)) * (4)) : _GLF_FUZZED(atomicCompSwap(_injected_loop_counter, 93872, 95422)))))) / _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), int(ivec3(min(1, 1), 1, 1))))))), _GLF_IDENTITY(int(4), (int(4)) | 0))))) >> _GLF_IDENTITY(int(4), int(4)), ((_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), (_GLF_IDENTITY((~ (1)), clamp((~ (1)), (_GLF_IDENTITY(~ (1), (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 0, 1), (ivec4(1, 1, 0, 1)) | (_GLF_IDENTITY(ivec4(1, 1, 0, 1), clamp(ivec4(1, 1, 0, 1), ivec4(1, 1, 0, 1), ivec4(1, 1, 0, 1))))))))) * 1)), (~ (1))))) + _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), 0)))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + (4)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0)) * (4)) : _GLF_FUZZED(atomicCompSwap(_injected_loop_counter, 93872, 95422)))))) / _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), int(ivec3(min(1, 1), 1, 1))))))), _GLF_IDENTITY(int(4), (int(4)) | 0))))) >> _GLF_IDENTITY(int(4), int(4))) >> (-27467 & 0)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), (_GLF_IDENTITY((~ (1)), clamp((~ (1)), (_GLF_IDENTITY(~ (1), (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 0, 1), (ivec4(1, 1, 0, 1)) | (_GLF_IDENTITY(ivec4(1, 1, 0, 1), clamp(ivec4(1, 1, 0, 1), ivec4(1, 1, 0, 1), ivec4(1, 1, 0, 1))))))))) * 1)), (~ (1))))) + _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), 0)))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + (4)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0)) * (4)) : _GLF_FUZZED(atomicCompSwap(_injected_loop_counter, 93872, 95422)))))) / _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), int(ivec3(min(1, 1), 1, 1))))))), _GLF_IDENTITY(int(4), (int(4)) | 0))))) >> _GLF_IDENTITY(int(4), int(4)), ((_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), (_GLF_IDENTITY((~ (1)), clamp((~ (1)), (_GLF_IDENTITY(~ (1), (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 0, 1), (ivec4(1, 1, 0, 1)) | (_GLF_IDENTITY(ivec4(1, 1, 0, 1), clamp(ivec4(1, 1, 0, 1), ivec4(1, 1, 0, 1), ivec4(1, 1, 0, 1))))))))) * 1)), (~ (1))))) + _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), 0)))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + (4)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0)) * (4)) : _GLF_FUZZED(atomicCompSwap(_injected_loop_counter, 93872, 95422)))))) / _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), int(ivec3(min(1, 1), 1, 1))))))), _GLF_IDENTITY(int(4), (int(4)) | 0))))) >> _GLF_IDENTITY(int(4), int(4))) >> (-27467 & 0)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), (_GLF_IDENTITY((~ (1)), clamp((~ (1)), (_GLF_IDENTITY(~ (1), (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 0, 1), (ivec4(1, 1, 0, 1)) | (_GLF_IDENTITY(ivec4(1, 1, 0, 1), clamp(ivec4(1, 1, 0, 1), ivec4(1, 1, 0, 1), ivec4(1, 1, 0, 1))))))))) * 1)), (~ (1))))) + _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), 0)))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + (4)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0)) * (4)) : _GLF_FUZZED(atomicCompSwap(_injected_loop_counter, 93872, 95422)))))) / _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), int(ivec3(min(1, 1), 1, 1))))))), _GLF_IDENTITY(int(4), (int(4)) | 0))))) >> _GLF_IDENTITY(int(4), int(4)), ((_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), (_GLF_IDENTITY((~ (1)), clamp((~ (1)), (_GLF_IDENTITY(~ (1), (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 0, 1), (ivec4(1, 1, 0, 1)) | (_GLF_IDENTITY(ivec4(1, 1, 0, 1), clamp(ivec4(1, 1, 0, 1), ivec4(1, 1, 0, 1), ivec4(1, 1, 0, 1))))))))) * 1)), (~ (1))))) + _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0)), 0)))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + (4)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4))) ^ 0)) * (4)) : _GLF_FUZZED(atomicCompSwap(_injected_loop_counter, 93872, 95422)))))) / _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), int(ivec3(min(1, 1), 1, 1))))))), _GLF_IDENTITY(int(4), (int(4)) | 0))))) >> _GLF_IDENTITY(int(4), int(4))) >> (-27467 & 0)) : _GLF_FUZZED(24554)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(_injected_loop_counter)), (true ? ~ (_GLF_FUZZED(_injected_loop_counter)) : _GLF_FUZZED(_injected_loop_counter))))) : _injected_loop_counter --))) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), max(int(3), int(3)))) - 0), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) - _GLF_IDENTITY(0, 0 | (0))))), (false ? _GLF_FUZZED(_injected_loop_counter) : (_GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter))) : _injected_loop_counter --, 0 + (false ? _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter))) : _injected_loop_counter --))))) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), clamp(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(_injected_loop_counter))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-2.7)), bool(false))) < injectionSwitch.y) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x < injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x < injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x < injectionSwitch.y)), bool(bool(((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x < injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), mix(float(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), float(_GLF_FUZZED(586.637)), bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(39.80) : injectionSwitch.x), mix(_GLF_IDENTITY(float(_GLF_FUZZED((-94.75 * 1.4))), mix(float(_GLF_FUZZED(float(false))), float(_GLF_IDENTITY(float(_GLF_FUZZED((-94.75 * 1.4))), 1.0 * (float(_GLF_FUZZED((-94.75 * 1.4)))))), bool(true))), float((false ? _GLF_FUZZED(39.80) : injectionSwitch.x)), bool(true)))), min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(sqrt(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))) * (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0))))) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.5)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(sqrt(vec2(1.0, 1.0))))) * (injectionSwitch.x)) > injectionSwitch.y)) || false, false || ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(sqrt(vec2(1.0, 1.0))))) * (injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(sqrt(vec2(1.0, 1.0))))) * (injectionSwitch.x)) > injectionSwitch.y))))) || false))))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1))))) > injectionSwitch.y))))
        barrier();
       subgroupAll(false);
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))), true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       return;
      }
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) | (next_virtual_gid), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + _GLF_IDENTITY(0u, 0u | (0u)))) | (next_virtual_gid), 0u | ((next_virtual_gid) | _GLF_IDENTITY((next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), 0u ^ (_GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), ((next_virtual_gid)) | _GLF_IDENTITY((_GLF_IDENTITY((next_virtual_gid), (false ? _GLF_FUZZED(workgroup_size) : (next_virtual_gid)))), (((next_virtual_gid))) * 1u))) | ((next_virtual_gid)))))))), min((_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + _GLF_IDENTITY(0u, 0u | (0u)))) | (next_virtual_gid), 0u | ((next_virtual_gid) | _GLF_IDENTITY((next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), 0u ^ (_GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), ((next_virtual_gid)) | _GLF_IDENTITY((_GLF_IDENTITY((next_virtual_gid), (false ? _GLF_FUZZED(workgroup_size) : (next_virtual_gid)))), (((next_virtual_gid))) * 1u))) | ((next_virtual_gid)))))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + _GLF_IDENTITY(0u, 0u | (0u)))) | (next_virtual_gid), 0u | ((next_virtual_gid) | _GLF_IDENTITY((next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), 0u ^ (_GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), ((next_virtual_gid)) | _GLF_IDENTITY((_GLF_IDENTITY((next_virtual_gid), (false ? _GLF_FUZZED(workgroup_size) : (next_virtual_gid)))), (((next_virtual_gid))) * 1u))) | ((next_virtual_gid)))))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + _GLF_IDENTITY(0u, 0u | (0u)))) | (next_virtual_gid), 0u | ((next_virtual_gid) | _GLF_IDENTITY((next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), 0u ^ (_GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), ((next_virtual_gid)) | _GLF_IDENTITY((_GLF_IDENTITY((next_virtual_gid), (false ? _GLF_FUZZED(workgroup_size) : (next_virtual_gid)))), (((next_virtual_gid))) * 1u))) | ((next_virtual_gid)))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + _GLF_IDENTITY(0u, 0u | (0u)))) | (next_virtual_gid), 0u | ((next_virtual_gid) | _GLF_IDENTITY((next_virtual_gid), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), 0u ^ (_GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))), ((next_virtual_gid)) | _GLF_IDENTITY((_GLF_IDENTITY((next_virtual_gid), (false ? _GLF_FUZZED(workgroup_size) : (next_virtual_gid)))), (((next_virtual_gid))) * 1u))) | ((next_virtual_gid))))))))) - 0u)) ^ 0u))) >> _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u)))))], uint(2), 4, 64, 4);
     subgroupAll(true);
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(113.935), (injectionSwitch)[_GLF_IDENTITY(1, (1) * 1)]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0))))[0], _GLF_FUZZED(38.15)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
          barrier();
         barrier();
        }
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0))), min(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.3))), float(vec4(injectionSwitch.x, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0))))) > injectionSwitch.y)) && true))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
}
