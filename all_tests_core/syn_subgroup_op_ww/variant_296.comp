#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7693.0995)), bvec2(true, false))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7693.0995)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7693.0995)), bvec2(true, false))))).x > injectionSwitch.y)), false, _GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), (! (false)) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true && (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), true && (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), true, false))), bool(bvec3(_GLF_IDENTITY(! (false), true && (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), true && (! (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y)))), false))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), true, false))), bool(bvec3(_GLF_IDENTITY(! (false), true && (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), true && (! (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y)))), false)))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec2(bool(bvec2(true, true)), false))))))), false, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), true && (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec3(bool(bool(_GLF_DEAD(false))), false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))), false || (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))), false || (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))))), false))), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), max(vec2(0.0, 0.0), vec2(0.0, 0.0))))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))) * mat2(1.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(-6398.3243)), bool(false))))))), injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), 1.0 * (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(_GLF_IDENTITY(float(_GLF_FUZZED(36.60)), (float(_GLF_FUZZED(36.60))) * cos(0.0)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), exp(0.0)), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))), mix(vec2(_GLF_FUZZED(496.739), (vec2(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))))[1]), vec2((vec2(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))))[0], _GLF_FUZZED(-7378.8015)), bvec2(true, false))))), mat2(1.0) * (injectionSwitch)))).x), exp(0.0)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) | (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))))) * workgroup_id)), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(2u))) ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u)) + _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) ^ 0u)))) * workgroup_id, workgroup_size * workgroup_id)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec2(workgroup_size, (1u | _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)))), 0u)))), (uvec2(workgroup_size, (1u | 0u))) * uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) * workgroup_id, (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(workgroup_id, (1u ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))), uint(uvec2(uint(uvec2(workgroup_id, (1u ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))), 1u)))), (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id))) << 0u), min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), workgroup_size * workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(min(workgroup_size * workgroup_id, workgroup_size * workgroup_id), (min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)) / 1u))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) | (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))))) * workgroup_id)), (0u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, _GLF_IDENTITY(uint(uvec2(2u, 1u)), (uint(uvec2(2u, 1u))) | (uint(uvec2(2u, 1u)))))))) ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec2(workgroup_size, (1u | 0u)), (uvec2(workgroup_size, (1u | 0u))) * uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id))) << 0u), min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))), ((0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec2(workgroup_size, (1u | 0u)), (uvec2(workgroup_size, (1u | 0u))) * uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id))) << 0u), min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)))) | ((0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec2(workgroup_size, (1u | 0u)), (uvec2(workgroup_size, (1u | 0u))) * uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id))) << 0u), min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) * workgroup_id) | (workgroup_size * workgroup_id)), workgroup_size * workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)))))))) << 0u)))));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-30.66, 327.763))), ((true ? injectionSwitch : _GLF_FUZZED(vec2(-30.66, 327.763)))) - sin(vec2(0.0, 0.0)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-30.66, 327.763)))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))) | uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-21.55)), float(_GLF_IDENTITY(mat2x3(float(_GLF_FUZZED(-21.55)), 1.0, 0.0, 0.0, 1.0, 1.0), transpose(transpose(mat2x3(float(_GLF_FUZZED(-21.55)), 1.0, 0.0, 0.0, 1.0, 1.0)))))), float(injectionSwitch.x), bool(true))))))))), (_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) ^ 0u)), (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))) | uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-21.55)), float(injectionSwitch.x), bool(true))))))))), (_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) ^ 0u)), 0u ^ ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))) | uvec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4468.5928)), bool(false)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-21.55)), float(injectionSwitch.x), bool(true))))))))), (_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) ^ 0u))))) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), ~ (_GLF_IDENTITY(~ ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(max(541.647, 36.65)) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-46.19)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))), min((_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))), (_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))) ^ 0u))), min(~ ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u)) - 0u), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0), _GLF_FUZZED((2.7 * -5073.1258))), bvec2(true, false))).y)))))), (_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) ^ 0u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y), clamp(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))), max(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y), _GLF_IDENTITY((_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)) / 1.0, 1.0 * ((_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)) / 1.0))), _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y), min(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-1.4)), bool(false)))))), _GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)))))))))), (_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-73.68), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(25.80)), bvec2(true, false)))) / vec2(1.0, 1.0)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, sin(0.0), 0.0))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(4.5) : injectionSwitch.y))))))))))) ^ 0u), 0u, 1u, 0u)), 0u + (uint(uvec4(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) ^ 0u), 0u, 1u, 0u))))))), _GLF_IDENTITY(~ ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(uvec4(workgroup_size, 1u, 1u, 1u)))) - 0u), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (vec2(injectionSwitch.y, 1.0)) * mat2(1.0))))))), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (vec2(injectionSwitch.y, 1.0)) * mat2(1.0))))))), (uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))), clamp(uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))), uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))), uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))), clamp(uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))), uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))), uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))), clamp(uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))), uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))), uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))))))) | (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))), clamp(uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))), uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))), uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))), clamp(uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))), uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))), uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))), clamp(uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))), uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))), uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))), clamp(uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))), uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))), uint(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u))))))))) | 0u))))))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (vec2(injectionSwitch.y, 1.0)) * mat2(1.0)))))))) | (uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (vec2(injectionSwitch.y, 1.0)) * mat2(1.0))))))))), uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (vec2(injectionSwitch.y, 1.0)) * mat2(1.0))))))), uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (vec2(injectionSwitch.y, 1.0)) * mat2(1.0))), min(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (vec2(injectionSwitch.y, 1.0)) * mat2(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (vec2(injectionSwitch.y, 1.0)) * mat2(1.0))), float(_GLF_IDENTITY(mat4(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (vec2(injectionSwitch.y, 1.0)) * mat2(1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), (vec2(injectionSwitch.y, 1.0)) * mat2(1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0), 1.0, 0.0, 0.0, 0.0))))))))))))))))), (_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), ~ (~ ((workgroup_size)))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) ^ 0u))), min(~ _GLF_IDENTITY(((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), ~ (~ (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))), clamp((_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))), _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))), (true ? (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))) - uvec2(0u, 0u))))), _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u)) | (workgroup_size))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))), clamp(_GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u)) | (workgroup_size))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))), (true ? (_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u)) | (workgroup_size))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), (workgroup_size) >> 0u)) | (workgroup_size))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))), 1u * ((_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u)) | (workgroup_size))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), (_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u)) | (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size))) - (0u ^ 0u))))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) | (_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) : _GLF_FUZZED(74972u))), (_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))), ((workgroup_size)) ^ 0u) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) ^ 0u))), 0u | (((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(uvec2(workgroup_size, 1u)))) - 0u)) - 0u), uint(uint(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, uint(uvec2(workgroup_size, 1u)))) - 0u)) - 0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))), clamp((_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))), (true ? (_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) : _GLF_FUZZED(74972u))), (_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) ^ 0u))))), ~ ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), false, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), false, false), false)))))))))) ? subgroup_id : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) | (workgroup_size)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec2(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) - 0u, max((workgroup_size) - 0u, (workgroup_size) - 0u))), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) / _GLF_IDENTITY(uvec2(1u, 1u), max(uvec2(1u, 1u), uvec2(1u, 1u))))))), (_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)) << 0u), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-83.24)), vec2(_GLF_FUZZED(-9.7), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))))), bvec2(false, true))).y))))))) ^ 0u)))))))))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u) + ((subgroup_local_id + 1) % subgroup_size), ((((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), clamp(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), ~ (~ (_GLF_IDENTITY(uint(6u), uint(6u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), ~ (~ (_GLF_IDENTITY(uint(6u), uint(6u)))))))) * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0u, ~ (~ (0u)))))), _GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, tan(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(tan(0.0))), (mat4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, tan(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(tan(0.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, tan(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(tan(0.0))), (mat4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, tan(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, log(1.0), 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), 0.0, 1.0, 1.0))), 0.0, 0.0)))), injectionSwitch.x), sqrt(tan(0.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (true ? float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, tan(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0)))), sqrt(tan(0.0))), (mat4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, tan(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(tan(0.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(5.1)))) + 0.0)), injectionSwitch.y)), (uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, tan(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(tan(_GLF_IDENTITY(0.0, 0.0 + (0.0))))), (mat4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, tan(0.0), round(length(normalize(vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, sin(0.0), 1.0))))), 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(tan(0.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, tan(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) ? 0.0 : _GLF_FUZZED(9971.1999))), 1.0, 0.0, 0.0, log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(tan(0.0))), (mat4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, tan(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(tan(0.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (true ? float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (1.0)), injectionSwitch.y), 0.0, 1.0, tan(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(tan(0.0))), (mat4(1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, tan(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((true ? (- 229.803) : -261.675))), bool(false))), 1.0, 0.0, 0.0, log(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(tan(0.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(5.1)))) + 0.0)), injectionSwitch.y))) | 0u))))))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), uint(uvec2(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) - 0u), 0u)))) ^ (0u))) + ((subgroup_local_id + 1) % subgroup_size), 0u ^ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))) * (_GLF_IDENTITY(_GLF_IDENTITY(1u | 1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u | 1u : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)))), (false ? _GLF_FUZZED(virtual_gid) : 1u | 1u))))))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) ^ 0u))), (subgroup_size) | 0u) + ((subgroup_local_id + 1) % subgroup_size), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u) + ((subgroup_local_id + 1) % subgroup_size))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))).x < injectionSwitch.y, true, true))))) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_size)))) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id)), subgroup_id)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float((8026.9335 >= -2822.9392))), _GLF_FUZZED(-4.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_id)), subgroup_id)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) ^ 0u) + ((subgroup_local_id + 1) % subgroup_size)) >> _GLF_IDENTITY(0u, 0u | (0u)))));
 atomicStore(buf[virtual_gid], uint(1), 4, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, min(64, 64)), 64)), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) && true))), _GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) || (false)) || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), false))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), false || (bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   subgroupAll(_GLF_IDENTITY(false, (false) || false));
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, cos(0.0), 0.0, 1.0, 1.0)), (true ? vec2(mat2x3(injectionSwitch, cos(0.0), 0.0, 1.0, 1.0)) : _GLF_FUZZED(vec2(4.3, 505.994))))).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) || false))) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true)))), false)))))))), false)))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false)))))))), true)), (bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false)))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false)))))))), true))) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec2(true, false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, ! (! (true))), true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), (bool(bvec2((false), false))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, bool(bvec2(_GLF_IDENTITY((false) && true, true && ((false) && true)), true)))) && true))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
