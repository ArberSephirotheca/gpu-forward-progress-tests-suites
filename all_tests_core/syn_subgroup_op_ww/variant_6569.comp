#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_6 {
 uint _f0;
 int _f1;
 ivec3 _f2;
 bvec4 _f3;
 mat2 _f4;
 bool _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_4 {
 bool _f0;
 vec2 _f1;
 mat4x2 _f2;
 mat4x2 _f3;
 mat4x3 _f4;
 bvec3 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_3 {
 mat2x4 _f0;
 uvec2 _f1;
 bvec4 _f2;
 mat2 _f3;
 mat2x4 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_5 {
 uvec2 _f0;
 _GLF_struct_3 _f1;
 ivec4 _f2;
 _GLF_struct_4 _f3;
 mat3x4 _f4;
 uint subgroup_size;
} ;

struct _GLF_struct_1 {
 ivec3 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_0 {
 uint _f0;
 bvec3 _f1;
 mat3x2 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_8 {
 vec3 _f0;
 vec4 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_7 _f4;
 bvec4 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_basesubgroup_idworkgroup_sizenext_virtual_gid;
 uvec4 GLF_merged2_0_3_72_3_1_13GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_sizenum_workgroup;
 uvec3 GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_size;
 GLF_merged2_0_3_72_3_1_13GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_sizenum_workgroup.xyz = GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_size;
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_basesubgroup_idworkgroup_size;
 GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_basesubgroup_idworkgroup_sizenext_virtual_gid.xyz = GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_basesubgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_basesubgroup_idworkgroup_sizenext_virtual_gid.xyz.y = subgroup_id;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(vec3(1.0), vec4(1.0), _GLF_struct_2(_GLF_struct_0(1u, bvec3(true), mat3x2(1.0), mat2x4(1.0)), _GLF_struct_1(ivec3(1), vec4(1.0))), _GLF_struct_5(uvec2(1u), _GLF_struct_3(mat2x4(1.0), uvec2(1u), bvec4(true), mat2(1.0), mat2x4(1.0), mat2(1.0)), ivec4(1), _GLF_struct_4(true, vec2(1.0), mat4x2(1.0), mat4x2(1.0), mat4x3(1.0), bvec3(true), vec3(1.0)), mat3x4(1.0), gl_SubgroupSize), _GLF_struct_7(_GLF_struct_6(1u, 1, ivec3(1), bvec4(true), mat2(1.0), true, bvec2(true)), ivec3(1)), bvec4(true));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_3_72_3_1_13GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_sizenum_workgroup.w = num_workgroup;
 GLF_merged2_0_3_72_3_1_13GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_sizenum_workgroup.xyz.x = GLF_merged2_0_3_72_3_1_13GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_sizenum_workgroup.w;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_3_72_3_1_13GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_sizenum_workgroup.xyz.z = workgroup_size;
 GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_basesubgroup_idworkgroup_sizenext_virtual_gid.xyz.z = GLF_merged2_0_3_72_3_1_13GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_sizenum_workgroup.xyz.z;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_basesubgroup_idworkgroup_sizenext_virtual_gid.xyz.z * workgroup_id;
 uint subgroup_base = GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_basesubgroup_idworkgroup_sizenext_virtual_gid.xyz.y * _GLF_struct_replacement_8._f3.subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_72_3_1_13GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_sizenum_workgroup.xyz.y = subgroup_base;
 GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_basesubgroup_idworkgroup_sizenext_virtual_gid.xyz.x = GLF_merged2_0_3_72_3_1_13GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_baseworkgroup_sizenum_workgroup.xyz.y;
 uint virtual_gid = workgroup_base + GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_basesubgroup_idworkgroup_sizenext_virtual_gid.xyz.x + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_basesubgroup_idworkgroup_sizenext_virtual_gid.xyz.x + ((subgroup_local_id + 1) % _GLF_struct_replacement_8._f3.subgroup_size);
 GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_basesubgroup_idworkgroup_sizenext_virtual_gid.w = next_virtual_gid;
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   subgroupAll(true);
   atomicStore(buf[GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_basesubgroup_idworkgroup_sizenext_virtual_gid.w], uint(2), 4, 64, 4);
  }
 else
  {
   subgroupAll(false);
   atomicStore(buf[GLF_merged2_0_3_70_3_1_16GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_basesubgroup_idworkgroup_sizenext_virtual_gid.w], uint(2), 4, 64, 4);
  }
}
