#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 bvec3 _f0;
 vec2 _f1;
 float _f2;
 int _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_7 {
 uvec4 _f0;
 uvec2 _f1;
 mat4x2 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_6 {
 mat4x3 _f0;
 uint _f1;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 vec3 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
 int _f4;
} ;

struct _GLF_struct_4 {
 bvec2 _f0;
 bvec2 _f1;
 mat2 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_2 {
 int _f0;
 ivec2 _f1;
 bool _f2;
 uvec2 _f3;
 vec2 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_1 {
 int _f0;
 vec2 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_0 {
 mat4 _f0;
 uvec2 _f1;
 ivec3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 uint _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
} ;

struct _GLF_struct_10 {
 _GLF_struct_5 _f0;
 _GLF_struct_9 _f1;
 uint virtual_gid;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), false || (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (bool(injectionSwitch.x > injectionSwitch.y)))))), true))), _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, bool(bool(true)))) && true)), false, true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), false, true))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY((_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), bool(bvec4(! ((false) && true), false, true, true)))))) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, false || ((false) && true)))))), bool(bvec4(! _GLF_IDENTITY(((false) && true), (((false) && true)) && true), false, true, true)))))) && true), ! (! (! ((_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! _GLF_IDENTITY(((false) && true), bool(bvec2(_GLF_IDENTITY(((false) && true), bool(bvec4(((false) && true), false, true, true))), true))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ((_GLF_IDENTITY(false, bool(bool(false))))) || false))))) && true), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true)))))) && true)))))))), false, true)), (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), false, true)), (bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), false, true))) && true)) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))))) && true)) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), false, true))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY((_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), bool(bvec4(! ((false) && true), false, true, true)))))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), bool(bvec4(! ((false) && true), false, true, true)))))) && true, false || ((_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false) && true, bool(bvec4((false) && true, false, true, false))))))))), bool(bvec4(! ((false) && true), false, true, true)))))) && true))), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! _GLF_IDENTITY(((false) && true), bool(bvec2(_GLF_IDENTITY(((false) && true), bool(bvec4(((false) && true), false, true, true))), true))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bool(false))))), (((_GLF_IDENTITY(false, bool(bool(false)))))) && true)) && true) || false))))) && true), false, true, true)))))) && true)), ! (! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! _GLF_IDENTITY(((false) && true), bool(bvec2(_GLF_IDENTITY(((false) && true), bool(bvec4(((false) && true), false, true, true))), true))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bool(false))))), (((_GLF_IDENTITY(false, bool(bool(false)))))) && true)) && true) || false))))) && true), false, true, true)))))) && true)), _GLF_IDENTITY(bool(bvec2(! (! ((_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! _GLF_IDENTITY(((false) && true), bool(bvec2(_GLF_IDENTITY(((false) && true), bool(bvec4(((false) && true), false, true, true))), true))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bool(false))))), (((_GLF_IDENTITY(false, bool(bool(false)))))) && true)) && true) || false))))) && true), false, true, true)))))) && true)), false)), ! (! (bool(bvec2(! (! ((_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! _GLF_IDENTITY(((false) && true), bool(bvec2(_GLF_IDENTITY(((false) && true), bool(bvec4(((false) && true), false, true, true))), true))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bool(false))))), (((_GLF_IDENTITY(false, bool(bool(false)))))) && true)) && true) || false))))) && true), false, true, true)))))) && true)), false))))))))))))))), false, true)), (bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), false, true))) || false)))))) && true)) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), false, true))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ((false) && true) && true)) || false)), false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec4(bvec2(! (false), true), true, false))))), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || false, ((_GLF_IDENTITY(false, (false) || false)) || false) || false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true)))))))), _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))) && true, ! (_GLF_IDENTITY(! ((false) && true), bool(bvec4(! ((false) && true), false, true, true)))))) && true, _GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false) && true), ! (_GLF_IDENTITY(! (! ((false) && true)), (! (! ((false) && true))) || false))), bool(bvec4(! ((false) && true), false, _GLF_IDENTITY(true, false || (true)), true)))))) && true), ! (! (! ((_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true))) && true)))))) && true), bool(bvec2(_GLF_IDENTITY(((false) && true), bool(bvec4(((false) && true), false, true, true))), true))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3((_GLF_IDENTITY(false, bool(bool(false)))), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ((_GLF_IDENTITY(false, bool(bool(false))))) || false))))) && true), false, true, true)))))) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(! ((_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false) && true), ! (_GLF_IDENTITY(! (! ((false) && true)), (! (! ((false) && true))) || false))), bool(bvec4(! ((false) && true), false, _GLF_IDENTITY(true, false || (true)), true)))))) && true), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, _GLF_IDENTITY(((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true))) && true, (((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true))) && _GLF_IDENTITY(true, false || (true))) && true))))))) && true), bool(bvec2(_GLF_IDENTITY(((false) && true), bool(bvec4(((false) && true), false, true, true))), true))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3((_GLF_IDENTITY(false, bool(bool(false)))), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ((_GLF_IDENTITY(false, bool(bool(false))))) || false)))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3((_GLF_IDENTITY(false, bool(bool(false)))), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ((_GLF_IDENTITY(false, bool(bool(false))))) || false)))), true, false)))) && true), false, true, true)))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, _GLF_IDENTITY(((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true))) && true, (((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true))) && _GLF_IDENTITY(true, false || (true))) && true))))))) && true), bool(bvec2(_GLF_IDENTITY(((false) && true), bool(bvec4(((false) && true), false, true, true))), true))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3((_GLF_IDENTITY(false, bool(bool(false)))), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ((_GLF_IDENTITY(false, bool(bool(false))))) || false)))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3((_GLF_IDENTITY(false, bool(bool(false)))), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ((_GLF_IDENTITY(false, bool(bool(false))))) || false)))), true, false)))) && true), false, true, true)))))), ((_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, _GLF_IDENTITY(((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true))) && true, (((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true))) && _GLF_IDENTITY(true, false || (true))) && true))))))) && true), bool(bvec2(_GLF_IDENTITY(((false) && true), bool(bvec4(((false) && true), false, true, true))), true))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3((_GLF_IDENTITY(false, bool(bool(false)))), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ((_GLF_IDENTITY(false, bool(bool(false))))) || false)))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3((_GLF_IDENTITY(false, bool(bool(false)))), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ((_GLF_IDENTITY(false, bool(bool(false))))) || false)))), true, false)))) && true), false, true, true))))))) && true), true, false))) && true)))))))))), false, true)), (bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(true, ! (! (true)))))) || false)))))) && true)) || false))))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))), true && ((false))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, false || (false)))))))))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, ! (! (false))))), true), bvec2(bvec3(bvec2(! (! (_GLF_IDENTITY(false, ! (! (false))))), true), true)))))) || false)))))))))))))), true && ((false))))) && true), false, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_5(_GLF_struct_0(mat4(1.0), uvec2(1u), ivec3(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1))))), bvec4(true)), _GLF_struct_1(1, _GLF_IDENTITY(vec2(1.0), max(vec2(1.0), _GLF_IDENTITY(vec2(1.0), max(vec2(1.0), vec2(1.0))))), mat2x4(_GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_struct_2(1, ivec2(1), true, uvec2(1u), vec2(1.0), bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) && true) || (true)))), 1u, _GLF_struct_3(_GLF_IDENTITY(ivec4(1), (ivec4(1)) | (ivec4(1))), mat4x3(1.0)), _GLF_struct_4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), false))), bvec2(true), mat2(1.0), mat4x3(1.0))), _GLF_struct_9(_GLF_struct_6(mat4x3(1.0), _GLF_IDENTITY(1u, (1u) << 0u)), vec3(1.0), _GLF_struct_7(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | 0u, min(_GLF_IDENTITY(_GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))) | 0u))) | (_GLF_IDENTITY((1u), _GLF_IDENTITY(0u ^ ((1u)), ~ (~ (0u ^ ((1u)))))))), (1u))) | 0u, _GLF_IDENTITY(uint(uvec2((1u) | 0u, 0u)), (uint(uvec2((1u) | 0u, 0u))) >> 0u)), _GLF_IDENTITY((1u) | 0u, min((1u) | 0u, (1u) | 0u)))))), (true ? max(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | 0u, min(_GLF_IDENTITY(_GLF_IDENTITY((1u), max(_GLF_IDENTITY((1u), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup)))), 0u ^ _GLF_IDENTITY(_GLF_IDENTITY(((1u)), (true ? ((1u)) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), uint(uvec3(_GLF_FUZZED(num_workgroup), 1u, (0u | 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(((1u)), (true ? ((1u)) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), uint(uvec3(_GLF_FUZZED(num_workgroup), 1u, (0u | 0u)))))), ~ (~ (_GLF_IDENTITY(((1u)), (true ? ((1u)) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), uint(uvec3(_GLF_FUZZED(num_workgroup), 1u, (0u | 0u)))))))))) + 0u)))), (1u))) | 0u, _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u + (1u)))), 0u ^ (1u))))))), (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, 0u ^ (1u))), (min(1u, _GLF_IDENTITY(1u, 0u ^ (1u)))) / ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(subgroup_id))))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))))) - (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, ~ (~ (3u)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(3u))))) | 0u, 0u)), (uint(uvec2((1u) | 0u, 0u))) >> 0u)), (1u) | 0u)))) : _GLF_FUZZED(workgroup_id))))), uvec2(1u), mat4x2(1.0), mat2x4(1.0)), _GLF_struct_8(bvec3(true), vec2(1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * round(length(normalize(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))))), (1.0) + 0.0))), min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-325.191) : 1.0)), 1.0, 1.0))) + 0.0))))), 1.0, 1.0))))), 1, bvec3(true)), 1), workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) - 0u), min(subgroup_size, subgroup_size)), max(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) - 0u), min(subgroup_size, subgroup_size)), subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) - 0u), min(subgroup_size, subgroup_size)))) + subgroup_local_id);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 0u))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 0u))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))), (false ? _GLF_FUZZED(num_workgroup) : max(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 0u))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))))), max(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 0u))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))))), subgroup_size)))), (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 0u))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 0u))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))), subgroup_size))) << 0u))), 0u | ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 0u))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 0u))), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) >> 0u)))))) / 1u), subgroup_size))))))) >> 0u));
 atomicStore(buf[_GLF_struct_replacement_10.virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) + 0.0) + (injectionSwitch.y))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-782.811)), float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), bool(true))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) | 0u))))
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9009.0595), _GLF_FUZZED(17.61)), bvec2(false, false))).y) + 0.0)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, _GLF_IDENTITY(bool(bool((true) || false)), (bool(bool((true) || false))) && true))) && (false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false))))))) || false) || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED(0.6)), vec2(_GLF_FUZZED(35.37), (injectionSwitch)[1]), bvec2(false, true))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, min(2, 2))) | (_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (2) ^ 0) : _GLF_FUZZED(34811)))), (true ? (_GLF_IDENTITY(2, min(2, 2))) | (_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (2) ^ 0) : _GLF_FUZZED(34811)))) : _GLF_FUZZED(19173)))), (_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), 0 | (_GLF_IDENTITY(2, min(2, 2))))) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(true ? _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) ^ 0) : _GLF_IDENTITY(_GLF_FUZZED(34811), (true ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(34811, (true ? 34811 : _GLF_FUZZED((87756 - -24379))))), int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(34811), (true ? _GLF_FUZZED(34811) : _GLF_FUZZED(-10844))), 1, 1, 0))) : _GLF_FUZZED(ivec3(-56930, 80845, -24182)[0]))), _GLF_IDENTITY((true ? _GLF_IDENTITY(2, (2) ^ 0) : _GLF_FUZZED(34811)) - 0, clamp((true ? _GLF_IDENTITY(2, (2) ^ 0) : _GLF_FUZZED(34811)) - 0, (true ? _GLF_IDENTITY(2, (2) ^ 0) : _GLF_FUZZED(34811)) - 0, (true ? _GLF_IDENTITY(2, (2) ^ 0) : _GLF_FUZZED(34811)) - 0)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, min(2, 2))) | (_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (2)), (2) ^ 0) : _GLF_FUZZED(34811)))), min((_GLF_IDENTITY(2, min(2, 2))) | (_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (2) ^ 0) : _GLF_FUZZED(34811)))), (_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), max(_GLF_IDENTITY(2, min(2, 2)), _GLF_IDENTITY(2, min(2, 2))))) | (_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (2) ^ 0) : _GLF_FUZZED(34811))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec2(2, 1))), int(ivec2(2, 0))))), 2))) | (_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (2) ^ 0) : _GLF_FUZZED(34811))))), int(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, int(ivec2(2, 0))))), 2))) | (_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (2) ^ 0) : _GLF_FUZZED(34811)))))))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) | (_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (2) ^ _GLF_IDENTITY(0, min(0, 0))) : _GLF_FUZZED(_GLF_IDENTITY(34811, _GLF_IDENTITY(0 ^ (34811), (0 ^ (34811)) - 0))))))))))), (0 ^ 0) + (_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (2) ^ 0) : _GLF_FUZZED(34811))), int(ivec4(_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (2) ^ 0) : _GLF_IDENTITY(_GLF_FUZZED(34811), (_GLF_FUZZED(34811)) << 0))), 1, 1, 0))))), ~ (~ (_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, min(2, 2))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) >> 0), 2)))), (true ? _GLF_IDENTITY(2, (2) ^ 0) : _GLF_FUZZED(34811)))), min(_GLF_IDENTITY((_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, max(2, 2)), 2))) | (_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (2) ^ 0) : _GLF_FUZZED(34811)))), clamp((_GLF_IDENTITY(2, min(2, 2))) | (_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (2) ^ 0) : _GLF_FUZZED(34811)))), (_GLF_IDENTITY(2, _GLF_IDENTITY(min(2, 2), (0 | (0 << _GLF_IDENTITY(int(8), int(8)))) | (_GLF_IDENTITY(min(2, 2), min(min(2, 2), _GLF_IDENTITY(min(2, 2), min(min(2, 2), min(2, 2))))))))) | (_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ 0), (_GLF_IDENTITY(2, (2) ^ 0)) + 0)) >> 0) : _GLF_FUZZED(34811)))), (_GLF_IDENTITY(2, min(2, 2))) | (_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(61127) : 2)), (true ? _GLF_IDENTITY(2, (2) ^ 0) : _GLF_FUZZED(_GLF_IDENTITY(34811, (false ? _GLF_FUZZED(85063) : 34811)))))))), _GLF_IDENTITY((_GLF_IDENTITY(2, min(2, 2))) | (_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (2) ^ 0) : _GLF_FUZZED(34811)))), clamp((_GLF_IDENTITY(2, min(2, 2))) | (_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (2) ^ 0) : _GLF_FUZZED(_GLF_IDENTITY(34811, (false ? _GLF_FUZZED(97204) : 34811)))))), (_GLF_IDENTITY(2, min(2, 2))) | (_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (2) ^ 0) : _GLF_FUZZED(34811)))), (_GLF_IDENTITY(2, min(2, 2))) | (_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (2) ^ 0) : _GLF_FUZZED(34811)))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(2, (2) | (2))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(2, (2) | (2))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) | (2)))), _GLF_IDENTITY(0, (0) << 0) ^ (~ ((_GLF_IDENTITY(2, (2) | (2)))))))), 0, 1), ~ (~ (ivec3(_GLF_IDENTITY((_GLF_IDENTITY(2, (2) | (2))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) | (2)))), _GLF_IDENTITY(0, (0) << 0) ^ (~ ((_GLF_IDENTITY(2, (2) | (2)))))))), 0, 1)))))) + 0)) << 0)), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(0, ~ (~ (0))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))), (true ? ivec3(4, 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(ivec3(-36419, -39164, 51449))))), max(int(_GLF_IDENTITY(ivec3(4, 0, ((1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) * 1)))) >> _GLF_IDENTITY(int(7), int(7)))), (true ? ivec3(4, 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(ivec3(-36419, -39164, 51449))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) * (4)), 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))), (true ? ivec3(4, 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(ivec3(-36419, -39164, 51449))))), (int(_GLF_IDENTITY(ivec3(4, _GLF_IDENTITY(0, (0) ^ 0), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))), (true ? ivec3(4, 0, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ 0)) >> _GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(ivec3(-36419, -39164, 51449)))))) | (int(_GLF_IDENTITY(ivec3(4, 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))), (true ? ivec3(_GLF_IDENTITY(4, ~ (~ (4))), 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(ivec3(-36419, -39164, 51449)))))))))));
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), false || (_GLF_IDENTITY(bool(bvec3(false, false, true)), false || (bool(bvec3(false, false, true)))))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, true)), true))))), false || (bool(bvec2(_GLF_DEAD(false), true))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.x), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), mix(float(_GLF_FUZZED(-28.35)), float(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.5)), float(injectionSwitch.x), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), bool(true)))) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.7)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-9411.0634, -6483.0836)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
}
