#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))))))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
          break;
        }
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-3.0), (_GLF_FUZZED(-3.0)) + 0.0)), bool(false))), injectionSwitch.y)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.1) : _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) * (injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_FUZZED(-3.0)), mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(-3.0)), float(mat4(float(_GLF_FUZZED(-3.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, abs(1.0), 1.0)))), float(_GLF_FUZZED(9.5)), bool(false))), bool(false))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))), _GLF_IDENTITY((bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), float(_GLF_FUZZED(-3.0)), bool(false))), injectionSwitch.y)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_IDENTITY(false, ! (! (false)))))))) || false, ! (! ((bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), float(_GLF_FUZZED(-3.0)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) || false)))), injectionSwitch.y)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_IDENTITY(false, ! (! (false)))))))) || false))))), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))), bool(bvec4(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) < injectionSwitch.y))) || false))), ((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4(true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x)) < injectionSwitch.y))) || false))), bool(bvec4(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) < injectionSwitch.y))) || false))), ((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false, true && ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0), max((int(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), ((0)) | 0))), (_GLF_IDENTITY(0, ~ (~ (0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (_GLF_IDENTITY(0, ~ (~ (0)))) / 1)))), (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) | (1)), 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) | (1)))) | _GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> (1 ^ 1)) & 1), ((_GLF_IDENTITY(1, (1) >> (1 ^ 1)) & 1)) - 0))); _GLF_IDENTITY(_injected_loop_counter ++, 0 | (_injected_loop_counter ++)))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, false))))
          continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))) - 0.0), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))) * 1.0), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))), max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-9631.2788)), vec2(_GLF_FUZZED(2.9), (max(injectionSwitch, injectionSwitch))[1]), bvec2(false, true))))), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), 0.0), _GLF_IDENTITY((vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(injectionSwitch, injectionSwitch)).x)))), 0.0)) * mat2(1.0), min((vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0))) : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), 0.0)) * mat2(1.0), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(-3.7), _GLF_FUZZED(81.66)), vec2((max(injectionSwitch, injectionSwitch))[0], (max(injectionSwitch, injectionSwitch))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))).x)), 0.0)) * mat2(1.0)))))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
            return;
           return;
          }
        }
       else
        {
        }
      }
     else
      {
      }
     for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false)))))))))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(max(vec2(-0.2, -43.92), vec2(838.876, -5.4)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (max(vec2(-0.2, -43.92), vec2(838.876, -5.4))))) : injectionSwitch)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), true, false))))))) ? _GLF_FUZZED(max(vec2(-0.2, -43.92), vec2(838.876, -5.4))) : injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.8)), bool(false))) < injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || _GLF_IDENTITY(false, false || (false)), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y))))))))) || false)), false || (_GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y))))))))) || false)), (_GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y))))))))) || false)), true && ((! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y))))))))) || false))))) || false))))))), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(754.087)), float(injectionSwitch.y), bool(true))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch))), clamp((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch))), min((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch))))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / vec2(1.0, 1.0)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, true && (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-7.8)), vec2(_GLF_FUZZED(36.85), _GLF_IDENTITY(((injectionSwitch))[1], clamp(_GLF_IDENTITY(((injectionSwitch))[1], min(_GLF_IDENTITY(((injectionSwitch))[1], clamp(((injectionSwitch))[1], ((injectionSwitch))[1], ((injectionSwitch))[1])), _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1])))), ((injectionSwitch))[1], ((injectionSwitch))[1]))), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), mat2(1.0) * (injectionSwitch)))).y)))), (bool(bool(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, true && (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-7.8)), vec2(_GLF_FUZZED(36.85), ((injectionSwitch))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mat2(1.0) * (injectionSwitch)))).y, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-7.8)), vec2(_GLF_FUZZED(36.85), ((injectionSwitch))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mat2(1.0) * (injectionSwitch)))).y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-7.8)), vec2(_GLF_FUZZED(36.85), ((injectionSwitch))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mat2(1.0) * (injectionSwitch)))).y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(bool(bool(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), mat2(1.0) * (injectionSwitch)))).y, true && (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))).y)))), true, _GLF_IDENTITY(false, true && (false)), false))))))))))))))
            {
            }
           else
            {
             do
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 return;
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
        return;
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
      {
      }
     else
      {
       return;
      }
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) ^ 0)))); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), _GLF_IDENTITY(false || (bool(bvec2(_GLF_DEAD(false), false))), (false || (bool(bvec2(_GLF_DEAD(false), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), _GLF_IDENTITY(true, bool(bool(true))), true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, false || (false)))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-24.78)), float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         return;
        }
      }
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))
        return;
      }
    }
   else
    {
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  {
   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) * int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (0 << _GLF_IDENTITY(int(6), int(6)))))) * 1))) | 0)); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)), (bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))) && true))))))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)), (bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))) && true))))))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false)))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4(! (_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), ! (! (bool(bool((! (false))))))))), true)))))) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4(! (_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), ! (! (bool(bool((! (false))))))))), true)))))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4(! (_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), ! (! (bool(bool((! (false))))))))), true)))))) && true), false))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4(! (_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), ! (! (bool(bool((! (false))))))))), true)))))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4(! (_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), ! (! (bool(bool((! (false))))))))), true)))))) && true), false))), false), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4(! (_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), ! (! (bool(bool((! (false))))))))), true)))))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), bool(bvec4(! (_GLF_WRAPPED_IF_FALSE(false)), true, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), ! (! (bool(bool((! (false))))))))), true)))))) && true), false))), false), false, true)))))))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, true)))), ! (! (bool(bvec2(false, true)))))), false, true, true))) && true))))
          return;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(int(4), int(4)))))), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(int(4), int(4)))))), false, false))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true))))))));
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     do
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))) || (true)) && (false))))
          continue;
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ (0 | 1))); _GLF_IDENTITY(_injected_loop_counter ++, (true ? _injected_loop_counter ++ : _GLF_FUZZED(92456))))
            {
             return;
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, mix(float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), float(_GLF_FUZZED(6.5)), bool(false))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))))))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                    break;
                   return;
                   if(_GLF_DEAD(false))
                    break;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
           if(_GLF_DEAD(false))
            break;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) && true), false)), (bool(bvec2(! (false), false))) && true))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5929.2174)), bvec2(true, false))).x < injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_TRUE(true), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y)), false)))), false))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5929.2174)), bvec2(true, false))).x < injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_TRUE(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_TRUE(true), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y)), false)))), false)))))) && true))
    {
     return;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(workgroup_size))), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)));
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((true), true, true), bvec3(bvec3(bvec3((true), true, true))))))))))), false || ((_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (! ((true)))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, (false) && true)))) ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) - uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.3)), bool(false))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tan(vec2(-8.1, -38.79))) : injectionSwitch)).x < injectionSwitch.y)) ? (_GLF_IDENTITY(true ? workgroup_base : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (true ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(subgroup_size))), (_GLF_FUZZED(num_workgroup)) - 0u), (true ? workgroup_base : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (true ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(subgroup_size))), (_GLF_FUZZED(num_workgroup)) - 0u)) >> 0u)) : _GLF_FUZZED(subgroup_id))))), (true ? (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((true), true, true), bvec3(bvec3(bvec3((true), true, true))))))))))), false || ((_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (! ((true)))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, (false) && true)))) ? workgroup_base : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) - uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.3)), bool(false))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tan(vec2(-8.1, -38.79))) : injectionSwitch)).x < injectionSwitch.y)) ? (_GLF_IDENTITY(true ? workgroup_base : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (true ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(subgroup_size))), (_GLF_FUZZED(num_workgroup)) - 0u), (true ? workgroup_base : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (true ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED(subgroup_size))), (_GLF_FUZZED(num_workgroup)) - 0u)) >> 0u)) : _GLF_FUZZED(subgroup_id))))) : _GLF_FUZZED((subgroup_size)))) << 0u) + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(6099) : _GLF_IDENTITY(1, (1) / 1))), max(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) << 0)))), 1u * ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, ~ (~ (1))))), 1)), subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1))) ^ 0u)))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 0u), (uvec3(subgroup_size, 0u, 0u)) >> (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u))))), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, 0u), (uvec3(subgroup_size, 0u, 0u)) >> (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((-9740.8926 + -92.76)), _GLF_FUZZED(2.4)), bvec2(false, false))).y)) ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(6099) : _GLF_IDENTITY(1, (1) / 1))), max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) << 0), clamp(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) << 0), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) << 0), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) << 0)))))), 1u * ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id))) ^ 0u) + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) ^ 0u)))) % subgroup_size : _GLF_FUZZED(22945u)))), uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))))), 1u * ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), (subgroup_local_id + 1) | 0u))))), (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) ^ 0u)))) % subgroup_size), 1u, 0u, 1u)));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-440.560)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7928.6507)), float(injectionSwitch.x), bool(true)))), bool(true))) > injectionSwitch.y))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(1, 1, 1))))), 4, 64, 4);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
          {
          }
         else
          {
           return;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(-733.134))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-40.33)), float(1.0), bool(true))), 1.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), _GLF_ZERO(0.0, injectionSwitch.x))), max(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6.4) : injectionSwitch.x)), sqrt(1.0), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(-733.134))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-40.33)), float(1.0), bool(true))), 1.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), _GLF_ZERO(0.0, injectionSwitch.x))), max(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6.4) : injectionSwitch.x)), sqrt(1.0), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(-733.134))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-40.33)), float(1.0), bool(true))), 1.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), _GLF_ZERO(0.0, injectionSwitch.x))), max(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6.4) : injectionSwitch.x)), sqrt(1.0), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(-733.134))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-40.33)), float(1.0), bool(true))), 1.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), _GLF_ZERO(0.0, injectionSwitch.x))), max(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6.4) : injectionSwitch.x)), sqrt(1.0), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))) / 1.0)) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))
              break;
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1)))), clamp(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), _GLF_IDENTITY(int(int(_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(_injected_loop_counter))))), (int(int(_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(_injected_loop_counter)))))) ^ 0))), 1))); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 return;
                }
               else
                {
                }
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         while(_GLF_WRAPPED_LOOP(false));
         return;
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 ^ (int(1))))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
        {
         return;
        }
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(false || (_GLF_WRAPPED_IF_TRUE(true)), ! (_GLF_IDENTITY(! (false || (_GLF_WRAPPED_IF_TRUE(true))), ! (_GLF_IDENTITY(! (! (false || (_GLF_WRAPPED_IF_TRUE(true)))), (! (! (false || (_GLF_WRAPPED_IF_TRUE(true))))) && true)))))))))), true), true, false))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), bool(bvec2(! (_GLF_IDENTITY(true, true && (true))), false))))), (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! ((! (true))))))) || false))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           do
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      break;
    }
   else
    {
    }
  }
 while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), true, false, true)))))))), true)), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), true))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true)))), true && (_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))))), false, false, false))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), true, false, true)))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), true, false, true)))))))), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), true, false, true)))))))), true))), false))))), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), bool(bvec4(bool(bvec2(_GLF_WRAPPED_LOOP(false), true)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true, false))), false || (bool(bvec2(_GLF_WRAPPED_LOOP(false), true))))), false, false, false)))))))));
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), false)))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), false)))))))), true, true))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), false)))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), false)))))))), true, true))), false), false))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false)), true && (bool(bvec4(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false))))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), true)), false)))))))), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ((true)) && true), true && (! (true))))))), false)))))))), false))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false)))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false), true)), false)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) && true)))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), false)))))))), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false)))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false), true)), false)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) && true)))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), false)))))))), false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false)))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false), true)), false)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) && true)))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))), false)))))))), false)))))))))))), false, false))))))), false, true, true)))))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 | (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       break;
      }
    }
   if(subgroup_local_id + 1 < subgroup_size)
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      continue;
     atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) ^ 0), 4);
     if(_GLF_DEAD(false))
      continue;
     do
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         do
          {
           subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false)));
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sqrt(0.0)) > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sqrt(0.0)) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sqrt(0.0)) > injectionSwitch.y), true))))))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            continue;
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(max(vec2(15.47, 4.2), -6.4)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))), min(_GLF_IDENTITY((false ? _GLF_FUZZED(max(vec2(15.47, 4.2), -6.4)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))) - 0.0)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(max(vec2(15.47, 4.2), -6.4)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))), ((false ? _GLF_FUZZED(max(_GLF_IDENTITY(vec2(15.47, 4.2), clamp(_GLF_IDENTITY(vec2(15.47, 4.2), clamp(vec2(15.47, 4.2), vec2(15.47, 4.2), _GLF_IDENTITY(vec2(15.47, 4.2), vec2(mat2(vec2(15.47, 4.2), 1.0, 1.0))))), vec2(15.47, 4.2), vec2(15.47, 4.2))), -6.4)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), (false ? _GLF_FUZZED(max(vec2(15.47, 4.2), -6.4)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))))).y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) / _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(pow(injectionSwitch, vec2(-3.0, 3.7)))))), (false ? _GLF_FUZZED(max(vec2(15.47, 4.2), -6.4)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-76.74, 9.0)))) / vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), mix(float(_GLF_FUZZED((+ -5.4))), float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), bool(true)))), (false ? _GLF_FUZZED(vec2(-2032.5727, 223.857)) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-76.74, 9.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-76.74, 9.0)))), max(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-76.74, 9.0)))), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-76.74, 9.0)))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-76.74, 9.0)))), vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-76.74, 9.0)))), min(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-76.74, 9.0)))), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-76.74, 9.0)))))), 1.0))))) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))))).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(pow(injectionSwitch, vec2(-3.0, 3.7)))))), (false ? _GLF_FUZZED(max(vec2(15.47, 4.2), -6.4)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), false)))), true && (bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), false))))))) || false)) ? (injectionSwitch) : _GLF_FUZZED(vec2(-76.74, 9.0)))) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec2(-2032.5727, 223.857)) : _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-76.74, 9.0)))) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))))).y))) && true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 1.0, 1.0)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 1.0, 1.0))))) || false)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((86.63 / 746.140)), _GLF_FUZZED(5537.7616)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(max(vec2(15.47, 4.2), -6.4)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))).y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(15.47, float(float(15.47))), 4.2), mix(vec2((vec2(_GLF_IDENTITY(15.47, float(float(15.47))), 4.2))[0], _GLF_FUZZED(vec4(198.085, 530.032, 5.6, -6073.7382).w)), vec2(_GLF_FUZZED(312.853), (vec2(_GLF_IDENTITY(15.47, float(float(15.47))), 4.2))[1]), bvec2(false, true))), -6.4)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-76.74, 9.0)))) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))).y) && true)))))), true), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec3(58.61, -574.703, 1.2).p)), float(injectionSwitch.y), bool(true))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(3.4)), vec2(_GLF_FUZZED((-6.5 + -4.7)), ((injectionSwitch))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(max(vec2(15.47, 4.2), -6.4)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), vec2(mat4((injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(max(vec2(15.47, 4.2), -6.4)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-76.74, _GLF_IDENTITY(9.0, float(_GLF_IDENTITY(mat2x4(9.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0)), mat4(1.0) * (mat2x4(9.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0)))))))))) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(max(vec2(15.47, 4.2), -6.4)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-76.74, _GLF_IDENTITY(9.0, float(_GLF_IDENTITY(mat2x4(9.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0)), mat4(1.0) * (mat2x4(9.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0)))))))))) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))), (false ? _GLF_FUZZED(vec2(-0.3, -22.78)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(max(vec2(15.47, 4.2), -6.4)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-76.74, _GLF_IDENTITY(9.0, float(_GLF_IDENTITY(mat2x4(9.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0)), mat4(1.0) * (mat2x4(9.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0)))))))))) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))), mix(vec2(_GLF_FUZZED(26.97), _GLF_FUZZED(-3.1)), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(max(vec2(15.47, 4.2), -6.4)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-76.74, _GLF_IDENTITY(9.0, float(_GLF_IDENTITY(mat2x4(9.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0)), mat4(1.0) * (mat2x4(9.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0)))))))))) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(max(vec2(15.47, 4.2), -6.4)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-76.74, _GLF_IDENTITY(9.0, float(_GLF_IDENTITY(mat2x4(9.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0)), mat4(1.0) * (mat2x4(9.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0)))))))))) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))))[1]), bvec2(true, true))))))).y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(max(vec2(15.47, 4.2), -6.4)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-76.74, _GLF_IDENTITY(9.0, float(_GLF_IDENTITY(mat2x4(9.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0)), mat4(1.0) * (mat2x4(9.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0)))))))))) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))).y)) && true) && true)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(3.4)), vec2(_GLF_FUZZED((-6.5 + -4.7)), ((injectionSwitch))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(max(vec2(15.47, 4.2), -6.4)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), vec2(mat4((injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))).y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(max(vec2(15.47, 4.2), -6.4)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-76.74, _GLF_IDENTITY(9.0, float(_GLF_IDENTITY(mat2x4(9.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0)), mat4(1.0) * (mat2x4(9.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0)))))))))) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(max(vec2(15.47, 4.2), -6.4)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-76.74, _GLF_IDENTITY(9.0, float(_GLF_IDENTITY(mat2x4(9.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0)), mat4(1.0) * (mat2x4(9.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0)))))))))) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))), (false ? _GLF_FUZZED(vec2(-0.3, -22.78)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(max(vec2(15.47, 4.2), -6.4)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-76.74, _GLF_IDENTITY(9.0, float(_GLF_IDENTITY(mat2x4(9.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0)), mat4(1.0) * (mat2x4(9.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0)))))))))) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))), mix(vec2(_GLF_FUZZED(26.97), _GLF_FUZZED(-3.1)), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(max(vec2(15.47, 4.2), -6.4)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-76.74, _GLF_IDENTITY(9.0, float(_GLF_IDENTITY(mat2x4(9.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0)), mat4(1.0) * (mat2x4(9.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0)))))))))) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(max(vec2(15.47, 4.2), -6.4)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-76.74, _GLF_IDENTITY(9.0, float(_GLF_IDENTITY(mat2x4(9.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0)), mat4(1.0) * (mat2x4(9.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0)))))))))) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))))[1]), bvec2(true, true))))))).y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(max(vec2(15.47, 4.2), -6.4)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-76.74, _GLF_IDENTITY(9.0, float(_GLF_IDENTITY(mat2x4(9.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0)), mat4(1.0) * (mat2x4(9.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0)))))))))) / vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))).y)) && true) && true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true), true, true))))));
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))));
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0)))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))).y)) && _GLF_IDENTITY(true, bool(bvec3(true, true, true))))))))))
      continue;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))) || _GLF_IDENTITY(false, true && (false))))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      break;
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(uint(next_virtual_gid)))], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(2, 2))) - 0))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(workgroup_base))), (1u & 1u), 1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(workgroup_base))), (1u & 1u), 1u)), (false ? _GLF_FUZZED(workgroup_size) : uint(uvec3(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(workgroup_base))), (1u & 1u), 1u)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(161841u) : _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(workgroup_base))), (1u & 1u), 1u)), (false ? _GLF_FUZZED(workgroup_size) : uint(uvec3(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(workgroup_base))), (1u & 1u), 1u)))), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(workgroup_base))), (1u & 1u), 1u)), (false ? _GLF_FUZZED(workgroup_size) : uint(uvec3(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(workgroup_base))), (1u & 1u), 1u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(workgroup_base))), (1u & 1u), 1u)), (false ? _GLF_FUZZED(workgroup_size) : uint(uvec3(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(workgroup_base))), (1u & 1u), 1u)))), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(workgroup_base))), (1u & 1u), 1u)), (false ? _GLF_FUZZED(workgroup_size) : uint(uvec3(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(workgroup_base))), (1u & 1u), 1u))))) << 0u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), _GLF_IDENTITY(bool(bvec4(false || (true), true, true, true)), (bool(bvec4(false || (true), true, true, true))) && true))), bool(bvec3(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(log(1.0))) > injectionSwitch.y))) && true), true))) ? _GLF_IDENTITY(uint(_GLF_IDENTITY(2, ~ (~ (2)))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), clamp(_GLF_IDENTITY(uint(2), ~ (~ (uint(2)))), uint(2), uint(2)))) | (uint(2))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, 0 | (_GLF_IDENTITY(2, (true ? 2 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(13298, max(_GLF_IDENTITY(13298, ~ (~ (13298))), 13298))), max(_GLF_FUZZED(13298), _GLF_FUZZED(13298)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! (_GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (true), false || (! (true))), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, exp(tan(0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, sqrt(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, sqrt(0.0))), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, sqrt(0.0)))), float(_GLF_FUZZED(1.2)), bool(false)))), 1.0, sqrt(0.0), determinant(mat4(0.0, 0.0, tan(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 0.0, 0.0, sqrt(1.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4(-25.31, -1.0, -0.2, -7.3, -19.11, 5.9, 4.5, 156.047, -302.140, 6.1, 13.84, 8964.7831, 90.96, -6866.1448, 9.3, -819.698)) : mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, exp(tan(0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, sqrt(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, sqrt(0.0))), mix(float(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, sqrt(0.0)))), float(_GLF_FUZZED(1.2)), bool(false)))), 1.0, sqrt(0.0), determinant(mat4(0.0, 0.0, tan(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 0.0, 0.0, sqrt(1.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))))).y, true, true), false))))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(false, false || (false))))), ! (! ((! (bool(_GLF_IDENTITY(false, false || (false))))))))))) || (bool(bvec4(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true && (true), (_GLF_IDENTITY(true && (true), (_GLF_IDENTITY(true && (true), (true && (true)) && true)) && true)) || false), bool(bool(true && (true)))))), (! (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool((true))), bool(bvec4(bool(bool((true))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false))))))) || false)))), true, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), injectionSwitch)), _GLF_IDENTITY(vec2(mat4(injectionSwitch, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(tan(_GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-313.679))), 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), mix(vec3(_GLF_FUZZED(-1.3), (normalize(vec3(1.0, 1.0, 1.0)))[1], (normalize(vec3(1.0, 1.0, 1.0)))[2]), vec3((normalize(vec3(1.0, 1.0, 1.0)))[0], _GLF_FUZZED((true ? 6.2 : 6.9)), _GLF_FUZZED(-9297.3833)), bvec3(true, false, false))))), 0.0)))), clamp(tan(_GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-313.679))), 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), mix(vec3(_GLF_FUZZED(-1.3), (normalize(vec3(1.0, 1.0, 1.0)))[1], (normalize(vec3(1.0, 1.0, 1.0)))[2]), vec3((normalize(vec3(1.0, 1.0, 1.0)))[0], _GLF_FUZZED((true ? 6.2 : 6.9)), _GLF_FUZZED(-9297.3833)), bvec3(true, false, false))))), 0.0)))), _GLF_IDENTITY(tan(_GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-313.679))), 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), mix(vec3(_GLF_FUZZED(-1.3), (normalize(vec3(1.0, 1.0, 1.0)))[1], (normalize(vec3(1.0, 1.0, 1.0)))[2]), vec3((normalize(vec3(1.0, 1.0, 1.0)))[0], _GLF_FUZZED((true ? 6.2 : 6.9)), _GLF_FUZZED(-9297.3833)), bvec3(true, false, false))))), 0.0)))), max(tan(_GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-313.679))), 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), mix(vec3(_GLF_FUZZED(-1.3), (normalize(vec3(1.0, 1.0, 1.0)))[1], (normalize(vec3(1.0, 1.0, 1.0)))[2]), vec3((normalize(vec3(1.0, 1.0, 1.0)))[0], _GLF_FUZZED((true ? 6.2 : 6.9)), _GLF_FUZZED(-9297.3833)), bvec3(true, false, false))))), 0.0)))), tan(_GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-313.679))), 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), mix(vec3(_GLF_FUZZED(-1.3), (normalize(vec3(1.0, 1.0, 1.0)))[1], (normalize(vec3(1.0, 1.0, 1.0)))[2]), vec3((normalize(vec3(1.0, 1.0, 1.0)))[0], _GLF_FUZZED((true ? 6.2 : 6.9)), _GLF_FUZZED(-9297.3833)), bvec3(true, false, false))))), 0.0)))))), tan(_GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-313.679))), 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), mix(vec3(_GLF_FUZZED(-1.3), (normalize(vec3(1.0, 1.0, 1.0)))[1], (normalize(vec3(1.0, 1.0, 1.0)))[2]), vec3((normalize(vec3(1.0, 1.0, 1.0)))[0], _GLF_FUZZED((true ? 6.2 : 6.9)), _GLF_FUZZED(-9297.3833)), bvec3(true, false, false))))), 0.0)))))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(false))), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (true ? vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, tan(0.0), 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(85.85))), 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(778.933)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, 1.0, determinant(mat2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), (true ? _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), (dot(vec2(1.0, 1.0), vec2(0.0, 0.0))) - 0.0) : _GLF_FUZZED(dot(vec2(5969.5427, 15.84), vec2(-73.63, 9291.0800))))), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) - length(vec2(0.0, 0.0))), 0.0)))) : _GLF_FUZZED((_GLF_IDENTITY(vec3(619.551, -4.2, -45.64), mix(vec3(_GLF_FUZZED(_GLF_IDENTITY(-5.6, (-5.6) * abs(1.0))), _GLF_FUZZED(34.12), _GLF_FUZZED(-1.6)), _GLF_IDENTITY(vec3((vec3(619.551, _GLF_IDENTITY(-4.2, clamp(-4.2, -4.2, -4.2)), -45.64))[0], (vec3(619.551, -4.2, -45.64))[1], (vec3(_GLF_IDENTITY(619.551, max(619.551, 619.551)), -4.2, -45.64))[2]), min(vec3((vec3(619.551, _GLF_IDENTITY(-4.2, clamp(-4.2, -4.2, -4.2)), -45.64))[0], (vec3(619.551, -4.2, -45.64))[1], (vec3(619.551, -4.2, -45.64))[2]), _GLF_IDENTITY(vec3((vec3(619.551, _GLF_IDENTITY(-4.2, clamp(-4.2, -4.2, -4.2)), -45.64))[0], (vec3(619.551, -4.2, -45.64))[1], (vec3(619.551, -4.2, -45.64))[2]), clamp(vec3((vec3(619.551, _GLF_IDENTITY(-4.2, clamp(-4.2, -4.2, -4.2)), -45.64))[0], (vec3(619.551, -4.2, -45.64))[1], (vec3(619.551, -4.2, -45.64))[2]), vec3((vec3(619.551, _GLF_IDENTITY(-4.2, clamp(-4.2, -4.2, -4.2)), -45.64))[0], (vec3(619.551, -4.2, -45.64))[1], (vec3(619.551, -4.2, -45.64))[2]), vec3((vec3(619.551, _GLF_IDENTITY(-4.2, clamp(-4.2, -4.2, -4.2)), -45.64))[0], (vec3(619.551, -4.2, -45.64))[1], (vec3(619.551, -4.2, -45.64))[2]))))), bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)), true, true))) , vec2(_GLF_IDENTITY(-6.3, (-6.3) / 1.0), -6.1)))))).y))))))))), true, false, _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(true && (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))), bool(bvec4(true && (bool(bvec4(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (! ((true)))))), _GLF_IDENTITY(true, ! (! (true))), false, false))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(0.4) : injectionSwitch.y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(bool(bool(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (bool(bool(! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2878.1818))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2878.1818))))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2878.1818)))))) * 1.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2878.1818)))))))))))))))))))), false), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(bool(bool(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (bool(bool(! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2878.1818))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2878.1818))))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2878.1818)))))) * 1.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2878.1818)))))))))))))))))))), false), false))))))), true))))) ? _GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), _GLF_IDENTITY((2) >> 0, _GLF_IDENTITY(((2) >> 0), clamp(_GLF_IDENTITY(((2) >> 0), (((2) >> 0)) - 0), ((2) >> 0), (_GLF_IDENTITY((2) >> 0, min((2) >> 0, (2) >> 0))))) | ((2) >> 0)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2) >> 0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)) | ((2) >> 0)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((2) >> 0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)) | ((2) >> 0)), 1), ivec2(0, 0) + (_GLF_IDENTITY(ivec2(_GLF_IDENTITY((2) >> 0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)) | ((2) >> 0)), 1), ~ (~ (ivec2(_GLF_IDENTITY((2) >> 0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)) | ((2) >> 0)), 1)))))))))), max(uint(_GLF_IDENTITY(2, (2) >> 0)), uint(_GLF_IDENTITY(2, (2) >> 0)))), uint(_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), _GLF_IDENTITY(((2)) | ((2)), (((2)) | ((2))) | (((2)) | ((2))))), (2), _GLF_IDENTITY((2), ~ (~ (_GLF_IDENTITY((2), ((2)) + 0)))))) >> _GLF_IDENTITY(0, max(0, 0)))))))) : _GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u), _GLF_IDENTITY((next_virtual_gid) | (next_virtual_gid), 0u + ((next_virtual_gid) | (next_virtual_gid))))) | 0u))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(2), 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) * _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), clamp(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), min(_GLF_IDENTITY(1, 0 ^ (1)), 1), _GLF_IDENTITY(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), (min(_GLF_IDENTITY(1, 0 ^ (1)), 1)) << 0))), min(_GLF_IDENTITY(1, 0 ^ (1)), 1), _GLF_IDENTITY(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), (min(_GLF_IDENTITY(1, 0 ^ (1)), 1)) / 1)))), 1)))), 0u ^ (uint(_GLF_IDENTITY(2, (2) - 0)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) * _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), clamp(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), min(_GLF_IDENTITY(1, 0 ^ (1)), 1), _GLF_IDENTITY(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), (min(_GLF_IDENTITY(1, 0 ^ (1)), 1)) << 0))), min(_GLF_IDENTITY(1, 0 ^ (1)), 1), _GLF_IDENTITY(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), (_GLF_IDENTITY(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), (_GLF_IDENTITY(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), (min(_GLF_IDENTITY(1, 0 ^ (1)), 1)) | 0)) >> 0)) / 1)))), 1)))), 0u ^ (uint(_GLF_IDENTITY(2, (2) - 0))))) * 1u)), clamp((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2) * 1, min((2) * 1, (2) * 1)), (false ? _GLF_FUZZED(-65807) : _GLF_IDENTITY((2) * 1, ((2) * 1) | (_GLF_IDENTITY((2), (_GLF_IDENTITY((2), clamp((2), _GLF_IDENTITY((2), int(ivec2((2), 1))), (2)))) | ((2))) * 1)))))), 0u ^ (uint(_GLF_IDENTITY(2, (2) - 0))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY((2) * 1, _GLF_IDENTITY(min((2) * 1, (2) * 1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (min((2) * 1, (2) * 1)))))), _GLF_IDENTITY(0u, (0u) ^ 0u) ^ (uint(_GLF_IDENTITY(2, (2) - 0))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2) * 1, ((2) * 1) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), 0 | (_GLF_IDENTITY(2, (2) * 1)))) | 0)), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) - _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) | 0))), 0)))), ~ (~ (uint(_GLF_IDENTITY(2, (2) - _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) | 0))), 0)))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) - _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) | 0))), 0)))), ~ (~ (uint(_GLF_IDENTITY(2, (2) - _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) | 0))), 0))))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, determinant(mat3(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(mat4x2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, determinant(mat3(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 1.0))), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, determinant(mat3(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 1.0)))))), transpose(transpose(mat4x3(_GLF_IDENTITY(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, determinant(mat3(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 1.0))), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, determinant(mat3(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 1.0)))))))))), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, determinant(mat3(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 1.0))), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, determinant(mat3(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 1.0)))))), transpose(transpose(mat4x3(_GLF_IDENTITY(mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, determinant(mat3(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 1.0))), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, determinant(mat3(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 1.0)))))))))))))))) | (_GLF_IDENTITY(uint(2), 0u + _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) * _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), clamp(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), min(_GLF_IDENTITY(1, 0 ^ (1)), 1), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), min(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), min(_GLF_IDENTITY(1, 0 ^ (1)), 1))), (min(_GLF_IDENTITY(1, 0 ^ (1)), 1)) << 0))), min(_GLF_IDENTITY(1, 0 ^ (1)), 1), _GLF_IDENTITY(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), (min(_GLF_IDENTITY(1, 0 ^ (1)), 1)) / 1)))), 1)))), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) - 0), clamp(_GLF_IDENTITY(2, (2) - 0), _GLF_IDENTITY(2, (2) - 0), _GLF_IDENTITY(2, (2) - 0))))))), clamp((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((2) * 1, 0 | (_GLF_IDENTITY((2) * 1, ((2) * 1) * 1))), min((2) * 1, _GLF_IDENTITY((2), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((2))) * 1)), (false ? _GLF_FUZZED(-65807) : _GLF_IDENTITY((2) * 1, ((2) * 1) | (_GLF_IDENTITY((2), (_GLF_IDENTITY((2), clamp((2), _GLF_IDENTITY((2), int(ivec2((2), 1))), (2)))) | (_GLF_IDENTITY((2), clamp((2), (2), _GLF_IDENTITY((2), 0 ^ ((2))))))) * 1)))))), 0u ^ (uint(_GLF_IDENTITY(2, (2) - 0))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY((2) * 1, min((2) * 1, (2) * 1)))), _GLF_IDENTITY(0u, (0u) ^ 0u) ^ (uint(_GLF_IDENTITY(2, (2) - 0))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), 0 | (_GLF_IDENTITY(2, (2) * 1)))) | 0, min((_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), 0 | (_GLF_IDENTITY(2, (2) * 1)))) | 0, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), 0 | (_GLF_IDENTITY(2, (2) * 1)))) | 0)))), 0u ^ (uint(_GLF_IDENTITY(2, (2) - _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 | (0)), 0)))))))))))), max(_GLF_IDENTITY(uint(2), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(2), 0u + _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) * _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), clamp(min(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) >> 0))), 0 ^ (1)), 1), min(_GLF_IDENTITY(1, 0 ^ (1)), 1), _GLF_IDENTITY(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), (min(_GLF_IDENTITY(1, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) - 0)), min(~ (_GLF_IDENTITY(0, (0) - 0)), ~ (_GLF_IDENTITY(0, (0) - 0)))))) ^ (1)), 1)) << 0))), min(_GLF_IDENTITY(1, 0 ^ (1)), 1), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(1, 0 ^ (1)))), 1), (min(_GLF_IDENTITY(1, 0 ^ (1)), 1)) / 1)))), 1)))), 0u ^ (uint(_GLF_IDENTITY(2, (2) - 0))))), clamp((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((2) * 1, 0 | (_GLF_IDENTITY((2) * 1, 0 + ((2) * 1)))), min((2) * 1, (2) * 1)), (false ? _GLF_FUZZED(-65807) : _GLF_IDENTITY((2) * 1, ((2) * 1) | (_GLF_IDENTITY((2), (_GLF_IDENTITY((2), clamp((2), _GLF_IDENTITY((2), int(ivec2((2), 1))), (2)))) | ((2))) * 1)))))), 0u ^ (uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, ~ (~ (2)))))) - 0))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY((2) * 1, min((2) * 1, (2) * 1)))), _GLF_IDENTITY(0u, (0u) ^ 0u) ^ (uint(_GLF_IDENTITY(2, (2) - 0))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (true ? _GLF_IDENTITY(2, (2) * 1) : _GLF_FUZZED(45412))), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), 0 | (_GLF_IDENTITY(2, (2) * 1)))) | 0)), 0u ^ (uint(_GLF_IDENTITY(2, (2) - _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 | (0)), 0)))))))))))), _GLF_IDENTITY(uint(2), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(2), 0u + _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) * _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), clamp(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), _GLF_IDENTITY(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), min(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), min(_GLF_IDENTITY(1, 0 ^ (1)), 1))), _GLF_IDENTITY(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), (min(_GLF_IDENTITY(1, 0 ^ (1)), 1)) << 0))), min(_GLF_IDENTITY(1, 0 ^ (1)), 1), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(1, 0 ^ (1)), 1), ~ (_GLF_IDENTITY(~ (min(_GLF_IDENTITY(1, 0 ^ (1)), 1)), min(~ (min(_GLF_IDENTITY(1, 0 ^ (1)), 1)), ~ (min(_GLF_IDENTITY(1, 0 ^ (1)), 1)))))), (min(_GLF_IDENTITY(1, 0 ^ (1)), 1)) / 1)))), 1)))), 0u ^ (uint(_GLF_IDENTITY(2, (2) - 0))))), clamp((_GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2) * 1, min((2) * 1, (2) * 1)), (false ? _GLF_FUZZED(-65807) : _GLF_IDENTITY((2) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(8), int(8))))) >> 0), ((2) * 1) | (_GLF_IDENTITY((2), (_GLF_IDENTITY((2), clamp((2), _GLF_IDENTITY((2), int(ivec2((2), 1))), (2)))) | (_GLF_IDENTITY((2), (false ? _GLF_FUZZED(-29476) : (2))))) * 1)))))), 0u ^ (uint(_GLF_IDENTITY(2, (2) - 0))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY((2) * 1, min((2) * 1, (2) * 1)))), _GLF_IDENTITY(0u, (0u) ^ 0u) ^ (uint(_GLF_IDENTITY(2, (2) - 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) ^ 0)), _GLF_IDENTITY(0, (0) | 0) | (_GLF_IDENTITY(2, (2) * 1)))) | 0)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) ^ 0)), _GLF_IDENTITY(0, (0) | 0) | (_GLF_IDENTITY(2, (2) * 1)))) | 0)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) ^ 0)), _GLF_IDENTITY(0, (0) | 0) | (_GLF_IDENTITY(2, (2) * 1)))) | 0))) - (0u & 195750u)))), 0u ^ _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (2) - _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 | (0)), 0))))), min(_GLF_IDENTITY((uint(_GLF_IDENTITY(2, (2) - _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 | (0)), 0))))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(2, (2) - _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 | (0)), 0))))), (true ? (uint(_GLF_IDENTITY(2, (2) - _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 | (0)), 0))))) : _GLF_FUZZED(subgroup_size)))) - 0u), _GLF_IDENTITY((uint(_GLF_IDENTITY(2, (2) - _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 | (0)), 0))))), min((uint(_GLF_IDENTITY(2, (2) - _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 | (0)), 0))))), (uint(_GLF_IDENTITY(2, (2) - _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 | (0)), 0))))))))))))))))))) / 1u))) : _GLF_FUZZED(workgroup_base))), 4, 64, 4);
      }
     subgroupAll(true);
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
        {
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         break;
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)))));
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))))
      break;
     break;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false))), bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec2(bvec2(bvec2(bvec2(false, true)))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), ! (! (bool(bvec3(_GLF_DEAD(false), false, true)))))))
      {
       if(_GLF_DEAD(false))
        return;
       continue;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0))))))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) - 0.0)), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, (injectionSwitch.y) - 0.0)))))))
      continue;
     continue;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))))))))
          return;
        }
       continue;
      }
     break;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      continue;
     break;
    }
   if(_GLF_DEAD(false))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (! (! (injectionSwitch.x > injectionSwitch.y))), true, false))))))))))) || false))))))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) - 0.0), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), false, false, false))))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), false, false, false)))))))), false || (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), false, false, false)))))))))))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (! (_GLF_WRAPPED_IF_TRUE(true))) && _GLF_IDENTITY(true, false || (true)))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-3.9), _GLF_IDENTITY(_GLF_FUZZED(8.9), (_GLF_FUZZED(8.9)) - 0.0)), vec2(1.0, 1.0) * (vec2(_GLF_FUZZED(_GLF_IDENTITY(-3.9, mix(float(-3.9), float(_GLF_FUZZED(-668.556)), bool(false)))), _GLF_FUZZED(8.9)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(-310.417) : injectionSwitch.y), (_GLF_IDENTITY((false ? _GLF_FUZZED(-310.417) : injectionSwitch.y), max((false ? _GLF_FUZZED(-310.417) : injectionSwitch.y), (_GLF_IDENTITY(false ? _GLF_FUZZED(-310.417) : injectionSwitch.y, clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(-310.417) : injectionSwitch.y, mix(float(_GLF_IDENTITY(false ? _GLF_FUZZED(-310.417) : injectionSwitch.y, (false ? _GLF_FUZZED(-310.417) : injectionSwitch.y) + 0.0)), float(_GLF_FUZZED(8.4)), bool(false))), false ? _GLF_FUZZED(-310.417) : injectionSwitch.y, false ? _GLF_FUZZED(-310.417) : injectionSwitch.y)))))) + log(1.0)))) - _GLF_IDENTITY(0.0, (0.0) * 1.0))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
        }
      }
     else
      {
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = (_GLF_IDENTITY(-46164, 0 | (_GLF_IDENTITY(-46164, (-46164) | (-46164)))) & 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 | _GLF_IDENTITY((_injected_loop_counter), (_GLF_IDENTITY((_injected_loop_counter), 0 | ((_injected_loop_counter)))) << 0)) != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, int(ivec3(3, 1, 0)))) | (3)))) / 1), int(_GLF_IDENTITY(3, 1 * _GLF_IDENTITY((3), ((3)) ^ 0))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(0 | (int(3)), 0 + (0 | (int(3)))))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))))))))
        break;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        {
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(false))
        continue;
      }
    }
  }
}
