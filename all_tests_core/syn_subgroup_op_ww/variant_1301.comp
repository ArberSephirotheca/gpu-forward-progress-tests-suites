#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ((false) || _GLF_IDENTITY(false, ! (! (false)))) && true)) && true))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false) || false))), _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))), true)), ! (! (bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))), true))))))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), true)), ! (! (bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), true))))))), ! (! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), true)), ! (! (bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), true)), bvec2(bvec2(bvec2(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), true))))))))))))))))) && true, ((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), true)), ! (! (bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), true))))))), ! (! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), true)), ! (! (bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), true)), bvec2(bvec2(bvec2(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), true))))))))))))))))) && true) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, (false) || false) || (false)) || false)))), true && (_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)), true && (bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)))))), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(84450u, 14430u, 2074u)) : gl_WorkGroupSize)), (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize)).x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(4466.2509), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y))))))))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))) - 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) ^ 0u) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u);
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(uint(-79577)) : workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(packUnorm4x8(vec4(-78.17, -349.931, -4.8, -166.078))))) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)) >> 0u) : _GLF_FUZZED(num_workgroup)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.0)), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), true)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))), false, false)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, true && (false))))), false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)], uint(1), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), ~ (~ (int(4)))))), clamp(4, 4, 4))), min((_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(4, clamp(4, 4, 4))))) | (_GLF_IDENTITY(4, 0 | (4)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))
  {
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))), ivec3(_GLF_IDENTITY(0, (0) | 0), 0, 0) ^ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), _GLF_IDENTITY(ivec3(0, 0, 0), ~ (~ (ivec3(0, 0, 0)))) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY(1, 0 + (1)), 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) - (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(5), ivec3(5)))) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0))))))), 1, 0))), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))))), ivec3(0, 0, 0) + (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), _GLF_IDENTITY(ivec3(0, 0, 0), min(ivec3(0, 0, 0), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) * ivec3(1, 1, 1)))) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(76923)))) | _GLF_IDENTITY((ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), 1, 0)), max((ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), 1, 0)), (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), 1, 0))))), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))))))))), 1, 0))))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0)))))))) / (_GLF_IDENTITY((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(1), ivec3(1))) >> _GLF_IDENTITY(ivec3(1), ivec3(1)), ((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(1), ivec3(1))) >> _GLF_IDENTITY(ivec3(1), ivec3(1))) | ((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(1), ivec3(1))) >> _GLF_IDENTITY(ivec3(1), ivec3(1)))))))), 4)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))), ivec3(_GLF_IDENTITY(0, (0) | 0), 0, 0) ^ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), _GLF_IDENTITY(ivec3(0, 0, 0), ~ (~ (ivec3(0, 0, 0)))) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY(1, 0 + (1)), 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) - (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(5), ivec3(5)))) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0))))))), 1, 0))), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))))), ivec3(0, 0, 0) + (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), _GLF_IDENTITY(ivec3(0, 0, 0), min(ivec3(0, 0, 0), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) * ivec3(1, 1, 1)))) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(76923)))) | _GLF_IDENTITY((ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), 1, 0)), max((ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), 1, 0)), (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), 1, 0))))), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))))))))), 1, 0))))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0)))))))) / (_GLF_IDENTITY((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(1), ivec3(1))) >> _GLF_IDENTITY(ivec3(1), ivec3(1)), ((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(1), ivec3(1))) >> _GLF_IDENTITY(ivec3(1), ivec3(1))) | ((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(1), ivec3(1))) >> _GLF_IDENTITY(ivec3(1), ivec3(1)))))))), 4))), ~ (~ (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))), (ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)))) << ivec4(0, 0, 0, 0))), ivec4(0, 0, 0, 0) + (~ (_GLF_IDENTITY(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))), (ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)))) << ivec4(0, 0, 0, 0))))))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))), (ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)))) << ivec4(0, 0, 0, 0))), ivec4(0, 0, 0, 0) + (~ (_GLF_IDENTITY(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))), (ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)))) << ivec4(0, 0, 0, 0))))))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0) : _GLF_FUZZED(ivec3(86153, 88892, 6226)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))), ivec3(_GLF_IDENTITY(0, (0) | 0), 0, 0) ^ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | (1)), 0), _GLF_IDENTITY(ivec3(0, 0, 0), ~ (~ _GLF_IDENTITY((ivec3(0, 0, 0)), ((ivec3(0, 0, 0))) >> ivec3(0, 0, 0)))) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY(1, 0 + (1)), 0))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) - (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(5), ivec3(5)))) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0))))))), 1, 0))), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))))), ivec3(0, 0, 0) + (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), _GLF_IDENTITY(ivec3(0, 0, 0), min(ivec3(0, 0, 0), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) * ivec3(1, 1, 1)))) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(76923)))) | _GLF_IDENTITY((ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), 1, 0)), max((ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), 1, 0)), (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), 1, 0))))), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))))))))), 1, 0))))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0)))))))) / (_GLF_IDENTITY((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(1), ivec3(1))) >> _GLF_IDENTITY(ivec3(1), ivec3(1)), ((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(1), ivec3(1))) >> _GLF_IDENTITY(ivec3(1), ivec3(1))) | ((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(1), ivec3(1))) >> _GLF_IDENTITY(ivec3(1), ivec3(1))))), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) - (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(5), ivec3(5)))) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0))))))), 1, 0))), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))))), ivec3(0, 0, 0) + (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), _GLF_IDENTITY(ivec3(0, 0, 0), min(ivec3(0, 0, 0), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) * ivec3(1, 1, 1)))) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(76923)))) | _GLF_IDENTITY((ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), 1, 0)), max((ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), 1, 0)), (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), 1, 0))))), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))))))))), 1, 0))))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0)))))))) / (_GLF_IDENTITY((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(1), ivec3(1))) >> _GLF_IDENTITY(ivec3(1), ivec3(1)), ((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(1), ivec3(1))) >> _GLF_IDENTITY(ivec3(1), ivec3(1))) | ((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(1), ivec3(1))) >> _GLF_IDENTITY(ivec3(1), ivec3(1))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) - (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(5), ivec3(5)))) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0))))))), 1, 0))), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))))), ivec3(0, 0, 0) + (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), _GLF_IDENTITY(ivec3(0, 0, 0), min(ivec3(0, 0, 0), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) * ivec3(1, 1, 1)))) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(76923)))) | _GLF_IDENTITY((ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), 1, 0)), max((ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), 1, 0)), (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), 1, 0))))), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))))))))), 1, 0))))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0)))))))) / (_GLF_IDENTITY((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(1), ivec3(1))) >> _GLF_IDENTITY(ivec3(1), ivec3(1)), ((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(1), ivec3(1))) >> _GLF_IDENTITY(ivec3(1), ivec3(1))) | ((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(1), ivec3(1))) >> _GLF_IDENTITY(ivec3(1), ivec3(1))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) - (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(5), ivec3(5)))) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0))))))), 1, 0))), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))))), ivec3(0, 0, 0) + (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), _GLF_IDENTITY(ivec3(0, 0, 0), min(ivec3(0, 0, 0), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) * ivec3(1, 1, 1)))) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, ~ (~ (0))) : _GLF_FUZZED(76923)))) | _GLF_IDENTITY((ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), 1, 0)), max((ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), 1, 0)), (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), 1, 0))))), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.4)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))))))))), 1, 0))))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, min(4, 4)), 1, 0), ivec3(0, 0, 0) | (ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, _GLF_IDENTITY(1, int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)) ^ (1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1, 0)))))))) / (_GLF_IDENTITY((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(1), ivec3(1))) >> _GLF_IDENTITY(ivec3(1), ivec3(1)), ((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(1), ivec3(1))) >> _GLF_IDENTITY(ivec3(1), ivec3(1))) | ((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(1), ivec3(1))) >> _GLF_IDENTITY(ivec3(1), ivec3(1)))))) / ivec3(1, 1, 1))))))), 4)))))))), 64, _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) + 0) : _GLF_IDENTITY(_GLF_FUZZED(-31612), (_GLF_IDENTITY(_GLF_FUZZED(-31612), ~ _GLF_IDENTITY((~ (_GLF_FUZZED(-31612))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (_GLF_FUZZED(-31612))), 0 ^ ((~ (_GLF_FUZZED(-31612)))))), (~ (_GLF_IDENTITY((~ (_GLF_FUZZED(-31612))), 0 ^ ((~ (_GLF_FUZZED(-31612))))))) ^ 0))))) / 1))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true) || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true) || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true))), true, false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(72.17)), bool(false))), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-55.69)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(true)))) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))), (bool(bool(_GLF_IDENTITY(false, (false) || false)))) && true)) && true)), true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))) && true)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-794.456))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, true)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec4(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false, false)))))), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))) && true)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, true)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, true))))), (bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true))) && true)), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(abs(-6.4)) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false), true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, clamp(4, 4, 4)), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(bool((injectionSwitch.x > injectionSwitch.y))), false))))), false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (! ((true))))))), bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), false, true, true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, false))))), ! (! (true)))), false, true, true)))), true, false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), false, true, true)))), true, false), true))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), false, true, true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), false, true, true)))), true, false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), false, true, true)))), true, false), true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), ! (! (bool(bvec4(false, true, true, false))))))))), bool(bvec4(false, false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), false, true, true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), false, true, true)))), true, false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), false, true, true)))), true, false), true)))))))))) || false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))) && true, ((false) && true) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))))), false || (! (! (false)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)) : _GLF_FUZZED(cosh(6.2))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), (bool(_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), bool(bvec3(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))), true, true))))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), (bool(_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), bool(bvec3(! (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(true, (true) || false) && ((false)))))))), true, true))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))) && true)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true))))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(! (bool(_GLF_DEAD(false))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (bool(_GLF_DEAD(false))), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(! (bool(_GLF_DEAD(false))), true, true))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), true && (bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))) || false)))), bool(bvec3(! (bool(_GLF_DEAD(false))), true, true))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec3(! (bool(_GLF_DEAD(false))), true, true))))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec3(! (bool(_GLF_DEAD(false))), true, true)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec3(! (bool(_GLF_DEAD(false))), true, true)))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec3(! (bool(_GLF_DEAD(false))), true, true))))))))) && true))))))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))) && true)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true))))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(! (bool(_GLF_DEAD(false))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! (bool(_GLF_DEAD(false))), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(! (bool(_GLF_DEAD(false))), true, true))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), true && (bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))) || false)))), bool(bvec3(! (bool(_GLF_DEAD(false))), true, true))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec3(! (bool(_GLF_DEAD(false))), true, true))))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec3(! (bool(_GLF_DEAD(false))), true, true)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec3(! (bool(_GLF_DEAD(false))), true, true)))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), bool(bvec3(! (bool(_GLF_DEAD(false))), true, true))))))))) && true)))))))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    barrier();
  }
}
