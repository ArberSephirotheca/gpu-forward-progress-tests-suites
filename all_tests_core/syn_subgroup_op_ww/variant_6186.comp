#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)), float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0)))), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, sin(0.0)), vec4(1.0, 0.0, 0.0, 0.0))), length(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, 0.0, 0.0))) > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(float(65472))))), vec2(_GLF_FUZZED(float(-4852)), _GLF_FUZZED(-213.531)), bvec2(false, false))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-84.85), _GLF_FUZZED(8.4)), vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, true))) ? _GLF_FUZZED(_GLF_IDENTITY(mat2(-3128.5154, 6238.4955, 55.99, -836.739), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(-3128.5154, 6238.4955, 55.99, -836.739), transpose(transpose(mat2(-3128.5154, 6238.4955, 55.99, -836.739))))), transpose(transpose(transpose(_GLF_IDENTITY(mat2(-3128.5154, _GLF_IDENTITY(6238.4955, mix(float(6238.4955), float(_GLF_FUZZED(4.9)), bool(false))), 55.99, -836.739), transpose(transpose(mat2(-3128.5154, 6238.4955, 55.99, -836.739))))))))))) : mat2(1.0)))))[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0), vec4(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(7.9)), bool(false)), clamp(mix(float(1.0), float(_GLF_FUZZED(7.9)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(7.9)), bool(false)), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(7.9)), bool(false)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))) + (mix(float(1.0), float(_GLF_FUZZED(7.9)), bool(false))))))), _GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(mat2(mat4x3(mat2(0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), max(1.0, 1.0))))), (mat2(mat4x3(mat2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))) * mat2(1.0))))), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.6)), float(0.0), bool(true))), 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0), vec4(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0)))) > injectionSwitch.y), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec4(-7.5, -54.90, -800.979, -2.7).abba, (vec4(-7.5, -54.90, -800.979, -2.7).abba) / sqrt(vec4(1.0, 1.0, 1.0, 1.0))).w), _GLF_FUZZED(-14.42)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(6.5)), float((injectionSwitch)[1]), bool(true)))), bvec2(true, true))).y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec4(-7.5, -54.90, -800.979, -2.7).abba, (vec4(-7.5, -54.90, -800.979, -2.7).abba) / sqrt(vec4(1.0, 1.0, 1.0, 1.0))).w), _GLF_FUZZED(-14.42)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(6.5)), float((injectionSwitch)[1]), bool(true)))), bvec2(true, true))).y) || false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-7.5, -54.90, -800.979, -2.7).abba.w), _GLF_FUZZED(-14.42)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(6.5)), float(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)))), bool(true)))), bvec2(true, true))).y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-7.5, -54.90, -800.979, -2.7).abba.w), _GLF_FUZZED(-14.42)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(6.5)), float(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)))), bool(true)))), bvec2(true, true))).y)))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(vec4(-7.5, -54.90, -800.979, -2.7).abba.w), _GLF_FUZZED(-14.42)), vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch)[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(6.5)), min(float(_GLF_FUZZED(6.5)), float(_GLF_FUZZED(6.5)))), float((injectionSwitch)[1]), bool(true)))), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), false, false)))), min(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(vec4(-7.5, -54.90, -800.979, -2.7).abba.w), _GLF_FUZZED(-14.42)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))], mix(float(_GLF_FUZZED(6.5)), float((injectionSwitch)[1]), bool(true)))), bvec2(true, true)), max(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(vec4(-7.5, -54.90, _GLF_IDENTITY(-800.979, (-800.979) / 1.0), -2.7).abba.w), _GLF_FUZZED(-14.42)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(6.5)), float((injectionSwitch)[1]), bool(true)))), bvec2(true, true)), vec2(mat2x3(mix(vec2(_GLF_FUZZED(vec4(-7.5, -54.90, -800.979, -2.7).abba.w), _GLF_FUZZED(_GLF_IDENTITY(-14.42, (_GLF_IDENTITY(-14.42, min(-14.42, -14.42))) * 1.0))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(6.5)), float((injectionSwitch)[1]), bool(true)))), bvec2(true, true)), 1.0, 1.0, 1.0, 0.0))), mix(vec2(_GLF_FUZZED(vec4(-7.5, -54.90, -800.979, -2.7).abba.w), _GLF_FUZZED(-14.42)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(_GLF_IDENTITY(6.5, max(6.5, _GLF_IDENTITY(6.5, min(6.5, 6.5)))))), float((injectionSwitch)[1]), bool(true)))), bvec2(true, true)))), mix(vec2(_GLF_FUZZED(vec4(-7.5, -54.90, -800.979, -2.7).abba.w), _GLF_FUZZED(-14.42)), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(6.5)), float((injectionSwitch)[1]), bool(true))), max(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(6.5)), float((injectionSwitch)[1]), bool(true))), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(6.5)), float((injectionSwitch)[1]), bool(true)))))), bvec2(true, true))))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-7.5, -54.90, _GLF_IDENTITY(-800.979, (true ? -800.979 : _GLF_FUZZED(-5.9))), -2.7).abba.w), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-14.42, 1.0 * (_GLF_IDENTITY(-14.42, clamp(-14.42, -14.42, -14.42))))), (_GLF_IDENTITY(_GLF_FUZZED(-14.42), mix(float(_GLF_FUZZED(99.83)), float(_GLF_IDENTITY(_GLF_FUZZED(-14.42), min(_GLF_FUZZED(-14.42), _GLF_FUZZED(-14.42)))), bool(true)))) / 1.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(6.5)), float((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))[1]), bool(true)))), bvec2(true, true))).y) || false)), false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(vec4(-7.5, -54.90, -800.979, -2.7).abba.w), _GLF_FUZZED(-14.42)), vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch)[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(6.5)), min(float(_GLF_FUZZED(6.5)), float(_GLF_FUZZED(6.5)))), float((injectionSwitch)[1]), bool(true)))), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), false, false)))), min(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(vec4(-7.5, -54.90, -800.979, -2.7).abba.w), _GLF_FUZZED(-14.42)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))], mix(float(_GLF_FUZZED(6.5)), float((injectionSwitch)[1]), bool(true)))), bvec2(true, true)), max(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(vec4(-7.5, -54.90, _GLF_IDENTITY(-800.979, (-800.979) / 1.0), -2.7).abba.w), _GLF_FUZZED(-14.42)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(6.5)), float((injectionSwitch)[1]), bool(true)))), bvec2(true, true)), vec2(mat2x3(mix(vec2(_GLF_FUZZED(vec4(-7.5, -54.90, -800.979, -2.7).abba.w), _GLF_FUZZED(_GLF_IDENTITY(-14.42, (_GLF_IDENTITY(-14.42, min(-14.42, -14.42))) * 1.0))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(6.5)), float((injectionSwitch)[1]), bool(true)))), bvec2(true, true)), 1.0, 1.0, 1.0, 0.0))), mix(vec2(_GLF_FUZZED(vec4(-7.5, -54.90, -800.979, -2.7).abba.w), _GLF_FUZZED(-14.42)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(_GLF_IDENTITY(6.5, max(6.5, _GLF_IDENTITY(6.5, min(6.5, 6.5)))))), float((injectionSwitch)[1]), bool(true)))), bvec2(true, true)))), mix(vec2(_GLF_FUZZED(vec4(-7.5, -54.90, -800.979, -2.7).abba.w), _GLF_FUZZED(-14.42)), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(6.5)), float((injectionSwitch)[1]), bool(true))), max(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(6.5)), float((injectionSwitch)[1]), bool(true))), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(6.5)), float((injectionSwitch)[1]), bool(true)))))), bvec2(true, true))))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-7.5, -54.90, _GLF_IDENTITY(-800.979, (true ? -800.979 : _GLF_FUZZED(-5.9))), -2.7).abba.w), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-14.42, 1.0 * (_GLF_IDENTITY(-14.42, clamp(-14.42, -14.42, -14.42))))), (_GLF_IDENTITY(_GLF_FUZZED(-14.42), mix(float(_GLF_FUZZED(99.83)), float(_GLF_IDENTITY(_GLF_FUZZED(-14.42), min(_GLF_FUZZED(-14.42), _GLF_FUZZED(-14.42)))), bool(true)))) / 1.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(6.5)), float((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))[1]), bool(true)))), bvec2(true, true))).y) || false)))), false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(vec4(-7.5, -54.90, -800.979, -2.7).abba.w), _GLF_FUZZED(-14.42)), (false ? _GLF_FUZZED(vec2(-1.8, -6066.9215)) : vec2(_GLF_FUZZED(vec4(-7.5, -54.90, -800.979, -2.7).abba.w), _GLF_FUZZED(-14.42)))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(6.5)), float((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))[1]), bool(true)))), bvec2(true, true))).y), false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(vec4(-7.5, -54.90, -800.979, -2.7).abba.w), _GLF_FUZZED(-14.42)), (false ? _GLF_FUZZED(vec2(-1.8, -6066.9215)) : vec2(_GLF_FUZZED(vec4(-7.5, -54.90, -800.979, -2.7).abba.w), _GLF_FUZZED(-14.42)))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(6.5)), float((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))[1]), bool(true)))), bvec2(true, true))).y), false), true)), false, _GLF_IDENTITY(false, true && (false))))), true, false))))))) && true)) || false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))) > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false, true, true)))))))))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false))))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false))))), true), true), false)))))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false))))))), true), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false))))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), true), false)))))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec4(gl_WorkGroupSize.x, 0u, 0u, 1u)), ~ (~ (uint(uvec4(gl_WorkGroupSize.x, 0u, 0u, 1u))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), (false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true)), true && (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) && true)))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) - 0u, 0u | (_GLF_IDENTITY((workgroup_size) - 0u, ((workgroup_size) - 0u) / 1u)))) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.0)), float(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), bool(true))), 1.0)), 1.0, 0.0, 1.0, sin(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.4)), float(0.0), _GLF_IDENTITY(bool(true), true && (bool(true)))))), (mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), injectionSwitch)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (false)), true, false), false))), true)))))) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 1u))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) : _GLF_FUZZED((workgroup_id ++))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(false, false, false, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) - 0.0)), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7060.7772)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED((8341.2163))), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(false, (false) || false)) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + log(1.0)), injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true))))), true, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(912.162, 82.09)) : injectionSwitch, max(false ? _GLF_FUZZED(vec2(912.162, 82.09)) : injectionSwitch, false ? _GLF_FUZZED(vec2(912.162, 82.09)) : injectionSwitch)))), mix(vec2(_GLF_FUZZED(-3.8), _GLF_FUZZED(2179.6588)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(4344.6514), _GLF_FUZZED(5.0)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))[1]), bvec2(true, true))))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-81.86))), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))) || false), false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), 0u ^ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ~ (_GLF_IDENTITY(~ ((~ (subgroup_size))), max(~ ((~ (subgroup_size))), ~ ((~ (subgroup_size))))))))))) ^ 0u))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))), true && (_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))))))))), false || ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))), true && (_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), ! (! _GLF_IDENTITY((false), true && ((false))))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))) || false))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false))), false, true, true)))))))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false)), (bool(bvec3(false, false, false))) || false), (bool(bvec3(false, false, false))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(false, ! (! (false))) || ((! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))) || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, false)), (bool(bvec3(false, false, false))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ! (! ((! (_GLF_IDENTITY(false, ! (! (false)))))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, false)), (bool(bvec3(false, false, false))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ! (! ((! (_GLF_IDENTITY(false, ! (! (false)))))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, false)), (bool(bvec3(false, false, false))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ! (! ((! (_GLF_IDENTITY(false, ! (! (false)))))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)), (bool(bvec3(false, false, false))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), false || ((! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(false || ((! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (false || ((! (_GLF_IDENTITY(false, ! (! (false)))))))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))), _GLF_IDENTITY(bool(bool((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))))), (bool(bool((! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false)))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))), ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false)))))) && true))), (bool(bool((! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) && true)) || false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false)))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))), _GLF_IDENTITY(bool(bool((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))))), (bool(bool((! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false)))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))), ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false)))))) && true))), (bool(bool((! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) && true)) || false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), ((! (false))) || false)))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, bool(bool(false))), false)), _GLF_IDENTITY((bool(bvec3(false, false, false))) && _GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && (true)))))), false || (_GLF_IDENTITY((bool(bvec3(false, false, false))) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)))), bool(bvec2((bool(bvec3(false, false, false))) && _GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, true && (true))), true && (true && (_GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(true, (true) || false)))))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! _GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY((! (! (false))), bool(bvec4((! (! (false))), false, true, false)))))))))), false || ((! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && true)))))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), ((! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), bool(bvec2((false), true))))), _GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY((false), bool(bvec2((false), true))))))), ! (! (bool(bool(! (! (_GLF_IDENTITY((false), bool(bvec2((false), true)))))))))))))) || false))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false, false))))), false, false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))))))))))))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), true, false, false))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (false) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), ! (! _GLF_IDENTITY((bool(bvec4(false, true, true, false))), ((bool(bvec4(false, true, true, false)))) && true)))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float((35u - 62944u)))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-71.36)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(true))), false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float((35u - 62944u)))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-71.36)), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.9) : injectionSwitch.y))) / 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(true))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float((35u - 62944u)))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-71.36)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float((35u - 62944u)))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, mix(float(_GLF_FUZZED(-71.36)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 1.0 * (float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-71.36)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(_GLF_IDENTITY(true, (true) || false)))), clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float((35u - 62944u)))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-71.36)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(float((35u - 62944u)), (_GLF_IDENTITY(float((35u - 62944u)), (float((35u - 62944u))) * 1.0)) / 1.0))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-71.36)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float((35u - 62944u)))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-71.36)), float(injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat4x2(717.125, -66.50, 6.6, -8210.2804, 1.9, -7.6, -814.934, 549.341)) : mat4x2(injectionSwitch, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0))))).y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat4x2(717.125, -66.50, 6.6, -8210.2804, 1.9, -7.6, -814.934, 549.341)) : mat4x2(injectionSwitch, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0))))).y))) && true))))), bool(true))) : _GLF_FUZZED(_GLF_IDENTITY(-7.5, max(-7.5, -7.5))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float((_GLF_IDENTITY(35u, min(35u, 35u)) - 62944u)))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-71.36)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-9.3)), bool(false))) < injectionSwitch.y)))))), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float((35u - 62944u)))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-71.36)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float((35u - 62944u)))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-71.36)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(true)))) * 1.0))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, _GLF_IDENTITY((64) >> _GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((64) >> 0, ~ (~ ((64) >> 0))), clamp((64) >> 0, (64) >> 0, (64) >> 0))) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), min(int(2), int(2))), int(_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, int(int(2)))))))), (true ? (1 << _GLF_IDENTITY(int(2), int(2))) : _GLF_FUZZED(-35618))) >> _GLF_IDENTITY(int(2), int(2))), (0 >> _GLF_IDENTITY(int(6), int(6))) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((64), clamp((64), (64), (64))) >> 0, clamp((64) >> 0, (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((64), (_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), ((64)) ^ 0)) | 0), (~ (64)) | (~ (64))))), 1 * (64))) >> 0, (64) >> 0))) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) - 0), _GLF_IDENTITY(2, min(2, 2))))) ^ 0)), int(2)), (_GLF_IDENTITY(int(2), int(2))) >> (0 | 0)), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) ^ 0))) | (_GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (false ? _GLF_FUZZED(sign(58218)) : _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), min(int(2), int(2)))) << 0))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((64), clamp((64), (64), (64))) >> 0, clamp((64) >> 0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((64), (_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), _GLF_IDENTITY(((64)) ^ 0, (_GLF_IDENTITY(((64)) ^ 0, (_GLF_IDENTITY(((64)) ^ 0, (((64)) ^ 0) | (((64)) ^ 0))) | (((64)) ^ 0))) * 1))) | 0), (~ (64)) | (~ (64))))), (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((64), (_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), _GLF_IDENTITY(((64)) ^ 0, (_GLF_IDENTITY(((64)) ^ 0, (_GLF_IDENTITY(((64)) ^ 0, (((64)) ^ 0) | (((64)) ^ 0))) | (((64)) ^ 0))) * 1))) | 0), (~ (64)) | (~ (64)))))) ^ 0), 1 * (64))) >> 0, (64) >> 0))) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) - 0), _GLF_IDENTITY(2, min(2, 2))))) ^ 0)), int(2)), (_GLF_IDENTITY(int(2), int(2))) >> (_GLF_IDENTITY(0 | 0, (true ? 0 | 0 : _GLF_FUZZED(75995))))), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) ^ 0))) | _GLF_IDENTITY((_GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY((_GLF_IDENTITY(int(2), int(2))), ((_GLF_IDENTITY(int(2), int(2)))) ^ 0)) + int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(int(2), int(2))), ((_GLF_IDENTITY(_GLF_IDENTITY((64), clamp((64), (64), (64))) >> 0, clamp((64) >> 0, (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((64), (_GLF_IDENTITY((_GLF_IDENTITY(64, (64) >> 0)), ((64)) ^ 0)) | 0), (~ (64)) | (_GLF_IDENTITY(~ (64), (~ (64)) ^ 0))))), 1 * (64))) >> 0, (64) >> 0))) / ((_GLF_IDENTITY(1, (1) / ((1 & 1) | 0)) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) - 0), _GLF_IDENTITY(2, min(2, 2))))) ^ 0)), int(2)), (_GLF_IDENTITY(int(2), int(2))) >> (0 | 0)), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, (0 << _GLF_IDENTITY(int(1), int(1))) ^ (2)))) ^ 0))) | (_GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2)))) * 1)) ^ 0))))))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, _GLF_IDENTITY((64) >> 0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((64) >> 0, ~ (~ ((64) >> 0))), clamp((64) >> 0, (64) >> 0, (64) >> 0))) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), _GLF_IDENTITY((true ? (1 << _GLF_IDENTITY(int(2), int(2))) : _GLF_FUZZED(-35618)), int(int(_GLF_IDENTITY((true ? (1 << _GLF_IDENTITY(int(2), int(2))) : _GLF_FUZZED(-35618)), ((true ? (1 << _GLF_IDENTITY(int(2), int(2))) : _GLF_FUZZED(-35618))) << 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2))))), (0 >> _GLF_IDENTITY(int(6), int(6))) + ((_GLF_IDENTITY(_GLF_IDENTITY((64), clamp((64), (64), (64))) >> 0, clamp((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(22398)))) ^ 0)) >> 0, (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) + ((- -21411) & 0))) ^ 0)), max((_GLF_IDENTITY((64), ((64)) ^ 0)), (_GLF_IDENTITY((64), ((64)) ^ 0)))) | 0), (~ _GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) + ((- -21411) & 0))) ^ 0)), max((_GLF_IDENTITY((64), ((64)) ^ 0)), (_GLF_IDENTITY((64), ((64)) ^ 0)))) | 0)) / 1), _GLF_IDENTITY((~ (64)), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((~ (64)))) | (~ (64))))), 1 * (64))) >> 0, (64) >> 0))) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY((_GLF_IDENTITY(int(2), int(2))) >> (0 | 0), ((_GLF_IDENTITY(int(2), int(2))) >> (0 | 0)) >> 0)), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) ^ 0))) | (_GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2)), 0 | (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY((_GLF_IDENTITY(int(2), int(2))) >> (0 | 0), ((_GLF_IDENTITY(int(2), int(2))) >> (0 | 0)) >> 0)), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) ^ 0))) | (_GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(ivec3((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY((_GLF_IDENTITY(int(2), int(2))) >> (0 | 0), ((_GLF_IDENTITY(int(2), int(2))) >> (0 | 0)) >> 0)), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) ^ 0))) | (_GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), 0 ^ (int(ivec3((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY((_GLF_IDENTITY(int(2), int(2))) >> (0 | 0), ((_GLF_IDENTITY(int(2), int(2))) >> (0 | 0)) >> 0)), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) ^ 0))) | (_GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)))))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((64) >> 0, ~ (~ ((64) >> 0))), clamp((64) >> 0, (64) >> 0, (64) >> 0))) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), _GLF_IDENTITY((true ? (1 << _GLF_IDENTITY(int(2), int(2))) : _GLF_FUZZED(-35618)), int(int(_GLF_IDENTITY((true ? (1 << _GLF_IDENTITY(int(2), int(2))) : _GLF_FUZZED(-35618)), ((true ? (1 << _GLF_IDENTITY(int(2), int(2))) : _GLF_IDENTITY(_GLF_FUZZED(-35618), (_GLF_FUZZED(-35618)) - (0 << _GLF_IDENTITY(int(3), int(3)))))) << 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, max(2, 2)))), _GLF_IDENTITY(int(2), int(2))))), (0 >> _GLF_IDENTITY(int(6), int(6))) + ((_GLF_IDENTITY(_GLF_IDENTITY((64), clamp((64), (64), (64))) >> 0, clamp((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(22398)))) ^ 0)) >> 0, (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) + ((- -21411) & 0))) ^ 0)), max((_GLF_IDENTITY((64), ((64)) ^ 0)), (_GLF_IDENTITY((64), ((64)) ^ 0)))) | 0), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) + ((- -21411) & 0))) ^ 0)), max((_GLF_IDENTITY((64), ((64)) ^ 0)), (_GLF_IDENTITY((64), ((64)) ^ 0)))) | 0), (_GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) + ((- -21411) & 0))) ^ 0)), max((_GLF_IDENTITY((64), ((64)) ^ 0)), (_GLF_IDENTITY((64), ((64)) ^ 0)))) | 0)) << 0)), int(ivec2(int(_GLF_IDENTITY(_GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) + ((- -21411) & 0))) ^ 0)), max((_GLF_IDENTITY((64), ((64)) ^ 0)), (_GLF_IDENTITY((64), ((64)) ^ 0)))) | 0), (_GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) + ((- -21411) & 0))) ^ 0)), max((_GLF_IDENTITY((64), ((64)) ^ 0)), (_GLF_IDENTITY((64), ((64)) ^ 0)))) | 0)) << 0)), 0))))), _GLF_IDENTITY((~ (64)), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((~ (64)))) | (~ (64))))), 1 * (64))) >> 0, (64) >> 0))) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY((_GLF_IDENTITY(int(2), int(2))) >> (0 | 0), ((_GLF_IDENTITY(int(2), int(2))) >> (0 | 0)) >> 0)), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) ^ 0))) | (_GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2)))))), 0 | (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((64) >> 0, ~ (~ ((64) >> 0))), clamp((64) >> 0, (64) >> 0, (64) >> 0))) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), _GLF_IDENTITY((true ? (1 << _GLF_IDENTITY(int(2), int(2))) : _GLF_FUZZED(-35618)), int(int(_GLF_IDENTITY((true ? (1 << _GLF_IDENTITY(int(2), int(2))) : _GLF_FUZZED(-35618)), ((true ? (1 << _GLF_IDENTITY(int(2), int(2))) : _GLF_FUZZED(-35618))) << 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2))))), (0 >> _GLF_IDENTITY(int(6), int(6))) + ((_GLF_IDENTITY(_GLF_IDENTITY((64), clamp((64), (64), (64))) >> 0, clamp((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(22398)))) ^ 0)) >> 0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) + ((- -21411) & 0))) ^ 0)), max((_GLF_IDENTITY((64), ((64)) ^ 0)), (_GLF_IDENTITY((64), ((64)) ^ 0)))) | 0), _GLF_IDENTITY((~ (64)), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((~ (64)))) | (~ (64))))), (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) + ((- -21411) & 0))) ^ 0)), max((_GLF_IDENTITY((64), ((64)) ^ 0)), (_GLF_IDENTITY((64), ((64)) ^ 0)))) | 0), _GLF_IDENTITY((~ (64)), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((~ (64)))) | (~ (64)))))) ^ 0), 1 * (64))) >> 0, (64) >> 0))) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY((_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) | 0)))))) >> (0 | 0), ((_GLF_IDENTITY(int(2), int(2))) >> (0 | 0)) >> 0)), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) ^ 0))) | (_GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2)))))))))))))), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, min(0, 0))), int(0))))), (true ? int(ivec2(_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, _GLF_IDENTITY((64) >> 0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((64) >> 0, ~ (~ ((64) >> 0))), clamp((64) >> 0, (64) >> 0, (64) >> 0))) / (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), min(int(2), int(2)))) | (int(2))), int(2))), (_GLF_IDENTITY(true, (true) || false) ? (1 << _GLF_IDENTITY(int(2), int(2))) : _GLF_FUZZED(-35618))) >> _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false) ? (1 << _GLF_IDENTITY(int(2), int(2))) : _GLF_FUZZED(-35618)), ~ (~ ((_GLF_IDENTITY(true, (true) || false) ? (1 << _GLF_IDENTITY(int(2), int(2))) : _GLF_FUZZED(-35618)))))) >> _GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY(true, (true) || false) ? (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), clamp(int(2), int(2), int(2))), int(2))) : _GLF_FUZZED(-35618))) >> _GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY(true, (true) || false) ? (1 << _GLF_IDENTITY(int(2), int(2))) : _GLF_FUZZED(-35618))) >> _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY(true, (true) || false) ? (1 << _GLF_IDENTITY(int(2), int(2))) : _GLF_FUZZED(-35618))) >> _GLF_IDENTITY(int(2), int(2)), ~ (~ (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(2), int(2))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) ? (1 << _GLF_IDENTITY(int(2), int(2))) : _GLF_FUZZED(-35618), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) ? (1 << _GLF_IDENTITY(int(2), int(2))) : _GLF_FUZZED(-35618), (_GLF_IDENTITY(true, (true) || false) ? (1 << _GLF_IDENTITY(int(2), int(2))) : _GLF_FUZZED(-35618)) | (_GLF_IDENTITY(true, (true) || false) ? (1 << _GLF_IDENTITY(int(2), int(2))) : _GLF_FUZZED(-35618)))) | (_GLF_IDENTITY(true, (true) || false) ? (1 << _GLF_IDENTITY(int(2), int(2))) : _GLF_FUZZED(-35618))))) >> _GLF_IDENTITY(int(2), int(2)))))))))), (0 >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, int(int(6))), 6))) | 0)))) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((64), clamp((64), (64), (64))) >> _GLF_IDENTITY(0, (0) | (0)), clamp((64) >> 0, (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) ^ 0)) | 0), (~ (64)) | (~ (64))))), 1 * (64))) >> 0, _GLF_IDENTITY((64), (_GLF_IDENTITY((64), max((64), _GLF_IDENTITY((64), (false ? _GLF_FUZZED(-11694) : (64)))))) << 0) >> 0))) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) >> (0 | 0)), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) ^ 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(ivec3(int(2), 1, 1))), int(2))))) >> _GLF_IDENTITY(int(2), int(2))), ((_GLF_IDENTITY(_GLF_IDENTITY((64), clamp((64), (64), (64))) >> _GLF_IDENTITY(0, (0) | (0)), clamp((64) >> 0, (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) ^ 0)) | 0), (~ (64)) | (~ (64))))), 1 * (64))) >> 0, _GLF_IDENTITY((64), (_GLF_IDENTITY((64), max((64), _GLF_IDENTITY((64), (false ? _GLF_FUZZED(-11694) : (64)))))) << 0) >> 0))) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) >> (0 | 0)), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) ^ 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(ivec3(int(2), 1, 1))), _GLF_IDENTITY(int(2), clamp(int(2), int(2), _GLF_IDENTITY(int(2), int(int(int(2)))))))))) >> _GLF_IDENTITY(int(2), int(2)))) ^ (0 ^ 0)))))))), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))) : _GLF_FUZZED(-58313)))), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, 0 ^ (4)));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ((_GLF_IDENTITY(! (false), ! (! (! (false)))))) && true)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0)), (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0)), ((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0))) | ((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0))))) << 0) / int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - abs(0.0)))) != _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), int(_GLF_IDENTITY(ivec4(_GLF_FUZZED(_injected_loop_counter), 1, 0, 0), (ivec4(_GLF_FUZZED(_injected_loop_counter), 1, 0, 0)) - ivec4(0, 0, 0, 0)))) : 0), max(_GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : 0), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : 0), min((false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (~ (_GLF_FUZZED(_injected_loop_counter)))), (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (~ (_GLF_FUZZED(_injected_loop_counter))))) | (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (~ (_GLF_FUZZED(_injected_loop_counter)))))), _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), 0 ^ (_GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), _GLF_IDENTITY(clamp(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter)), clamp(clamp(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter)), clamp(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter)), clamp(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))))))), _GLF_FUZZED(_injected_loop_counter)))), ~ (~ (int(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))))))))) : 0), (false ? _GLF_FUZZED(_injected_loop_counter) : 0))), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : 0), min((false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))), ~ (~ (_GLF_FUZZED(_injected_loop_counter)))), (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (~ (_GLF_FUZZED(_injected_loop_counter))))) | (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (~ (_GLF_FUZZED(_injected_loop_counter)))))), _GLF_FUZZED(_injected_loop_counter), _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), clamp(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))))), _GLF_FUZZED(_injected_loop_counter)))), ~ (~ (int(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))))))))) : 0), (false ? _GLF_FUZZED(_injected_loop_counter) : 0))), (_GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : 0), min((false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (~ (_GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (~ (_GLF_FUZZED(_injected_loop_counter))))), (0 << _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, (8) | (8))))) | ((_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (~ (_GLF_FUZZED(_injected_loop_counter))))))) | (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (~ (_GLF_FUZZED(_injected_loop_counter)))))), _GLF_FUZZED(_injected_loop_counter), _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), clamp(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))))), _GLF_FUZZED(_injected_loop_counter)))), ~ (~ (int(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))))))))) : 0), (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))) * 1)) | (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : 0), min((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (~ (_GLF_FUZZED(_injected_loop_counter)))), (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (~ (_GLF_FUZZED(_injected_loop_counter))))) | (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (~ (_GLF_FUZZED(_injected_loop_counter)))))), _GLF_FUZZED(_injected_loop_counter), _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), clamp(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter)))), 0 | (clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (~ (_GLF_FUZZED(_injected_loop_counter)))), (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (~ (_GLF_FUZZED(_injected_loop_counter))))) | (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (~ (_GLF_FUZZED(_injected_loop_counter)))))), _GLF_FUZZED(_injected_loop_counter), _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), clamp(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))))))), _GLF_FUZZED(_injected_loop_counter)))), ~ (~ (int(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))))))))) : 0, (false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (~ (_GLF_FUZZED(_injected_loop_counter)))), (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (~ (_GLF_FUZZED(_injected_loop_counter))))) | (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (~ (_GLF_FUZZED(_injected_loop_counter)))))), _GLF_FUZZED(_injected_loop_counter), _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), clamp(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))))), _GLF_FUZZED(_injected_loop_counter)))), ~ (~ (int(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))))))))) : 0) - 0)), (false ? _GLF_FUZZED(_injected_loop_counter) : 0))), (_GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : 0), min((false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (~ (_GLF_FUZZED(_injected_loop_counter)))), (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (~ (_GLF_FUZZED(_injected_loop_counter))))) | (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (~ (_GLF_FUZZED(_injected_loop_counter)))))), _GLF_FUZZED(_injected_loop_counter), _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), clamp(_GLF_FUZZED(_injected_loop_counter), _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))), _GLF_FUZZED(_injected_loop_counter))))), _GLF_FUZZED(_injected_loop_counter)))), ~ (~ (int(_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))))))))) : 0), (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))) << 0)))) | _GLF_IDENTITY((_GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : 0), max((false ? _GLF_FUZZED(_injected_loop_counter) : 0), (false ? _GLF_FUZZED(_injected_loop_counter) : 0)))), ((_GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : 0), max((false ? _GLF_FUZZED(_injected_loop_counter) : 0), (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))) * 1)), _GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : 0), (false ? _GLF_FUZZED(8086) : (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0) | (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))))))) | (0))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(1.4, _GLF_IDENTITY(7.6, 0.0 + (7.6)))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))) - vec2(0.0, 0.0)).y)), true, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          continue;
         break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        continue;
       break;
      }
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) << 0)), 4, 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, (1.0) + 0.0))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)))))))
      return;
     return;
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
}
