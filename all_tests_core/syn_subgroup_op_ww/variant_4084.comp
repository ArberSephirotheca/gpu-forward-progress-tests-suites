#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   switch(_GLF_SWITCH(((1 ^ 1) << _GLF_IDENTITY(int(4), int(4)))))
    {
     case 1:
     mat2x3(-3.7, 22.53, -179.987, 3.5, -9.3, 12.86);
     case 93:
     if((-3.2 != vec3(8.0, 52.26, 92.52)[0]))
      {
       for(uvec4 _GLF_SWITCH_0_0v; true; matrixCompMult(mat2(4375.7584, -16.08, 0.5, -668.637), (mat2(-1986.4329, 1.3, 885.148, 464.575) * mat2(-56.28, -76.35, 1.2, -929.973))))
        {
         ;
         {
          mat4(-7.2, -32.82, -1.7, 89.52, -60.37, 8609.1989, 354.296, -19.33, -1.0, 9.0, 5677.9874, 0.7, 25.08, -8.4, -727.919, -117.161);
          vec3(-714.444, 8.5, 6.6);
          bvec4(false, true, false, true);
          outerProduct(injectionSwitch, mat4(-29.60, -5.6, 1.7, -243.387, 8860.4916, -26.36, -15.78, 9618.2488, -9.7, 9.3, -0.7, -531.339, 8486.7457, -643.990, -5.2, 9.5)[1]);
         }
         {
          ((! false) ? -62318 : -28259);
          mat3x2(-29.72, -92.99, 3940.1812, -5.9, 9238.5171, 757.780);
          vec4(5.9, -724.157, 2.4, 54.40);
          (18232 + (ivec3(29928, -145, 27397) >> ivec3(10495, 273, 49067)));
          bool _GLF_SWITCH_0_1v[14], _GLF_SWITCH_0_2v[81];
         }
        }
      }
     case 0:
     case 51:
     case 39:
     case 21:
     case 28:
     case 85:
     case 90:
     case 4:
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
     case 48:
     subgroupAll(false);
     break;
     default:
     1;
    }
  }
 else
  {
   switch(_GLF_SWITCH(0))
    {
     case 0:
     case 86:
     case 59:
     case 55:
     case 37:
     case 40:
     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
      {
       case 0:
       atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
       case 98:
       case 18:
       subgroupAll(true);
       break;
       case 67:
       while(false)
        {
         {
          bool _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[35];
          for(          workgroup_size;
 _GLF_SWITCH_1_0v; transpose((mat4x3(-243.194, 893.433, -9.6, 51.73, 38.47, 765.486, -0.6, 65.63, -3249.4289, -83.30, -4.0, 3.5) + 7.9)))
           {
           }
         }
        }
       default:
       1;
      }
     break;
     case 12:
     if((workgroup_id < (subgroup_size << workgroup_size)))
      {
       for(       mat2x3(-424.841, -5767.5786, -3580.2221, -595.354, -572.498, 2.2);
 (-82166 != (ivec3(75612, 81462, -61937) & ivec3(98553, -18222, 31403)).g); bvec3(true, true, false))
        {
         while(isnan(acos(-9.9)))
          {
           ;
           mat4x2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v[53];
          }
         (+ mat4(8.0, -4.9, -63.95, -143.825, -26.12, 2109.8732, -6.9, -921.330, 5.7, 9313.2136, -1.7, -53.84, -6.8, 2.3, 0.2, 66.06));
         vec3(-873.632, -8.5, -0.7);
         for(         mat2x4(mat4(-9.7, -45.23, 3.8, 4895.1401, 9.7, 6.0, -4.0, -5.3, 395.862, -2420.0273, -205.899, -5411.9140, 538.602, 8843.1663, 5.5, 87.15));
 (9.9 < -9.4); uvec4(149483u, 37577u, 172252u, 106254u))
          {
           uint _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v, _GLF_SWITCH_2_4v[25];
           mat4x3 _GLF_SWITCH_2_5v, _GLF_SWITCH_2_6v;
           mat2x3 _GLF_SWITCH_2_7v, _GLF_SWITCH_2_8v;
           bvec3(false, true, false);
           bvec2(false, false);
           vec3(761.532, -94.87, 7.1);
           bvec2(false, true);
           bool _GLF_SWITCH_2_9v[13], _GLF_SWITCH_2_10v, _GLF_SWITCH_2_11v;
          }
         do
          {
           ;
           (uvec4(187907u, 60800u, 44910u, 152579u));
           mat2x3(46.85, -178.738, 58.03, -1.4, -2111.5731, 9491.3716);
           mat3 _GLF_SWITCH_2_12v, _GLF_SWITCH_2_13v[41];
           true;
          }
         while(false);
         uvec4 _GLF_SWITCH_2_14v[50], _GLF_SWITCH_2_15v;
         while((58810 < floatBitsToInt(-8843.7772)))
          {
          }
         while((uvec3(3339u, 31851u, 195302u) != uvec3(110646u, 130161u, 62184u)))
          {
          }
        }
       if((mat3x4(-821.100, -6.0, 5940.6031, -4.9, -317.283, 6468.2757, 845.683, -10.67, -58.22, -44.16, 2222.3848, 7.2) == mat3x4(-1.1, -1613.2627, 7793.8593, -629.965, 684.084, 9297.5505, -42.37, 1494.3231, 97.73, 71.24, 1406.6159, 930.767)))
        {
        }
       else
        {
         bvec2 _GLF_SWITCH_2_16v[39];
         if((uvec3(157089u, 164201u, 44118u) == uvec3(12515u, 93421u, 173513u)))
          {
           ((mat3x4(-84.78, 607.098, 543.746, -0.5, 7.3, 3.2, 6.3, 7.0, 8141.5465, 91.34, 1.2, -3.4) / -70.60) == (mat3x4(-2.0, 1.7, -1.1, -6706.3274, -5.5, 17.10, -1.5, 459.465, 551.848, 523.015, -91.51, -1.0) - vec2(-8.9, 6.3).s));
           ;
           ivec4 _GLF_SWITCH_2_17v;
           mat2x3(-0.2, -54.79, -5963.3119, -5.4, -3.0, -7.6);
           -5037.9173;
          }
         else
          {
           (((~ uvec3(95783u, 193842u, 167542u)) | next_virtual_gid) , ivec2(30985, -11248));
           mat3 _GLF_SWITCH_2_18v, _GLF_SWITCH_2_19v[13], _GLF_SWITCH_2_20v[13];
           round(vec3(-2854.2790, 67.47, 79.58));
           ivec4 _GLF_SWITCH_2_21v, _GLF_SWITCH_2_22v, _GLF_SWITCH_2_23v[50];
           ;
          }
         if(true)
          {
           (mat2x3(-4476.5354, 9.4, 1486.7758, -7313.8885, 2.8, -18.58) / mat2x3(-2781.8469, -85.68, -3.6, -2043.2346, -9.6, 9.9));
           uvec2 _GLF_SWITCH_2_24v, _GLF_SWITCH_2_25v[6];
          }
         uvec3 _GLF_SWITCH_2_26v;
         for(uint _GLF_SWITCH_2_27v; true; mat2(-8972.3743, 88.08, 0.4, 848.223))
          {
           ;
           bitCount(ivec2(5069, 41613));
           usubBorrow(_GLF_SWITCH_2_26v, uvec3(155257u, 103197u, 1674u), _GLF_SWITCH_2_26v);
          }
        }
       true;
      }
     case 41:
     if(false)
      {
       bvec2 _GLF_SWITCH_2_28v, _GLF_SWITCH_2_29v;
       mat3 _GLF_SWITCH_2_30v, _GLF_SWITCH_2_31v[67], _GLF_SWITCH_2_32v;
      }
     else
      {
       {
        ivec3 _GLF_SWITCH_2_33v, _GLF_SWITCH_2_34v;
        12902u;
        {
         mat2(-6.0, -6313.4677, tan(739.029), 1.2);
         uvec3 _GLF_SWITCH_2_35v;
         ;
         bvec3(false, true, true);
        }
        ivec4(69463, -32529, -24765, 35052);
        {
         ;
         mat3x4(2824.3086, -84.43, 0.6, -1.6, -8079.8069, 0.9, 6426.2180, 527.672, -3.3, -7549.1938, -5148.3132, 604.133);
         uvec3(73667u, 97958u, 98515u);
         mat3(505.843, 83.05, -8544.9635, 1229.4023, -85.99, -3539.0396, -9.1, 961.470, 595.891);
         ivec2(-91828, 47184);
        }
        subgroup_local_id;
        ivec4 _GLF_SWITCH_2_36v, _GLF_SWITCH_2_37v, _GLF_SWITCH_2_38v;
       }
       for(mat4 _GLF_SWITCH_2_39v, _GLF_SWITCH_2_40v[57]; all(bvec2(false, true)); bvec3(true, true, true))
        {
         switch(_GLF_SWITCH(0))
          {
           case 0:
           case 37:
           case 4:
           case 38:
           case 91:
           if((84574u != 117628u))
            {
            }
           case 45:
           case 59:
           case 33:
           case 2:
           (mat3x2(-287.180, 6.1, 40.78, 217.047, -4.0, -1.7) / mat3x2(352.798, 4.9, -99.77, 6.1, 1347.4495, 5570.8857));
           case 24:
           mat3x4 _GLF_SWITCH_2_41v, _GLF_SWITCH_2_42v[71];
           break;
           default:
           1;
          }
        }
       if(true)
        {
         for(mat2x4 _GLF_SWITCH_2_43v, _GLF_SWITCH_2_44v, _GLF_SWITCH_2_45v; (mat4(3317.8972, 8840.7764, 3.9, 1.5, 5.8, 891.606, -2.7, 275.380, -3.6, -587.635, 543.808, 76.48, 2.8, 1400.7738, 2768.9420, -3102.1002) == mat4(-5.2, -7.7, 90.57, -326.980, -539.525, 9638.6186, -9053.4004, 306.186, 236.748, -7.3, 7876.3604, -355.890, -5.8, -28.45, -56.20, -583.319)); (mat4(-8003.0562) / -633.162))
          {
           bvec4(false, true, false, false);
           mat3x2 _GLF_SWITCH_2_46v, _GLF_SWITCH_2_47v, _GLF_SWITCH_2_48v;
           mat4(-75.85, -6.5, 126.495, 7332.0103, 99.02, 68.12, 8716.0610, 14.26, -8.6, -2.2, 9.0, 4.0, 78.34, -1.6, -4816.2950, -4.3);
          }
         float _GLF_SWITCH_2_49v, _GLF_SWITCH_2_50v;
         bvec3 _GLF_SWITCH_2_51v, _GLF_SWITCH_2_52v, _GLF_SWITCH_2_53v[39];
         mat3 _GLF_SWITCH_2_54v, _GLF_SWITCH_2_55v;
         mat2 _GLF_SWITCH_2_56v;
         do
          {
           mat4x3(-7.5, 8577.0774, 7.4, 7.3, 14.94, -6.5, 4.0, -4667.2965, -56.11, 0.8, -1.3, -41.54);
           mat2x3 _GLF_SWITCH_2_57v[34];
           ivec2 _GLF_SWITCH_2_58v, _GLF_SWITCH_2_59v[44];
           26891;
           (uvec3(38473u, 37069u, 194099u) + num_workgroup);
           _GLF_SWITCH_2_56v;
           ivec4 _GLF_SWITCH_2_60v, _GLF_SWITCH_2_61v;
          }
         while(true);
         if(true)
          {
           mat4x3(_GLF_SWITCH_2_56v);
           mat2x3(284.828, 8.3, 741.215, -4524.8933, -5.6, 3.1);
           bvec2 _GLF_SWITCH_2_62v[30], _GLF_SWITCH_2_63v[85];
           uvec3(184299u, 72857u, 133599u);
           mat2x3 _GLF_SWITCH_2_64v;
           true;
           atan(vec2(8.4, 2282.4076), injectionSwitch);
          }
         {
          uvec2 _GLF_SWITCH_2_65v, _GLF_SWITCH_2_66v, _GLF_SWITCH_2_67v[2];
          uint _GLF_SWITCH_2_68v, _GLF_SWITCH_2_69v;
          _GLF_SWITCH_2_49v;
          mat4x2(_GLF_SWITCH_2_55v);
         }
         uvec4(159276u, 160990u, 54827u, 189037u);
        }
       else
        {
        }
       while((mat3x4(-18.54, 58.68, -3.3, -8405.4168, -8.7, -5106.8592, -0.4, -3.0, -4.0, -1.4, 6699.1577, 7.8) == mat3x4(0.1, -2214.9025, 8655.7328, -3.0, 42.40, -2.6, -3.4, 771.704, -5.7, -707.384, 11.23, -1.1)))
        {
         while((mat2(7.6, 86.32, 80.63, 50.63) == mat2(0.5, 76.87, -347.402, 4.9)))
          {
           ivec2 _GLF_SWITCH_2_70v[19];
           mat3x4(3.7, 4805.8972, 4321.9425, 75.24, -9971.9080, -0.7, 6.9, -3662.5558, 5.6, -4.5, -242.732, -9.7);
           mat3x2(-8.0, -5.5, 176.482, 3.3, 7.6, 2.2);
           bvec4(false, true, false, true).qqs;
           mat2(7.0);
           mat4(1030.5625, 8603.8281, -607.035, -48.37, 6.8, 43.00, -1.4, 2660.8286, -69.50, -1.5, -6292.3189, 2.9, 5.6, 388.173, 29.34, 26.08);
           uvec3(114162u, 10268u, 33348u);
          }
         {
          ivec4(58946, 20048, -85736, 59307);
          mat4x3(-54.22, -4.3, -7.3, 145.131, 284.319, 0.5, 5.9, -3091.6229, 5176.6343, 690.192, 7196.2870, -7.1);
          mat3x2 _GLF_SWITCH_2_71v[98], _GLF_SWITCH_2_72v, _GLF_SWITCH_2_73v;
          mat2x4 _GLF_SWITCH_2_74v;
         }
         {
          ;
          ;
          bvec3 _GLF_SWITCH_2_75v[56];
         }
         mat2(-8.9, -1295.5252, 9.3, -50.83);
         mat2 _GLF_SWITCH_2_76v, _GLF_SWITCH_2_77v;
         {
          ivec4 _GLF_SWITCH_2_78v[90];
          false;
         }
         mat2x4 _GLF_SWITCH_2_79v;
         ;
         ;
        }
       mat3x4 _GLF_SWITCH_2_80v, _GLF_SWITCH_2_81v, _GLF_SWITCH_2_82v;
      }
     default:
     1;
    }
  }
}
