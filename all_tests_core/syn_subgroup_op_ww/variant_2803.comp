#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec2 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2869.2721) : injectionSwitch.y)), 1.0, 1.0, 1.0, 1.0, 1.0))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0)), float(_GLF_FUZZED(vec4(8.9, -3.5, -3858.6645, -4655.9685).g)), bool(false))), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(true, ! (! (true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.0, 7.0))))) * mat2(1.0), max((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.0, 7.0))))) * mat2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.0, 7.0))))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(8.0, 7.0))))) * mat2(1.0)) / vec2(1.0, 1.0)))), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0)), _GLF_IDENTITY(float(_GLF_FUZZED(vec4(8.9, -3.5, -3858.6645, -4655.9685).g)), _GLF_IDENTITY(float(vec3(float(_GLF_FUZZED(vec4(8.9, -3.5, -3858.6645, -4655.9685).g)), round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 0.0)), max(float(vec3(float(_GLF_FUZZED(vec4(8.9, -3.5, -3858.6645, -4655.9685).g)), round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(0.0, 0.0 + (0.0)))), float(vec3(float(_GLF_FUZZED(vec4(8.9, -3.5, -3858.6645, -4655.9685).g)), round(length(normalize(abs(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6577.2537) : 1.0)), 1.0, 1.0))))), 0.0))))), bool(false))), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, true)))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) * (0u | 1u)))), gl_NumWorkGroups.x))) >> 0u)));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_size), min(~ (workgroup_size), _GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) - 0u)))), 0u + ((_GLF_IDENTITY(~ (workgroup_size), min(~ (workgroup_size), _GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), 0u ^ (_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), 0u | (~ (workgroup_size)))) + 0u)))) - 0u))))))), workgroup_size)), workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y = _GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid));
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) | uvec2(0u, 0u)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) | uvec2(0u, 0u))) | uvec2(0u, 0u)).x), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u), (_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u), workgroup_base + subgroup_base + ((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), workgroup_base + subgroup_base + ((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  barrier();
 atomicStore(buf[GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y], uint(1), _GLF_IDENTITY(4, clamp(4, 4, 4)), 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))), mix(float(_GLF_FUZZED(2521.0785)), float(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3035.5290)), vec2(_GLF_FUZZED(13.66), (injectionSwitch)[1]), bvec2(false, true))).y)), injectionSwitch.y)))), bool(true))), float(_GLF_FUZZED(-2.6)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))) && true)))))), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, true)))))) && true))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0))), injectionSwitch.y, injectionSwitch.y)))))), injectionSwitch.y))), mix(float(_GLF_FUZZED(2521.0785)), float(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y)))), bool(true))), float(_GLF_FUZZED(-2.6)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))).y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))) && true)))))), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).y) - 0.0), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).y, (false ? _GLF_FUZZED(-6.2) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).y)))))), ! (! (injectionSwitch.x > injectionSwitch.y))), false, true)))))) && true)))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(9.9, (9.9) - abs(0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0))), 1.0 * (_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0))), abs(1.0) * (_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0))), 1.0 * (float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0))))))))), bool(true))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(9.9, (9.9) - abs(0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0))), 1.0 * (_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0))), abs(1.0) * (_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0))), 1.0 * (float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0))))))))), bool(true))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(9.9, (9.9) - abs(0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0))), 1.0 * (_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0))), abs(1.0) * (_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0))), 1.0 * (float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0))))))))), bool(true))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(9.9, (9.9) - abs(0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0))), 1.0 * (_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0))), abs(1.0) * (_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0))), 1.0 * (float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0))))))))), bool(true))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(9.9, (9.9) - abs(0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0))), 1.0 * (_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0))), abs(1.0) * (_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0))), 1.0 * (float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * cos(0.0))))))))), bool(true))), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) - 0.0)), injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true)))))), _GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, true, false, false))))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-78.23)), vec2(_GLF_FUZZED((-35.33 / -942.220)), (injectionSwitch)[1]), bvec2(false, true))).y))) && true)))))))), bool(bvec4(! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))))), (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(820.550)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(_GLF_IDENTITY(true, ! (! (true)))))))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(820.550)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) - sin(0.0)) - 0.0)), bool(true))))))))) && true)))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))), (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(820.550), clamp(_GLF_IDENTITY(_GLF_FUZZED(820.550), max(_GLF_FUZZED(820.550), _GLF_FUZZED(820.550))), _GLF_IDENTITY(_GLF_FUZZED(820.550), min(_GLF_IDENTITY(_GLF_FUZZED(820.550), clamp(_GLF_FUZZED(820.550), _GLF_FUZZED(820.550), _GLF_FUZZED(820.550))), _GLF_FUZZED(820.550))), _GLF_FUZZED(820.550)))), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(820.550)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))))))))) && true)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))), (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(820.550), clamp(_GLF_IDENTITY(_GLF_FUZZED(820.550), max(_GLF_FUZZED(820.550), _GLF_FUZZED(820.550))), _GLF_IDENTITY(_GLF_FUZZED(820.550), min(_GLF_IDENTITY(_GLF_FUZZED(820.550), clamp(_GLF_FUZZED(820.550), _GLF_FUZZED(820.550), _GLF_FUZZED(820.550))), _GLF_FUZZED(820.550))), _GLF_FUZZED(820.550)))), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(820.550)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))))))))) && true)))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))), (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(820.550), clamp(_GLF_IDENTITY(_GLF_FUZZED(820.550), max(_GLF_FUZZED(820.550), _GLF_FUZZED(820.550))), _GLF_IDENTITY(_GLF_FUZZED(820.550), min(_GLF_IDENTITY(_GLF_FUZZED(820.550), clamp(_GLF_FUZZED(820.550), _GLF_FUZZED(820.550), _GLF_FUZZED(820.550))), _GLF_FUZZED(820.550))), _GLF_FUZZED(820.550)))), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(820.550)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))))))))) && true)))), false, true, true)), false || (bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))), (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(820.550), clamp(_GLF_IDENTITY(_GLF_FUZZED(820.550), max(_GLF_FUZZED(820.550), _GLF_FUZZED(820.550))), _GLF_IDENTITY(_GLF_FUZZED(820.550), min(_GLF_IDENTITY(_GLF_FUZZED(820.550), clamp(_GLF_FUZZED(820.550), _GLF_FUZZED(820.550), _GLF_FUZZED(820.550))), _GLF_FUZZED(820.550))), _GLF_FUZZED(820.550)))), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(820.550)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))))))))) && true)))), false, true, true)))))))))) || false))), false, true, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y) || false)))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), vec2(vec3(injectionSwitch, 0.0))).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), bool(bvec4(true && _GLF_IDENTITY((false), false || ((false))), true, true, true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))), false || (_GLF_IDENTITY(bool(bool(false)), false || (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(length(float(false))))) > injectionSwitch.y, true, false)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))).y)))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2) == 0, ((subgroup_local_id % 2) == 0) && true), true && ((subgroup_local_id % 2) == 0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(4, (99460 & 0), 0), (ivec3(4, (99460 & 0), 0)) | (_GLF_IDENTITY(ivec3(4, (99460 & 0), 0), ivec3(0, 0, 0) | (ivec3(4, (99460 & 0), 0))))))), 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 1.0, 0.0, determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-153.014)), float(1.0), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-153.014)), float(1.0), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)))), (float(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-153.014)), _GLF_IDENTITY(float(1.0), clamp(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), float(1.0), float(1.0))), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) - 0.0)), 1.0)), _GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(21.01), max(_GLF_FUZZED(21.01), _GLF_FUZZED(21.01))))), injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(7295.0375, -1.0, -200.503, 433.614, -9.4, 1.8, 65.79, -1.1, 2.7, -9732.7561, -6105.3871, 3.2, -780.110, 5.0, 33.06, 9.9)) : _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-153.014)), float(1.0), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-153.014)), float(1.0), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)))), (float(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-153.014)), _GLF_IDENTITY(float(1.0), clamp(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), float(1.0), float(1.0))), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) - 0.0)), 1.0)), _GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(21.01), max(_GLF_FUZZED(21.01), _GLF_FUZZED(21.01))))), injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0), (true ? mat4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-153.014)), float(1.0), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-153.014)), float(1.0), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)))), (float(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-153.014)), _GLF_IDENTITY(float(1.0), clamp(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), float(1.0), float(1.0))), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) - 0.0)), 1.0)), _GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(21.01), max(_GLF_FUZZED(21.01), _GLF_FUZZED(21.01))))), injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4(655.098, -836.646, 8.7, -985.498, 948.931, 3.5, -44.78, -39.89, 8865.3064, -43.59, 589.097, 9035.2064, -6820.9971, 9807.8635, -4.9, 49.86)))))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-153.014)), float(1.0), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), (float(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-153.014)), _GLF_IDENTITY(float(1.0), clamp(float(1.0), float(1.0), float(1.0))), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) - 0.0)), 1.0)), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(21.01))), injectionSwitch.x), 1.0 * (_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(21.01))), injectionSwitch.x))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0)))), 0.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(round(-144.848)) : 0.0)), min((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(round(-144.848)) : 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(round(-144.848)) : 0.0)), (false ? _GLF_FUZZED(-800.864) : (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(round(-144.848)) : 0.0)))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), ! (! (! (true))))) && true))))) && true)), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), ! (! (_GLF_IDENTITY(! (true), false || (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(bool((true))))) && true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((! (! (true))), ! (_GLF_IDENTITY(! ((! (! (true)))), ! (! (! ((! (! (true)))))))))))))) && true))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), ((_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), false || (! (true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((! (! (true))), ! (_GLF_IDENTITY(! ((! (! (true)))), ! (! (! ((! (! (true)))))))))))))) && true)))))))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) && true)))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))), injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 1.0, 0.0, determinant(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-153.014)), float(1.0), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), (float(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-153.014)), _GLF_IDENTITY(_GLF_IDENTITY(float(1.0), (true ? float(1.0) : _GLF_FUZZED(-7.7))), clamp(float(1.0), float(1.0), float(1.0))), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) - 0.0)), 1.0)), _GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(21.01))), injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-153.014)), mix(float(float(_GLF_FUZZED(-153.014))), float(_GLF_FUZZED(-301.207)), bool(false))), float(1.0), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), (float(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-153.014)), _GLF_IDENTITY(float(1.0), clamp(float(1.0), float(1.0), float(1.0))), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) - 0.0)), 1.0)), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6882.3973)), float(0.0), bool(true))), (true ? 0.0 : _GLF_FUZZED(21.01))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(acosh(injectionSwitch)) : injectionSwitch)).x), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-69.14) : 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0)))), 0.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)) - _GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(round(-144.848)), (_GLF_FUZZED(round(-144.848))) - 0.0) : 0.0)))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), ! (! (! (true))))) && true))))) && true)), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), _GLF_IDENTITY(((_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), false || (! (true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), false || (! (true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (((_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), false || (! (true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec4(! (_GLF_IDENTITY(((_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), false || (! (true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (((_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), false || (! (true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true, true)))))))), (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((! (! (true))), ! (_GLF_IDENTITY(! ((! (! (true)))), ! (! (! ((! (! (true)))))))))))))) && true))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), ((_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), false || (! (true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((! (! (true))), ! (_GLF_IDENTITY(! ((! (! (true)))), ! (! (_GLF_IDENTITY(! ((! (! (true)))), false || (_GLF_IDENTITY(! ((! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((! (! (true)))))))))))))))))) && true)))))))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)), clamp(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)), (float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0))) / 1.0), _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)), clamp(float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)), float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0)), float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0))))))), float(mat4x2(injectionSwitch.x, 0.0, 1.0, 0.0, determinant(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-153.014)), float(1.0), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), (float(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-153.014)), _GLF_IDENTITY(float(1.0), clamp(float(1.0), float(1.0), float(1.0))), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) - 0.0)), 1.0)), _GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(21.01))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0))).x), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(tan(9.7)))))), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(abs(1.0), 0.0), vec2(tan(0.0), 1.0)), dot(vec2(abs(1.0), 0.0), vec2(tan(0.0), 1.0))), 1.0, 1.0, 1.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0), mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-153.014)), float(1.0), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), (float(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-153.014)), _GLF_IDENTITY(float(1.0), clamp(float(1.0), float(1.0), float(1.0))), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) - 0.0)), 1.0)), _GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(21.01))), injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0)))), 0.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(round(-144.848)) : 0.0)))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! _GLF_IDENTITY((! ((true))), ! (! ((! ((true))))))), ! (! (! (true))))) && true))))) && true)), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (! (true))))))), ((_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), false || (! (true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((! (! (true))), ! (_GLF_IDENTITY(! ((! (! (true)))), _GLF_IDENTITY(! (! (! ((! (! (true)))))), false || (! (! (! ((! (! (true)))))))))))))))) && true))), ! (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), ! (! (! (true))))), ((_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), false || (! (true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((! _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! ((! (true))), ! (! (! ((! (true))))))))), ! (_GLF_IDENTITY(! ((! (! (true)))), ! (! (! ((! (! (true)))))))))))))) && true)))))))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) && _GLF_IDENTITY(true, bool(bvec2(true, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) || (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(9.9), min(_GLF_FUZZED(9.9), _GLF_FUZZED(9.9)))), bool(false))) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, abs(0.0), 1.0, 0.0, 0.0, 1.0)), float(_GLF_IDENTITY(mat2x4(float(mat3x2(injectionSwitch.y, abs(0.0), 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, round(length(normalize(vec2(1.0, 1.0))))), (mat2x4(float(mat3x2(injectionSwitch.y, abs(0.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 1.0)), 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), min(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0))))) * vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)))))))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((_GLF_IDENTITY(33.53, max(_GLF_IDENTITY(33.53, (33.53) - 0.0), 33.53))))), float(injectionSwitch.y), bool(true)))))))
  barrier();
}
