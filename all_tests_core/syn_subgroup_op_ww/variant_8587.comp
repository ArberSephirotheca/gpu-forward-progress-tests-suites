#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 vec2 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_2 {
 ivec3 _f0;
} ;

struct _GLF_struct_1 {
 vec3 _f0;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 vec4 _f1;
 _GLF_struct_2 _f2;
 ivec4 _f3;
 uvec3 _f4;
 _GLF_struct_3 _f5;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
} ;

struct _GLF_struct_5 {
 ivec3 _f0;
 _GLF_struct_0 _f1;
 uint workgroup_base;
 _GLF_struct_4 _f2;
 ivec3 _f3;
 ivec2 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, exp(0.0), 0.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, log(1.0)), mat3(1.0) * (mat4x3(injectionSwitch, exp(0.0), 0.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, log(1.0)))))))).x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), max(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (true ? max(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-8.8))), max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, cos(0.0), 0.0))), injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), max(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), false, true))) ? max(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-8.8))), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), float(mat3(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.2)), bool(false))), injectionSwitch.x), 1.0 * (max(injectionSwitch.x, injectionSwitch.x))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))), (true ? _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), max(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (true ? max(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-8.8))), max(injectionSwitch.x, injectionSwitch.x))) : _GLF_FUZZED(determinant(mat4(-5449.3200, 360.333, _GLF_IDENTITY(-6364.2935, _GLF_IDENTITY(clamp(-6364.2935, _GLF_IDENTITY(-6364.2935, clamp(-6364.2935, -6364.2935, _GLF_IDENTITY(-6364.2935, mix(float(-6364.2935), float(_GLF_FUZZED(-7.3)), bool(false))))), _GLF_IDENTITY(-6364.2935, mix(float(_GLF_FUZZED(-539.959)), float(-6364.2935), bool(true)))), clamp(clamp(-6364.2935, _GLF_IDENTITY(-6364.2935, clamp(-6364.2935, -6364.2935, _GLF_IDENTITY(-6364.2935, mix(float(-6364.2935), float(_GLF_FUZZED(-7.3)), bool(false))))), _GLF_IDENTITY(-6364.2935, mix(float(_GLF_FUZZED(-539.959)), float(-6364.2935), bool(true)))), clamp(-6364.2935, _GLF_IDENTITY(-6364.2935, clamp(-6364.2935, -6364.2935, _GLF_IDENTITY(-6364.2935, mix(float(-6364.2935), float(_GLF_FUZZED(-7.3)), bool(false))))), _GLF_IDENTITY(-6364.2935, mix(float(_GLF_FUZZED(-539.959)), float(-6364.2935), bool(true)))), clamp(-6364.2935, _GLF_IDENTITY(-6364.2935, clamp(-6364.2935, -6364.2935, _GLF_IDENTITY(-6364.2935, mix(float(-6364.2935), float(_GLF_FUZZED(-7.3)), bool(false))))), _GLF_IDENTITY(-6364.2935, mix(float(_GLF_FUZZED(-539.959)), float(-6364.2935), bool(true))))))), -0.9, -5.7, 64.50, 96.77, 6317.1362, -1210.6848, 8.7, -4.5, 91.92, -3762.7094, 5661.7877, -2.2, 3.4))))), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), max(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (true ? max(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-8.8))), max(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(vec2(max(injectionSwitch.x, injectionSwitch.x), sqrt(1.0))), (false ? _GLF_FUZZED(-0.0) : float(vec2(max(injectionSwitch.x, injectionSwitch.x), sqrt(1.0)))))))))) + 0.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && true, bool(_GLF_IDENTITY(bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, exp(0.0), 0.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, log(1.0)), mat3(1.0) * (mat4x3(injectionSwitch, exp(0.0), 0.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, log(1.0)))))))).x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), max(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (true ? max(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-8.8))), max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, cos(0.0), 0.0))), injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), max(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), false, true))) ? max(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-8.8))), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), float(mat3(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.2)), bool(false))), injectionSwitch.x), 1.0 * (max(injectionSwitch.x, injectionSwitch.x))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))), (true ? _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), max(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (true ? max(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-8.8))), max(injectionSwitch.x, injectionSwitch.x))) : _GLF_FUZZED(determinant(mat4(-5449.3200, 360.333, _GLF_IDENTITY(-6364.2935, _GLF_IDENTITY(clamp(-6364.2935, _GLF_IDENTITY(-6364.2935, clamp(-6364.2935, -6364.2935, _GLF_IDENTITY(-6364.2935, mix(float(-6364.2935), float(_GLF_FUZZED(-7.3)), bool(false))))), _GLF_IDENTITY(-6364.2935, mix(float(_GLF_FUZZED(-539.959)), float(-6364.2935), bool(true)))), clamp(clamp(-6364.2935, _GLF_IDENTITY(-6364.2935, clamp(-6364.2935, -6364.2935, _GLF_IDENTITY(-6364.2935, mix(float(-6364.2935), float(_GLF_FUZZED(-7.3)), bool(false))))), _GLF_IDENTITY(-6364.2935, mix(float(_GLF_FUZZED(-539.959)), float(-6364.2935), bool(true)))), clamp(-6364.2935, _GLF_IDENTITY(-6364.2935, clamp(-6364.2935, -6364.2935, _GLF_IDENTITY(-6364.2935, mix(float(-6364.2935), float(_GLF_FUZZED(-7.3)), bool(false))))), _GLF_IDENTITY(-6364.2935, mix(float(_GLF_FUZZED(-539.959)), float(-6364.2935), bool(true)))), clamp(-6364.2935, _GLF_IDENTITY(-6364.2935, clamp(-6364.2935, -6364.2935, _GLF_IDENTITY(-6364.2935, mix(float(-6364.2935), float(_GLF_FUZZED(-7.3)), bool(false))))), _GLF_IDENTITY(-6364.2935, mix(float(_GLF_FUZZED(-539.959)), float(-6364.2935), bool(true))))))), -0.9, -5.7, 64.50, 96.77, 6317.1362, -1210.6848, 8.7, -4.5, 91.92, -3762.7094, 5661.7877, -2.2, 3.4))))), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), max(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (true ? max(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-8.8))), max(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(vec2(max(injectionSwitch.x, injectionSwitch.x), sqrt(1.0))), (false ? _GLF_FUZZED(-0.0) : float(vec2(max(injectionSwitch.x, injectionSwitch.x), sqrt(1.0)))))))))) + 0.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && true), true && (bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, exp(0.0), 0.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, log(1.0)), mat3(1.0) * (mat4x3(injectionSwitch, exp(0.0), 0.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, log(1.0)))))))).x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), max(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (true ? max(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-8.8))), max(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, cos(0.0), 0.0))), injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), max(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), false, true))) ? max(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-8.8))), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), float(mat3(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.2)), bool(false))), injectionSwitch.x), 1.0 * (max(injectionSwitch.x, injectionSwitch.x))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))), (true ? _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), max(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (true ? max(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-8.8))), max(injectionSwitch.x, injectionSwitch.x))) : _GLF_FUZZED(determinant(mat4(-5449.3200, 360.333, _GLF_IDENTITY(-6364.2935, _GLF_IDENTITY(clamp(-6364.2935, _GLF_IDENTITY(-6364.2935, clamp(-6364.2935, -6364.2935, _GLF_IDENTITY(-6364.2935, mix(float(-6364.2935), float(_GLF_FUZZED(-7.3)), bool(false))))), _GLF_IDENTITY(-6364.2935, mix(float(_GLF_FUZZED(-539.959)), float(-6364.2935), bool(true)))), clamp(clamp(-6364.2935, _GLF_IDENTITY(-6364.2935, clamp(-6364.2935, -6364.2935, _GLF_IDENTITY(-6364.2935, mix(float(-6364.2935), float(_GLF_FUZZED(-7.3)), bool(false))))), _GLF_IDENTITY(-6364.2935, mix(float(_GLF_FUZZED(-539.959)), float(-6364.2935), bool(true)))), clamp(-6364.2935, _GLF_IDENTITY(-6364.2935, clamp(-6364.2935, -6364.2935, _GLF_IDENTITY(-6364.2935, mix(float(-6364.2935), float(_GLF_FUZZED(-7.3)), bool(false))))), _GLF_IDENTITY(-6364.2935, mix(float(_GLF_FUZZED(-539.959)), float(-6364.2935), bool(true)))), clamp(-6364.2935, _GLF_IDENTITY(-6364.2935, clamp(-6364.2935, -6364.2935, _GLF_IDENTITY(-6364.2935, mix(float(-6364.2935), float(_GLF_FUZZED(-7.3)), bool(false))))), _GLF_IDENTITY(-6364.2935, mix(float(_GLF_FUZZED(-539.959)), float(-6364.2935), bool(true))))))), -0.9, -5.7, 64.50, 96.77, 6317.1362, -1210.6848, 8.7, -4.5, 91.92, -3762.7094, 5661.7877, -2.2, 3.4))))), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), max(_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (true ? max(injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-8.8))), max(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(vec2(max(injectionSwitch.x, injectionSwitch.x), sqrt(1.0))), (false ? _GLF_FUZZED(-0.0) : float(vec2(max(injectionSwitch.x, injectionSwitch.x), sqrt(1.0)))))))))) + 0.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), 1u), (uvec4(uvec3(0u, 0u, 0u), 1u)) * uvec4(1u, 1u, 1u, 1u))), (uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), 1u), (uvec4(uvec3(0u, 0u, 0u), 1u)) * uvec4(1u, 1u, 1u, 1u)))) - uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u)).x, _GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u), _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), _GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((1u), ((1u)) | ((1u)))), 0u))), gl_NumWorkGroups.x)))), ~ (~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), _GLF_IDENTITY(gl_NumWorkGroups.x, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) * 1u), uint(4u))) ^ (gl_NumWorkGroups.x))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(uvec3(75543u, 178203u, 152969u).t))), uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), (_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u)))) | (_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))))), _GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups))))) : _GLF_FUZZED(uvec3(subgroup_id)))).x))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (1u) | 0u))))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) / 1u)))), gl_NumWorkGroups.x), (clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))), gl_NumWorkGroups.x)) / (1u & 1u))))), ~ _GLF_IDENTITY((~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))), (_GLF_IDENTITY((~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))), min(_GLF_IDENTITY((~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))), max((~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))), (~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))))), (~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))))), 0u, 0u, 1u)), clamp(uint(uvec4(_GLF_IDENTITY((~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))), min(_GLF_IDENTITY((~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))), max((~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))), (~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))))), (~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))))), 0u, 0u, 1u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))), min(_GLF_IDENTITY((~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))), max((~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))), (~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))))), (~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))))), 0u, 0u, 1u)), ~ (~ (uint(uvec4(_GLF_IDENTITY((~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))), min(_GLF_IDENTITY((~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))), max((~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))), (~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))))), (~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))))), 0u, 0u, 1u))))), uint(uvec4(_GLF_IDENTITY((~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))), min(_GLF_IDENTITY((~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))), max((~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))), (~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))))), (~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))))), 0u, 0u, 1u)))))) | ((~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))))))))) << 0u) * _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, uint(uint(1u))))), 0u | (1u)))), max(min(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u), _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups)), gl_NumWorkGroups)).x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), _GLF_IDENTITY((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x), (_GLF_IDENTITY((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x), (true ? _GLF_IDENTITY((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x), ((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)) / 1u) : _GLF_FUZZED(subgroup_local_id)))) | ((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))), 1u, 0u))), gl_NumWorkGroups.x))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))), gl_NumWorkGroups.x))), ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))), gl_NumWorkGroups.x)))) - 0u)), ~ (~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | uvec3(0u, 0u, 0u)) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u), (uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u)) << uvec3(0u, 0u, 0u))))) >> uvec3(0u, 0u, 0u)))), gl_NumWorkGroups.x))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), 1u))), gl_NumWorkGroups)).x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u))), 1u, 0u))), gl_NumWorkGroups.x))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))), gl_NumWorkGroups.x)))), (((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), _GLF_IDENTITY(1u, 0u ^ (1u)), 0u), (uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), _GLF_IDENTITY(1u, 0u ^ (1u)), 0u)) ^ uvec3(0u, 0u, 0u)))), gl_NumWorkGroups.x))))) ^ 0u), ~ (~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))), (((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x))))) / 1u))))))) << 0u) * _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), min(uint(uint(1u)), _GLF_IDENTITY(uint(uint(1u)), uint(uvec4(uint(uint(1u)), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))), _GLF_IDENTITY(0u | (1u), (_GLF_IDENTITY(0u | (1u), (0u | (1u)) >> 0u)) << 0u)))), min(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u), _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x), max((_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))), (gl_NumWorkGroups.x))) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec4(gl_NumWorkGroups.x, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u, 0u)))) | (gl_NumWorkGroups.x)), _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))), gl_NumWorkGroups.x)))), ~ (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))), ~ (~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(5u), uvec3(5u))) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u)))).x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))))) : _GLF_FUZZED((uvec3(68967u, 139701u, 1264u) & uaddCarry(23538u, subgroup_size, subgroup_id))))).x)))))), 1u, 0u))), gl_NumWorkGroups.x))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))) << 0u), _GLF_IDENTITY(1u, 0u ^ (1u)), 0u))), gl_NumWorkGroups.x)))), ~ (~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), 1u, 0u))), gl_NumWorkGroups.x)))))))))) << 0u) * _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, uint(uint(1u))))), 0u | (1u)))))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true), _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ((true)) && true), (_GLF_IDENTITY(! (true), (! (true)) || false)) || false))), (injectionSwitch.x < injectionSwitch.y)) && (! (true))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((! (! (true))), ((! (! (true)))) || false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) < injectionSwitch.y)) && (! (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (! (true))), (_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true)))) || false)))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) < injectionSwitch.y)) && (! (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (! (true))), (_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))))))) < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-758.573))))) && (! (true))), (_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true)))) || false))))))))))))) || false)))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec3(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec3(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)), false, false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, _GLF_IDENTITY(false, (false) && true))), bool(bvec3(bool(bvec3(_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, false)), true, false))), false)), (bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, false)), true, false))), false))) || false))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(95.70)), bool(false))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false, _GLF_IDENTITY(true, true && (true)), false))))))) && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1395.6011) : injectionSwitch.y)))), true, true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(false, false || (false)))))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(ivec3(1), _GLF_struct_0(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), workgroup_size * workgroup_id, _GLF_struct_4(_GLF_struct_1(vec3(1.0)), vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, abs(1.0) * (1.0)), max(1.0, 1.0))), _GLF_struct_2(ivec3(1)), ivec4(1), uvec3(1u), _GLF_struct_3(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), (1.0) * 1.0)), mat2(1.0))), ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0))), 1))), ivec2(1));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, abs(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, tan(0.0))), dot(vec3(0.0, 1.0, 1.0), vec3(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, tan(0.0))))), max(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, tan(0.0))), dot(vec3(0.0, 1.0, 1.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, tan(0.0))))), vec4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), mix(float(_GLF_FUZZED(7.5)), float(dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, tan(0.0))), dot(vec3(0.0, 1.0, 1.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, tan(0.0)))))))))[0], injectionSwitch[1])).y) - 0.0)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(vec3(-7.5, 0.0, -9.5))) : injectionSwitch.y)))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base, ~ (~ (_GLF_struct_replacement_5.workgroup_base))) + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1) % subgroup_size), (_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), (uint(uvec4(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))) + 0u)) * (_GLF_struct_replacement_5.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base + subgroup_base, (_GLF_struct_replacement_5.workgroup_base + subgroup_base) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u + (((subgroup_local_id + 1) % subgroup_size)))) << (0u & 138193u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) * (_GLF_struct_replacement_5.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)))) | 0u))), (_GLF_IDENTITY(_GLF_struct_replacement_5.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)), uint(uint(_GLF_struct_replacement_5.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))))) + 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, false, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(! (false), false, false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(! (false), false, false, true)), ! (! (bool(bvec4(! (false), false, false, true)))))), bool(bool(! (_GLF_IDENTITY(bool(bvec4(! (false), false, false, true)), ! (! (bool(bvec4(! (false), false, false, true))))))))))), false, false, true))))))) && _GLF_IDENTITY(true, bool(bvec3(true, true, false))))))
  barrier();
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, min(1, 1))), 4, 64, _GLF_IDENTITY(4, (4) >> 0));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY((subgroup_local_id % 2), (_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, max(2, 2))), uint(uvec3((subgroup_local_id % _GLF_IDENTITY(2, max(2, 2))), 1u, (0u | 1u)))), (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, float(mat2x4((injectionSwitch.x) - 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, float(mat2x4((injectionSwitch.x) - 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) > injectionSwitch.y)) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))))))))) ? (subgroup_local_id % 2) : _GLF_FUZZED(subgroup_id)))))) | ((subgroup_local_id % 2))) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((false) || false)))), (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bool(false))))) || ((false) || false))))) || false)) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, log(1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, exp(0.0))), (true ? vec2(mat3x4(injectionSwitch, 0.0, log(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, exp(0.0))) : _GLF_FUZZED(injectionSwitch)))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))), _GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))) && _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bvec4(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))) && _GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), true && (bool(bvec4(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))) && _GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))), false || _GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat3x2((injectionSwitch), 0.0, 1.0, 0.0, length(0.0))), clamp(vec2(mat3x2((injectionSwitch), 0.0, 1.0, 0.0, length(0.0))), vec2(mat3x2((injectionSwitch), 0.0, 1.0, 0.0, length(0.0))), _GLF_IDENTITY(vec2(mat3x2((injectionSwitch), 0.0, 1.0, 0.0, length(0.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat3x2((injectionSwitch), 0.0, 1.0, 0.0, length(0.0)))))))) - vec2(0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, abs(0.0), sqrt(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), injectionSwitch.x), float(vec4(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), injectionSwitch.x), 0.0, 1.0, 1.0)))), 0.0, 1.0, 0.0))).y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, abs(0.0), sqrt(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), injectionSwitch.x)), 0.0, 1.0, 0.0))).y)) && true)))), ((! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, abs(0.0), sqrt(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), injectionSwitch.x)), 0.0, 1.0, 0.0))).y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 0.0, abs(0.0), sqrt(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), injectionSwitch.x)), 0.0, 1.0, 0.0))).y)) && true))))) || false)))), false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(exp(0.0), 0.0, 1.0, 0.0), vec4(0.0, 1.0, tan(0.0), 1.0)), dot(vec4(exp(0.0), 0.0, 1.0, 0.0), vec4(0.0, 1.0, tan(0.0), 1.0))), 1.0))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(exp(0.0), 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(cos(-0.5)) : 1.0)), tan(0.0), 1.0)), dot(vec4(exp(0.0), 0.0, 1.0, 0.0), vec4(0.0, 1.0, tan(0.0), 1.0))), 1.0))).y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ! (! (false)))));
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))), true && ((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(ivec2(35782, 53727).y))), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 else
  {
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8.7, (true ? -8.7 : _GLF_FUZZED(1.8)))), (true ? _GLF_FUZZED(-8.7) : _GLF_FUZZED(677.190)))), bool(false))) > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY((false), ((false)) || false) && true));
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(74617u) : _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)))), next_virtual_gid), min(min(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u), next_virtual_gid)), next_virtual_gid), min(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), next_virtual_gid))))], uint(_GLF_IDENTITY(2, (2) | (2))), 4, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) | 0))), 4);
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true), true, true))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), (bool(bool(_GLF_IDENTITY(false, false || (false))))) || false)))))))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), true, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x < injectionSwitch.y)), true))))) && true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec3(bool(bool(false)), false, false)), bool(bvec2(bool(bvec3(bool(bool(false)), false, false)), true))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false))))))))), ! (! (bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))))))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bool(true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), false, true)), true && (bool(bvec3(_GLF_IDENTITY(true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bool(true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (bool(bool(true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), false, true)))))), true))))) && true, true, false)), true && (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))))))))), bool(bvec4(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false))))))))), (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ! (! ((_GLF_IDENTITY(false, bool(bool(false)))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) && true, true, false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
