#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.5)), float(1.0), bool(true))), mix(float(_GLF_FUZZED(-6.6)), float(false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.5)), float(1.0), bool(true)))), bool(true))))), 0.0, determinant(mat4(1.0, 0.0, sin(0.0), 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, sqrt(1.0)))), 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(271.736)))), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.6)), float(0.0), bool(true))))), (float(mat4x3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / 1.0))))), 1.0, 1.0, 0.0))) / _GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.5))), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), (float(mat2x4(0.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0))) * 1.0))), (float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2x4(-7309.0954, 6428.8651, -107.699, -433.994, 88.55, -1.5, 3.0, -51.70)) : mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))), (float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2x4(-7309.0954, 6428.8651, -107.699, -433.994, 88.55, -1.5, 3.0, -51.70)) : mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))) / 1.0)), 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))) / _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 1.0)), 0.0, 0.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.2) : _GLF_IDENTITY(1.0, 1.0 * (1.0)))))), 1.0)))), 1.0, 1.0), (false ? _GLF_FUZZED(mat4(4.1, -242.433, -9681.4142, -21.73, -1.2, 6.5, 6432.8790, 138.931, 2.2, -6.9, -425.783, 8.4, -937.141, 361.729, -2.7, -3224.8643)) : mat4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.4)), float(_GLF_IDENTITY(0.0, (0.0) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), bool(_GLF_IDENTITY(true, true && (true))))), injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)), (float(mat4x3(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))) / _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec2(_GLF_ONE(1.0, injectionSwitch.y), 1.0))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, abs(0.0), 0.0, 1.0)), min(float(mat4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, abs(0.0), 0.0, 1.0)), float(mat4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, abs(0.0), 0.0, 1.0))))), 0.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(ceil(8685.6533)) : 0.0)), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0)))))) && true)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec2(_GLF_IDENTITY(bool(true), (bool(true)) || false), true))))))), (_GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false)))))), ((_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))
        {
         for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.9) : injectionSwitch.x)))) - 0.0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) << 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), ! (! (_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))))) && true)); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(log(vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(vec3(log(vec2(1.0, 1.0)), 0.0), max(vec3(log(vec2(1.0, 1.0)), 0.0), vec3(log(vec2(1.0, 1.0)), 0.0)))))).x, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x) + log(cos(0.0)), clamp((injectionSwitch.x) + log(cos(0.0)), _GLF_IDENTITY((injectionSwitch.x) + log(_GLF_IDENTITY(cos(0.0), mix(float(cos(0.0)), float(_GLF_FUZZED(-718.315)), bool(false)))), float(_GLF_IDENTITY(mat3x4((injectionSwitch.x) + log(cos(0.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0))), mix(float(_GLF_FUZZED(-6.6)), float(float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0)))), bool(true)))), float(_GLF_FUZZED(7764.7539)), bool(false)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 0.0), mat3x4(mat3x4(mat3x4((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-96.10)), bool(false)))) + log(cos(0.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, sin(0.0), 0.0, 0.0)))))), _GLF_IDENTITY((injectionSwitch.x) + _GLF_IDENTITY(log(cos(0.0)), clamp(log(cos(0.0)), log(cos(0.0)), log(cos(0.0)))), max((injectionSwitch.x) + _GLF_IDENTITY(log(cos(0.0)), clamp(log(cos(0.0)), log(cos(0.0)), log(cos(0.0)))), (injectionSwitch.x) + _GLF_IDENTITY(log(cos(0.0)), clamp(log(cos(0.0)), log(cos(0.0)), log(cos(0.0)))))))), mix(float(_GLF_FUZZED(9.6)), float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.43), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(211.423), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(211.423), float(mat3x4(_GLF_FUZZED(211.423), exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))), 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))), 1.0, 0.0, cos(0.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y))))), bvec2(true, false))).x) + log(cos(0.0)), ((injectionSwitch.x) + log(cos(0.0))) + 0.0)), bool(true)))) > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true))))
          barrier();
        }
      }
    }
   else
    {
    }
  }
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))))) || false); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base.y = subgroup_size, ~ (~ (GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base.y = subgroup_size)));
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))).y, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))).y) + _GLF_ZERO(0.0, injectionSwitch.x))))))));
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 ^ (0)), 0)))), 0, 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (! (bool(bvec4(false, false, false, true))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec3((_GLF_IDENTITY(false, (false) && true)), false, true)))) && true)))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, cos(0.0), 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.8, 785.599)))))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
          {
           do
            {
             barrier();
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), false, _GLF_IDENTITY(false, ! (! (false))), true))));
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         for(int _injected_loop_counter = ((0 | _GLF_IDENTITY(0, 0 + _GLF_IDENTITY((0), int(int((0)))))) << _GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, (0) - 0))) | (3))), int(3))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
              barrier();
             barrier();
            }
          }
        }
       while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), bool(bvec3(bool(_GLF_WRAPPED_LOOP(false)), false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), bool(bvec3(bool(_GLF_WRAPPED_LOOP(false)), false, true))))))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)) && true), false || (false))), false, false))));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5.3, -4.3)) : injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.z = GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base.y;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)))))), false, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)))))), false, true))))), false || (bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)))))), false, true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)))))), false, true))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, false, false))), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), false || (false))), ! (! (_GLF_DEAD(false))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(false))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(false)))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.1) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), false || (false))), ! (! (_GLF_DEAD(false))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(false))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(false)))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.1) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), false || (false))), ! (! (_GLF_DEAD(false))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(false))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(false)))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.1) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), true, true, true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, false || (_injected_loop_counter != 0))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))))
      barrier();
    }
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), _GLF_IDENTITY((bool(_GLF_DEAD(false))) || false, bool(bvec3((bool(_GLF_DEAD(false))) || false, false, false))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))) || false), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))) || false), true, true)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))) && true))), _GLF_IDENTITY(bool(bool((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))) && true))))), (_GLF_IDENTITY(bool(bool((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))) && true))))), false || (bool(bool((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))) && true)))))))) || false)), _GLF_IDENTITY(bool(bool(! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))))), (_GLF_IDENTITY(bool(bool(! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))))), bool(bvec3(_GLF_IDENTITY(bool(bool(! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))))), bool(bvec3(bool(bool(! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))))), false, false))), false, false)))) && true))), ! (! (! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))), bool(bool(! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))))))))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9480.2529))) > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base.x = _GLF_IDENTITY(num_workgroup, clamp(_GLF_IDENTITY(num_workgroup, min(_GLF_IDENTITY(num_workgroup, 0u | (_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup)))), num_workgroup)), num_workgroup, _GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, _GLF_IDENTITY(num_workgroup, clamp(num_workgroup, _GLF_IDENTITY(num_workgroup, (num_workgroup) << 0u), _GLF_IDENTITY(num_workgroup, min(num_workgroup, num_workgroup))))))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.y = _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), _GLF_IDENTITY(max(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)), (max(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))) ^ 0u)) : _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base.x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base.x, 0u + (GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base.x)), max(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base.x, _GLF_IDENTITY(0u + (GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base.x), (_GLF_IDENTITY(0u + (GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base.x), 0u ^ (0u + (GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base.x)))) << 0u)), _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base.x, 0u + (GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base.x))))) << 0u)));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec4(bool(bvec3(false, false, false)), true, false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(6.7)), clamp(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(6.7)), (false ? _GLF_FUZZED(4.5) : (true ? injectionSwitch.x : _GLF_FUZZED(6.7)))), (true ? injectionSwitch.x : _GLF_FUZZED(6.7)), (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(_GLF_IDENTITY(6.7, clamp(6.7, _GLF_IDENTITY(6.7, 1.0 * (6.7)), 6.7))))))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? injectionSwitch.x : _GLF_FUZZED(6.7)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) ? injectionSwitch.x : _GLF_FUZZED(6.7), float(vec2(true ? injectionSwitch.x : _GLF_FUZZED(6.7), 1.0)))), (false ? _GLF_FUZZED(4.5) : (true ? injectionSwitch.x : _GLF_FUZZED(6.7)))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) ? injectionSwitch.x : _GLF_FUZZED(6.7), float(vec2(true ? injectionSwitch.x : _GLF_FUZZED(6.7), 1.0)))), (false ? _GLF_FUZZED(4.5) : (true ? injectionSwitch.x : _GLF_FUZZED(6.7)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) ? injectionSwitch.x : _GLF_FUZZED(6.7), float(vec2(true ? injectionSwitch.x : _GLF_FUZZED(6.7), 1.0)))), (false ? _GLF_FUZZED(4.5) : (true ? injectionSwitch.x : _GLF_FUZZED(6.7)))))), (true ? injectionSwitch.x : _GLF_FUZZED(6.7)), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(6.7, clamp(6.7, 6.7, 6.7))))))) > injectionSwitch.y))))))
  {
   for(int _injected_loop_counter = (1 ^ (1 ^ _GLF_IDENTITY(0, (0) - 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4)))), ~ (_GLF_IDENTITY(~ (1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4))))), clamp(~ (1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4))))), ~ (1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4))))), ~ (1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4)))))))))) >> _GLF_IDENTITY(int(4), int(4))) | 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   do
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((6.3 - 4.7))), float(injectionSwitch.y), bool(true)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(bool((injectionSwitch.x > injectionSwitch.y) || false))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(bool((injectionSwitch.x > injectionSwitch.y) || false))))), false || (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(bool((injectionSwitch.x > injectionSwitch.y) || false)))))))) || false)), false, true, false)))))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.4), _GLF_FUZZED(-0.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       do
        {
         barrier();
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.0)), vec2(_GLF_FUZZED(2.6), _GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(vec3((injectionSwitch)[1], 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), vec4(mat4(vec4(0.0, 0.0, 1.0, 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), mix(vec3((vec3((injectionSwitch)[1], 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))[0], (vec3((injectionSwitch)[1], 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))[1], (vec3((injectionSwitch)[1], 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-68.64)), float(0.0), bool(true))), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))[2]), vec3(_GLF_FUZZED(-698.307), _GLF_FUZZED(6.8), _GLF_FUZZED(370.896)), bvec3(false, false, false)))))), bvec2(false, true))).y))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-6.0, (_GLF_IDENTITY(-6.0, mix(float(-6.0), float(_GLF_FUZZED((-114.766))), bool(false)))) / 1.0)), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-6.0, (_GLF_IDENTITY(-6.0, mix(float(-6.0), float(_GLF_FUZZED((-114.766))), bool(false)))) / 1.0)), mix(float(_GLF_FUZZED(-0.9)), float(_GLF_FUZZED(_GLF_IDENTITY(-6.0, (_GLF_IDENTITY(-6.0, mix(float(-6.0), float(_GLF_FUZZED((-114.766))), bool(false)))) / 1.0))), bool(true))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-6.0, (_GLF_IDENTITY(-6.0, mix(float(-6.0), float(_GLF_FUZZED((-114.766))), bool(false)))) / 1.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-6.0, (_GLF_IDENTITY(-6.0, mix(float(-6.0), float(_GLF_FUZZED((-114.766))), bool(false)))) / 1.0))), float(_GLF_FUZZED(-79.07)), bool(false)))))), vec2(_GLF_FUZZED(2.6), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-65837) : 1))], float(_GLF_IDENTITY(vec3((injectionSwitch)[_GLF_IDENTITY(1, int(int(1)))], 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), mix(_GLF_IDENTITY(vec3((vec3((injectionSwitch)[1], 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), vec4(mat2x3(vec4(0.0, 0.0, 1.0, 0.0), 0.0, 0.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))[0], (vec3((injectionSwitch)[1], 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-456.955) : 0.0)), 0.0, 1.0, 0.0), (_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), max(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))) * vec4(1.0, 1.0, 1.0, 1.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))[1], (vec3((injectionSwitch)[_GLF_IDENTITY(1, 0 + (1))], 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))) - 0.0), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))[_GLF_IDENTITY(2, int(ivec4(2, 0, 1, 0)))]), max(vec3((vec3((injectionSwitch)[1], 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), vec4(mat2x3(vec4(0.0, 0.0, 1.0, 0.0), 0.0, 0.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))[0], (vec3((injectionSwitch)[1], 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-456.955) : 0.0)), 0.0, 1.0, 0.0), (_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), max(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))) * vec4(1.0, 1.0, 1.0, 1.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))[1], (vec3((injectionSwitch)[_GLF_IDENTITY(1, 0 + (1))], 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))) - 0.0), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))[_GLF_IDENTITY(2, int(ivec4(2, 0, 1, 0)))]), vec3((vec3((injectionSwitch)[1], 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), vec4(mat2x3(vec4(0.0, 0.0, 1.0, 0.0), 0.0, 0.0)))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))[0], (vec3((injectionSwitch)[1], 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-456.955) : 0.0)), 0.0, 1.0, 0.0), (_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), max(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))) * vec4(1.0, 1.0, 1.0, 1.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))[1], (vec3((injectionSwitch)[_GLF_IDENTITY(1, 0 + (1))], 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))) - 0.0), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))[_GLF_IDENTITY(2, int(ivec4(2, 0, 1, 0)))]))), vec3(_GLF_FUZZED(-698.307), _GLF_FUZZED(6.8), _GLF_FUZZED(_GLF_IDENTITY(370.896, mix(float(_GLF_FUZZED(4.3)), float(370.896), bool(true))))), bvec3(false, false, false)))))), bvec2(false, true))).y))))));
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   for(int _injected_loop_counter = (0 & -23800); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) | 0, ((int(4)) | 0) << 0)))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) - 0)), (true ? int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, (4) >> 0), 1, 1), (ivec3(_GLF_IDENTITY(4, (4) >> 0), 1, 1)) / ivec3(1, 1, 1))))) + 0)) : _GLF_FUZZED(-54022)))))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize))) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.6) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-413.915)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x)), (uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.6) : _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 0.0), vec3(0.0, 0.0, 1.0))), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(((uvec3(112645u, 113050u, 151440u) == uvec3(159583u, 113492u, 8394u)) ? -2142.2982 : 5780.0292))), float(0.0), bool(true))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-413.915)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.5), _GLF_FUZZED(-7563.8479)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x))) << (uvec3(108534u, 49995u, 21242u) & uvec3(0u, 0u, 0u)))).x, min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0))), dot(vec3(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.6) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (true ? dot(vec2(0.0, 1.0), vec2(0.0, 1.0)) : _GLF_FUZZED(3.6))))), 1.0))) : _GLF_FUZZED(-413.915)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x)), (uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.6) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-413.915)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x))) << (uvec3(108534u, 49995u, 21242u) & uvec3(0u, 0u, 0u)))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> _GLF_IDENTITY(uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(ldexp(-759.438, 56239)) : 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(747.674)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.6) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.6) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0)), (float(vec4(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.6) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0))) * 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-413.915)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x)), (uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.6) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-413.915)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x))) << (_GLF_IDENTITY(uvec3(108534u, 49995u, 21242u) & uvec3(0u, 0u, 0u), max(uvec3(108534u, 49995u, 21242u) & uvec3(0u, 0u, 0u), uvec3(108534u, 49995u, 21242u) & uvec3(0u, 0u, 0u)))))).x, (0u ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.6) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(2.4) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.6) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), float(vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.6) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), 1.0))))) : _GLF_FUZZED(-413.915)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(float(199072u))), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))), (uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)), 1.0, 1.0, sqrt(1.0))), clamp(float(mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)), 1.0, 1.0, sqrt(1.0))), float(mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)), 1.0, 1.0, sqrt(1.0))), float(mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)), 1.0, 1.0, sqrt(1.0)))))), 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.6) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-6.4))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-413.915)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x))) << (uvec3(108534u, 49995u, 21242u) & uvec3(0u, 0u, 0u)))).x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.6) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), min(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))))), 1.0)), float(mat3x4(float(mat3x2(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), min(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))))), 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), round(length(normalize(1.0))), 0.0)))), max(1.0, 1.0)))), 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(78.31) : 1.0)), sqrt(1.0), abs(0.0), 0.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(-413.915)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), injectionSwitch.x)), (uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(2.6) : _GLF_IDENTITY(1.0, max(1.0, 1.0))), (_GLF_IDENTITY((false ? _GLF_FUZZED(2.6) : _GLF_IDENTITY(1.0, max(1.0, 1.0))), mix(float((false ? _GLF_FUZZED(2.6) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), float(_GLF_FUZZED(929.963)), bool(false)))) / 1.0)), 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), (true ? float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(2.6) : _GLF_IDENTITY(1.0, max(1.0, 1.0))), (_GLF_IDENTITY((false ? _GLF_FUZZED(2.6) : _GLF_IDENTITY(1.0, max(1.0, 1.0))), mix(float((false ? _GLF_FUZZED(2.6) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), float(_GLF_FUZZED(929.963)), bool(false)))) / 1.0)), 0.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(1.9)))) : _GLF_FUZZED(-413.915)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) << (uvec3(108534u, 49995u, 21242u) & uvec3(0u, 0u, 0u)))).x))))));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u), workgroup_id))) | 0u)) / 1u), (true ? workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (workgroup_id) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, min(1u, 1u))))), workgroup_id))) | 0u)) / 1u) : _GLF_FUZZED(subgroup_local_id))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))) * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_id : _GLF_FUZZED(27713u)))) / 1u), uint(uvec2(workgroup_size * workgroup_id, 1u))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (~ (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) ? workgroup_id : _GLF_FUZZED(27713u)))) / 1u), uint(_GLF_IDENTITY(uvec2(workgroup_size * workgroup_id, 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec2(workgroup_size * workgroup_id, 1u) : _GLF_FUZZED(uvec2(145885u, 3514u)))))))) : _GLF_FUZZED(workgroup_size))));
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      barrier();
     barrier();
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base.z = workgroup_base;
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-892.855, 5.5)) : injectionSwitch))) / cos(vec2(0.0, 0.0))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x)) > injectionSwitch.y))) || false), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), min(max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0)), injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), min(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), min(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), min(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), min(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y))))))) * determinant(mat2(1.0, 1.0, 0.0, 1.0)))), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), min(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)))))) && true, bool(bvec4(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), min(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y)))))) && true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))) || false)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))) ? _GLF_FUZZED(vec2(3.7, 986.529)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base.z + _GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))) * GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.z + _GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base, (GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base) - uvec3(0u, 0u, 0u)).z, max(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base, (GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base) - uvec3(0u, 0u, 0u)).z, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base, (GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base) - uvec3(0u, 0u, 0u)).z, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base, (GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base) - uvec3(0u, 0u, 0u)).z) >> 0u))) + _GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))) * GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.z + subgroup_local_id, GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base.z + _GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))) * GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.z + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-1649.2893), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(4.2)), bvec2(true, false)), (mix(vec2(_GLF_FUZZED(-1649.2893), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - log(1.0))), vec2((injectionSwitch)[0], _GLF_FUZZED(4.2)), bvec2(true, false))) + vec2(0.0, 0.0))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-1649.2893), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (vec2(vec2(injectionSwitch))) - vec2(0.0, 0.0))))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(4.2, float(mat3x2(4.2, 1.0, 0.0, length(0.0), 1.0, 0.0))))), bvec2(true, false)), _GLF_IDENTITY((mix(vec2(_GLF_FUZZED(-1649.2893), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (vec2(vec2(injectionSwitch))) - vec2(0.0, 0.0))))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(4.2, float(mat3x2(4.2, 1.0, 0.0, length(0.0), 1.0, 0.0))))), bvec2(true, false))) * mat2(1.0), (true ? (mix(vec2(_GLF_FUZZED(-1649.2893), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (vec2(vec2(injectionSwitch))) - vec2(0.0, 0.0))))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(4.2, float(mat3x2(4.2, 1.0, 0.0, length(0.0), 1.0, 0.0))))), bvec2(true, false))) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))))).y)))))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base.z, _GLF_IDENTITY(uint(uvec2(GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base.z, 0u)), min(_GLF_IDENTITY(uint(uvec2(GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base.z, 0u)), (uint(uvec2(GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base.z, 0u))) >> 0u), uint(uvec2(GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base.z, 0u))))) + subgroup_id * _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size, uvec3(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size[0], GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size[1], GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size[2])).z + _GLF_IDENTITY(((subgroup_local_id + 1) % GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.z), (_GLF_IDENTITY(((subgroup_local_id + 1) % GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.z), (((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.z)) ^ (_GLF_IDENTITY(0u, (0u) >> 0u) << _GLF_IDENTITY(uint(8u), uint(8u))))) | ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), ~ (~ (subgroup_local_id))) + 1), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), min((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) >> 0u))) + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, min(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), min((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), (true ? (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) : _GLF_FUZZED(subgroup_local_id))), 0u ^ ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1)))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1)))) | ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1))))) % GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.z)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), int(ivec2(int(6), (0 >> _GLF_IDENTITY(int(4), int(4))))))), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(25809) : _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), int(ivec2(int(6), (0 >> _GLF_IDENTITY(int(4), int(4))))))))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), int(ivec2(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, 0 ^ (6))) >> (0 ^ 0))), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(4)), clamp(0 >> _GLF_IDENTITY(int(4), int(4)), 0 >> _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(4)), 0 | (0 >> _GLF_IDENTITY(int(4), int(4)))))))))))) ^ 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
    {
     do
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (_GLF_IDENTITY(int(4), (int(4)) - _GLF_IDENTITY(0, clamp(0, 0, 0)))))))), true && (_GLF_IDENTITY(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (_GLF_IDENTITY(int(4), (int(4)) - _GLF_IDENTITY(0, clamp(0, 0, 0)))))))), (_GLF_IDENTITY(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (_GLF_IDENTITY(int(4), (int(4)) - _GLF_IDENTITY(0, clamp(0, 0, 0)))))))), (_injected_loop_counter > (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) / 1), _GLF_IDENTITY(int(4), ~ (~ (_GLF_IDENTITY(int(4), (int(4)) - _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (false ? _GLF_FUZZED((_injected_loop_counter - _injected_loop_counter)) : 0)))), 0))))))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), float(_GLF_FUZZED(vec3(-4.7, 9.6, -50.99).b)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x = next_virtual_gid;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))))) || false); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), false, true, false))) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9689.1666))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(715.832) : injectionSwitch.y)))), true)), true && (bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true)))))) && true))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), min(vec4(injectionSwitch.x, 0.0, 0.0, 0.0), vec4(injectionSwitch.x, 0.0, 0.0, 0.0))))))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(97.58)), bool(false))))), injectionSwitch)).x > injectionSwitch.y, true)), true && (bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true)), true && (bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(true, (true) && true)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true)), true && (bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.4)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), bool(bvec2(bool(true), false))))), bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, true)), true && (bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true)))))))) || false)))))) && true)))) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, false)))))))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (0 & 65785) | (_injected_loop_counter)) < 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 0.0, sqrt(1.0), 1.0, 0.0, cos(0.0), 0.0), (mat3(injectionSwitch, 1.0, 0.0, sqrt(1.0), 1.0, 0.0, cos(0.0), 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.9) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(24.76)), vec2(_GLF_FUZZED(653.231), (injectionSwitch)[1]), bvec2(false, true)))) + vec2(0.0, 0.0)).y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.9) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
           atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(1))), 4, 64, 4);
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) * 1.0) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) * 1.0) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) && true)))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (false)))))))))));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
    {
     if(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) - 0)) << 0))) | (_GLF_IDENTITY(1, ~ (~ (1))))) < GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.z)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false)))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true)))
              barrier();
             do
              {
               atomicStore(buf[GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x], uint(2), 4, 64, 4);
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))));
            }
           else
            {
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         subgroupAll(false);
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), false, false))));
         barrier();
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), ! (! (! (! ((_GLF_DEAD(false))))))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), ! (! (! (! ((_GLF_DEAD(false))))))), true, _GLF_IDENTITY(false, false || (false))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), ! (! (! (! (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))))), true, false))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true)))), ! (! (! (! ((_GLF_DEAD(false))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true))))))) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), true && (bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) && true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), ! (! (! (! ((_GLF_DEAD(false))))))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), true && (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), true && (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))))))), true))), true))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) || false)) && true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), ! (! (! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! ((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), false || (! (! _GLF_IDENTITY(((_GLF_DEAD(false))), bool(bvec3(((_GLF_DEAD(false))), false, true)))))))), ! (! (! (! ((_GLF_DEAD(false))))))), true, false), true))))), false || (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), _GLF_IDENTITY((! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))) && true, ((! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), ! _GLF_IDENTITY((! ((_GLF_DEAD(false)))), bool(bvec3((! ((_GLF_DEAD(false)))), false, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))))))))) && true) && true))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) && true)), bool(bool(! (_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) && true)))))))), bool(bvec3((! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) && true)), bool(bool(! (_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) && true)))))))), true, false))), ! (! (! (! ((_GLF_DEAD(false))))))), true, false), true)))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) || false)) && true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), ! (! (! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! ((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), false || (! (! _GLF_IDENTITY(((_GLF_DEAD(false))), bool(bvec3(((_GLF_DEAD(false))), false, true)))))))), ! (! (! (! ((_GLF_DEAD(false))))))), true, false), true))))), false || (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), _GLF_IDENTITY((! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))) && true, ((! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), ! _GLF_IDENTITY((! ((_GLF_DEAD(false)))), bool(bvec3((! ((_GLF_DEAD(false)))), false, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))))))))) && true) && true))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) && true)), bool(bool(! (_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) && true)))))))), bool(bvec3((! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) && true)), bool(bool(! (_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) && true)))))))), true, false))), ! (! (! (! ((_GLF_DEAD(false))))))), true, false), true)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) || false)) && true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), ! (! (! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! ((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), false || (! (! _GLF_IDENTITY(((_GLF_DEAD(false))), bool(bvec3(((_GLF_DEAD(false))), false, true)))))))), ! (! (! (! ((_GLF_DEAD(false))))))), true, false), true))))), false || (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), _GLF_IDENTITY((! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))) && true, ((! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), ! _GLF_IDENTITY((! ((_GLF_DEAD(false)))), bool(bvec3((! ((_GLF_DEAD(false)))), false, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))))))))) && true) && true))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) && true)), bool(bool(! (_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) && true)))))))), bool(bvec3((! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) && true)), bool(bool(! (_GLF_IDENTITY(((_GLF_DEAD(false))), (((_GLF_DEAD(false)))) && true)))))))), true, false))), ! (! (! (! ((_GLF_DEAD(false))))))), true, false), true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), (! (! ((_GLF_DEAD(false))))) && true)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), true && (! ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), true && (! (! ((_GLF_DEAD(false)))))), (_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), true && (! _GLF_IDENTITY((! ((_GLF_DEAD(false)))), bool(bool(_GLF_IDENTITY((! ((_GLF_DEAD(false)))), bool(bvec3((! ((_GLF_DEAD(false)))), true, false))))))))) && true), ! (! (! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), true && (! ((_GLF_DEAD(false))))))))), true, false), true))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true) || (_GLF_IDENTITY(! (! _GLF_IDENTITY(((_GLF_DEAD(false))), ! (! (((_GLF_DEAD(false))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), ! (! (! (! ((_GLF_DEAD(false))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (! (! ((_GLF_DEAD(false))))), bool(bvec3(! (! (! ((_GLF_DEAD(false))))), false, true))))), true, false), true)))))))), true, true, false)), ! (! (bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), ! (! (! (! ((_GLF_DEAD(false))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), _GLF_IDENTITY(! (! (! (! ((_GLF_DEAD(false)))))), ! (! (! (! (! (! ((_GLF_DEAD(false)))))))))), true, false), true))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), false, true))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), ! (! (! (! ((_GLF_DEAD(false))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), ! (! (! (! ((_GLF_DEAD(false))))))), true, false), true)))))))), true, true, false)))))))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))), false, true))))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))), false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))))))))))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > injectionSwitch.y)))))), true && (! (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))) && true)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > injectionSwitch.y)))))), true && (! (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))) && true), bool(bvec2(_GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > injectionSwitch.y)))))), true && (! (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))) && true), true)))))))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
            barrier();
           atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x, min(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x, (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x) | 0u), _GLF_IDENTITY(0u ^ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), (0u ^ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)) | _GLF_IDENTITY((_GLF_IDENTITY(0u ^ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), 0u ^ _GLF_IDENTITY((0u ^ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)), (true ? _GLF_IDENTITY((0u ^ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)), ((0u ^ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x))) + 0u) : _GLF_FUZZED(workgroup_size))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), 0u ^ (0u ^ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)))), ((_GLF_IDENTITY(0u ^ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), 0u ^ (0u ^ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x))))) + ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), 0u ^ (0u ^ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size, max(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size, (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size) << uvec3(0u, 0u, 0u)), GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size)).x)))), ((_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x, clamp(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x, GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x, GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x))), 0u ^ (0u ^ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x))))) + ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | 0u), uint(3u))) | 0u))))), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY(0u ^ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), 0u ^ (_GLF_IDENTITY(0u, ~ (~ (0u))) ^ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)))), ((_GLF_IDENTITY(0u ^ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), 0u ^ (0u ^ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x))))) << 0u))), _GLF_IDENTITY(0u, (0u) - 0u) ^ ((_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size, (true ? _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size, (true ? GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base))) : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size))).x, (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size, (true ? _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size, (true ? GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base))) : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size))).x) * 1u), (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size, (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size) - uvec3(0u, 0u, 0u)).x) / (0u | 1u))), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u)))) ^ (0u ^ _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), ((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)) >> 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(0u ^ _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), ~ (_GLF_IDENTITY(~ ((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)), max(_GLF_IDENTITY(~ ((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)), min(~ ((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)), ~ ((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)))), _GLF_IDENTITY(~ ((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)), uint(uvec3(~ ((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), 0u ^ (0u ^ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), ~ _GLF_IDENTITY((~ ((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x))), clamp((~ ((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x))), (~ ((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x))), (~ ((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)))))), 0u ^ (_GLF_IDENTITY(0u, (0u) - 0u) ^ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)))), ((_GLF_IDENTITY(_GLF_IDENTITY(0u ^ _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), ~ (~ ((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)))), (0u ^ _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), ~ (~ ((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x))))) | 0u), 0u ^ (0u ^ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x))))) >> 0u), 1u, 1u), max(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), ~ (~ ((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)))), 0u ^ (0u ^ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)))), ((_GLF_IDENTITY(0u ^ _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), ~ (~ ((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)))), 0u ^ (0u ^ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x))))) >> 0u), 1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(next_virtual_gid))), 1u))), uvec3(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), ~ (~ ((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)))), 0u ^ (0u ^ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)))), ((_GLF_IDENTITY(0u ^ _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), ~ (~ ((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)))), 0u ^ (0u ^ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x))))) >> 0u), 1u, 1u))))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size, min(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size), clamp(~ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size), ~ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size), ~ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size), clamp(~ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size), ~ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size), ~ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size)))), uvec3(1u, 1u, 1u) * (~ (_GLF_IDENTITY(~ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size), clamp(~ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size), ~ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size), ~ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size)))))), ~ (_GLF_IDENTITY(~ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size), clamp(~ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size), ~ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size), ~ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size)))), ~ (_GLF_IDENTITY(~ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size), clamp(~ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size), ~ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size), ~ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size))))))))), GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size)).x), 0u ^ (0u ^ (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x))))))))) | _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), ((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size, clamp(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size, GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size, GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size)).x)) - 0u), (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)), (max(_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), ((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size, clamp(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size, GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size, GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size)).x)) - 0u), (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x))) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (true ? _GLF_IDENTITY(max(_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), ((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size, clamp(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size, GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size, GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size)).x)) - 0u), (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)), (max(_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), ((_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size, clamp(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size, GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size, GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size)).x)) - 0u), (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x))) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) + 0u), 0u))) : _GLF_FUZZED((-- GLF_merged3_0_1_13_1_1_13_2_1_14num_workgroupsubgroup_sizeworkgroup_base[0])))))), GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x, (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x, _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), (_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), clamp((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)))) ^ 0u) / _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-75.99)), float(1.0), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)) - 0.0), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)))), bool(true)))))), (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))))) ^ (uint(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-75.99)), float(1.0), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)) - 0.0), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)))), bool(true))))))))), 0u ^ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x, (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) - 0.0)))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x, _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), (_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), clamp((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)))) ^ 0u) / _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-75.99)), float(1.0), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)) - 0.0), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)))), bool(true)))))), (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))))) ^ (uint(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-75.99)), float(1.0), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)) - 0.0), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)))), bool(true))))))))), 0u ^ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x, (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) - 0.0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x, _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), (_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), clamp((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)))) ^ 0u) / _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-75.99)), float(1.0), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)) - 0.0), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)))), bool(true)))))), (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))))) ^ (uint(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-75.99)), float(1.0), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)) - 0.0), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)))), bool(true))))))))), 0u ^ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x, (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) - 0.0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x, _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), (_GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), clamp((GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x), (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x)))) ^ 0u) / _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-75.99)), float(1.0), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)) - 0.0), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)))), bool(true)))))), (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))))) ^ (uint(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-75.99)), float(1.0), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), mix(float(_GLF_FUZZED(2.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)) - 0.0), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)))), bool(true))))))))), 0u ^ (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x, (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.x) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) - 0.0))))))))))))) * 1u)], _GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(uint(2), uint(2), uint(2)), max(clamp(_GLF_IDENTITY(uint(2), (uint(_GLF_IDENTITY(2, (2) >> 0))) | 0u), uint(2), uint(2)), clamp(uint(2), uint(2), uint(2)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(uint(2), uint(2), uint(2)), clamp(clamp(uint(2), uint(2), uint(2)), _GLF_IDENTITY(clamp(uint(2), uint(2), uint(2)), uint(uvec4(clamp(uint(2), uint(2), uint(2)), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u))), clamp(uint(2), uint(2), uint(2)))), max(clamp(_GLF_IDENTITY(uint(2), (uint(_GLF_IDENTITY(2, (2) >> 0))) | 0u), uint(2), uint(2)), clamp(uint(2), uint(2), uint(2)))), max(_GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(2, int(ivec4(2, 0, (1 & 1), int(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(2), uint(2)), max(clamp(_GLF_IDENTITY(uint(2), (uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (2) | 0))))) >> 0))) | 0u), _GLF_IDENTITY(uint(2), (uint(2)) - 0u), uint(2)), clamp(uint(2), uint(2), uint(2)))), _GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(2), uint(2)), max(clamp(_GLF_IDENTITY(uint(2), (uint(_GLF_IDENTITY(2, (2) >> 0))) | 0u), uint(2), uint(2)), clamp(uint(2), uint(2), uint(2)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u | 0u)), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(clamp(uint(2), uint(2), uint(2)), max(clamp(_GLF_IDENTITY(uint(2), (uint(_GLF_IDENTITY(2, (2) >> 0))) | 0u), uint(2), uint(_GLF_IDENTITY(2, 0 ^ (2)))), clamp(uint(2), uint(2), uint(2)))), max(_GLF_IDENTITY(clamp(uint(2), uint(2), uint(2)), max(clamp(_GLF_IDENTITY(uint(2), (uint(_GLF_IDENTITY(2, (2) >> 0))) | 0u), uint(2), uint(2)), clamp(uint(2), uint(2), uint(2)))), _GLF_IDENTITY(clamp(uint(2), uint(2), uint(2)), max(clamp(_GLF_IDENTITY(uint(2), (uint(_GLF_IDENTITY(2, (2) >> 0))) | 0u), uint(2), uint(2)), clamp(uint(2), uint(2), _GLF_IDENTITY(uint(2), 0u | (_GLF_IDENTITY(uint(2), min(_GLF_IDENTITY(uint(2), (uint(2)) ^ 0u), uint(2)))))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u | 0u)), ~ (~ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(clamp(uint(2), uint(2), uint(2)), max(clamp(_GLF_IDENTITY(uint(2), (uint(_GLF_IDENTITY(2, (2) >> 0))) | 0u), uint(2), uint(2)), clamp(uint(2), uint(2), uint(2)))), max(_GLF_IDENTITY(clamp(uint(2), uint(2), uint(2)), max(clamp(_GLF_IDENTITY(uint(2), (uint(_GLF_IDENTITY(2, (2) >> 0))) | 0u), uint(2), uint(2)), clamp(uint(2), uint(2), uint(2)))), _GLF_IDENTITY(clamp(uint(2), uint(2), uint(_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(2, (0 >> _GLF_IDENTITY(int(5), int(5))), 1)), min(int(ivec3(2, (0 >> _GLF_IDENTITY(int(5), int(5))), 1)), int(ivec3(2, (0 >> _GLF_IDENTITY(int(5), int(5))), 1))))))), max(clamp(_GLF_IDENTITY(uint(2), (uint(_GLF_IDENTITY(2, (2) >> 0))) | 0u), uint(2), uint(2)), clamp(uint(2), uint(2), uint(2)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u | 0u))))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(clamp(uint(2), uint(2), uint(2)), max(clamp(_GLF_IDENTITY(uint(2), (uint(_GLF_IDENTITY(2, (2) >> 0))) | 0u), uint(2), uint(2)), clamp(uint(2), _GLF_IDENTITY(uint(2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(next_virtual_gid) : uint(2))), uint(2)))), max(_GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(2, (2) / 1)), uint(2), uint(2)), max(clamp(_GLF_IDENTITY(uint(2), (uint(_GLF_IDENTITY(2, (2) >> 0))) | 0u), uint(2), uint(2)), clamp(uint(2), _GLF_IDENTITY(uint(_GLF_IDENTITY(2, max(2, 2))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, max(2, 2))), (uint(_GLF_IDENTITY(2, max(2, 2)))) * 1u)) >> (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), uint(2)))), _GLF_IDENTITY(clamp(uint(2), uint(2), uint(2)), max(clamp(_GLF_IDENTITY(uint(2), (uint(_GLF_IDENTITY(2, (2) >> 0))) | 0u), uint(2), uint(2)), clamp(uint(2), uint(2), uint(2)))))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | (uint(_GLF_ONE(1.0, injectionSwitch.y)))), (0u | 0u)), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(uint(2), uint(2), uint(2)), min(_GLF_IDENTITY(clamp(uint(2), uint(2), uint(2)), uint(uvec3(clamp(uint(2), uint(2), uint(2)), 0u, 0u))), clamp(uint(2), uint(2), uint(2)))), max(clamp(_GLF_IDENTITY(uint(2), (uint(_GLF_IDENTITY(2, (2) >> 0))) | 0u), uint(2), uint(2)), clamp(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 1 * (2))) | (2))), uint(2), uint(2)))), max(_GLF_IDENTITY(clamp(uint(2), uint(2), uint(2)), max(clamp(_GLF_IDENTITY(uint(2), (uint(_GLF_IDENTITY(2, (2) >> 0))) | 0u), uint(2), uint(2)), clamp(uint(_GLF_IDENTITY(2, max(2, 2))), uint(2), uint(2)))), _GLF_IDENTITY(clamp(uint(2), uint(2), uint(2)), max(clamp(_GLF_IDENTITY(uint(2), (uint(_GLF_IDENTITY(2, (2) >> 0))) | 0u), uint(_GLF_IDENTITY(2, min(2, 2))), uint(2)), clamp(uint(2), uint(2), uint(2)))))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), (0u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | 0u))))))), clamp(_GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(2, ~ _GLF_IDENTITY((~ (2)), int(ivec3((~ (2)), 1, int(_GLF_ZERO(0.0, injectionSwitch.x))))))), uint(2), uint(2)), max(clamp(_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, max(2, 2))), uint(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(2, max(2, 2)))), uint(uvec3(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(2, max(2, 2)))), (true ? uint(uint(_GLF_IDENTITY(2, max(2, 2)))) : _GLF_FUZZED(next_virtual_gid))), 0u, 1u)))))) | 0u), uint(2), uint(2)), clamp(uint(2), uint(2), uint(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) >> 0), 2)))))), _GLF_IDENTITY(clamp(uint(2), uint(2), uint(2)), max(clamp(_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), max(_GLF_IDENTITY((uint(2)), ~ (~ ((uint(2))))), _GLF_IDENTITY((uint(2)), ~ (~ (_GLF_IDENTITY((uint(2)), clamp((uint(2)), (uint(2)), (uint(2))))))))) | 0u), _GLF_IDENTITY(uint(2), max(uint(2), uint(2))), uint(2)), clamp(uint(2), uint(2), uint(2)))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(uint(2), _GLF_IDENTITY(uint(2), min(uint(_GLF_IDENTITY(2, ~ (~ (2)))), uint(2))), uint(2)), max(clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), (uint(2)) >> 0u)) | 0u)) >> 0u), _GLF_IDENTITY((uint(2)) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY((uint(2)) | 0u, max((uint(2)) | 0u, (uint(2)) | 0u)), ((uint(2)) | 0u) << 0u)) | ((uint(2)) | 0u))), uint(2), uint(2)), clamp(uint(2), uint(2), uint(2)))), (true ? _GLF_IDENTITY(clamp(uint(2), uint(2), uint(2)), max(_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(2), (uint(2)) | 0u), uint(2), uint(2)), max(clamp(_GLF_IDENTITY(uint(2), (uint(2)) | 0u), uint(_GLF_IDENTITY(2, ~ (~ (2)))), uint(_GLF_IDENTITY(2, (2) | (2)))), clamp(_GLF_IDENTITY(uint(2), (uint(2)) | 0u), uint(2), uint(2)))), 0u + (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(2), (uint(2)) | 0u), uint(2), uint(2)), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(2), (uint(2)) | 0u), uint(2), uint(2)), clamp(_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(2), (uint(2)) | 0u), uint(2), uint(2)), 0u | (clamp(_GLF_IDENTITY(uint(2), (uint(2)) | 0u), uint(2), uint(2)))), clamp(_GLF_IDENTITY(uint(2), (uint(2)) | 0u), uint(2), uint(2)), clamp(_GLF_IDENTITY(uint(2), (uint(2)) | 0u), uint(2), uint(2)))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(ivec2(2, 1)))), (uint(2)) | 0u), uint(2), uint(2)))))), clamp(uint(2), uint(_GLF_IDENTITY(2, 0 | (2))), _GLF_IDENTITY(uint(2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), min(uint(2), uint(2))), (true ? uint(2) : _GLF_FUZZED(subgroup_local_id)))) / 1u)))) : _GLF_FUZZED(132185u)))))), 4, _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, clamp(64, 64, 64)))), 4);
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, _GLF_IDENTITY(false, true && (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true), false, true, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true), false, true, false))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(4), int(4))), 0 | ((0 >> _GLF_IDENTITY(int(4), int(4))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(-33679) : _GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))) != _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1))))); _injected_loop_counter ++)
                  {
                   do
                    {
                     subgroupAll(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec3(true, true, true)))) || false, true && ((_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))))))), true)))) || false))), false, false, false))));
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 1.0))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0)) < injectionSwitch.y, true, true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_ONE(1.0, injectionSwitch.y)), true, true, true)), ! (! (bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true))))), true)))))))))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false)))));
                }
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))), true, true, true))))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec4(! (true), true, true, true)), (bool(bvec4(! (true), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && true), false), false, true)))))))), ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), true, true))) || false))))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false))))))))))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), ~ (_GLF_IDENTITY(~ (1), clamp(_GLF_IDENTITY(~ (1), (~ (1)) ^ 0), ~ (1), ~ (1))))), 1))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bool(false))))), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, bool(bool(false)))))) || false))))))
                      barrier();
                     barrier();
                    }
                  }
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3.4, -7661.4149)))).x) / 1.0), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 0.0, 0.0, 1.0), min(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, mix(float(_GLF_FUZZED(-0.7)), float((injectionSwitch.x) / 1.0), bool(true)))))), 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), float(_GLF_FUZZED(397.646)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 0.0, 0.0, 1.0)))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), clamp((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))) / 1.0)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))) - length(vec4(0.0, 0.0, 0.0, 0.0)))))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 0.0, 0.0, 1.0), min(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8347.9355) : _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 0.0, 0.0)))))), vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 0.0, 0.0, 1.0)))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), clamp((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, sqrt(1.0), 1.0, 1.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, sqrt(0.0), 0.0)), (false ? _GLF_FUZZED(677.685) : float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, sqrt(0.0), 0.0)))))))), (injectionSwitch.x))) / 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(736.117))) : _GLF_FUZZED(-1.6))), (injectionSwitch.x) / 1.0)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))) - length(vec4(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))))), (clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(max(9.6, -722.417)) : (injectionSwitch.x))) / 1.0, ((injectionSwitch.x) / 1.0) / 1.0)), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, tan(0.0) + (injectionSwitch.x))) / 1.0)) * 1.0))), 0.0, 0.0, 1.0), min(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, float(mat2x3(_GLF_IDENTITY((injectionSwitch.x) / 1.0, max((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sin(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-55.02)))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (false ? _GLF_FUZZED(-5.4) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 0.0, 0.0, 1.0)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[0], injectionSwitch[1])).x, (injectionSwitch.x) / 1.0)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-4.6)), (_GLF_IDENTITY(float(_GLF_FUZZED(-4.6)), (float(_GLF_FUZZED(-4.6))) / 1.0)) - 0.0), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))) / 1.0, mix(float(_GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))) / 1.0), float(_GLF_FUZZED(5.6)), bool(false))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), min((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.4) : 1.0)), _GLF_IDENTITY(1.0, (1.0) + 0.0))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(-5.2) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.4) : 1.0)), _GLF_IDENTITY(1.0, (1.0) + 0.0))))), 0.0 + ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.4) : 1.0)), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0)))))))))))) - length(vec4(0.0, 0.0, 0.0, 0.0)))))) - sqrt(0.0))) > injectionSwitch.y) || false)))));
      }
    }
   else
    {
    }
  }
}
