#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 bvec2 _f0;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 uint workgroup_size;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 uint next_virtual_gid;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (false), true && (true && (false))), false || (_GLF_IDENTITY(true && (false), false || (true && (false))))))) && true))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))))))))), bool(bvec2(_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))))))))), false))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true)), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (true && _GLF_IDENTITY((false), ! (! ((false))))), (! (true && (false))) && true))), ! _GLF_IDENTITY((! (! ((_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))))), true && (_GLF_IDENTITY((! (! ((_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))))), bool(bool(_GLF_IDENTITY((! (! ((_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))))), ((! (! ((_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true)))))) && true))))))))), true, false))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true))) && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))))))))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), (! (true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))) && true))))))))))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), ! (! (_GLF_IDENTITY(! (true && (false)), _GLF_IDENTITY((! (true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, false)), bool(bvec3(bool(bvec3((false), true, false)), false, true)))))) && true, bool(bvec4((! (true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, false)), bool(bvec3(bool(bvec3((false), true, false)), false, true)))))) && true, false, false, true))))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), ! (! (_GLF_IDENTITY(! (true && (false)), (! (true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, false)), bool(bvec3(bool(bvec3((false), true, false)), false, true)))))) && true))))))))))) && true))))) && true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && _GLF_IDENTITY((false), ((false)) || false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), (_GLF_IDENTITY(! (true && (false)), (_GLF_IDENTITY(! (true && (false)), true && (! (true && (false))))) && true)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), true && (true && (false)))), (! (true && (false))) && true))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))))))))), false || (_GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) && true) && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), (! _GLF_IDENTITY((true && (false)), false || ((true && (false))))) && true)))))))))))) || false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))))))))))))))))))) && true)))), bool(bvec3(! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (true && (false)), _GLF_IDENTITY((! (true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))), false, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))), false, true, true)))))))), ! (! ((! (true && (false)))))) && true)), ((_GLF_IDENTITY(! (true && (false)), _GLF_IDENTITY((! (true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))), false, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY((false), bool(bvec4((false), true, true, true))), false, true, true)))))))), ! (! ((! (true && (false)))))) && true))) && true))))))), bool(bool((! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY((! (true && (false))), ! (! ((! (true && (false)))))) && true)))))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), _GLF_IDENTITY((! (true && (false))) && true, ! (! ((! (true && (false))) && true)))))))), ((_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), _GLF_IDENTITY((! (true && (false))) && true, ! (! ((! (true && (false))) && true))))))))) && true)))))))))) && true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true))), false))), (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true && (false)), ! (! ((true && (false))))), (! (true && (false))) && true))))))), ! (! ((_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true && (false)), ! (! ((true && (false))))), (! (true && (false))) && true)))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), (_GLF_IDENTITY(! (true && (false)), bool(bool(! (true && (false)))))) && true)))))))))))))) && true))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true), (_GLF_IDENTITY(! (true && _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (true && (false))) && true)) || false)))))))))))))) && true)))), _GLF_IDENTITY(bool(bvec3(! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))), ! (! (! (! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))))))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && _GLF_IDENTITY((false), true && ((false))), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true)) && (false)), (! (true && (false))) && true))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true && (false)), bool(bool((true && (false))))), (! (true && (false))) && true)))), false || (_GLF_IDENTITY(! (true && _GLF_IDENTITY((false), true && ((false)))), ! (! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true)))))))))))))))) && true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.8) : injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y)), false)), true && (bool(bvec3(! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true), (! (true && (false))) && true))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && _GLF_IDENTITY((false), true && ((false))), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true)))), false || (_GLF_IDENTITY(! (true && _GLF_IDENTITY((false), true && ((false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false) && (false)), (! (true && (false))) && true)))))))))))))))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true && (false)), ! (! ((true && (false))))), (! _GLF_IDENTITY((true && (false)), (_GLF_IDENTITY((true && (false)), ! (! ((true && (false)))))) || false)) && true)))), bool(bvec2(_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true && (false)), ! (! ((true && (false))))), (! _GLF_IDENTITY((true && (false)), (_GLF_IDENTITY((true && (false)), ! (! ((true && (false)))))) || false)) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true)), (! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true)), (! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))) || false)))), bool(bvec2(! (_GLF_IDENTITY(! (true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true)), (! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))) || false)))), true)))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), (true && (false)) && true), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && (false)), _GLF_IDENTITY(bool(bvec4(! (true && (false)), true, false, false)), bool(bvec2(bool(bvec4(! (true && (false)), true, false, false)), true)))), (! (true && (false))) && true)))))))))))))) && true))))) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true)))))))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), (true && (false)) && true), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true)))))))))))))) && true)))), bool(bvec3(! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true), (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true)) || false), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true), (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true)) || false), true, false, false)))))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))))))))))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), (! (_GLF_IDENTITY(true, false || (true)) && (false))) && true)))))))))))), ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), (! (_GLF_IDENTITY(true, false || (true)) && (false))) && true))))))))))))) && true))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true && (false)), ! (! ((true && (false))))), (! (true && (false))) && true))))))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true && (false)), ! (! ((true && (false))))), (_GLF_IDENTITY(! (true && (false)), bool(bvec4(! (true && (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true))))))))))), true, true))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), _GLF_IDENTITY((! (true && (false))) && true, ((! (true && (false))) && true) && true)))))))), ! (! ((_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (true && (false)), _GLF_IDENTITY((! (true && (false))) && true, ((! (true && (false))) && true) && true))))))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), (true && (false)) && true), ! (_GLF_IDENTITY(! (true && (false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) && (false)), (! (true && (false))) && true)))))))))))))) && true))))) || false), true)))))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-194.378) : injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(bvec2(true)), gl_WorkGroupSize.x);
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), ~ (~ (gl_WorkGroupID))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_struct_replacement_3.workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec4((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) && true), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) && true), true, true)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))))) || false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9710.0897)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) + determinant(mat2(0.0, 1.0, 0.0, 0.0)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + determinant(_GLF_IDENTITY(mat2(0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED((mat2(3940.3048, 52.29, 6603.7423, _GLF_IDENTITY(-58.98, (_GLF_IDENTITY(-58.98, (-58.98) * 1.0)) / sqrt(1.0))) / -9.8)) : mat2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0), 0.0)), 0.0, 0.0))) * 1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0)))), _GLF_IDENTITY(float(vec3((injectionSwitch.y) + determinant(_GLF_IDENTITY(mat2(0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED((mat2(3940.3048, 52.29, 6603.7423, _GLF_IDENTITY(-58.98, (_GLF_IDENTITY(-58.98, (-58.98) * 1.0)) / sqrt(1.0))) / -9.8)) : mat2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))) * 1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0)))), 0.0, abs(exp(0.0)))), (float(vec3((injectionSwitch.y) + determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat2(0.0, 1.0, 0.0, 0.0), (_GLF_IDENTITY(true, (true) || false) ? mat2(0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat2(-347.158, 2156.2931, -430.063, 74.15)))), (false ? _GLF_FUZZED((mat2(3940.3048, 52.29, 6603.7423, _GLF_IDENTITY(-58.98, (_GLF_IDENTITY(-58.98, (-58.98) * 1.0)) / sqrt(1.0))) / -9.8)) : mat2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))) * 1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0)))), 0.0, abs(exp(0.0))))) / _GLF_ONE(1.0, injectionSwitch.y))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + determinant(mat2(0.0, 1.0, 0.0, 0.0)))))), true, true, false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(_GLF_struct_0(mat3(1.0)), workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)), 0u | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))) | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))), 0u))) + 1), ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))), 0u))) + 1)) ^ 0u) % subgroup_size));
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), 0u + ((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))))), (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))))) >> 0u)], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if((_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)), subgroup_local_id % 2, subgroup_local_id % 2), clamp(clamp(_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)), subgroup_local_id % 2, subgroup_local_id % 2), clamp(_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)), subgroup_local_id % 2, subgroup_local_id % 2), clamp(_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)), subgroup_local_id % 2, subgroup_local_id % 2))))) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(true);
   atomicStore(buf[_GLF_struct_replacement_1.next_virtual_gid], uint(2), 4, 64, 4);
  }
 else
  {
   subgroupAll(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, (1.0) / 1.0) * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2941.6272))))))) > injectionSwitch.y))))), false)))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0))), float(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0))), sqrt(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, exp(0.0))), (float(mat2x4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, exp(0.0)))) / 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, sqrt(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0, exp(0.0)))), injectionSwitch.x)))) > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), true && (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), clamp(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))), min(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))), round(length(normalize(vec2(1.0, 1.0)))))), abs(1.0), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), min(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), min(vec2(mat3x2(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0), length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), vec2(mat3x2(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0), length(vec3(0.0, 0.0, 0.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))).x > injectionSwitch.y)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), true && (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), min(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), min(vec2(mat3x2(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), abs(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 0.0, length(0.0)))), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 0.0, length(0.0)))), max(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 0.0, length(0.0)))), _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 0.0, length(0.0)))))), 0.0, 1.0, sqrt(0.0))))), length(vec3(0.0, 0.0, 0.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), vec2(mat3x2(injectionSwitch, round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9942.2567) : 1.0)))))), abs(1.0), length(vec3(0.0, 0.0, 0.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))).x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0), _GLF_IDENTITY(length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mat3(1.0) * (vec3(0.0, 0.0, 0.0)))), min(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), min(vec2(mat3x2(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0), length(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 0.0)), round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1.8))), 1.0, 1.0)), 1.0, 1.0)))))), vec2(mat3x2(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0), length(vec3(0.0, 0.0, 0.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))).x > injectionSwitch.y))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.8)), vec2(_GLF_FUZZED((5517.8741 - -38.85)), (injectionSwitch)[1]), bvec2(false, true))).y))))), false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_1.next_virtual_gid, clamp(_GLF_IDENTITY(_GLF_struct_replacement_1.next_virtual_gid, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_1.next_virtual_gid, 1u), min(uvec2(_GLF_struct_replacement_1.next_virtual_gid, 1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_1.next_virtual_gid, 1u), (uvec2(_GLF_struct_replacement_1.next_virtual_gid, 1u)) | uvec2(0u, 0u)), (uvec2(_GLF_struct_replacement_1.next_virtual_gid, 1u)) >> uvec2(0u, 0u)))), (_GLF_IDENTITY(uvec2(_GLF_struct_replacement_1.next_virtual_gid, 1u), (uvec2(_GLF_struct_replacement_1.next_virtual_gid, 1u)) / uvec2(1u, 1u))) | uvec2(0u, 0u)))), _GLF_struct_replacement_1.next_virtual_gid, _GLF_struct_replacement_1.next_virtual_gid))], uint(2), 4, 64, _GLF_IDENTITY(4, max(4, 4)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), true, false)), (bool(bvec4(false, false, true, false))) && true))))), (false) || false)))
  barrier();
}
