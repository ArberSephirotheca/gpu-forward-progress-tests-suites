#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.7))), 0.0)), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(588.418)), bool(false)))) + 0.0), 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch), (true ? (false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch) : _GLF_FUZZED(vec2(0.8, 2697.9083))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / sqrt(vec2(1.0, 1.0))))) - vec2(0.0, 0.0))) - abs(vec2(0.0, 0.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch), (true ? (false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch) : _GLF_FUZZED(vec2(0.8, 2697.9083))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-745.905, min(-745.905, _GLF_IDENTITY(-745.905, float(vec4(-745.905, 0.0, 0.0, 1.0))))), -1.2)) : injectionSwitch), (true ? (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-745.905, -1.2)), clamp(_GLF_FUZZED(vec2(-745.905, -1.2)), _GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(-745.905, max(_GLF_IDENTITY(-745.905, clamp(-745.905, -745.905, -745.905)), _GLF_IDENTITY(-745.905, mix(float(_GLF_FUZZED(576.582)), float(-745.905), bool(true))))), -1.2)), (_GLF_FUZZED(vec2(-745.905, -1.2))) * mat2(1.0)), _GLF_FUZZED(vec2(-745.905, -1.2)))) : injectionSwitch) : _GLF_FUZZED(vec2(0.8, 2697.9083)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch), (true ? (false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch) : _GLF_FUZZED(vec2(0.8, 2697.9083)))), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch), (true ? (false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch) : _GLF_FUZZED(vec2(0.8, 2697.9083)))) : _GLF_FUZZED(acosh(vec2(2.8, -0.6))))), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch), (true ? (false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch) : _GLF_FUZZED(vec2(0.8, 2697.9083)))), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch), (true ? (false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch) : _GLF_FUZZED(vec2(0.8, 2697.9083)))) : _GLF_FUZZED(acosh(vec2(2.8, -0.6)))))) - vec2(0.0, 0.0))))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-745.905, -1.2)), max(_GLF_FUZZED(vec2(-745.905, -1.2)), _GLF_FUZZED(vec2(-745.905, -1.2)))) : injectionSwitch), (true ? _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-745.905, -1.2)), mat2(1.0) * (_GLF_FUZZED(vec2(-745.905, -1.2)))) : injectionSwitch), vec2(mat4x3((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-745.905, -1.2)), mat2(1.0) * (_GLF_FUZZED(vec2(-745.905, -1.2)))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(vec2(0.8, _GLF_IDENTITY(2697.9083, max(2697.9083, _GLF_IDENTITY(2697.9083, 1.0 * (2697.9083))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch), (true ? (false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch) : _GLF_FUZZED(vec2(0.8, 2697.9083))))), (false ? _GLF_FUZZED(vec2(3.9, -3183.4768)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch), (true ? (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-745.905, -1.2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(sinh(vec2(0.7, 1577.9852))) : _GLF_IDENTITY(vec2(-745.905, -1.2), mat2(1.0) * (vec2(-745.905, -1.2)))))) : injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-745.905, -1.2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(sinh(vec2(0.7, 1577.9852))) : _GLF_IDENTITY(vec2(-745.905, -1.2), mat2(1.0) * (vec2(-745.905, -1.2)))))) : injectionSwitch) * mat2(1.0))) : _GLF_FUZZED(vec2(0.8, 2697.9083))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch), (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) ? (false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch) : _GLF_FUZZED(vec2(0.8, 2697.9083))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), log(1.0), tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), (true ? (false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch) : _GLF_FUZZED(vec2(0.8, 2697.9083)))))) - vec2(0.0, 0.0)))))))).y, mix(float(_GLF_FUZZED(-9118.0345)), float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.1), _GLF_FUZZED(7.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true)))), (true ? (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-745.905, -1.2)), max(_GLF_FUZZED(vec2(-745.905, -1.2)), _GLF_FUZZED(vec2(-745.905, -1.2)))) : injectionSwitch) : _GLF_FUZZED(vec2(0.8, 2697.9083))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - abs(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0)))), _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-745.905, clamp(-745.905, _GLF_IDENTITY(-745.905, mix(float(_GLF_FUZZED(811.224)), float(_GLF_IDENTITY(-745.905, float(mat4x3(-745.905, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)))), bool(true))), -745.905)), -1.2)) : injectionSwitch), (true ? (false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch) : _GLF_FUZZED(vec2(0.8, 2697.9083))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch), (true ? (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-745.905, -1.2)), vec2(mat2x3(_GLF_FUZZED(vec2(-745.905, -1.2)), 0.0, 1.0, cos(0.0), 0.0))), clamp(_GLF_FUZZED(vec2(-745.905, -1.2)), _GLF_IDENTITY(_GLF_FUZZED(vec2(-745.905, -1.2)), (_GLF_FUZZED(_GLF_IDENTITY(vec2(-745.905, -1.2), sqrt(vec2(1.0, 1.0)) * (vec2(-745.905, -1.2))))) * mat2(1.0)), _GLF_FUZZED(vec2(-745.905, -1.2)))) : injectionSwitch) : _GLF_FUZZED(vec2(0.8, 2697.9083)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch), (true ? (false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch) : _GLF_FUZZED(vec2(0.8, 2697.9083)))), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch), (true ? (false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch) : _GLF_FUZZED(vec2(0.8, 2697.9083)))) : _GLF_FUZZED(acosh(vec2(2.8, -0.6)))))))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-745.905, -1.2)), max(_GLF_FUZZED(vec2(-745.905, -1.2)), _GLF_FUZZED(vec2(-745.905, -1.2)))) : injectionSwitch), (true ? _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-745.905, -1.2)), mat2(1.0) * (_GLF_FUZZED(vec2(-745.905, -1.2)))) : injectionSwitch), vec2(mat4x3((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-745.905, -1.2)), mat2(1.0) * (_GLF_FUZZED(vec2(-745.905, -1.2)))) : injectionSwitch), 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(vec2(0.8, 2697.9083)))), min(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-745.905, -1.2)), max(_GLF_FUZZED(vec2(-745.905, -1.2)), _GLF_FUZZED(vec2(-745.905, -1.2)))) : injectionSwitch), (true ? _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-745.905, -1.2)), mat2(1.0) * (_GLF_FUZZED(vec2(-745.905, -1.2)))) : injectionSwitch), vec2(mat4x3((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-745.905, -1.2)), mat2(1.0) * (_GLF_FUZZED(vec2(-745.905, -1.2)))) : injectionSwitch), 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(vec2(0.8, 2697.9083)))), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-745.905, -1.2)), max(_GLF_FUZZED(vec2(-745.905, -1.2)), _GLF_FUZZED(vec2(-745.905, -1.2)))) : injectionSwitch), (true ? _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-745.905, -1.2)), mat2(1.0) * (_GLF_FUZZED(vec2(-745.905, -1.2)))) : injectionSwitch), vec2(mat4x3((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-745.905, -1.2)), mat2(1.0) * (_GLF_FUZZED(vec2(-745.905, -1.2)))) : injectionSwitch), 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(vec2(0.8, 2697.9083)))), (_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-745.905, -1.2)), max(_GLF_FUZZED(vec2(-745.905, -1.2)), _GLF_FUZZED(vec2(-745.905, -1.2)))) : injectionSwitch), (true ? _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-745.905, -1.2)), mat2(1.0) * (_GLF_FUZZED(vec2(-745.905, -1.2)))) : injectionSwitch), vec2(mat4x3((false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-745.905, -1.2)), mat2(1.0) * (_GLF_FUZZED(vec2(-745.905, -1.2)))) : injectionSwitch), 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(vec2(0.8, 2697.9083))))) + vec2(0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch), (true ? (false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch) : _GLF_FUZZED(vec2(0.8, 2697.9083))))), (false ? _GLF_FUZZED(vec2(3.9, -3183.4768)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch), (true ? (false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch) : _GLF_FUZZED(vec2(0.8, 2697.9083))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch), (true ? (false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch) : _GLF_FUZZED(vec2(0.8, 2697.9083)))), mix(vec2((_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch), (true ? (false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch) : _GLF_FUZZED(vec2(0.8, 2697.9083)))))[0], _GLF_FUZZED(7.5)), vec2(_GLF_FUZZED((-6.4 / -6230.1976)), (_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch), (true ? (false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : injectionSwitch) : _GLF_FUZZED(vec2(0.8, 2697.9083)))))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-745.905, -1.2)) : _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), log(1.0), tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), (true ? (false ? _GLF_FUZZED(vec2(-745.905, _GLF_IDENTITY(-1.2, (-1.2) * 1.0))) : injectionSwitch) : _GLF_FUZZED(vec2(0.8, 2697.9083)))))) - vec2(0.0, 0.0)))))))).y), bool(_GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), (injectionSwitch.x < injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))) || (! (_GLF_DEAD(false))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0)), 1.0, sqrt(1.0), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), (mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, log(1.0), 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0)), 1.0, sqrt(1.0), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) + vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))) || false))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec2(gl_WorkGroupID.x, 1u)), uint(uint(uint(uvec2(gl_WorkGroupID.x, 1u))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.1)), bool(false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), true && (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bvec4(bool(bvec4(false, false, false, true)), true, false, true))))))))
    return;
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (injectionSwitch.x), max(1.0 * (injectionSwitch.x), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0), injectionSwitch.x)))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-25.33)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, 0.0)))), bool(_GLF_IDENTITY(true, ! (! (true))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / sqrt(1.0)) > injectionSwitch.y), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && ((injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(9.6)), max(float(_GLF_FUZZED(9.6)), float(_GLF_FUZZED(9.6)))), float(injectionSwitch.y), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_FUZZED(float(true))), float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(_GLF_FUZZED(_GLF_IDENTITY(-94.11, clamp(-94.11, -94.11, -94.11)))), bool(false))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(99.66)), bvec2(true, false))), clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)) / vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), min(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))))).y)), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, exp(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))))), 0.0))), float(_GLF_FUZZED(-59.05)), bool(false))), 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), cos(0.0), sin(0.0)))).y, injectionSwitch.y)), (_GLF_IDENTITY(false ? _GLF_FUZZED(-93.60) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(asinh(vec2(9668.0057, 80.11))))).y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-94.11)), bool(false))), injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch.yy) : injectionSwitch)))).y)), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(mat2(-6.4, 78.31, 5.9, -8987.3723)) : mat2(1.0))) * (injectionSwitch)), 1.0, exp(determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.8) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(cos(0.0), float(mat3x2(cos(0.0), 1.0, 0.0, sin(determinant(mat2(0.0, 0.0, 1.0, 0.0))), 1.0, 1.0))), sin(0.0)))).y, injectionSwitch.y)), (false ? _GLF_FUZZED(-93.60) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-94.11)), bool(false))), injectionSwitch.y), mix(float(_GLF_FUZZED(6654.0322)), float(min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-94.11)), bool(false))), injectionSwitch.y)), bool(true)))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))) : injectionSwitch)).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), (false ? _GLF_FUZZED(mat2(-6.4, 78.31, 5.9, -8987.3723)) : mat2(1.0))) * (injectionSwitch)), 1.0, exp(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(cos(0.0), _GLF_IDENTITY(float(mat3x2(cos(0.0), 1.0, 0.0, sin(determinant(mat2(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6552.3523)), bool(false))), 1.0)), float(mat2(float(mat3x2(cos(0.0), 1.0, 0.0, sin(determinant(mat2(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6552.3523)), bool(false))), 1.0)), 0.0, 1.0, 0.0)))), sin(0.0))), max(_GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), (false ? _GLF_FUZZED(mat2(-6.4, 78.31, 5.9, -8987.3723)) : mat2(1.0))) * (injectionSwitch)), 1.0, exp(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(cos(0.0), float(mat3x2(cos(0.0), 1.0, 0.0, sin(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), (true ? determinant(mat2(0.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(-1820.6432)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6552.3523)), bool(false))), 1.0))), sin(0.0))), vec2(1.0, 1.0) * (vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), (false ? _GLF_FUZZED(mat2(-6.4, 78.31, 5.9, -8987.3723)) : mat2(1.0))) * (injectionSwitch)), 1.0, exp(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(56529))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(cos(0.0), float(mat3x2(cos(0.0), 1.0, 0.0, sin(determinant(mat2(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6552.3523)), bool(false))), 1.0))), sin(0.0))))), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), (false ? _GLF_FUZZED(mat2(-6.4, 78.31, 5.9, -8987.3723)) : mat2(1.0))) * (injectionSwitch)), 1.0, exp(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(cos(0.0), float(mat3x2(cos(0.0), 1.0, 0.0, sin(determinant(mat2(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6552.3523)), bool(false))), 1.0))), sin(0.0)))))).y, injectionSwitch.y))) + 0.0)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), true), false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (false) || false), true), false))))) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), float(vec3(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), 0.0, 1.0)))), 1.0, 1.0, tan(0.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (true ? _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))).x, injectionSwitch.x)) > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- 0.6))), float(injectionSwitch.x), bool(true))))), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) | 0u, ((workgroup_base + subgroup_base) | 0u) * 1u)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size), uint(uvec4(workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size), 0u, 1u, 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) && true) || false))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))) || false)) && true))), true, false, true))) || (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))))[0]), float(_GLF_FUZZED(1.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4578.0437), _GLF_FUZZED(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(roundEven(vec2(-1.6, -79.97))))).x > injectionSwitch.y)), false))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if((subgroup_local_id % 2) == _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY(31627, min(_GLF_IDENTITY(31627, clamp(31627, _GLF_IDENTITY(31627, (31627) >> 0), _GLF_IDENTITY(31627, (true ? 31627 : _GLF_FUZZED(91175))))), 31627))) : _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(0, 1)), ~ (~ (_GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(0, 1))) ^ 0)))), int(ivec3(_GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(0, 1))) + _GLF_IDENTITY(0, (0) << 0)), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), 0))), int(ivec3(int(ivec2(0, 1)), 1, _GLF_IDENTITY(0, clamp(0, 0, 0)))))), max(~ (_GLF_IDENTITY(int(ivec2(0, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, ~ (~ (1))))))), int(_GLF_IDENTITY(ivec3(int(ivec2(0, 1)), 1, 0), ivec3(0, 0, 0) | (_GLF_IDENTITY(ivec3(int(ivec2(0, 1)), 1, 0), min(_GLF_IDENTITY(ivec3(int(ivec2(0, 1)), 1, 0), ivec3(0, 0, 0) | (ivec3(int(ivec2(0, 1)), 1, 0))), ivec3(int(ivec2(0, 1)), 1, 0)))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(int(ivec2(0, 1)), int(ivec3(int(ivec2(0, _GLF_IDENTITY(1, min(1, 1)))), 1, 0)))), (~ (_GLF_IDENTITY(int(ivec2(0, 1)), int(_GLF_IDENTITY(ivec3(int(ivec2(0, 1)), 1, 0), ~ (~ (_GLF_IDENTITY(ivec3(int(ivec2(0, 1)), 1, 0), (ivec3(int(ivec2(0, 1)), 1, 0)) | (ivec3(int(ivec2(0, 1)), 1, 0)))))))))) << 0)))))), int(ivec2(0, _GLF_IDENTITY((_GLF_IDENTITY(99887 & 0, (99887 & 0) << 0)), ((_GLF_IDENTITY(99887 & 0, (99887 & 0) << 0))) >> 0)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) && true)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) && true)))))))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), ((uint(2))) + 0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, _GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), ((4)) | 0))), 4)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), ((4)) | 0))), 4)), min(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), ((4)) | 0))), 4)), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), ((4)) | 0))), 4)))))), 0 | (int(int(_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), ((4)) | 0))), 4)), min(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), ((4)) | 0))), 4)), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), ((4)) | 0))), 4)))))))))), max(min(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(4, 1))), 1 * (4)), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), ((4)) | _GLF_IDENTITY(0, ~ (~ (0)))))), 4))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), ~ (~ (_GLF_IDENTITY(1 * (4), (false ? _GLF_FUZZED(38030) : 1 * (4))))))), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), ((4)) | 0))), 4))))))))));
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))), false, false, false))), false, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, 0))))))), min(uint(2), uint(2))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, int(ivec3(_GLF_IDENTITY(2, ~ (~ (2))), 0, 0))))))), min(uint(2), uint(2)))) | (0u & 116667u)), 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, determinant(mat2(0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, determinant(mat2(0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-6586.7207 / -979.538))), bool(false))), 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) * 1.0)))) > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false || (false), bool(bvec2(false || (false), false)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((+ 1.7) * 2.3))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
}
