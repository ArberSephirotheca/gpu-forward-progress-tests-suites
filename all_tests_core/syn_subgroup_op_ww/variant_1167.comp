#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 bool _f0;
 mat2 _f1;
 mat3 _f2;
 ivec3 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 uint workgroup_size;
 uvec2 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, true))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, tan(0.0), determinant(mat4(0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0))) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true)), false)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((4.4 * 69.65))), bool(false))) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), false, true), false))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true)))))))))), _GLF_IDENTITY(bool(bvec3(! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true)))))))))), false, false)), (bool(bvec3(! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true)))))))))), false, false))) || false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, tan(0.0), determinant(mat4(0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7886.1196, 40.10)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true)), false)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((4.4 * 69.65))), bool(false))) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), false, true), false))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true)), false)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((4.4 * 69.65))), bool(false))) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), false, true), false))))), true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bool(true))) && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(float(mat4x3(float(injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec2(float(mat4x3(float(injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 1.0)))))), bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true)))))))))), _GLF_IDENTITY(bool(bvec3(! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) || false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true)))))))))), false, false)), (bool(bvec3(! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && ((injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true)))))))))), false, false))) || false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec4(bool(bvec4(false, true, true, false)), false, true, false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec4(bool(bvec4(false, true, true, false)), false, true, false)))))), ! (! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec4(bool(bvec4(false, true, true, false)), false, true, false))))))))))))) ? _GLF_FUZZED(-7.9) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true) && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (bool(injectionSwitch.x > injectionSwitch.y)), true && (! (bool(injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) || false) || (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) || false) || (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, true)))))), (((injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (true) || _GLF_IDENTITY(false, bool(bool(false))))) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))))))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec3(-1327.3132, 218.199, -498.401).t)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), (tan(0.0)) - 0.0), determinant(mat4(0.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0))) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec3(-1327.3132, 218.199, -498.401).t)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), (tan(0.0)) - 0.0), determinant(mat4(0.0, 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec3(-1327.3132, _GLF_IDENTITY(218.199, 0.0 + (218.199)), -498.401).t)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), 1.0 * (_GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0)))) + sqrt(0.0)))), (tan(0.0)) - 0.0), determinant(mat4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0))), 0.0, 0.0)), 1.0, abs(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0))) > injectionSwitch.y) || false)), true && ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(442.878)), bool(false)))), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0)), (float(vec4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0))) / 1.0))), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true))))))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x < injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true)), false)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.9))))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((4.4 * _GLF_IDENTITY(69.65, float(float(69.65)))))), bool(false))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), injectionSwitch)).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), false, true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), false, true), false))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true)))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(intBitsToFloat(-50755)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, 1.0, 1.0, 0.0, 0.0, 1.0)))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true)))))))))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, log(1.0) + (injectionSwitch.y)), true), true)))))))))))))), true && (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), clamp(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), (vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))) * mat2(1.0))))).x > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))), bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true)))))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), true && ((injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, sin(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0))) > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), true && ((injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, sin(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0))) > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true))))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), true && ((injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, sin(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0))) > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true))))))))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), true && ((injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, sin(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0))) > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true))))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), true && ((injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, sin(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0))) > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true))))))))))))))), (bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), true && ((injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, sin(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0))) > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true))))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), true && ((injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, sin(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0))) > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true)))))))))))))))) && true)))))))))))), false, false)), (bool(bvec3(! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1097.2112))) > injectionSwitch.y, true), true))), false))))))))))))), false, false))) || false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec4(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (false || (true)) && true)), true, false)), false, true, false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec4(bool(bvec4(false, true, true, false)), false, true, false)))))), ! (! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec3(bool(bvec4(false, true, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, true, false))))))))))))) ? _GLF_FUZZED(-7.9) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 1.0, 1.0), (vec4(injectionSwitch.x, 0.0, 1.0, 1.0)) + vec4(0.0, 0.0, 0.0, 0.0))))) / 1.0) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 1.0, 1.0), (vec4(injectionSwitch.x, 0.0, 1.0, 1.0)) + vec4(0.0, 0.0, 0.0, 0.0))))) / 1.0) > injectionSwitch.y)))), _GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec3((true), false, false))) && true) && _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec2(false, true)))) || (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)))))), _GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false || ((((injectionSwitch.x > injectionSwitch.y)))), false || (false || (_GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), bool(bvec4((((injectionSwitch.x > injectionSwitch.y))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false) || false), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(ldexp(-76.87, -2142))))), float(_GLF_FUZZED(2485.5793)), bool(false))), _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), bool(bvec2((true), true))))) && true)))))))))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))) || false)))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) && true)))))))
    barrier();
   return;
  }
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(_GLF_struct_0(true, mat2(1.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 1.0))))), _GLF_IDENTITY(mat3(mat4x3(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(718.835, 1.0 * (718.835)))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(148.085)), bool(false))), float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(148.085)), bool(false))), 0.0, 0.0)))), bool(true)))))), transpose(transpose(mat3(mat4x3(mat3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, 1.0, abs(1.0), 1.0), (false ? _GLF_FUZZED(mat4(56.75, 3.8, 2.9, 24.31, -59.28, -750.623, 5.8, -597.673, 9.4, _GLF_IDENTITY(-725.962, max(_GLF_IDENTITY(-725.962, (-725.962) * 1.0), -725.962)), -4483.8670, 47.36, 440.270, 5.8, -5552.2587, -21.24)) : mat4(1.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 0.0, tan(0.0), 1.0, 1.0, abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 1.0)))))))))))), ivec3(1), mat3(1.0)), gl_WorkGroupSize.x, uvec2(1u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) || false) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_1.workgroup_size, clamp(_GLF_struct_replacement_1.workgroup_size, _GLF_struct_replacement_1.workgroup_size, _GLF_struct_replacement_1.workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))))) || false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(7.6), (_GLF_FUZZED(7.6)) / 1.0), _GLF_FUZZED(74.04)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))).x, mix(float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(74.04)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x), float(_GLF_FUZZED(40.05)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(min(-825.052, -7.3))))) * 1.0) > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(length(vec4(-1.3, -817.901, 3.0, 4534.5093))))) > injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))), false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bool(_GLF_IDENTITY(! (bool(false)), true && (! (bool(false))))))))), ! (! (_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bool(_GLF_IDENTITY(! (bool(false)), true && (! (bool(false)))))))))))), ! (! (bool(false)))), (bool(false)) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), min(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- 15.16))), float(injectionSwitch.y), bool(true))), mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- 15.16))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-9.2)), bool(false)))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- 15.16))), float(injectionSwitch.y), bool(true)))), true))))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), false, false)))), true, true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_DEAD(false), false))), true, true))))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(false), false)), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(false), false)), false)), false))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_DEAD(false), false))), true, true)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), mix(float(_GLF_FUZZED(-322.660)), float(float(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.1) : injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(1288.3715), (true ? _GLF_FUZZED(1288.3715) : _GLF_FUZZED(round(-2.9))))), bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) | (1)) : _GLF_FUZZED(23675)))))) % subgroup_size)))), 0u ^ ((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))))) | _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % subgroup_size))) ^ 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) | (1)) : _GLF_FUZZED(23675)))))) % subgroup_size)))), 0u ^ ((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))))) | _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % subgroup_size))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) | (1)) : _GLF_FUZZED(23675)))))) % subgroup_size)))), 0u ^ ((_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))))) | _GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), ((((subgroup_local_id + 1) % subgroup_size))) ^ 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), ~ (~ (((subgroup_local_id + 1) % subgroup_size))))) << 0u, (true ? (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size))))) << 0u : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u & 198986u, (0u & 198986u) >> 0u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size), ~ (~ (((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size)))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % subgroup_size))))) << 0u)), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(0u & 198986u, (0u & 198986u) >> 0u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size), ~ (~ (((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size)))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % subgroup_size))))) << 0u)), 0u)), (uint(uvec2((_GLF_IDENTITY(0u & 198986u, (0u & 198986u) >> 0u)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size), ~ (~ (((_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1) % subgroup_size)))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % subgroup_size))))) << 0u)), 0u))) * (1u & 1u))), uint(uint((0u & 198986u) ^ (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))), (subgroup_local_id + 1) % subgroup_size))), ~ (_GLF_IDENTITY(~ (((subgroup_local_id + 1) % subgroup_size)), max(_GLF_IDENTITY(~ (((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) >> 0u)) % subgroup_size)), max(~ ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) % subgroup_size)), ~ (((subgroup_local_id + 1) % subgroup_size)))), ~ (((subgroup_local_id + 1) % subgroup_size))))))) << 0u))))))) ^ 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || _GLF_IDENTITY((false), true && ((false))))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
     barrier();
    }
   switch(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_SWITCH((_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)), (int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0))) >> _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, 0 | (0)), 0, 0))) | 0)), (_GLF_SWITCH((int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))) | 0))) | (_GLF_SWITCH((int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) | 0)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-80532), clamp(_GLF_FUZZED(-80532), _GLF_IDENTITY(_GLF_FUZZED(-80532), (_GLF_FUZZED(-80532)) | (_GLF_FUZZED(-80532))), _GLF_FUZZED(-80532))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_SWITCH(_GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))))), (false ? _GLF_FUZZED(-88465) : (int(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-7.0 - 8.1))), vec2(_GLF_FUZZED(-8754.3738), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x)) | (0)))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_SWITCH((_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-9389.0058)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-9389.0058)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-9389.0058)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / 1)) - 0) | 0)), (_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0))) | (_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0))))), int(ivec4(~ (_GLF_IDENTITY(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0)), (_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0))) | (_GLF_IDENTITY(_GLF_SWITCH((int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) | 0)), 1 * (_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0))))))), 0, 0, 1))))), (_GLF_IDENTITY(_GLF_SWITCH((_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), injectionSwitch.x)) : _GLF_FUZZED(findMSB(92845)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(findMSB(92845)))), max(_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), (true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(findMSB(92845)))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), log(vec2(1.0, 1.0)) + (vec2(1.0, 1.0))))) * (injectionSwitch)).x)), (true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(findMSB(92845), min(findMSB(92845), _GLF_IDENTITY(findMSB(92845), (findMSB(92845)) >> 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(findMSB(92845))), min(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(findMSB(92845))), min((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(findMSB(92845))), (_GLF_IDENTITY(true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(findMSB(92845)), clamp(true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(findMSB(92845)), true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(findMSB(92845)), true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(findMSB(92845))))))), (true ? int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) : _GLF_FUZZED(findMSB(92845)))))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(findMSB(92845))))) / 1))) | 0)), min(_GLF_IDENTITY(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0)), max(_GLF_SWITCH((_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(4723.2037)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(4229.3748, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(848.983) : _GLF_IDENTITY(4229.3748, float(mat4x2(4229.3748, length(vec2(0.0, 0.0)), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0))))))))) - sqrt(0.0)))) | _GLF_IDENTITY(0, (0) | (0)), (int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(4723.2037)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(4229.3748, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(848.983) : _GLF_IDENTITY(_GLF_IDENTITY(4229.3748, _GLF_IDENTITY(float(mat4x2(4229.3748, 0.0, 1.0, 1.0, 1.0, cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(1.0))))), max(float(mat4x2(4229.3748, 0.0, 1.0, 1.0, 1.0, cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(1.0))))), float(mat4x2(4229.3748, 0.0, 1.0, 1.0, 1.0, cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(1.0)))))))), float(mat4x2(4229.3748, length(vec2(0.0, 0.0)), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0))))))))) - sqrt(0.0)))) | _GLF_IDENTITY(0, (0) | (0))) * 1))), _GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0)))), _GLF_SWITCH(_GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), clamp(_GLF_IDENTITY(0, int(int(0))), _GLF_IDENTITY(0, int(int(0))), _GLF_IDENTITY(0, int(int(0)))))), int(ivec4((int(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY(0, int(int(0)))), 1, _GLF_IDENTITY(1, (1) << 0), 0))))))) | _GLF_IDENTITY((_GLF_SWITCH(_GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) : _GLF_FUZZED(-16.15))), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-9.5)), bool(false))))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), (mat2x3(0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)) * mat2(1.0)))), injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(mat2x4(mat3x4(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), mat2x4(mat2x4(mat2x4(mat3x4(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))))))), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(-3.0)))) | 0), ((int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) : _GLF_FUZZED(-16.15))), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-9.5)), bool(false))))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), (mat2x3(0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)) * mat2(1.0)))), injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(mat2x4(mat3x4(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), mat2x4(mat2x4(mat2x4(mat3x4(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))))))), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(-3.0)))) | 0)) ^ 0))), max(_GLF_IDENTITY((_GLF_SWITCH((int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(5721.6439) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-16.15))), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), (mat2x3(0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)) * mat2(1.0)))), clamp(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), (mat2x3(0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)) * mat2(1.0)))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), (mat2x3(0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)) * mat2(1.0)))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), (mat2x3(0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)) * mat2(1.0)))))), injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(-3.0)))) | 0))), ((_GLF_SWITCH((int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.7)), float(0.0), bool(true)))), float(_GLF_FUZZED(833.390)), bool(false))), 0.0)), injectionSwitch.x) : _GLF_FUZZED(-16.15))), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), (mat2x3(0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)) * mat2(1.0)))), injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(-3.0)))) | 0)))) | 0), _GLF_IDENTITY((_GLF_SWITCH((int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0))), injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-16.15))), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), (mat2x3(0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)) * mat2(1.0)))), injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(-3.0)))) | 0))), max((_GLF_SWITCH((int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-16.15))), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), (mat2x3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2x4(6006.6938, 446.032, -2539.6650, -2.4, -1.5, -552.904, 6.0, 6.4)) : mat2x4(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))), abs(1.0) * (float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2x4(6006.6938, 446.032, -2539.6650, -2.4, -1.5, -552.904, 6.0, 6.4)) : mat2x4(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))), 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-31.17)))), 0.0, 1.0)) * mat2(1.0)))), injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(-3.0)))) | 0))), (_GLF_SWITCH((int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-16.15))), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 0.0, 1.0), (mat2x3(0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)) * mat2(1.0)))), injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(-3.0)))) | 0)))))))))))
    {
     case 46:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     bvec4(false, true, _GLF_IDENTITY(true, bool(bool(true))), true);
     case 12:
     ivec3 _GLF_SWITCH_0_0v[90], _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true))))), ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true))))))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
            }
           return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false, false)))), false)))))))), ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(9831.2735, 0.0).x), _GLF_FUZZED(float((-54137 % 10789)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) * mat2(1.0)).x > injectionSwitch.y))))
              return;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))), false, false), false))))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     case 0:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       return;
      }
     case 68:
     case 58:
     if(_GLF_DEAD(false))
      barrier();
     case 50:
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 43:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)), ! (! (false))) || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true), bvec2(bvec3(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true), bvec2(bvec3(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true), bvec2(bvec3(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)), false, true))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true), bvec2(bvec3(bvec2(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(vec2(-892.433, 8858.8587), max(vec2(-892.433, 8858.8587), vec2(-892.433, 8858.8587)))[1]))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) && true))))))))))), true), false))), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true), bvec2(bvec3(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-46.65, 2101.6721)) : injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y) && true))))), true), false))), false))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true), bvec2(bvec3(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true), false))), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true), false), bvec3(bvec4(bvec3(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true), false), false))))), false)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ((injectionSwitch.x > injectionSwitch.y) && true) || false)))))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true), bvec2(bvec3(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true), false))), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-895.707)), vec2(_GLF_FUZZED(6576.9343), (injectionSwitch)[1]), bvec2(false, true))))).y, (injectionSwitch.x > injectionSwitch.y) && true))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true), false), bvec3(bvec4(bvec3(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true), false), false))))), false)))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y) && true))))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), false)), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), false))) && true))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true), false, false))), false))), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), (injectionSwitch.x > injectionSwitch.y) && true))))), true), bvec2(bvec3(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true), false))), false)))))))))) || false)) && _GLF_IDENTITY(true, false || (true)))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))) && true) || false)))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (_GLF_IDENTITY(bool(bvec2(true, false)), bool(bvec2(bool(bvec2(true, false)), true))))))), ! (_GLF_IDENTITY(! (true), (! (true)) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0)).x < injectionSwitch.y))), true && (bool(bool((injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), true && _GLF_IDENTITY((bool(bool((injectionSwitch.x < injectionSwitch.y)))), ((bool(bool((injectionSwitch.x < injectionSwitch.y))))) || false))))))), false || (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(false, true && (false)) || (injectionSwitch.x < injectionSwitch.y))))), true && (bool(bool((injectionSwitch.x < injectionSwitch.y)))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), true && (! ((_GLF_DEAD(false))))))) && true), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(80.13) : injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), false))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true, true))))))), _GLF_IDENTITY(bool(bvec3(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1]))) - vec2(0.0, 0.0)).y)), true, false)), ! (! (bool(bvec3(bool((injectionSwitch.x < injectionSwitch.y)), true, false)))))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))) || false))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))) < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)) && (bool(bool((injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), bool(bvec3(bool((injectionSwitch.x < injectionSwitch.y)), false, false)))))), _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((bool(bool((injectionSwitch.x < injectionSwitch.y)))), ((bool(bool((injectionSwitch.x < injectionSwitch.y))))) && true))) && true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), true, true))), false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), true && (bool(bool((injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), true && (bool(bool((injectionSwitch.x < injectionSwitch.y)))))))))), false || (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), true && (bool(bool((injectionSwitch.x < injectionSwitch.y)))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)), true))))))))))), false))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), true && (bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(bool((injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec3(bool((injectionSwitch.x < injectionSwitch.y)), true, false)))))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)) && (bool(bool((injectionSwitch.x < injectionSwitch.y)))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), true, true))), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), true && (bool(bool((injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), bool(bvec4(bool(bool((injectionSwitch.x < injectionSwitch.y))), false, true, true))), true && (bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))), false || (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), true && (bool(bool((injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true)))))), false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true)))))), false))), bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true)))))), false))))))))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))), true && (bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(bool((injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec3(bool((injectionSwitch.x < injectionSwitch.y)), true, false)))))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)) && (bool(bool((injectionSwitch.x < injectionSwitch.y)))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), true, true))), false)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), true && (bool(bool((injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), true && (bool(bool((injectionSwitch.x < injectionSwitch.y)))))))))), false || (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), true && (bool(bool((injectionSwitch.x < injectionSwitch.y)))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), false))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), bool(bvec2(bool(bool((injectionSwitch.x < injectionSwitch.y))), false))), true && (bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)), bool(bool(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))), true, false)), ! (! (bool(bvec3(bool((injectionSwitch.x < injectionSwitch.y)), true, false)))))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)) && (bool(bool((injectionSwitch.x < injectionSwitch.y))))))), bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)) && (bool(bool((injectionSwitch.x < injectionSwitch.y))))))), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false))), false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), true, true))), false)), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), bool(bvec2(bool(bool((injectionSwitch.x < injectionSwitch.y))), false))), true && (bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)), bool(bool(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))), true, false)), ! (! (bool(bvec3(bool((injectionSwitch.x < injectionSwitch.y)), true, false)))))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)) && (bool(bool((injectionSwitch.x < injectionSwitch.y))))))), bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)) && (bool(bool((injectionSwitch.x < injectionSwitch.y))))))), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false))), false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), true, true))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), bool(bvec2(bool(bool((injectionSwitch.x < injectionSwitch.y))), false))), true && (bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)), bool(bool(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))), true, false)), ! (! (bool(bvec3(bool((injectionSwitch.x < injectionSwitch.y)), true, false)))))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)) && (bool(bool((injectionSwitch.x < injectionSwitch.y))))))), bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)) && (bool(bool((injectionSwitch.x < injectionSwitch.y))))))), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false))), false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), true, true))), false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), bool(bvec2(bool(bool((injectionSwitch.x < injectionSwitch.y))), false))), true && (bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)), bool(bool(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))), true, false)), ! (! (bool(bvec3(bool((injectionSwitch.x < injectionSwitch.y)), true, false)))))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)) && (bool(bool((injectionSwitch.x < injectionSwitch.y))))))), bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)) && (bool(bool((injectionSwitch.x < injectionSwitch.y))))))), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false))), false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), true, true))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), bool(bvec2(bool(bool((injectionSwitch.x < injectionSwitch.y))), false))), true && (bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)), bool(bool(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))), true, false)), ! (! (bool(bvec3(bool((injectionSwitch.x < injectionSwitch.y)), true, false)))))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)) && (bool(bool((injectionSwitch.x < injectionSwitch.y))))))), bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)) && (bool(bool((injectionSwitch.x < injectionSwitch.y))))))), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false))), false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), true, true))), false))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), bool(bvec2(bool(bool((injectionSwitch.x < injectionSwitch.y))), false))), true && (bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)), bool(bool(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))), true, false)), ! (! (bool(bvec3(bool((injectionSwitch.x < injectionSwitch.y)), true, false)))))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)) && (bool(bool((injectionSwitch.x < injectionSwitch.y))))))), bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)) && (bool(bool((injectionSwitch.x < injectionSwitch.y))))))), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false))), false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), true, true))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), bool(bvec2(bool(bool((injectionSwitch.x < injectionSwitch.y))), false))), true && (bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)), bool(bool(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))), true, false)), ! (! (bool(bvec3(bool((injectionSwitch.x < injectionSwitch.y)), true, false)))))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)) && (bool(bool((injectionSwitch.x < injectionSwitch.y))))))), bool(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)) && (bool(bool((injectionSwitch.x < injectionSwitch.y))))))), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false))), false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), true, true))), false))))))), false, true))))))))))))) || false))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1641.4527), _GLF_FUZZED(950.276)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y))))))))), (bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))) || false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (! (bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), true))))), false || (_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (! (bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), true))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(480.639, (480.639) * 1.0))), bvec2(true, false))), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) && true))), (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
                  return;
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
                  barrier();
                }
               barrier();
              }
             return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))))))))), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-372.686), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - length(0.0))), vec2((injectionSwitch)[0], _GLF_FUZZED(-437.445)), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-372.686), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-437.445)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).x, mix(float(_GLF_FUZZED((-23.47 + 3.3))), float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-372.686), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-437.445)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).x), bool(true)))) - 0.0) > injectionSwitch.y))))), false)))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), false))))))))) || (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, false, false)), true), bvec2(bvec2(bvec2(bool(bvec3(false, false, false)), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, false, false)), true), bvec2(bvec2(bvec2(bool(bvec3(false, false, false)), true)))))))))) || (false))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
          }
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, sin(0.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(log(vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (mat4(injectionSwitch.x, sin(0.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(log(vec3(1.0, 1.0, 1.0))), 0.0)) + mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, sin(0.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(log(vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (mat4(injectionSwitch.x, sin(0.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(log(vec3(1.0, 1.0, 1.0))), 0.0)) + mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) > injectionSwitch.y))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, sin(0.0), _GLF_IDENTITY(1.0, (1.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(log(vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0))), 0.0), (mat4(injectionSwitch.x, sin(0.0), 1.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(log(vec3(1.0, 1.0, 1.0))), 0.0)) + mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-3.1)))), _GLF_ZERO(0.0, injectionSwitch.x))))) > injectionSwitch.y))), false, true, false))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 85:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))) + 0.0), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-132.828)), float(0.0), bool(true))), length(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))), 0.0, tan(0.0), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0))) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 1.0, 0.0, length(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), mix(vec2((_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))))[0], _GLF_FUZZED(-41.17)), vec2(_GLF_FUZZED(-1064.3037), (_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))))[1]), bvec2(false, true))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), cos(0.0), abs(0.0), 1.0), (true ? mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), mix(vec2((_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))))[0], _GLF_FUZZED(-41.17)), vec2(_GLF_FUZZED(-1064.3037), (_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))))[1]), bvec2(false, true))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), cos(0.0), abs(0.0), 1.0) : _GLF_FUZZED(matrixCompMult(mat4x2(8386.0228, -9.5, 913.441, -59.83, -624.989, -4.0, -9950.5114, 529.728), mat4x2(76.04, -2.2, 8.2, 459.108, -5.4, -874.789, -15.37, 91.08)))))))), 0.0, tan(0.0), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0)), (_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 1.0, 0.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.8) : 0.0))), float(_GLF_FUZZED(89.99)), bool(false)))))), vec2(0.0, 0.0)))), 0.0, tan(0.0), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0)), float(mat3x4(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 1.0, 0.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))), 0.0, _GLF_IDENTITY(tan(0.0), min(tan(0.0), _GLF_IDENTITY(tan(0.0), (tan(0.0)) * 1.0))), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0))))) + 0.0)) > injectionSwitch.y), false)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))), true, true, false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), true, true, false)))))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true, false))), true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, false))))), (bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))) || false)), false), false)))), _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false, false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false, false)))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false, false)))), true, true)), true, true)))))), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false, false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false, false)))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false, false)))), true, true)), true, true)))))), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false, false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false, false)))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false, false)))), true, true)), true, true)))))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false, false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false, false)))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false, false)))), true, true)), true, true)))))), false))))), false, false))))))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(true, (true) || false)), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(true, (true) || false)), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(true, (true) || false)), false), false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(true, (true) || false)), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) || false), false)), (bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))) || false))), false), false))), false))))))))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false, false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), ! (! (_GLF_IDENTITY(false, true && (false))))))))))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false, false)))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false, false)))), _GLF_IDENTITY(true, true && (true)), true)), true, true)))))), false))))) || false)), ! (! ((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, ! (! (true))), false))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(false || ((true)), (false || ((true))) || false)) || false))), bool(bvec3(true, true, false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(! (! ((true))), ! (! (! (! ((true))))))), (_GLF_IDENTITY((true), ! (! ((true))))) && true) || false))), _GLF_IDENTITY(bool(bvec3(true, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(true, true, false)), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, false || (_GLF_IDENTITY((true) && true, ! (! ((true) && true)))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) && true), true)))))), bool(bvec4(true, false, false, true))), true)), ! (! (bool(bvec3(bool(bvec3(true, true, false)), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))), true))))))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), _GLF_IDENTITY(! (! ((true))), ! (! (! (! ((true))))))), (_GLF_IDENTITY((true), ! (! ((true))))) && true) || false))), _GLF_IDENTITY(bool(bvec3(true, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(true, true, false)), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, false || (_GLF_IDENTITY((true) && true, ! (! ((true) && true)))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) && true), true)))))), bool(bvec4(true, false, false, true))), true)), ! (! (bool(bvec3(bool(bvec3(true, true, false)), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))), true))))))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false, false)), true, true))), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) || false))), _GLF_IDENTITY(bool(bvec3(true, true, _GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(bvec3(bool(bvec3(true, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))), true)), ! (! (bool(bvec3(_GLF_IDENTITY(bool(bvec3(true, true, false)), ! (! (bool(bvec3(true, true, false))))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))), true))))))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false, false)), true, true))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), bool(bvec3(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false))), _GLF_IDENTITY(true, bool(bool(true))), false, true)))))), false))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), _GLF_IDENTITY(bool(bvec3(true, true, false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, true, false)), false || (bool(bvec3(true, true, false)))), false || (_GLF_IDENTITY(bool(bvec3(true, true, false)), false || (bool(bvec3(true, true, false)))))), false, true, false)))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))))), true, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), false))))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true)))))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true)))))), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true)))))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true)))))), true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true)))))))), false)))), false)))))), true)))), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))) || false)) || false))))), bool(bvec3(true, true, _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false, false)))), true, true)), true, true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), false))))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true)))))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true)))))), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true)))))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true)))))), true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true)))))))), false)))), false)))))), true)))), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))) || false)) || false))))), bool(bvec3(true, true, _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false, false)))), true, true)), true, true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), false))))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true)))))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true)))))), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true)))))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true)))))), true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true)))))))), false)))), false)))))), true)))), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))) || false)) || false))))), bool(bvec3(true, true, _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false, false)))), true, true)), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), false))))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true)))))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true)))))), false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true)))))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true)))))), true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), true)))))))), false)))), false)))))), true)))), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))) || false)) || false))))), bool(bvec3(true, true, _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), false, false)))), true, true)), true, true)), true))), false)))))))))), false))))) || false))))) && (false), false, false)))) || false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(injectionSwitch.x, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, sqrt(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)))).y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, cos(0.0), _GLF_IDENTITY(dot(vec4(1.0, abs(0.0), sqrt(0.0), 1.0), vec4(abs(0.0), 1.0, 1.0, 0.0)), dot(vec4(1.0, abs(0.0), sqrt(0.0), 1.0), vec4(abs(0.0), 1.0, 1.0, 0.0))), cos(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, length(vec2(0.0, 0.0)), tan(0.0)))) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))))))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(dot(vec3(-870.878, 44.10, -770.395), vec3(-90.71, -3734.8467, -4.6))))) > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true))) || false, (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     case 63:
     case 25:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))))), true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (_GLF_IDENTITY(injectionSwitch.x, length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))) + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (injectionSwitch.x)) : _GLF_FUZZED(1.5))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (injectionSwitch.x)))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(43.80))), injectionSwitch.y)), injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0), mat3(mat4x3(mat3(injectionSwitch, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0))))), (true ? vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0), mat3(mat4x3(mat3(injectionSwitch, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0))))) : _GLF_FUZZED(vec2(192.119, -3.3))))))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     case 9:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! _GLF_IDENTITY((false), bool(bvec4((false), false, true, false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y)))), true, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y)))), true, false, false))))) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y)))) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))), false, false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), true)))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7.6, -235.997)) : injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.9))), injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true))))) && true)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true)))))))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-9999.6069), clamp(_GLF_IDENTITY(_GLF_FUZZED(-9999.6069), (false ? _GLF_FUZZED(step(1914.6745, -0.5)) : _GLF_FUZZED(-9999.6069))), _GLF_FUZZED(-9999.6069), _GLF_FUZZED(-9999.6069)))), float(injectionSwitch.x), bool(true))))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          return;
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(smoothstep(-4.1, 5.4, injectionSwitch)), (true ? _GLF_FUZZED(smoothstep(-4.1, 5.4, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))).y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)))), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, true)))), true)))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, true)))), true)))))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, true)))), true)))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), true, true)))), true)))))))), true, false))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) || false)) && true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
        barrier();
       return;
      }
     default:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec3((! (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3((! (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, (0.0) / 1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x))), float(_GLF_FUZZED(vec2(1730.3325, -6.6).s)), bool(false))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) && (false), (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) && (false), ! (! (_GLF_IDENTITY(true, false || (true)) && (false))))) || false)), (false) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) >> (-74944 & 0));
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), true && (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, (1) | (1))), 4, 64, 4);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-45.30)), float(injectionSwitch[1]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))) && true)))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(904.785), _GLF_FUZZED(vec4(744.586, -0.0, -9020.3958, -4.1).y)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(vec3((injectionSwitch)[1], 0.0, 0.0)))), bvec2(true, true))).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, true, true)))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, 1.0), mat2(_GLF_IDENTITY(mat4(mat2(injectionSwitch, 1.0, 1.0)), (true ? mat4(mat2(injectionSwitch, 1.0, 1.0)) : _GLF_FUZZED(mat4(-4937.2716, 3445.8413, 8.8, _GLF_IDENTITY(6617.6845, clamp(6617.6845, 6617.6845, _GLF_IDENTITY(6617.6845, min(6617.6845, 6617.6845)))), 227.598, -243.739, 20.41, -6623.3415, 161.152, -50.57, 6.9, 7.4, 29.31, _GLF_IDENTITY(-9772.1816, mix(float(-9772.1816), float(_GLF_FUZZED(-5852.2428)), bool(false))), 457.514, -551.564)))))))).y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(227.315), _GLF_FUZZED(-8.7)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), vec2(mat3x4((injectionSwitch), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, abs(_GLF_ONE(1.0, injectionSwitch.y)))))[1]), bvec2(true, true))).y))) || false), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(227.315), _GLF_FUZZED(-8.7)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), vec2(mat3x4((injectionSwitch), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, abs(_GLF_ONE(1.0, injectionSwitch.y)))))[1]), bvec2(true, true))).y))) || false), true, false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, false, true)))) && true) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))) || false)))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), false))))))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), true, true, false))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), uint(_GLF_IDENTITY(uvec3(uint(2), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_base))), 0u), _GLF_IDENTITY((uvec3(uint(2), 1u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) - 0u), 0u)))) - _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED((subgroup_local_id))))) << (1u ^ _GLF_IDENTITY(1u, (1u) + (0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) | (8u))))))))), clamp(uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED((subgroup_local_id))))) << (1u ^ _GLF_IDENTITY(1u, (1u) + (0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) | (8u))))))))), uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED((subgroup_local_id))))) << (1u ^ _GLF_IDENTITY(1u, (1u) + (0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) | (8u))))))))), _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED((subgroup_local_id))))) << (1u ^ _GLF_IDENTITY(1u, (1u) + (0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) | (8u))))))))), (uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED((subgroup_local_id))))) << (1u ^ _GLF_IDENTITY(1u, (1u) + (0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) | (8u)))))))))) / uvec3(1u, 1u, 1u)))), uvec3(uvec4(_GLF_IDENTITY((uvec3(uint(2), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u)), 0u)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id)), (_GLF_FUZZED((subgroup_local_id))) | (_GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id)), 0u | (_GLF_FUZZED((subgroup_local_id)))))), (true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id)), (_GLF_FUZZED((subgroup_local_id))) | (_GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id)), 0u | (_GLF_FUZZED((subgroup_local_id))))))) | (true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id)), (_GLF_FUZZED((subgroup_local_id))) | (_GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id)), 0u | (_GLF_FUZZED((subgroup_local_id))))))))))) << (1u ^ _GLF_IDENTITY(1u, (1u) + (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(uint(uint(8u)))), uint(8u))))))), uvec3(uvec3((uvec3(uint(2), 1u, 0u)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED((subgroup_local_id))))) << (1u ^ _GLF_IDENTITY(1u, (1u) + _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), uint(8u))), ((0u << _GLF_IDENTITY(uint(8u), uint(8u)))) | ((0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), uint(_GLF_IDENTITY(uvec3(uint(2), 1u, 0u), (uvec3(uint(2), 1u, 0u)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED((subgroup_local_id))))) << _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) + (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(uvec2(_GLF_IDENTITY((1u) + (0u << _GLF_IDENTITY(uint(8u), uint(8u))), ((1u) + (0u << _GLF_IDENTITY(uint(8u), uint(8u)))) * 1u), 0u))))), ((1u ^ _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) + (0u << _GLF_IDENTITY(uint(8u), uint(8u))), uint(uvec2(_GLF_IDENTITY((1u) + (0u << _GLF_IDENTITY(uint(8u), uint(8u))), ((1u) + (0u << _GLF_IDENTITY(uint(8u), uint(8u)))) * 1u), 0u)))))) ^ 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), uint(_GLF_IDENTITY(uvec3(uint(2), 1u, 0u), (uvec3(uint(2), 1u, 0u)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED((subgroup_local_id))))) << (1u ^ _GLF_IDENTITY(1u, (1u) + (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))))), min(_GLF_IDENTITY(uint(2), uint(_GLF_IDENTITY(uvec3(uint(2), 1u, 0u), (uvec3(uint(2), 1u, 0u)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED((subgroup_local_id))))) << (1u ^ _GLF_IDENTITY(1u, (1u) + (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))))), _GLF_IDENTITY(uint(2), uint(_GLF_IDENTITY(uvec3(uint(2), 1u, 0u), (uvec3(uint(2), 1u, 0u)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED((subgroup_local_id))))) << (1u ^ _GLF_IDENTITY(1u, (1u) + (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))))))), _GLF_IDENTITY(uint(2), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uint(2), 1u, 0u), (uvec3(uint(2), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, uint(uint(1u))))), 0u)) - uvec3(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)), _GLF_IDENTITY(0u, (0u) >> 0u))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED((subgroup_local_id))))) << (1u ^ _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) + (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), clamp(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) << uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) << uvec4(0u, 0u, 0u, 0u)), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) << uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) << uvec4(0u, 0u, 0u, 0u))))) - uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), clamp(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) + uvec4(0u, 0u, 0u, 0u)))), uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(-41.97)), bool(false))))), 1u))))))), uint(_GLF_IDENTITY(8u, 0u ^ (_GLF_IDENTITY(8u, min(8u, 8u)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uint(2), 1u, 0u), (uvec3(uint(2), 1u, 0u)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED((subgroup_local_id))))) << (1u ^ _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u))), (0u ^ 1u)), uvec2(uvec3(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u))), (0u ^ 1u)), (uvec2(_GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u))), (0u ^ 1u))) - uvec2(0u, 0u)), 0u)))))))) + (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), clamp(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1u, 0u | (1u))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) << uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), max(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 1.0))))).y)), 1u))))))), uint(8u)))))))), (_GLF_IDENTITY(uvec3(uint(2), 1u, 0u), (uvec3(uint(2), 1u, 0u)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED((subgroup_local_id))))) << (_GLF_IDENTITY(1u ^ _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) + (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), clamp(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) << uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), max(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))), uint(8u)))), min(1u ^ _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) + (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), clamp(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) << uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), max(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))), uint(8u)))), 1u ^ _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) + (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), clamp(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) << uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), max(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))), uint(8u))))))))))) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uint(2), 1u, 0u), (uvec3(uint(2), 1u, 0u)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED((subgroup_local_id))))) << (1u ^ _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u))), (0u ^ 1u)), uvec2(uvec3(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u))), (0u ^ 1u)), (uvec2(_GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u))), (0u ^ 1u))) - uvec2(0u, 0u)), 0u)))))))) + (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), clamp(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1u, 0u | (1u))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) << uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), max(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 1.0, 1.0))))).y)), 1u))))))), uint(8u)))))))), (_GLF_IDENTITY(uvec3(uint(2), 1u, 0u), (uvec3(uint(2), 1u, 0u)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED((subgroup_local_id))))) << (_GLF_IDENTITY(1u ^ _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) + (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), clamp(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) << uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), max(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))), uint(8u)))), min(1u ^ _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) + (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), clamp(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) << uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), max(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))), uint(8u)))), 1u ^ _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) + (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), clamp(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) << uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), max(uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_id))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))), uint(8u))))))))))) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u)))))) / uvec3(1u, 1u, 1u)) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(mod(2.0, 915.998))))))))))))), _GLF_IDENTITY(4, 0 ^ (4)), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))) || false))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec3(bool(bvec3(false, false, true)), true, false))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, ~ (~ (2)))), _GLF_IDENTITY(4, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bvec2(! ((true)), true))))) || false)), false || (bool(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, _GLF_IDENTITY(bool(bvec4((true) || false, false, true, false)), (bool(bvec4((true) || false, false, true, false))) && true)))))))) ? _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 1, 1, 1), (ivec4(4, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), 4, 4)) : _GLF_FUZZED(-62295))), 64, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(66349)))), 0 + ((_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(66349)))))) | 0));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ -5089.7834))), bool(false)))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))))).x, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))), float(_GLF_FUZZED(-646.850)), bool(false))))) > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), cos(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 0.0)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))) || (false), (_GLF_IDENTITY(false, bool(bvec3(false, false, false))) || (false)) && true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false)))), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))))) || false), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false)))), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))))) || false)) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), true && (! (! (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y) || false)), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(89.98)), float(float(mat2x4(injectionSwitch.x, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 0.0, 1.0))), bool(true))))) - 0.0) > injectionSwitch.y) || false))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(89.98)), float(_GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), mix(float(float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(-6983.8591)), bool(false))), float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), mix(float(float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(-9.6)), bool(false)))))), bool(true))))) - 0.0) > injectionSwitch.y) || false))), (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(89.98, clamp(89.98, _GLF_IDENTITY(89.98, float(mat4(89.98, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, abs(1.0), sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(89.98, clamp(89.98, 89.98, 89.98)))))), float(float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), bool(true))))) - 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) || false)))) || false))) && true))))
  return;
 if(_GLF_DEAD(false))
  return;
}
