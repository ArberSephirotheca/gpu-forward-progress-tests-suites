#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 mat4x2 _f0;
 mat2 _f1;
 mat4x2 _f2;
 mat4 _f3;
 ivec3 _f4;
 mat2x4 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
 mat2x3 _f1;
 bvec2 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_6 {
 vec4 _f0;
 ivec2 _f1;
 vec4 _f2;
 mat3x4 _f3;
 mat3x4 _f4;
 mat2x4 _f5;
 float _f6;
} ;

struct _GLF_struct_5 {
 bool _f0;
 bool _f1;
 mat4x2 _f2;
 uvec2 _f3;
 mat3x4 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_9 {
 vec4 _f0;
 float _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
 ivec4 _f4;
 _GLF_struct_7 _f5;
 _GLF_struct_8 _f6;
} ;

struct _GLF_struct_3 {
 ivec3 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 vec2 _f1;
 ivec2 _f2;
 uint _f3;
} ;

struct _GLF_struct_0 {
 bool _f0;
 uvec3 _f1;
 mat4x3 _f2;
 mat2x4 _f3;
 mat2x3 _f4;
 bool _f5;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 ivec3 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
} ;

struct _GLF_struct_10 {
 _GLF_struct_4 _f0;
 uint _f1;
 _GLF_struct_9 _f2;
 int _f3;
 uint num_workgroup;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(true, ! (! (true))))), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), false || (bool((false))))), bool(bvec3(bool(_GLF_IDENTITY(bool((false)), false || (bool((false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, false, true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) && true), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) && true), false))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) && true), false))))))))))))), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(95.01)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, sqrt(0.0), sqrt(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, sqrt(0.0), sqrt(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0))), mat4x3(mat4(mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, sqrt(0.0), sqrt(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0))))))))).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x)) > injectionSwitch.y), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x)) > injectionSwitch.y)))))), false || (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))) && (bool(injectionSwitch.x > injectionSwitch.y)))))))), ((injectionSwitch.x > injectionSwitch.y)) && true), false))))), ! (! ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(95.01)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, sqrt(0.0), sqrt(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, sqrt(0.0), sqrt(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0))), mat4x3(mat4(mat4x3(mat4x3(mat4x3(injectionSwitch, 1.0, sqrt(0.0), sqrt(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0))))))))).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x)) > injectionSwitch.y), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x)) > injectionSwitch.y)))))), false || (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))) && (bool(injectionSwitch.x > injectionSwitch.y)))))))), ((injectionSwitch.x > injectionSwitch.y)) && true), false)))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false))))))))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(17.44)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(17.44)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(17.44)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y), false, true), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(17.44)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(17.44)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y), false, true), false)))), ! (! (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(17.44)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(17.44)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y), false, true), false)))))))))))))
    {
    }
   else
    {
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), 0 ^ (int(0))), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(true, true))))))), false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec2(_injected_loop_counter < 1, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(60.37) : 0.0)), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 0.0, 0.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, exp(0.0), 0.0, abs(0.0)), transpose(transpose(mat4(injectionSwitch.y, 0.0, 0.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, exp(0.0), 0.0, abs(0.0))))))), injectionSwitch.y, injectionSwitch.y))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, round(length(normalize(1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 0.0, 0.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, exp(0.0), 0.0, abs(0.0)), transpose(transpose(mat4(injectionSwitch.y, 0.0, 0.0, sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, exp(0.0), 0.0, abs(0.0))))))), injectionSwitch.y, injectionSwitch.y))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, round(length(normalize(1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y))))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_4(_GLF_struct_0(true, uvec3(1u), mat4x3(1.0), mat2x4(1.0), mat2x3(1.0), true), _GLF_struct_1(uvec2(1u), vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0))), ivec2(1), 1u), _GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(_GLF_IDENTITY((ivec3(1)), _GLF_IDENTITY(((ivec3(1))) | ((ivec3(1))), ~ (~ (((ivec3(1))) | _GLF_IDENTITY(((ivec3(1))), ivec3(0, 0, 0) | (((ivec3(1))))))))), (_GLF_IDENTITY((ivec3(1)), ((ivec3(1))) | ((ivec3(1))))) | (_GLF_IDENTITY((ivec3(1)), ((ivec3(1))) | ((ivec3(1)))))) | (_GLF_IDENTITY(ivec3(1), min(ivec3(1), ivec3(1))))), _GLF_struct_2(mat3x4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3.6) : 1.0)))), _GLF_struct_3(ivec3(1), uvec2(1u))), 1u, _GLF_struct_9(_GLF_IDENTITY(vec4(1.0), min(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(_GLF_IDENTITY(1.0, 1.0 * (1.0))))), 1.0, _GLF_struct_5(true, true, mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, 0.0)), max(float(vec2(1.0, 0.0)), float(vec2(1.0, 0.0)))))), _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), _GLF_IDENTITY(uvec2(1u), min(uvec2(1u), uvec2(1u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (uvec2(1u))), clamp(_GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (uvec2(1u))), _GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (uvec2(1u))), _GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (uvec2(1u))))))))), uvec2(1u), uvec2(1u)), min(clamp(_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), _GLF_IDENTITY(uvec2(1u), min(uvec2(1u), uvec2(1u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (uvec2(1u))), clamp(_GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (uvec2(1u))), _GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (uvec2(1u))), _GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (uvec2(1u))))))))), uvec2(1u), uvec2(1u)), clamp(_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), _GLF_IDENTITY(uvec2(1u), min(uvec2(1u), uvec2(1u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (uvec2(1u))), clamp(_GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (uvec2(1u))), _GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (uvec2(1u))), _GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (uvec2(1u))))))))), uvec2(1u), uvec2(1u))))), mat3x4(1.0), mat4x3(1.0)), _GLF_struct_6(_GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? vec4(1.0) : _GLF_FUZZED(vec4(-9601.2327, 6.8, _GLF_IDENTITY(7.2, (7.2) / 1.0), 0.0)))), ivec2(1), vec4(1.0), mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(5134.9993)), bool(false)))), mat3x4(1.0), mat2x4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8.3)))) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) * 1.0)) + 0.0)) / _GLF_IDENTITY(cos(log(1.0)), (_GLF_IDENTITY(cos(log(1.0)), float(float(cos(log(1.0)))))) - _GLF_IDENTITY(0.0, (0.0) / 1.0))))), ivec4(1), _GLF_struct_7(mat4(1.0), mat2x3(1.0), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))) || false)), uvec4(1u)), _GLF_struct_8(mat4x2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), mat2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), (_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))) - mat2(0.0, 0.0, 0.0, 0.0))))), mat4x2(1.0), mat4(1.0), ivec3(1), mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(1.0), _GLF_IDENTITY(float(vec2(float(1.0), 0.0)), mix(float(float(vec2(float(1.0), 0.0))), float(_GLF_FUZZED(-7.4)), bool(false)))), float(_GLF_FUZZED(_GLF_IDENTITY(-9.9, min(-9.9, _GLF_IDENTITY(-9.9, mix(float(-9.9), float(_GLF_FUZZED(-142.591)), bool(false))))))), bool(false)), mix(_GLF_IDENTITY(float(mix(float(1.0), float(_GLF_FUZZED(-9.9)), bool(false))), min(float(mix(float(1.0), float(_GLF_FUZZED(-9.9)), bool(false))), float(mix(float(1.0), float(_GLF_FUZZED(-9.9)), bool(false))))), float(_GLF_FUZZED(-530.322)), bool(false))))))), mat4(1.0))), 1, gl_NumWorkGroups.x);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ONE(1.0, injectionSwitch.y)) | 1)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (gl_WorkGroupSize)).x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))));
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(roundEven(vec2(5748.9806, -7.0))))).y)) & 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (1 ^ 1), false || (_injected_loop_counter > (1 ^ 1)))); _injected_loop_counter --)
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, log(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 1.0), (false ? _GLF_FUZZED(mat4x3(1138.6338, 7.3, -54.79, -2157.3233, 179.625, -5.0, 4.8, -4.4, -759.611, -61.33, -117.758, -715.118)) : mat4x3(injectionSwitch, log(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), 1.0))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY(false, false || (false))) && true)))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) | ((gl_WorkGroupID.x))) - 0u);
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(0u, 0u ^ (0u)) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec3(workgroup_base, 1u, 0u), uvec3(uvec4(uvec3(workgroup_base, 1u, 0u), 1u))))) + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), min((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))) | (workgroup_base + subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec3(workgroup_base, 1u, 0u), uvec3(uvec4(uvec3(workgroup_base, 1u, 0u), 1u))))) + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), min((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))) | (workgroup_base + subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec3(workgroup_base, 1u, 0u), uvec3(uvec4(uvec3(workgroup_base, 1u, 0u), 1u))))) + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), min((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))) | (workgroup_base + subgroup_id * subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec3(workgroup_base, 1u, 0u), uvec3(uvec4(uvec3(workgroup_base, 1u, 0u), 1u))))) + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), min((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))) | (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec3(workgroup_base, 1u, 0u), uvec3(uvec4(uvec3(workgroup_base, 1u, 0u), 1u))))) + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), min((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))) | (workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec3(workgroup_base, 1u, 0u), uvec3(uvec4(uvec3(workgroup_base, 1u, 0u), 1u))))) + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), min((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))) | (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec3(workgroup_base, 1u, 0u), uvec3(uvec4(uvec3(workgroup_base, 1u, 0u), 1u))))) + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), min((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))) | (workgroup_base + subgroup_id * subgroup_size))))) >> 0u))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 0u))))), (false ? _GLF_FUZZED(125522u) : workgroup_base + subgroup_id * subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (false ? _GLF_FUZZED(125522u) : workgroup_base + subgroup_id * subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | (_GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 1u))))) | (subgroup_local_id)) + _GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) << 0u), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1) % subgroup_size), (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-812.212, 854.683)))), injectionSwitch)).x)) + (subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-812.212, 854.683)))), injectionSwitch)).x)) + (subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size)), ~ (~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-812.212, 854.683)))), injectionSwitch)).x)) + (subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size)), (~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-812.212, 854.683)))), injectionSwitch)).x)) + (subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size))) | (~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-812.212, 854.683)))), injectionSwitch)).x)) + (subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size))))))))) : _GLF_FUZZED(subgroup_local_id))), 0u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))), 0u)));
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (! (_injected_loop_counter < 1)))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) + 0))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))) || false)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, _GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(4, min(4, 4)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0)))))), float(_GLF_FUZZED(-75.92)), bool(false))))) > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))))).x > injectionSwitch.y, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(true), true, false), bvec3(bvec3(bvec3(bool(true), true, false))))), true && (bool(_GLF_IDENTITY(bvec3(bool(true), true, false), bvec3(bvec3(bvec3(bool(true), true, false)))))))))), false)), (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))) || false))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), true, false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), true, false))), (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), true, false)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), true, false))), (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), true, false)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || _GLF_IDENTITY(false, true && (false))))))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-47.02)), float(injectionSwitch.x), bool(true))), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(8), int(8))) | (0))) / 1), 0, 0))], _GLF_FUZZED(861.640)), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, true, false))), (injectionSwitch.x < injectionSwitch.y))))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(8), int(8))) | (0))) / 1), 0, 0))], _GLF_FUZZED(861.640)), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, true, false))), (injectionSwitch.x < injectionSwitch.y))))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(8), int(8))) | (0))) / 1), 0, 0))], _GLF_FUZZED(861.640)), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, true, false))), (injectionSwitch.x < injectionSwitch.y))))).x)) > injectionSwitch.y, true, false)))))) || false)))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), true, false)))))) || _GLF_IDENTITY(false, true && (false)))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), true, false)))))) || _GLF_IDENTITY(false, true && (false)))), false, true, false)))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-47.02)), float(injectionSwitch.x), bool(true))), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) / 1), 0, 0))], _GLF_FUZZED(861.640)), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y, true, false)))))) || false)))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-47.02)), float(injectionSwitch.x), bool(true))), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) / 1), 0, 0))], _GLF_FUZZED(861.640)), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y, true, false)))))) || false))))), bool(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-47.02)), float(injectionSwitch.x), bool(true))), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) / 1), 0, 0))], _GLF_FUZZED(861.640)), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y, true, false)))))) || false)))))))))))))))), ! (! ((! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, (false) && true))), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(acosh(-5.5), clamp(_GLF_IDENTITY(acosh(-5.5), _GLF_IDENTITY(float(mat3(acosh(-5.5), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), float(vec3(float(mat3(acosh(-5.5), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0)))), acosh(-5.5), _GLF_IDENTITY(acosh(-5.5), mix(float(_GLF_FUZZED(-2.4)), float(_GLF_IDENTITY(acosh(-5.5), min(acosh(-5.5), acosh(-5.5)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) : injectionSwitch.y)), true, false)))))) || _GLF_IDENTITY(false, true && (false))))))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-47.02)), float(injectionSwitch.x), bool(true))), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, false || (true)))), false)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) / 1), 0, 0))], _GLF_FUZZED(861.640)), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) / 1), 0, 0))], _GLF_FUZZED(861.640)), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y, true, false), true)))))))) || false)))))))))))))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) && true)))))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) && true)))))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (! _GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) && true)))))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4(! (! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))), bool(bvec4(((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))), true, true, false))))), false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-28.78))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))))).x > injectionSwitch.y, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(true), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), false), bvec3(bvec3(bvec3(bool(true), true, false))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec4(bvec2(bool(true), false), true, false))))), true, false), bvec3(bvec3(bvec3(bool(true), true, false)))))))))), false)), (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))) || false))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y))))), true, false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), true, false))), (! _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), true, false))), bool(bool(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), true, false))), ! (! ((bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), true, false)))))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), true, false))), (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)))))), true, false)))) && _GLF_IDENTITY(true, bool(bool(true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), true, false))), (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)))))), true, false)))) && _GLF_IDENTITY(true, bool(bool(true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), _GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), true, false))), (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)))))), true, false)))) && _GLF_IDENTITY(true, bool(bool(true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), true, false))), (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)))))), true, false)))) && _GLF_IDENTITY(true, bool(bool(true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), _GLF_IDENTITY(false, true && (false))))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), true, false))), (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)))))), true, false)))) && _GLF_IDENTITY(true, bool(bool(true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), true, false))), (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)))))), true, false)))) && _GLF_IDENTITY(true, bool(bool(true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), _GLF_IDENTITY(false, true && (false))))))), true)))))))))), true && ((_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y))))), true, false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), true, false))), (! _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), true, false))), bool(bool(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), true, false))), ! (! ((bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), true, false)))))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), true, false))), (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)))))), true, false)))) && _GLF_IDENTITY(true, bool(bool(true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), true, false))), (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)))))), true, false)))) && _GLF_IDENTITY(true, bool(bool(true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), _GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), true, false))), (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)))))), true, false)))) && _GLF_IDENTITY(true, bool(bool(true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), true, false))), (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)))))), true, false)))) && _GLF_IDENTITY(true, bool(bool(true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), _GLF_IDENTITY(false, true && (false))))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), true, false))), (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)))))), true, false)))) && _GLF_IDENTITY(true, bool(bool(true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), true, false))), (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)))))), true, false)))) && _GLF_IDENTITY(true, bool(bool(true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), _GLF_IDENTITY(false, true && (false))))))), true)))))))))))))) || _GLF_IDENTITY(false, true && (false))))))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-47.02)), float(injectionSwitch.x), bool(true))), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(8), int(8))) | (0))) / 1), 0, 0))], _GLF_FUZZED(861.640)), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, true, false))), (injectionSwitch.x < injectionSwitch.y))))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(8), int(8))) | (0))) / 1), 0, 0))], _GLF_FUZZED(861.640)), vec2(_GLF_FUZZED(5.0), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, true, false))), (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, true, false))), (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(! (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, true, false))), (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(! (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, true, false))), (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, true, false))), (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, true, false))), (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(! (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, true, false))), (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(! (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, true, false))), (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(8), int(8))) | (0)), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0) << _GLF_IDENTITY(int(8), int(8))) | (0))) - 0)) / 1), 0, 0))], _GLF_FUZZED(861.640)), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false), true, true, false))), (injectionSwitch.x < injectionSwitch.y))))).x)) > injectionSwitch.y, true, false)))))) || false)))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y) / 1.0))), true, false)))))) || _GLF_IDENTITY(false, true && (false)))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(acosh(-5.5)) : injectionSwitch.y)), false, false, true))), true, false)))))) || _GLF_IDENTITY(false, true && (false)))), false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), false)))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, sqrt(0.0), sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0))) > injectionSwitch.y, true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-47.02)), float(injectionSwitch.x), bool(true))), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-47.02)), float(injectionSwitch.x), bool(true))), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-47.02)), float(injectionSwitch.x), bool(true))), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) / 1), 0, 0))], _GLF_FUZZED(861.640)), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))), clamp(mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) / 1), 0, 0))], _GLF_FUZZED(861.640)), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))), mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) / 1), 0, 0))], _GLF_FUZZED(861.640)), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))), mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) / 1), 0, 0))], _GLF_FUZZED(861.640)), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), true, false)))))) || false)))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-47.02)), float(injectionSwitch.x), bool(true))), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) / 1), 0, 0))], _GLF_FUZZED(861.640)), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y, true, false)))))) || false))))), bool(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (false ? _GLF_FUZZED(533.182) : dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), sqrt(1.0), 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0))).y, true, false))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-47.02)), float(injectionSwitch.x), bool(true))), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) / 1), 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(53071) : _GLF_IDENTITY(0, (0) << 0)))))], _GLF_FUZZED(861.640)), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), (injectionSwitch.x < injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true, false)))))) || false)))))))))))))))), ! (! ((! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true))))), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(acosh(-5.5), clamp(_GLF_IDENTITY(_GLF_IDENTITY(acosh(-5.5), _GLF_IDENTITY(float(mat3(acosh(-5.5), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), float(vec3(float(mat3(acosh(-5.5), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0)))), min(_GLF_IDENTITY(acosh(-5.5), _GLF_IDENTITY(float(mat3(acosh(-5.5), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), float(vec3(float(mat3(acosh(-5.5), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0)))), _GLF_IDENTITY(acosh(-5.5), _GLF_IDENTITY(float(mat3(acosh(-5.5), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), float(vec3(float(mat3(acosh(-5.5), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0)))))), acosh(-5.5), _GLF_IDENTITY(acosh(-5.5), mix(float(_GLF_FUZZED(-2.4)), float(_GLF_IDENTITY(acosh(-5.5), min(acosh(-5.5), acosh(-5.5)))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_IDENTITY(false, ! (! (false)))))))))))) : _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)), true, false)))))) || _GLF_IDENTITY(false, true && (false))))))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-47.02)), float(injectionSwitch.x), bool(true))), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, false || (true)))), false)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) / 1), 0, 0))], _GLF_FUZZED(861.640)), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) / 1), 0, 0))], _GLF_FUZZED(861.640)), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y, true, false), true)))))))) || false)))))), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-47.02)), float(injectionSwitch.x), bool(true))), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, false || (true)))), false)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) / 1), 0, 0))], _GLF_FUZZED(861.640)), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) / 1), 0, 0))], _GLF_FUZZED(861.640)), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y, true, false), true)))))))) || false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-47.02)), float(injectionSwitch.x), bool(true))), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, false || (true)))), false)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) / 1), 0, 0))], _GLF_FUZZED(861.640)), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) / 1), 0, 0))], _GLF_FUZZED(861.640)), vec2(_GLF_FUZZED(5.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y, true, false), true)))))))) || false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)))))))))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) && true)))))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) && true)))))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! _GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(152.658, 4.6, -8.4, -5.1).t), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(8394.5732, 573.249, 75.77, 6.4).q)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), false || (false || ((injectionSwitch.x > injectionSwitch.y))))))) && true)))))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (! _GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y), false || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))) && true)))))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4(! (! _GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))), bool(bvec4(((! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))), false || ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))), true, true, false))))), false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), true, true)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false), true, true))))))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) >> 0)) - 0), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))) && true))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     subgroupAll(false);
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))));
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
            barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, max(6u, _GLF_IDENTITY(6u, (6u) << 0u))), ~ (~ (_GLF_IDENTITY(6u, clamp(6u, 6u, 6u)))))), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, max(6u, _GLF_IDENTITY(6u, (6u) << 0u))), ~ (~ (_GLF_IDENTITY(6u, clamp(6u, 6u, 6u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, max(6u, _GLF_IDENTITY(6u, (6u) << 0u))), ~ (~ (_GLF_IDENTITY(6u, clamp(6u, 6u, 6u)))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, max(6u, _GLF_IDENTITY(6u, (6u) << 0u))), ~ (~ (_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))))))) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, uint(uvec3(6u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u)))), (uint(6u)) ^ 0u), (false ? _GLF_FUZZED(107915u) : uint(6u))))) * (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))) - 0u), min(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, min(0u, 0u))))), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)))), (clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))) - 0u), min(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, min(0u, 0u))))), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u))))) | (clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))) - 0u), min(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, min(0u, 0u))))), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)))))))))], uint(2), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, (_GLF_IDENTITY(1 & 1, min(1 & 1, 1 & 1))), 0, 1), (_GLF_IDENTITY(ivec4(4, (_GLF_IDENTITY(1 & 1, min(1 & 1, 1 & 1))), 0, 1), max(ivec4(4, (_GLF_IDENTITY(1 & 1, min(1 & 1, 1 & 1))), 0, 1), ivec4(4, (_GLF_IDENTITY(1 & 1, min(1 & 1, 1 & 1))), 0, 1)))) * ivec4(1, 1, 1, 1)))), (4) | (4)), _GLF_IDENTITY(4, (4) | 0))), 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    barrier();
   do
    {
     subgroupAll(true);
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (~ (0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 + (int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED((-404.859 / 6985.9579))))))))) | 0)); _injected_loop_counter ++)
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(clamp(injectionSwitch, injectionSwitch, vec2(-18.77, 918.698))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))) && true) || false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(97694) : 2))), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) - 0)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), 0 ^ (2)))) | (0 >> _GLF_IDENTITY(int(0), int(0)))), 0 | _GLF_IDENTITY((~ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) >> 0)) / 1), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) >> 0)) / 1)) >> 0))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) >> 0)) / 1))))), ~ (~ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) >> 0)) / 1))), int(ivec4(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) >> 0)) / 1))), 0, 1, 1)))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) >> _GLF_IDENTITY(0, (0) ^ 0))) / 1))))), clamp((_GLF_IDENTITY(~ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) >> 0)) / 1)))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) >> 0)) / 1)))), (~ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) >> 0)) / 1))))) + 0), ~ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) >> 0)) / 1)))), ~ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) >> 0)) / 1))))))), (~ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) >> 0)) / 1))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) >> 0)) / 1))))), ((~ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) >> 0)) / 1)))))) + (0 << _GLF_IDENTITY(int(7), int(7)))))), (~ (_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) >> 0)) / 1))))))))))) >> 0)), (int(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(2, 0 + (_GLF_IDENTITY(2, clamp(2, 2, 2)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0 ^ (2), (0 ^ _GLF_IDENTITY((2), max((2), (2)))) / 1))), 0 | (~ (_GLF_IDENTITY(2, 0 ^ (2)))))))) >> 0))) * 1), int(_GLF_IDENTITY(2, (2) - 0)))), 0 + (((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) / 1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (2)), min(_GLF_IDENTITY(2, 0 ^ (2)), _GLF_IDENTITY(2, 0 ^ (2))))), (~ (_GLF_IDENTITY(2, 0 ^ (2)))) | _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), ((0 >> _GLF_IDENTITY(int(0), int(0)))) << 0)))), 0 | (~ (_GLF_IDENTITY(2, 0 ^ (2))))))), max(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(2, 0 ^ (2))), (~ (_GLF_IDENTITY(2, 0 ^ (2)))) | (0 >> _GLF_IDENTITY(int(0), int(0)))), 0 | (~ (_GLF_IDENTITY(2, 0 ^ (2))))))), _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(2, 0 ^ (2))), (~ (_GLF_IDENTITY(2, 0 ^ (2)))) | (0 >> _GLF_IDENTITY(int(0), int(0)))), 0 | (~ (_GLF_IDENTITY(2, 0 ^ (2)))))))))) >> 0)), (int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2), (true ? _GLF_IDENTITY((2), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((2), 0, 1), (false ? _GLF_FUZZED(ivec3(50018, 27892, 60714)) : _GLF_IDENTITY(ivec3((2), 0, 1), ~ (~ (ivec3((2), 0, 1))))))), (int(_GLF_IDENTITY(ivec3((2), 0, 1), (false ? _GLF_FUZZED(ivec3(50018, 27892, 60714)) : ivec3((2), 0, _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1)))))))))) - 0)) : _GLF_FUZZED(-87599))) ^ _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0)), 0 ^ (2))), 0 | (~ _GLF_IDENTITY((_GLF_IDENTITY(2, 0 ^ (2))), ((_GLF_IDENTITY(2, 0 ^ (2)))) >> 0)))))) >> 0))) * 1), int(2))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
