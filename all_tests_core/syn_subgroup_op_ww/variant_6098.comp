#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) >> 0)), max(0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), int(ivec4((int(8)), 1, 1, (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ (0 | 0))))) >> 0)), 0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(ivec3(8, 0, 0)), min(int(ivec3(8, 0, 0)), _GLF_IDENTITY(int(ivec3(8, 0, 0)), int(ivec4(int(ivec3(8, 0, 0)), 1, 0, 1)))))))) >> 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(! (! (false)), true, false)), (bool(bvec3(! (! (false)), true, false))) || false))))))))))))), false, false)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))))) || false), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))), false, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))), false, true)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), true, true, true)), (bool(bvec4((! (false)), true, true, true))) || false))), false, false))))) && true))))))))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false)), false, false)))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_DEAD(false), false))) && true)))))))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false))))))))), true && (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false))))))))))))))), (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false)), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false)), false)))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false))))), true)))))))))), true && (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false)))))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false)))))), true)))))))))))))))) && true))) || false)))
            barrier();
           barrier();
          }
        }
      }
    }
  }
 else
  {
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u), 0u))), workgroup_id)), max(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (uvec2(workgroup_id, 0u)) >> uvec2(0u, 0u)), clamp(_GLF_IDENTITY(uvec2(workgroup_id, 0u), _GLF_IDENTITY((false ? _GLF_FUZZED((uvec2(2500u, 85383u) * workgroup_size)) : uvec2(workgroup_id, 0u)), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED((uvec2(2500u, 85383u) * workgroup_size)) : uvec2(workgroup_id, 0u)), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec3((false ? _GLF_FUZZED((uvec2(2500u, 85383u) * workgroup_size)) : uvec2(workgroup_id, 0u)), 0u), uvec3(uvec4(uvec3((false ? _GLF_FUZZED((uvec2(2500u, 85383u) * workgroup_size)) : uvec2(workgroup_id, 0u)), 0u), 1u)))), clamp(uvec2(_GLF_IDENTITY(uvec3((false ? _GLF_FUZZED((uvec2(2500u, 85383u) * workgroup_size)) : uvec2(workgroup_id, 0u)), 0u), uvec3(uvec4(uvec3((false ? _GLF_FUZZED((uvec2(2500u, 85383u) * workgroup_size)) : uvec2(workgroup_id, 0u)), 0u), 1u)))), uvec2(_GLF_IDENTITY(uvec3((false ? _GLF_FUZZED((uvec2(2500u, 85383u) * workgroup_size)) : uvec2(workgroup_id, 0u)), 0u), uvec3(uvec4(uvec3((false ? _GLF_FUZZED((uvec2(2500u, 85383u) * workgroup_size)) : uvec2(workgroup_id, 0u)), 0u), 1u)))), uvec2(_GLF_IDENTITY(uvec3((false ? _GLF_FUZZED((uvec2(2500u, 85383u) * workgroup_size)) : uvec2(workgroup_id, 0u)), 0u), uvec3(uvec4(uvec3((false ? _GLF_FUZZED((uvec2(2500u, 85383u) * workgroup_size)) : uvec2(workgroup_id, 0u)), 0u), 1u))))))) : _GLF_FUZZED(uvec2(137276u, 88354u))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (uvec2(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), 0u)) / uvec2(1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(workgroup_id, 0u), (uvec2(workgroup_id, 0u)) / uvec2(1u, 1u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(uvec2(workgroup_id, 0u), (uvec2(workgroup_id, 0u)) / uvec2(1u, 1u)))), clamp(uvec2((_GLF_IDENTITY(uvec2(workgroup_id, 0u), (uvec2(workgroup_id, 0u)) / uvec2(1u, 1u)))), uvec2((_GLF_IDENTITY(uvec2(workgroup_id, 0u), (uvec2(workgroup_id, 0u)) / uvec2(1u, 1u)))), uvec2((_GLF_IDENTITY(uvec2(workgroup_id, 0u), (uvec2(workgroup_id, 0u)) / uvec2(1u, 1u))))))), ~ (~ (uvec2(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(uvec2(workgroup_id, 0u), (uvec2(workgroup_id, 0u)) / uvec2(1u, 1u)))), clamp(uvec2((_GLF_IDENTITY(uvec2(workgroup_id, 0u), (uvec2(workgroup_id, 0u)) / uvec2(1u, 1u)))), uvec2((_GLF_IDENTITY(uvec2(workgroup_id, 0u), (uvec2(workgroup_id, 0u)) / uvec2(1u, 1u)))), uvec2((_GLF_IDENTITY(uvec2(workgroup_id, 0u), (uvec2(workgroup_id, 0u)) / uvec2(1u, 1u))))))))))) ^ uvec2(0u, 0u)), uvec2(workgroup_id, 0u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 0u))), 1u), clamp(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(0u, (0u) << 0u)))))), 1u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), 0u + (workgroup_id)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), 0u | (_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id))))) * 1u), uint(uvec2(_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), 1u)))))) << 0u), uint(uvec2(workgroup_id, 0u))), _GLF_IDENTITY(1u, (1u) >> 0u)), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 0u))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 0u))))), 1u)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (_GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (uint(uvec2(workgroup_id, 0u))) << 0u)) - 0u)), max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (_GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (uint(uvec2(workgroup_id, 0u))) << 0u)) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (_GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (uint(uvec2(workgroup_id, 0u))) << 0u)) - 0u)), max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (_GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (uint(uvec2(workgroup_id, 0u))) << 0u)) - 0u)), _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (_GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (uint(uvec2(workgroup_id, 0u))) << 0u)) - 0u)))))), _GLF_IDENTITY(1u, 0u | (1u))), clamp(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 0u))), 1u), uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 0u))), 1u), uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, _GLF_IDENTITY(0u, (0u) / 1u)))), 1u))), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (_GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (uint(uvec2(workgroup_id, 0u))) << 0u)) - 0u)), max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (_GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (uint(uvec2(workgroup_id, 0u))) << 0u)) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (_GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (uint(uvec2(workgroup_id, 0u))) << 0u)) - 0u)), max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (_GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (uint(uvec2(workgroup_id, 0u))) << 0u)) - 0u)), _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (_GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (uint(uvec2(workgroup_id, 0u))) << 0u)) - 0u)))))), _GLF_IDENTITY(1u, 0u | (1u))), clamp(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 0u))), 1u), uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 0u))), 1u), uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, _GLF_IDENTITY(0u, (0u) / 1u)))), 1u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (_GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (uint(uvec2(workgroup_id, 0u))) << 0u)) - 0u)), max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (_GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (uint(uvec2(workgroup_id, 0u))) << 0u)) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (_GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (uint(uvec2(workgroup_id, 0u))) << 0u)) - 0u)), max(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (_GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (uint(uvec2(workgroup_id, 0u))) << 0u)) - 0u)), _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (_GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), (uint(uvec2(workgroup_id, 0u))) << 0u)) - 0u)))))), _GLF_IDENTITY(1u, 0u | (1u))), clamp(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 0u))), 1u), uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 0u))), 1u), uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, _GLF_IDENTITY(0u, (0u) / 1u)))), 1u)))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)), 0u))), 1u), clamp(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 0u))), 1u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 0u))), (_GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 0u)))) | (_GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 0u))))), 1u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_id), (false ? _GLF_FUZZED(workgroup_size) : uint(workgroup_id)))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_id), (false ? _GLF_FUZZED(workgroup_size) : uint(workgroup_id)))), (uint(_GLF_IDENTITY(uint(workgroup_id), (false ? _GLF_FUZZED(workgroup_size) : uint(workgroup_id))))) - 0u))))), uint(uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))) ^ (workgroup_id)), 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_id), (false ? _GLF_FUZZED(workgroup_size) : uint(workgroup_id)))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_id), (false ? _GLF_FUZZED(workgroup_size) : uint(workgroup_id)))), (uint(_GLF_IDENTITY(uint(workgroup_id), (false ? _GLF_FUZZED(workgroup_size) : uint(workgroup_id))))) - 0u))))), uint(uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))) ^ (workgroup_id)), 0u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_id), (false ? _GLF_FUZZED(workgroup_size) : uint(workgroup_id)))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_id), (false ? _GLF_FUZZED(workgroup_size) : uint(workgroup_id)))), (uint(_GLF_IDENTITY(uint(workgroup_id), (false ? _GLF_FUZZED(workgroup_size) : uint(workgroup_id))))) - 0u))))), uint(uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u))))) ^ (workgroup_id)), 0u))), 1u, 0u, 0u)))))), 1u)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), (uvec2(workgroup_id, 0u)) ^ uvec2(0u, 0u)))), 1u), clamp(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), 0u))), 1u), uvec2(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec3(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), 1u, 1u))), 0u)), max(_GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), 0u | (_GLF_IDENTITY(uint(uvec2(workgroup_id, 0u)), min(uint(uvec2(workgroup_id, 0u)), uint(uvec2(workgroup_id, 0u))))))))), uint(uvec2(workgroup_id, 0u))))), 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 0u))), 1u), (uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 0u))), 1u)) ^ _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))))))))))), _GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), subgroup_size));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
  }
 else
  {
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (subgroup_local_id) - 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)), (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))) + 0u)) / 1u, uint(uvec2((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) / 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))) / 1u, uint(uvec2((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) / 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / abs(1.0)), injectionSwitch.x)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))) / 1u, uint(uvec2((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) / 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / abs(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.9)), bool(false))))), injectionSwitch.x))))))) / 1u))) ^ 0u));
 for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (_GLF_IDENTITY(0, 0 | (0))) - int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(85167) : int(6))))), _GLF_IDENTITY(! (! (_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(85167) : int(6))))))), ! (! (! (! (_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(85167) : int(6)))))))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(sin(vec2(0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), true))))))))))))) || false))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(5710.8102, -4.5)) : injectionSwitch))[0] : _GLF_FUZZED(_GLF_IDENTITY(7072.6347, (7072.6347) - abs(0.0))))), injectionSwitch[1]), (true ? vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(5710.8102, -4.5)) : injectionSwitch))[0] : _GLF_FUZZED(_GLF_IDENTITY(7072.6347, (7072.6347) - abs(0.0))))), injectionSwitch[1]) : _GLF_FUZZED(vec2(359.264, -9491.9772))))).y)))), bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(7072.6347))), injectionSwitch[1])).y))))))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
        }
      }
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) / ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) + 0)))) >> _GLF_IDENTITY(int(0), int(0))))), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)))))) >> 0u) % subgroup_size), (workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) / ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) + 0)))) >> _GLF_IDENTITY(int(0), int(0))))), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)))))) >> 0u) % subgroup_size)) << 0u);
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))); _injected_loop_counter ++)
      {
       atomicStore(buf[virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (4) - 0));
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y))), bool(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) / (0u | 1u)) == _GLF_IDENTITY(0, (0) ^ 0))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))))), (false ? _GLF_FUZZED(min(-10543, -6061)) : int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           subgroupAll(_GLF_IDENTITY(true, (true) || false));
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       do
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(2), int(2))), (false ? _GLF_FUZZED(85656) : ~ (_GLF_IDENTITY(int(2), int(2))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (0 ^ 0) ^ (_GLF_IDENTITY(int(2), int(2))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), mix(float(_GLF_FUZZED(_GLF_IDENTITY(float((bvec3(true, false, false) != bvec3(false, true, false))), (_GLF_IDENTITY(float((bvec3(true, false, false) != bvec3(false, true, false))), mix(float(_GLF_FUZZED(6.7)), float(float((bvec3(true, false, false) != bvec3(false, true, false)))), bool(true)))) * 1.0))), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(2.1)), bool(false)))) / determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0)))))) | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0 + (int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)), _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? (int(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(_injected_loop_counter)))) / (1 ^ 0)) | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0))))) | (int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0 + (int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.7), _GLF_FUZZED(-3928.5919)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch)).x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0 + (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))))))))); _GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_injected_loop_counter --)))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
              barrier();
             for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1)))), int(ivec2(0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1)))), 0))))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), (injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y)))))) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true)))), true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), (bool(bool(false))) || false), false, true)))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true))))))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bool(false))) || false), false, true)))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true))))))))) && true), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false || (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bool(false))) || false), false, true)))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true))))))))) && true)))), true))))) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))) && true, ! _GLF_IDENTITY((! ((false) && true)), ! (_GLF_IDENTITY(! ((! ((false) && true))), ! (! (! ((! ((false) && true))))))))), _GLF_IDENTITY(true, (true) || false))))) || _GLF_IDENTITY(false, (false) || false))))))))))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))), true, true)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true)), false || (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true)))), (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true)), false || (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false), true && ((false))) && true) || false))), true, true))))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true)), false || (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true)))), (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true)), false || (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false), true && ((false))) && true) || false))), true, true))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true)), false || (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true)))), (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true)), false || (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false), true && ((false))) && true) || false))), true, true))))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true)), false || (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true)))), (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true)), false || (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false), true && ((false))) && true) || false))), true, true))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true)), false || (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true)))), (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true)), false || (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false), true && ((false))) && true) || false))), true, true))))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, true)), (bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true)), false || (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true)))), (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true)), false || (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false), true && ((false))) && true) || false))), true, true))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true)), false || (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true)))), (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true)), false || (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false), true && ((false))) && true) || false))), true, true))))) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, true))) && true))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (! (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true))))))))) && true)), bool(bvec2(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true))))))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), true))))))))) && true)), true))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))) || false), false, true)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false))), (bool(bool(false))) || false), false, true)))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, _GLF_IDENTITY(true, _GLF_IDENTITY(true, false || (true)) && (true))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, false || (false))))), ! (! ((bool(bool(_GLF_IDENTITY(false, false || (false)))))))) || false), false, true))))))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)))))))), _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), (bool(bool(false))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), true))), true)))))))))), bool(bvec4(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), (bool(bool(false))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), true))), true)))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)))))))), _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), (bool(bool(false))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), true))), true)))))))))), bool(bvec4(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), (bool(bool(false))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), true))), true)))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))), true)))))) || false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true))))), (false) && true)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (! (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true))))))))) && true)), bool(bvec2(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true))))))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), true))))))))) && true)), true))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))) || false), false, true)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false))), (bool(bool(false))) || false), false, true)))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, _GLF_IDENTITY(true, _GLF_IDENTITY(true, false || (true)) && (true))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, false || (false))))), ! (! ((bool(bool(_GLF_IDENTITY(false, false || (false)))))))) || false), false, true))))))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)))))))), _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), (bool(bool(false))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), true))), true)))))))))), bool(bvec4(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), (bool(bool(false))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), true))), true)))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)))))))), _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), (bool(bool(false))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), true))), true)))))))))), bool(bvec4(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), (bool(bool(false))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), true))), true)))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))), true)))))) || false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true))))), (false) && true)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (! (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true))))))))) && true)), bool(bvec2(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true))))))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), true))))))))) && true)), true))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))) || false), false, true)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false))), (bool(bool(false))) || false), false, true)))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, _GLF_IDENTITY(true, _GLF_IDENTITY(true, false || (true)) && (true))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, false || (false))))), ! (! ((bool(bool(_GLF_IDENTITY(false, false || (false)))))))) || false), false, true))))))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)))))))), _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), (bool(bool(false))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), true))), true)))))))))), bool(bvec4(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), (bool(bool(false))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), true))), true)))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)))))))), _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), (bool(bool(false))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), true))), true)))))))))), bool(bvec4(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), (bool(bool(false))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), true))), true)))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))), true)))))) || false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true))))), (false) && true)))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), ! (! (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true))))))))) && true)), bool(bvec2(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true))))))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), true))))))))) && true)), true))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))) || false), false, true)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), (! (bool(bool(false)))) || false))), (bool(bool(false))) || false), false, true)))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, _GLF_IDENTITY(true, _GLF_IDENTITY(true, false || (true)) && (true))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, false || (false))))), ! (! ((bool(bool(_GLF_IDENTITY(false, false || (false)))))))) || false), false, true))))))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)))))))), _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), (bool(bool(false))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), true))), true)))))))))), bool(bvec4(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), (bool(bool(false))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), true))), true)))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)))))))), _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), (bool(bool(false))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), true))), true)))))))))), bool(bvec4(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), (bool(bool(false))) || false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), false, true)), true))), true)))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))), true)))))) || false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true))))), (false) && true)))))))))))))) && true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
             atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) + _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))))) : uint(2))), 4, 64, 4);
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x))), float(_GLF_FUZZED(2361.8636)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(float(_GLF_FUZZED((+ 5.5))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x))), float(_GLF_FUZZED(2361.8636)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 1.0)), 0.0, 0.0), (mat2x3(injectionSwitch.y, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 1.0)), 0.0, 0.0)) * mat2(1.0)))), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(2361.8636)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) && true)), false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), false), true, true))), false, false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), false), true, true))), false, false)))), true, true)))))))) > injectionSwitch.y))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false))) && true))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             else
              {
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 | (67007 & int(_GLF_ZERO(0.0, injectionSwitch.x))), (0 | (67007 & int(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
          }
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
        }
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true)), true)))) && true, ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true)), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true))))), false, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true))))), false, true)))))))), true)))) && true)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) + 0))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             subgroupAll(false);
            }
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(uvec2(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(1u ^ ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(uint(uvec3(1u ^ ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), ((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u))))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u)), uint(uvec2(uint(uvec3(1u ^ ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), ((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u))))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u)), 0u))))) ^ (next_virtual_gid)), 0u)))], uint(2), 4, 64, 4);
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
    }
  }
 else
  {
  }
}
