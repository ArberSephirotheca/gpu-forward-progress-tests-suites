#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))))), _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(max(gl_NumWorkGroups, gl_NumWorkGroups), (max(gl_NumWorkGroups, gl_NumWorkGroups)) * uvec3(1u, 1u, 1u)))) - uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, _GLF_IDENTITY(0u, (0u) / _GLF_IDENTITY(1u, (1u) + 0u)), 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(92674u, 48661u, 79293u)) : gl_NumWorkGroups)))))))), (false ? _GLF_FUZZED((~ uvec3(190079u, 84840u, 110889u))) : _GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), ~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(100373u, 121286u, 153434u)) : gl_NumWorkGroups))) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, _GLF_IDENTITY(0u, (0u) / _GLF_IDENTITY(1u, (1u) + 0u)), 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(92674u, 48661u, 79293u)) : gl_NumWorkGroups)))))))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), _GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY(((gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 0u | (1u)), _GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u) * (((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))))) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)))))), (~ _GLF_IDENTITY(((gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u) * (((gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))))))) - uvec3(0u, 0u, 0u))), _GLF_IDENTITY(((~ _GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), ((gl_NumWorkGroups) | (gl_NumWorkGroups)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (((gl_NumWorkGroups) | (gl_NumWorkGroups))), uvec3(1u, 1u, 1u) * (uvec3(1u, 1u, 1u) * (((gl_NumWorkGroups) | (gl_NumWorkGroups)))))))) + uvec3(_GLF_IDENTITY(0u, uint(uint(0u))), 0u, 0u), min(((~ _GLF_IDENTITY(((gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(1u, 1u, 1u) * (((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) | (gl_NumWorkGroups)))))) + uvec3(0u, 0u, 0u), _GLF_IDENTITY(((~ _GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), (true ? (gl_NumWorkGroups) | (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(156334u, 111227u, 182407u))))), uvec3(1u, 1u, 1u) * (((gl_NumWorkGroups) | (gl_NumWorkGroups)))))) + uvec3(0u, 0u, 0u), _GLF_IDENTITY((((~ _GLF_IDENTITY(((gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u) * (_GLF_IDENTITY(((gl_NumWorkGroups) | (gl_NumWorkGroups)), (((gl_NumWorkGroups) | (gl_NumWorkGroups))) | (((gl_NumWorkGroups) | (gl_NumWorkGroups)))))))) + uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY((((~ _GLF_IDENTITY(((gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u) * (_GLF_IDENTITY(((gl_NumWorkGroups) | (gl_NumWorkGroups)), (((gl_NumWorkGroups) | (gl_NumWorkGroups))) | (((gl_NumWorkGroups) | (gl_NumWorkGroups)))))))) + uvec3(0u, 0u, 0u)), min((((~ _GLF_IDENTITY(((gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u) * (_GLF_IDENTITY(((gl_NumWorkGroups) | (gl_NumWorkGroups)), (((gl_NumWorkGroups) | (gl_NumWorkGroups))) | (((gl_NumWorkGroups) | (gl_NumWorkGroups)))))))) + uvec3(0u, 0u, 0u)), (((~ _GLF_IDENTITY(((gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u) * (_GLF_IDENTITY(((gl_NumWorkGroups) | (gl_NumWorkGroups)), (((gl_NumWorkGroups) | (gl_NumWorkGroups))) | (((gl_NumWorkGroups) | (gl_NumWorkGroups)))))))) + uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((((~ _GLF_IDENTITY(((gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u) * (_GLF_IDENTITY(((gl_NumWorkGroups) | (gl_NumWorkGroups)), (((gl_NumWorkGroups) | (gl_NumWorkGroups))) | (((gl_NumWorkGroups) | (gl_NumWorkGroups)))))))) + uvec3(0u, 0u, 0u)), clamp((((~ _GLF_IDENTITY(((gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u) * (_GLF_IDENTITY(((gl_NumWorkGroups) | (gl_NumWorkGroups)), (((gl_NumWorkGroups) | (gl_NumWorkGroups))) | (((gl_NumWorkGroups) | (gl_NumWorkGroups)))))))) + uvec3(0u, 0u, 0u)), (((~ _GLF_IDENTITY(((gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u) * (_GLF_IDENTITY(((gl_NumWorkGroups) | (gl_NumWorkGroups)), (((gl_NumWorkGroups) | (gl_NumWorkGroups))) | (((gl_NumWorkGroups) | (gl_NumWorkGroups)))))))) + uvec3(0u, 0u, 0u)), (((~ _GLF_IDENTITY(((gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(_GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u) * (_GLF_IDENTITY(((gl_NumWorkGroups) | (gl_NumWorkGroups)), (((gl_NumWorkGroups) | (gl_NumWorkGroups))) | (((gl_NumWorkGroups) | (gl_NumWorkGroups)))))))) + uvec3(0u, 0u, 0u)))))) + uvec3(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u))))))))) | (~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups) | (gl_NumWorkGroups)))))))))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, float(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) : _GLF_FUZZED(-74.19))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))) && true), ! (! (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))))))), _GLF_IDENTITY(false, (false) || false), true))), true), false))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), (true ? workgroup_id : _GLF_FUZZED(subgroup_local_id)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u)))), clamp(((subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0)) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1))) % subgroup_size), ~ (~ ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1), ((subgroup_local_id + 1)) >> 0u) % subgroup_size))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, virtual_gid), (max(virtual_gid, virtual_gid)) | 0u))) / _GLF_IDENTITY((_GLF_IDENTITY(1u ^ 0u, (1u ^ 0u) | (1u ^ 0u))), (_GLF_IDENTITY(true ? _GLF_IDENTITY((1u ^ 0u), (_GLF_IDENTITY((1u ^ 0u), uint(uvec3((1u ^ 0u), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))), uint(_GLF_IDENTITY(1u, uint(uint(1u))))))), _GLF_IDENTITY(uint(1u), uint(1u))))))))) | ((1u ^ 0u))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), clamp(_GLF_IDENTITY(true ? _GLF_IDENTITY((1u ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1u ^ 0u), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1u ^ 0u, clamp(_GLF_IDENTITY(1u, ~ (~ (1u))) ^ 0u, 1u ^ 0u, 1u ^ 0u))), clamp((1u ^ 0u), (1u ^ 0u), (1u ^ 0u))), (1u ^ 0u), (1u ^ 0u))), uint(uvec3((1u ^ 0u), 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_size) : 1u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | 0u))), uint(uvec3(_GLF_IDENTITY(uint(1u), uint(1u)), 0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), _GLF_IDENTITY(uint(1u), uint(1u))))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(uint(1u), uint(1u)))), 0u + _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) >> ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (true ? _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(next_virtual_gid)))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, min(1u, 1u)))), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) - 0u))), _GLF_IDENTITY(uint(1u), uint(1u))))), (((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) >> ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (true ? _GLF_IDENTITY(uint(0u), uint(0u)) : _GLF_FUZZED(next_virtual_gid)))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, min(1u, 1u)))), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) - 0u))), _GLF_IDENTITY(uint(1u), uint(1u)))))) | 0u))))))), max((_GLF_IDENTITY(_GLF_IDENTITY((1u ^ 0u), clamp(_GLF_IDENTITY((1u ^ 0u), clamp((1u ^ 0u), (1u ^ 0u), (1u ^ 0u))), (1u ^ 0u), (1u ^ 0u))), uint(uvec3((1u ^ 0u), 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(uint(1u), uint(1u)))), 0u + ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, min(1u, 1u)))), clamp(_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(uint(1u), uint(1u))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((1u ^ 0u), clamp(_GLF_IDENTITY((1u ^ 0u), clamp((1u ^ 0u), (1u ^ 0u), (1u ^ 0u))), (1u ^ 0u), (1u ^ 0u))), uint(uvec3((1u ^ 0u), 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(uvec2(uint(1u), 1u), _GLF_IDENTITY(uvec2(uvec4(uvec2(uint(1u), 1u), (1u | 1u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), uvec2(0u, 0u) ^ (uvec2(uvec4(uvec2(uint(1u), 1u), (1u | 1u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(uint(1u), uint(1u)))), 0u + ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, min(1u, 1u)))), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u))))) | (_GLF_IDENTITY(uint(1u), uint(1u))) : _GLF_FUZZED(workgroup_size)))), _GLF_IDENTITY(uint(1u), uint(1u))))))))))))) | ((1u ^ 0u))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), 0u | (true ? _GLF_IDENTITY((1u ^ 0u), (_GLF_IDENTITY((1u ^ 0u), uint(uvec3((1u ^ 0u), 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(uint(1u), uint(1u)))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, uint(uint(1u)))))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(uint(1u), uint(1u))))) | 0u)))))) | ((1u ^ 0u))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))), _GLF_IDENTITY(true ? _GLF_IDENTITY((1u ^ 0u), (_GLF_IDENTITY((1u ^ 0u), uint(uvec3((1u ^ 0u), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(virtual_gid))) >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(uint(1u), uint(1u))))))))) | ((1u ^ 0u))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY((1u ^ 0u), (_GLF_IDENTITY((1u ^ 0u), uint(uvec3((1u ^ 0u), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), clamp(_GLF_IDENTITY(uint(1u), (uint(1u)) - 0u), uint(1u), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) * 1u)) >> 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u))), max((0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(uint(1u), uint(1u))))))))) | ((1u ^ 0u))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))))), (true ? _GLF_IDENTITY((1u ^ 0u), (_GLF_IDENTITY((1u ^ 0u), uint(uvec3((1u ^ 0u), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (true ? _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, 0u ^ (1u))), (uint(1u)) | 0u)) : _GLF_FUZZED(num_workgroup))), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(uint(1u), uint(1u))))))))) | ((1u ^ 0u))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))))), ~ (~ (_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))))) << 0u), clamp(_GLF_IDENTITY(true ? _GLF_IDENTITY((1u ^ 0u), (_GLF_IDENTITY((1u ^ 0u), uint(uvec3((1u ^ 0u), _GLF_IDENTITY(1u, ~ (~ (1u))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u)))), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), (true ? 0u >> _GLF_IDENTITY(uint(1u), uint(1u)) : _GLF_FUZZED(atomicAdd(next_virtual_gid, workgroup_size))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(uint(1u), uint(1u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(1u), uint(1u))))))))) | ((1u ^ 0u))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (true ? _GLF_IDENTITY((1u ^ 0u), (_GLF_IDENTITY((1u ^ 0u), uint(uvec3(_GLF_IDENTITY((1u ^ 0u), ((1u ^ 0u)) / 1u), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(uint(1u), uint(1u))))))))) | ((1u ^ 0u))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), max(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), ~ (~ (_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))), _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY((1u ^ 0u), (_GLF_IDENTITY((1u ^ 0u), uint(uvec3((1u ^ 0u), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) + 0u), uint(1u)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(uint(1u), uint(1u))))))))) | ((1u ^ 0u))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (true ? _GLF_IDENTITY((1u ^ 0u), (_GLF_IDENTITY((1u ^ 0u), uint(uvec3((1u ^ 0u), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(uint(1u), uint(1u))))))))) | ((1u ^ 0u))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) << 0u), _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY((1u ^ 0u), (_GLF_IDENTITY((1u ^ 0u), uint(uvec3((1u ^ 0u), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 0u ^ ((0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))) - 0u) | (_GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) << ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) << _GLF_IDENTITY(uint(8u), uint(8u))))), uint(1u))))))))) | ((1u ^ 0u))), min(_GLF_IDENTITY((1u ^ 0u), (_GLF_IDENTITY((1u ^ 0u), uint(uvec3((1u ^ 0u), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) / (0u ^ 1u)) | (_GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(uint(1u), uint(1u))))))))) | ((1u ^ 0u))), _GLF_IDENTITY((1u ^ 0u), (_GLF_IDENTITY((1u ^ 0u), uint(uvec3((1u ^ 0u), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(uint(1u), uint(1u))))))))) | ((1u ^ 0u))))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (true ? _GLF_IDENTITY((1u ^ 0u), (_GLF_IDENTITY((1u ^ 0u), uint(uvec3((_GLF_IDENTITY(1u ^ 0u, (1u ^ 0u) >> 0u)), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) ^ 0u)))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(uint(1u), uint(1u))))))))) | ((1u ^ 0u))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) << 0u)))) - 0u), true ? _GLF_IDENTITY((1u ^ 0u), (_GLF_IDENTITY((1u ^ 0u), uint(uvec3((1u ^ 0u), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(uint(1u), uint(1u))))))))) | ((1u ^ 0u))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (subgroup_id))), max(~ (_GLF_IDENTITY(subgroup_id, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (subgroup_id))), ~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), ~ (~ ((0u << _GLF_IDENTITY(uint(4u), uint(4u)))))) ^ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))))))))))))))], uint(1), _GLF_IDENTITY(4, min(4, 4)), 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, 1, 0, 1), ivec4(0, 0, 0, 0) ^ (ivec4(64, 1, 0, 1))))), 4);
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(atomicAdd(workgroup_base, num_workgroup)))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), (injectionSwitch.x) + _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9776.3976) : 0.0))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)) && true)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), true), bvec2(bvec4(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), true), false, false))))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(90.31), _GLF_FUZZED(442.574)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
