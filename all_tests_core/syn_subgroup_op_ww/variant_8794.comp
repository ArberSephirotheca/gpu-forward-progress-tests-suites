#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 ivec4 _f0;
} ;

struct _GLF_struct_6 {
 int _f0;
 _GLF_struct_5 _f1;
 uint subgroup_local_id;
} ;

struct _GLF_struct_2 {
 uvec2 _f0;
 vec2 _f1;
 vec2 _f2;
 uvec3 _f3;
 vec3 _f4;
 mat4x3 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
 vec3 _f1;
 mat3x4 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_0 {
 int _f0;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 int _f1;
 ivec4 _f2;
 mat3 _f3;
 _GLF_struct_1 _f4;
 bvec3 _f5;
 _GLF_struct_2 _f6;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 _GLF_struct_3 _f1;
 ivec2 _f2;
 uint subgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(float(29251)), 1.0 * (_GLF_FUZZED(float(_GLF_IDENTITY(29251, 0 + (29251)))))), _GLF_FUZZED(9847.2700)), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), min(vec2(vec3(injectionSwitch, 0.0)), vec2(vec3(injectionSwitch, 0.0))))))[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, false)))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, false)))), false)), false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, false)))), (bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, false))))) && true), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, false)))), (bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, false))))) && true), true, true))))) || false), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(uvec2(1u), _GLF_struct_3(_GLF_struct_0(1), 1, ivec4(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) | (1)), _GLF_IDENTITY(1, 0 ^ (1)), 1))), mat3(1.0), _GLF_struct_1(ivec4(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, min(1, 1)), (0 & -95711), 1, 1)))))), vec3(1.0), mat3x4(1.0), ivec2(1)), bvec3(true), _GLF_struct_2(uvec2(1u), vec2(1.0), vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), clamp(_GLF_IDENTITY(1.0 * (1.0), _GLF_IDENTITY(mix(float(1.0 * (1.0)), _GLF_IDENTITY(float(_GLF_FUZZED(-54.55)), max(float(_GLF_FUZZED(-54.55)), float(_GLF_FUZZED(_GLF_IDENTITY(-54.55, clamp(_GLF_IDENTITY(-54.55, (-54.55) * 1.0), _GLF_IDENTITY(-54.55, clamp(-54.55, -54.55, -54.55)), -54.55)))))), bool(false)), (false ? _GLF_FUZZED(-78.09) : mix(float(1.0 * (1.0)), float(_GLF_FUZZED(-54.55)), bool(false))))), _GLF_IDENTITY(1.0 * _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(9.2)), float((1.0)), bool(true))), max(_GLF_IDENTITY(1.0, (1.0) / 1.0) * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 1.0 * (1.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) * (1.0))))) / _GLF_IDENTITY(determinant(mat4(1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0) + (1.0)), 1.0, 1.0)), mix(float(determinant(mat4(1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - abs(0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 1.0))), float(_GLF_FUZZED(1722.8226)), bool(false))))), uvec3(1u), _GLF_IDENTITY(vec3(1.0), mix(vec3(_GLF_FUZZED(2.1), _GLF_FUZZED(4627.7473), _GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0)), mix(vec3(((vec3(1.0)))[0], _GLF_IDENTITY(_GLF_IDENTITY(((vec3(1.0))), (((vec3(1.0)))) / vec3(1.0, 1.0, 1.0))[1], max(((vec3(1.0)))[1], _GLF_IDENTITY(_GLF_IDENTITY(((vec3(1.0))), (_GLF_IDENTITY(((vec3(1.0))), max(_GLF_IDENTITY(((vec3(1.0))), min(((vec3(1.0))), ((vec3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))))), ((vec3(1.0)))))) + log(exp(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, clamp((0.0) / 1.0, (0.0) / 1.0, _GLF_IDENTITY((0.0) / 1.0, min((0.0) / 1.0, (0.0) / 1.0))))) : _GLF_FUZZED(uintBitsToFloat(101524u)))))), _GLF_IDENTITY(0.0, 1.0 * (0.0))))))))[1], (true ? _GLF_IDENTITY(((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * mat3(1.0))))[1], mix(float(_GLF_IDENTITY(((_GLF_IDENTITY(vec3(1.0), min(vec3(1.0), vec3(1.0)))))[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(6499.2575, min(6499.2575, 6499.2575)))), float(mat3x4(float(_GLF_FUZZED(6499.2575)), 1.0, 0.0, sqrt(1.0), 0.0, abs(0.0), 0.0, abs(1.0), 0.0, round(length(normalize(1.0))), sqrt(1.0), 1.0))), float(((vec3(1.0)))[1]), bool(true)))), float(_GLF_FUZZED(-79.26)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), (bool(_GLF_IDENTITY(false, true && (false)))) || false))) : _GLF_FUZZED(-5.4))))), _GLF_IDENTITY(_GLF_FUZZED(885.779), _GLF_IDENTITY(clamp(_GLF_FUZZED(885.779), _GLF_FUZZED(885.779), _GLF_FUZZED(885.779)), float(vec4(clamp(_GLF_FUZZED(885.779), _GLF_FUZZED(885.779), _GLF_FUZZED(885.779)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), cos(0.0)))))), vec3(_GLF_FUZZED(8.5), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-84.59, clamp(_GLF_IDENTITY(-84.59, (true ? -84.59 : _GLF_FUZZED(-631.455))), -84.59, -84.59)), _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(-84.59, (false ? _GLF_FUZZED(8.1) : -84.59))))), ((vec3(1.0)))[2]), bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)) && _GLF_IDENTITY(true, false || (true))), false, true)))[_GLF_IDENTITY(2, 0 ^ (2))], (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)) : _GLF_FUZZED(-85.17))))) / _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(82.67)))))), 1.0, 1.0, 1.0, 0.0, 0.0, log(abs(1.0)), 1.0)), min(float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(log(abs(1.0)), clamp(log(abs(1.0)), _GLF_IDENTITY(log(abs(1.0)), mix(float(log(abs(1.0))), float(_GLF_FUZZED(-8.6)), bool(false))), log(abs(1.0)))), 1.0)), float(mat4x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0, log(abs(1.0)), 1.0))))))) ? _GLF_IDENTITY((vec3(1.0)), mix(vec3(((vec3(1.0)))[0], _GLF_IDENTITY(((vec3(1.0)))[1], max(((vec3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7112.7919)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))))[1], _GLF_IDENTITY(_GLF_IDENTITY(((vec3(1.0))), (_GLF_IDENTITY(((vec3(1.0))), max(((vec3(1.0))), (_GLF_IDENTITY((vec3(1.0)), mix(vec3(((vec3(1.0)))[0], _GLF_FUZZED((-4.5)), _GLF_FUZZED(-2.9)), vec3(_GLF_FUZZED(_GLF_IDENTITY(vec3(-6.8, 88.67, 689.700), min(vec3(-6.8, 88.67, 689.700), _GLF_IDENTITY(vec3(-6.8, 88.67, 689.700), (false ? _GLF_FUZZED(vec3(-1.6, 6.4, -5230.8997)) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(-6.8, 88.67, 689.700), max(vec3(-6.8, 88.67, 689.700), vec3(-6.8, 88.67, 689.700))), (_GLF_IDENTITY(vec3(-6.8, 88.67, 689.700), max(vec3(-6.8, 88.67, 689.700), vec3(-6.8, 88.67, 689.700)))) + vec3(0.0, 0.0, 0.0)))))).s), ((vec3(1.0)))[1], ((vec3(1.0)))[2]), bvec3(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5.7, 9.6)) : injectionSwitch)).x < injectionSwitch.y))))))))) + log(exp(vec3(0.0, 0.0, 0.0))))[_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), ~ (~ (int(_GLF_IDENTITY(1, (1) - 0)))))))], (_GLF_IDENTITY(true ? ((vec3(1.0)))[1] : _GLF_FUZZED(-5.4), _GLF_IDENTITY(clamp(_GLF_IDENTITY(true ? _GLF_IDENTITY(((vec3(1.0))), vec3(1.0, 1.0, 1.0) * ((_GLF_IDENTITY((vec3(1.0)), clamp((vec3(1.0)), (vec3(1.0)), (vec3(1.0)))))))[1] : _GLF_FUZZED(-5.4), (false ? _GLF_FUZZED(_GLF_IDENTITY(8.5, _GLF_IDENTITY(float(mat3(8.5, 1.0, sqrt(0.0), 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(1.0 * (float(mat3(8.5, 1.0, sqrt(0.0), 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0))), (false ? _GLF_FUZZED(9492.0704) : _GLF_IDENTITY(1.0 * (float(mat3(8.5, 1.0, sqrt(0.0), 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0))), float(float(_GLF_IDENTITY(1.0 * (float(mat3(8.5, 1.0, sqrt(0.0), 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0))), (1.0 * (float(mat3(8.5, 1.0, sqrt(0.0), 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0)))) / 1.0))))))))) : _GLF_IDENTITY(true ? ((vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0))))[1] : _GLF_FUZZED(-5.4), min(true ? _GLF_IDENTITY(((vec3(1.0))), max(((vec3(1.0))), _GLF_IDENTITY(((vec3(1.0))), (((vec3(1.0)))) / vec3(1.0, 1.0, 1.0))))[1] : _GLF_FUZZED(-5.4), true ? ((vec3(1.0)))[1] : _GLF_FUZZED(-5.4))))), true ? ((vec3(1.0)))[1] : _GLF_FUZZED(-5.4), _GLF_IDENTITY(true ? ((vec3(1.0)))[1] : _GLF_FUZZED(-5.4), mix(float(true ? _GLF_IDENTITY(((vec3(1.0))), min(((vec3(1.0))), ((vec3(1.0)))))[1] : _GLF_FUZZED(-5.4)), float(_GLF_FUZZED(53.22)), bool(false)))), mix(float(clamp(_GLF_IDENTITY(_GLF_IDENTITY(true ? ((vec3(1.0)))[1] : _GLF_FUZZED(-5.4), (false ? _GLF_FUZZED(_GLF_IDENTITY(8.5, mix(float(_GLF_FUZZED(-802.513)), float(8.5), bool(true)))) : _GLF_IDENTITY(true ? ((vec3(1.0)))[1] : _GLF_FUZZED(-5.4), min(true ? _GLF_IDENTITY(((vec3(1.0)))[1], (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(58.50) : ((vec3(1.0)))[1])) : _GLF_FUZZED(-5.4), true ? ((vec3(1.0)))[1] : _GLF_FUZZED(-5.4))))), min(_GLF_IDENTITY(true ? _GLF_IDENTITY(((vec3(1.0)))[1], float(mat4x3(((vec3(1.0)))[1], 1.0, 1.0, 1.0, abs(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(-5.4), (_GLF_IDENTITY(false ? _GLF_FUZZED(8.5) : _GLF_IDENTITY(true ? ((vec3(1.0)))[1] : _GLF_FUZZED(-5.4), min(true ? ((vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.2)), float(1.0), bool(true))), 0.0))), 1.0)))))[1] : _GLF_FUZZED(-5.4), true ? ((vec3(1.0)))[1] : _GLF_FUZZED(-5.4))), (true ? false ? _GLF_FUZZED(8.5) : _GLF_IDENTITY(true ? ((vec3(1.0)))[1] : _GLF_FUZZED(-5.4), min(true ? ((vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.2)), float(1.0), bool(true))), 0.0))), 1.0)))))[1] : _GLF_FUZZED(-5.4), true ? ((vec3(1.0)))[1] : _GLF_FUZZED(-5.4))) : _GLF_FUZZED(5.7))))), _GLF_IDENTITY(true ? ((vec3(1.0)))[1] : _GLF_FUZZED(-5.4), (false ? _GLF_FUZZED(8.5) : _GLF_IDENTITY(true ? ((vec3(1.0)))[1] : _GLF_FUZZED(-5.4), min(_GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? ((vec3(1.0)))[_GLF_IDENTITY(1, (1) ^ 0)] : _GLF_FUZZED(-5.4), true ? ((vec3(1.0)))[1] : _GLF_FUZZED(-5.4))))))), true ? ((vec3(1.0)))[1] : _GLF_FUZZED(-5.4), _GLF_IDENTITY(true ? ((vec3(1.0)))[1] : _GLF_FUZZED(-5.4), mix(float(true ? ((vec3(1.0)))[1] : _GLF_FUZZED(-5.4)), float(_GLF_FUZZED(53.22)), bool(false))))), float(_GLF_FUZZED(-40.43)), bool(false)))))))), _GLF_FUZZED(885.779)), vec3(_GLF_FUZZED(8.5), _GLF_IDENTITY(_GLF_FUZZED(-84.59), 1.0 * (_GLF_FUZZED(_GLF_IDENTITY(-84.59, mix(float(-84.59), float(_GLF_FUZZED(-6.1)), bool(false)))))), ((vec3(1.0)))[2]), bvec3(false, false, true)))[2] : _GLF_FUZZED(173.326)))), vec3(_GLF_IDENTITY((vec3(1.0))[0], mix(float(_GLF_FUZZED(5.5)), float(_GLF_IDENTITY((vec3(1.0))[0], max((vec3(1.0))[0], (_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log(-4.4)) : 1.0))) - log(1.0))), min(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log(_GLF_IDENTITY(-4.4, (_GLF_IDENTITY(-4.4, min(-4.4, -4.4))) / 1.0))) : 1.0))) - log(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log(-4.4)) : 1.0))) - log(1.0))), mix(vec3(_GLF_FUZZED(-1.3), (vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log(-4.4)) : 1.0))) - log(1.0))))[1], _GLF_FUZZED(-4.9)), vec3((vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log(-4.4)) : 1.0))) - log(1.0))))[0], _GLF_FUZZED(-4167.8350), (vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log(-4.4)) : 1.0))) - log(1.0))))[2]), bvec3(true, false, true))), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (false ? _GLF_FUZZED(log(-4.4)) : 1.0))) - _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))))), mix(vec3(_GLF_FUZZED(-1.3), (vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log(-4.4)) : 1.0))) - log(1.0))))[1], _GLF_FUZZED(-4.9)), vec3((vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log(-4.4)) : 1.0))) - log(1.0))))[0], _GLF_FUZZED(-4167.8350), _GLF_IDENTITY((_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log(-4.4)) : 1.0))) - log(1.0), (_GLF_IDENTITY((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log(-4.4)) : 1.0))) - log(1.0), ((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log(-4.4)) : 1.0))) - log(1.0)) / 1.0)) - 0.0))), mat3(1.0) * (vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log(-4.4)) : 1.0))) - log(1.0), (_GLF_IDENTITY((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log(-4.4)) : 1.0))) - log(1.0), ((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log(-4.4)) : 1.0))) - log(1.0)) / 1.0)) - 0.0))))))[2], (true ? (_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log(-4.4)) : 1.0))) - log(1.0), (_GLF_IDENTITY((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log(-4.4)) : 1.0))) - log(1.0), ((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log(-4.4)) : 1.0))) - log(1.0)) / 1.0)) - 0.0))), mat3(1.0) * (vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log(-4.4)) : 1.0))) - log(1.0), (_GLF_IDENTITY((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log(-4.4)) : 1.0))) - log(1.0), ((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(log(-4.4)) : 1.0))) - log(1.0)) / 1.0)) - 0.0))))))[2] : _GLF_FUZZED(vec3(-295.811, 4.7, -0.9)[2])))), bvec3(true, false, true)))) / vec3(1.0, 1.0, 1.0)))))[0]))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((vec3(1.0)), vec3(_GLF_IDENTITY(mat2(_GLF_IDENTITY((vec3(1.0)), clamp((vec3(1.0)), (vec3(1.0)), (vec3(1.0)))), 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), mix(vec3((vec3(1.0))[0], _GLF_FUZZED(-9.5), (vec3(1.0))[2]), vec3(_GLF_FUZZED((2.4 * -7.0)), _GLF_IDENTITY((vec3(1.0))[1], (false ? _GLF_FUZZED(-19.09) : (vec3(1.0))[1])), _GLF_FUZZED(79.33)), bvec3(false, true, false)))), clamp((vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.9)), bool(false))))), (vec3(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * sqrt(vec3(1.0, 1.0, 1.0)))), min((vec3(1.0)), (vec3(1.0)))))), 1.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0)), clamp((vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.9)), bool(false))))), (vec3(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * sqrt(vec3(1.0, 1.0, 1.0)))), min((vec3(1.0)), (vec3(1.0)))))), min(_GLF_IDENTITY((vec3(1.0)), clamp((vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.9)), bool(false))))), (vec3(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY((vec3(1.0)) * sqrt(vec3(1.0, 1.0, 1.0)), clamp((vec3(1.0)) * sqrt(vec3(1.0, 1.0, 1.0)), (vec3(1.0)) * sqrt(vec3(1.0, 1.0, 1.0)), (vec3(1.0)) * sqrt(vec3(1.0, 1.0, 1.0)))))), min(_GLF_IDENTITY((vec3(1.0)), ((vec3(1.0))) / vec3(1.0, 1.0, 1.0)), (vec3(1.0)))))), _GLF_IDENTITY((vec3(1.0)), clamp((vec3(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), max(float(1.0), _GLF_IDENTITY(float(1.0), 1.0 * (float(1.0))))), float(_GLF_FUZZED(-3.9)), bool(false))))), (vec3(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * sqrt(vec3(1.0, 1.0, 1.0)))), min((vec3(1.0)), (vec3(1.0)))))))), _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0)))), mat2(_GLF_IDENTITY(mat2x4(mat2(_GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0)), clamp((vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.9)), bool(false))))), (vec3(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * sqrt(vec3(1.0, 1.0, 1.0)))), min((vec3(1.0)), (vec3(1.0)))))), min(_GLF_IDENTITY((vec3(1.0)), clamp((vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.9)), bool(false))))), (vec3(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY((vec3(1.0)) * sqrt(vec3(1.0, 1.0, 1.0)), clamp((_GLF_IDENTITY(vec3(1.0), mix(vec3((vec3(1.0))[0], _GLF_FUZZED(0.7), _GLF_FUZZED(45.29)), vec3(_GLF_FUZZED(float((29695 << 71950))), (vec3(1.0))[1], (vec3(1.0))[2]), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) * sqrt(vec3(1.0, 1.0, 1.0)), (vec3(1.0)) * sqrt(vec3(1.0, 1.0, 1.0)), (vec3(1.0)) * sqrt(vec3(1.0, 1.0, 1.0)))))), min((vec3(1.0)), (vec3(1.0)))))), _GLF_IDENTITY((vec3(1.0)), clamp((vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.9)), bool(false))))), (vec3(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * sqrt(vec3(1.0, 1.0, 1.0)))), min((vec3(1.0)), (vec3(1.0)))))))), _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))))), mat2x4(mat4(mat2x4(mat2(_GLF_IDENTITY(_GLF_IDENTITY((vec3(1.0)), clamp((vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.9)), bool(false))))), (vec3(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * sqrt(vec3(1.0, 1.0, 1.0)))), min((vec3(1.0)), (vec3(1.0)))))), min(_GLF_IDENTITY((vec3(1.0)), clamp((vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.9)), bool(false))))), (vec3(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY((vec3(1.0)) * sqrt(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mix(vec3(_GLF_FUZZED(-62.08), _GLF_FUZZED(-4.1), _GLF_FUZZED(481.496)), vec3((vec3(1.0, 1.0, 1.0))[0], (vec3(1.0, 1.0, 1.0))[1], (vec3(1.0, 1.0, 1.0))[2]), bvec3(true, true, true)))), clamp(_GLF_IDENTITY((vec3(1.0)) * sqrt(vec3(1.0, 1.0, 1.0)), min(_GLF_IDENTITY((vec3(1.0)) * sqrt(vec3(1.0, 1.0, 1.0)), mix(vec3(_GLF_FUZZED(2.0), _GLF_FUZZED(9.0), _GLF_FUZZED(7.9)), vec3(_GLF_IDENTITY(((vec3(1.0)) * sqrt(vec3(1.0, 1.0, 1.0)))[0], float(mat3x2(((vec3(1.0)) * sqrt(vec3(1.0, 1.0, 1.0)))[0], 1.0, 1.0, 1.0, 1.0, 0.0))), ((vec3(1.0)) * sqrt(vec3(1.0, 1.0, 1.0)))[1], ((vec3(1.0)) * sqrt(vec3(1.0, 1.0, 1.0)))[2]), bvec3(true, true, true))), (vec3(1.0)) * sqrt(vec3(1.0, 1.0, 1.0)))), (vec3(1.0)) * sqrt(vec3(1.0, 1.0, 1.0)), (vec3(1.0)) * sqrt(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), min((vec3(1.0)), (vec3(1.0)))))), _GLF_IDENTITY((vec3(1.0)), clamp((vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.9)), bool(false))))), (vec3(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) * sqrt(vec3(1.0, 1.0, 1.0)))), min((vec3(1.0)), (vec3(1.0)))))))), _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))))))))))) - mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(mat2(mat2x4(_GLF_IDENTITY(mat2(_GLF_IDENTITY((vec3(1.0)), clamp((vec3(1.0)), (vec3(1.0)), _GLF_IDENTITY((vec3(1.0)), min(_GLF_IDENTITY((vec3(1.0)), (true ? (vec3(1.0)) : _GLF_FUZZED(vec3(325.742, 6352.4411, -5.3)))), (_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(1.0)), (_GLF_IDENTITY(true ? mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(1.0)) : _GLF_FUZZED(vec3(-6.6, -9.6, -2541.2543)), max(true ? mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(1.0)) : _GLF_FUZZED(vec3(-6.6, -9.6, -2541.2543)), true ? mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(1.0)) : _GLF_FUZZED(vec3(-6.6, _GLF_IDENTITY(-9.6, max(-9.6, -9.6)), -2541.2543)))))))))))), _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, cos(0.0), sin(0.0), 0.0)))), (_GLF_IDENTITY(mat2(_GLF_IDENTITY((vec3(1.0)), clamp((vec3(1.0)), (vec3(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), (_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(clamp(vec3(1.0), vec3(1.0), _GLF_IDENTITY(vec3(1.0), (true ? vec3(1.0) : _GLF_FUZZED(vec3(-965.403, -2696.5692, 3426.8574))))), _GLF_IDENTITY(vec3(mat2x4(clamp(vec3(1.0), vec3(1.0), _GLF_IDENTITY(vec3(1.0), (true ? vec3(1.0) : _GLF_FUZZED(vec3(-965.403, -2696.5692, 3426.8574))))), sin(0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), (true ? vec3(mat2x4(clamp(vec3(1.0), vec3(1.0), _GLF_IDENTITY(vec3(1.0), (true ? vec3(1.0) : _GLF_FUZZED(vec3(-965.403, -2696.5692, 3426.8574))))), sin(0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0)) : _GLF_FUZZED(vec3(261.144, 228.187, 568.064))))))) - vec3(0.0, 0.0, 0.0))), min(_GLF_IDENTITY((vec3(1.0)), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! _GLF_IDENTITY((true), bool(bvec3((true), false, false)))))))) ? (vec3(1.0)) : _GLF_FUZZED(vec3(325.742, 6352.4411, -5.3)))), (_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(mat3(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1.2))), injectionSwitch.y)) * (vec3(1.0)), (true ? mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(1.0)) : _GLF_FUZZED(vec3(-6.6, -9.6, -2541.2543)))))))))), 1.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY((vec3(1.0)), clamp((vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((452.324 * 7.7))), float(1.0), bool(_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, bool(bvec2(true, true))), true)))))))), (vec3(1.0)), _GLF_IDENTITY((vec3(1.0)), min(_GLF_IDENTITY((vec3(1.0)), (true ? (vec3(1.0)) : _GLF_FUZZED(_GLF_IDENTITY(vec3(325.742, _GLF_IDENTITY(6352.4411, min(6352.4411, 6352.4411)), -5.3), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(325.742, 6352.4411, -5.3)))))), (_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(1.0)), (true ? mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(mix(vec3((vec3(1.0))[0], _GLF_FUZZED(1294.6840), _GLF_IDENTITY((vec3(1.0))[2], (true ? (vec3(1.0))[2] : _GLF_FUZZED(-7.5)))), vec3(_GLF_FUZZED(-3911.7328), (vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.6))), 1.0))))[1], _GLF_FUZZED(vec3(8.5, -1.1, -4515.6196).p)), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), vec3(mat4x2(mix(vec3((vec3(1.0))[0], _GLF_FUZZED(1294.6840), _GLF_IDENTITY((vec3(1.0))[2], (true ? (vec3(1.0))[2] : _GLF_FUZZED(-7.5)))), vec3(_GLF_FUZZED(-3911.7328), (vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.6))), 1.0))))[1], _GLF_FUZZED(vec3(8.5, -1.1, -4515.6196).p)), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))))) : _GLF_FUZZED(vec3(-6.6, -9.6, -2541.2543)))))))))), 1.0), (true ? mat2(_GLF_IDENTITY((vec3(1.0)), clamp((vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((452.324 * 7.7))), float(1.0), bool(_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(true, bool(bvec2(true, true))), true)))))))), (vec3(1.0)), _GLF_IDENTITY((vec3(1.0)), min(_GLF_IDENTITY((vec3(1.0)), (true ? (vec3(1.0)) : _GLF_FUZZED(_GLF_IDENTITY(vec3(325.742, _GLF_IDENTITY(6352.4411, min(6352.4411, 6352.4411)), -5.3), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(325.742, 6352.4411, -5.3)))))), (_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(1.0)), (true ? mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(mix(vec3((vec3(1.0))[0], _GLF_FUZZED(1294.6840), _GLF_IDENTITY((vec3(1.0))[2], (true ? (vec3(1.0))[2] : _GLF_FUZZED(-7.5)))), vec3(_GLF_FUZZED(-3911.7328), (vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.6))), 1.0))))[1], _GLF_FUZZED(vec3(8.5, -1.1, -4515.6196).p)), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), vec3(mat4x2(mix(vec3((vec3(1.0))[0], _GLF_FUZZED(1294.6840), _GLF_IDENTITY((vec3(1.0))[2], (true ? (vec3(1.0))[2] : _GLF_FUZZED(-7.5)))), vec3(_GLF_FUZZED(-3911.7328), (vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.6))), 1.0))))[1], _GLF_FUZZED(vec3(8.5, -1.1, -4515.6196).p)), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))))) : _GLF_FUZZED(vec3(-6.6, -9.6, -2541.2543)))))))))), 1.0) : _GLF_FUZZED(mat2(4.7, -16.35, 8.7, -81.41))))) * mat2(1.0))) - _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(-2.6, 821.808, 5.6, 17.62)) : mat2(0.0, 0.0, 0.0, 0.0)))))), mat2(1.0) * (_GLF_IDENTITY(mat2(mat2x4(mat2(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), mix(vec3(_GLF_FUZZED(_GLF_IDENTITY(-3291.8618, clamp(-3291.8618, -3291.8618, -3291.8618))), (vec3(1.0))[1], _GLF_IDENTITY((vec3(1.0)), min((vec3(1.0)), (vec3(1.0))))[2]), vec3(_GLF_IDENTITY((vec3(1.0))[0], 1.0 * (_GLF_IDENTITY((vec3(1.0))[0], _GLF_IDENTITY(float(mat4x2((vec3(1.0))[0], 1.0, 1.0, sin(0.0), 1.0, 0.0, abs(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0)), (true ? float(mat4x2((vec3(1.0))[0], 1.0, 1.0, sin(0.0), 1.0, 0.0, abs(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0)) : _GLF_FUZZED(8.7)))))), _GLF_FUZZED(9.3), _GLF_FUZZED(-8.0)), bvec3(true, false, false)))), clamp((vec3(1.0)), (vec3(1.0)), _GLF_IDENTITY((vec3(1.0)), min((vec3(1.0)), (vec3(1.0)))))), 1.0))), transpose(_GLF_IDENTITY(transpose(mat2(mat2x4(mat2(_GLF_IDENTITY((vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1950.7036))))), clamp((vec3(1.0)), (vec3(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), (false ? _GLF_FUZZED(vec3(-199.268, 0.0, 5686.3745)) : vec3(1.0)))), min((vec3(1.0)), (vec3(1.0)))))), 1.0)))), transpose(transpose(transpose(mat2(mat2x4(mat2(_GLF_IDENTITY((vec3(1.0)), clamp((_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), _GLF_IDENTITY(vec3(1.0), min(vec3(1.0), vec3(1.0)))))), (vec3(1.0)), _GLF_IDENTITY((vec3(1.0)), min((vec3(1.0)), (vec3(1.0)))))), 1.0))))))))))))) / mat2(1.0, 1.0, 1.0, 1.0))))[1], _GLF_FUZZED(731.545)), bvec3(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(bool(bool(false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), false), bvec3(bvec4(bvec3(bool(bool(false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true))))), (bool(bvec2(false, false))) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), true && (_GLF_IDENTITY(true, bool(bvec2(true, true)))))), true, true, false))))), ! (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), false || ((true)))), true && (! (_GLF_IDENTITY((true), false || ((true)))))))))))))))), bool(bool(_GLF_IDENTITY(false, (false) || false)))))) || false)))) || false)))), mat4x3(1.0), mat2x3(1.0))), ivec2(1), gl_SubgroupID);
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), ! (! (! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x)) > injectionSwitch.y))))
    return;
   return;
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(1, _GLF_struct_5(_GLF_IDENTITY(ivec4(1), (true ? _GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), max(ivec4(1), ivec4(1))), (_GLF_IDENTITY(ivec4(1), max(ivec4(1), ivec4(1)))) / (ivec4(0, 0, 0, 0) ^ ivec4(1, 1, 1, 1))) : _GLF_FUZZED(findMSB(uvec4(158760u, _GLF_IDENTITY(31591u, (31591u) | (31591u)), 9347u, 168459u)))))), gl_SubgroupInvocationID);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))) || false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec3(bool(bvec4(false, false, false, false)), false, true))), (_GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec3(bool(bvec4(false, false, false, false)), false, true)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec3(bool(bvec4(false, false, false, false)), false, true))), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec3(bool(bvec4(false, false, false, _GLF_IDENTITY(false, false || (false)))), false, true))))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(vec3(injectionSwitch, 1.0))).y))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y), true, true, true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), mat2(1.0) * (vec2(vec3(injectionSwitch, 1.0))))).y), true, true, true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), true)), true && (bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) || false) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(atanh(-6.8)))) > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y) || false)), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y)))), true, true, true)))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(true, false || (true)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! ((false)))) || false, ! (_GLF_IDENTITY(! ((false) || false), ! (_GLF_IDENTITY(! (! ((false) || false)), (! (! ((false) || false))) && true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)) < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), (bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))))) && true))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ((! (! (false)))) || false)))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), true && ((false))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), bool(bool((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))) || _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0))), float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7691.1429), _GLF_FUZZED(-7505.8016)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec2(vec3(-4061.3115, 3.0, 9.1))) : _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))))))[_GLF_IDENTITY(1, (1) / 1)]), bvec2(true, true))).y, true)))) || false))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0), min((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)))).y, (injectionSwitch.y) + log(abs(1.0)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, true, true))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))).x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            return;
           return;
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false)))))) && true, ! (! ((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false)))))) && true))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (_GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(bool(bool(bool((false)))), false || (bool(bool(bool((false)))))))), ! (! (bool(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(bool(bool(bool((false)))), false || (bool(bool(bool((false)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_4.subgroup_id * subgroup_size + _GLF_struct_replacement_6.subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_4.subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id, (_GLF_struct_replacement_6.subgroup_local_id) << 0u) + 1), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id, (_GLF_struct_replacement_6.subgroup_local_id) << 0u) + 1, max(_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id, (_GLF_struct_replacement_6.subgroup_local_id) << 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id, (_GLF_struct_replacement_6.subgroup_local_id) << 0u) + 1, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_struct_replacement_6.subgroup_local_id, (_GLF_struct_replacement_6.subgroup_local_id) << 0u) + 1))))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), bool(bool(_GLF_IDENTITY((! (false)), ! (! ((! (false))))))))))))))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, true))))))))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
    return;
   return;
  }
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(32046, min(_GLF_IDENTITY(32046, ~ (~ (_GLF_IDENTITY(32046, max(32046, 32046))))), 32046))))), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(! (false), bool(bool(! (false)))), true))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(! (false), bool(bool(! (false)))), true))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(! (false), bool(bool(! (false)))), true))), false, true)), true, true)))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_struct_replacement_6.subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid))], uint(2), 4, _GLF_IDENTITY(64, (64) ^ 0), 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y))))
  return;
}
