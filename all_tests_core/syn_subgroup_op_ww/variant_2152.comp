#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_29 {
 int _f0;
 uvec2 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_28 {
 mat2x3 _f0;
 int _injected_loop_counter;
 bool _f1;
} ;

struct _GLF_struct_27 {
 ivec3 _f0;
 mat4x2 _f1;
 mat3x4 _f2;
 ivec4 _f3;
 vec2 _f4;
 mat3x4 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_26 {
 mat4x3 _f0;
 bvec4 _f1;
 float _f2;
} ;

struct _GLF_struct_30 {
 _GLF_struct_26 _f0;
 _GLF_struct_27 _f1;
 _GLF_struct_28 _f2;
 _GLF_struct_29 _f3;
} ;

struct _GLF_struct_31 {
 mat2x3 _f0;
 mat3x4 _f1;
 _GLF_struct_30 _f2;
 float _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_24 {
 uint _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_25 {
 uint workgroup_base;
 vec4 _f0;
 _GLF_struct_24 _f1;
} ;

struct _GLF_struct_21 {
 mat2x4 _f0;
 vec3 _f1;
 mat4x3 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_20 {
 mat4 _f0;
 bvec2 _f1;
 mat2 _f2;
 ivec4 _f3;
 bvec3 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_19 {
 uvec3 _f0;
 mat3 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_18 {
 ivec3 _f0;
 bvec2 _f1;
 mat3x2 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_22 {
 uint _f0;
 uint _f1;
 _GLF_struct_18 _f2;
 _GLF_struct_19 _f3;
 _GLF_struct_20 _f4;
 ivec2 _f5;
 _GLF_struct_21 _f6;
} ;

struct _GLF_struct_16 {
 bvec3 _f0;
 vec2 _f1;
 bool _f2;
 vec2 _f3;
} ;

struct _GLF_struct_15 {
 mat2x4 _f0;
 uvec4 _f1;
 vec2 _f2;
 bvec2 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_14 {
 mat2x3 _f0;
} ;

struct _GLF_struct_13 {
 ivec4 _f0;
 ivec3 _f1;
 ivec2 _f2;
 float _f3;
} ;

struct _GLF_struct_12 {
 mat2x4 _f0;
 mat3x4 _f1;
 uvec4 _f2;
 mat3 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_17 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_15 _f3;
 _GLF_struct_16 _f4;
} ;

struct _GLF_struct_10 {
 mat3 _f0;
 vec4 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_9 {
 mat4 _f0;
 mat2x4 _f1;
 mat2x4 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_11 {
 mat2 _f0;
 uvec4 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_10 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_7 {
 mat2 _f0;
 uint next_virtual_gid;
 uint _f1;
 uvec4 _f2;
 mat3x4 _f3;
 uint _f4;
 vec4 _f5;
} ;

struct _GLF_struct_6 {
 uvec3 _f0;
} ;

struct _GLF_struct_8 {
 _GLF_struct_6 _f0;
 uvec4 _f1;
 bvec2 _f2;
 _GLF_struct_7 _f3;
} ;

struct _GLF_struct_23 {
 _GLF_struct_8 _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_17 _f2;
 _GLF_struct_22 _f3;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 mat2x3 _f1;
 float _f2;
 mat2x4 _f3;
 mat3 _f4;
 bvec2 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 mat3x2 _f1;
 uvec2 _f2;
 mat2x3 _f3;
 float _f4;
 bvec2 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
 int _f1;
 mat2x3 _f2;
 mat2 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 mat4x2 _f3;
 vec2 _f4;
 _GLF_struct_3 _f5;
} ;

struct _GLF_struct_5 {
 uint workgroup_id;
 float _f0;
 _GLF_struct_4 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(1 | (1 | 1), (1 | (1 | 1)) | (1 | (1 | 1))))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))))))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            return;
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
     else
      {
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        break;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(gl_WorkGroupID.x, 1.0, _GLF_struct_4(_GLF_struct_0(vec4(1.0), 1, mat2x3(1.0), mat2(1.0), mat2(1.0)), _GLF_struct_1(vec4(1.0)), _GLF_struct_2(mat3x4(1.0), mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-2.9) : 1.0, mix(float(false ? _GLF_FUZZED(-2.9) : 1.0), float(_GLF_FUZZED(-4.0)), bool(false)))))) - 0.0), float(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), (float(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0))) / _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(647.624)), float(1.0), bool(true))))), 0.0))), _GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), float(mat3x2(clamp(1.0, 1.0, 1.0), 1.0, 1.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), float(mat3x2(clamp(1.0, 1.0, 1.0), 1.0, 1.0, 0.0, 1.0, 1.0)))) + 0.0), _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0)) / mat2(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(262.069, -333.635, 75.71, -1.1, 1.3, 7.6, -7100.1350, -237.644)) : mat4x2(1.0, 1.0, 0.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)))))), (false ? _GLF_FUZZED(mat2(8.8, 1.1, 452.988, -228.389)) : _GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), float(mat3x2(clamp(1.0, 1.0, 1.0), 1.0, 1.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), float(mat3x2(clamp(1.0, 1.0, 1.0), 1.0, 1.0, 0.0, 1.0, 1.0)))) + 0.0), _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0)), transpose(transpose(_GLF_IDENTITY((mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), float(mat3x2(clamp(1.0, 1.0, 1.0), 1.0, 1.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), float(mat3x2(clamp(1.0, 1.0, 1.0), 1.0, 1.0, 0.0, 1.0, 1.0)))) + 0.0), _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0)), mat2(_GLF_IDENTITY(mat3x4((mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), float(mat3x2(clamp(1.0, 1.0, 1.0), 1.0, 1.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), float(mat3x2(clamp(1.0, 1.0, 1.0), 1.0, 1.0, 0.0, 1.0, 1.0)))) + 0.0), _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0))), (mat3x4((mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), float(mat3x2(clamp(1.0, 1.0, 1.0), 1.0, 1.0, 0.0, 1.0, 1.0))), (_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), float(mat3x2(clamp(1.0, 1.0, 1.0), 1.0, 1.0, 0.0, 1.0, 1.0)))) + 0.0), _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0)))) * mat3(1.0))))))) / mat2(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(262.069, -333.635, 75.71, -1.1, 1.3, 7.6, -7100.1350, _GLF_IDENTITY(-237.644, min(-237.644, -237.644)))) : mat4x2(1.0, 1.0, 0.0, sin(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)))))))))))), uvec2(1u), mat2x3(1.0), 1.0, bvec2(true), mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, sin(0.0) + (0.0)), 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0), (mat4x3(1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, sin(0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 1.0))), _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0))))), 0.0, 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - 0.0))), mat4x2(1.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - length(vec2(0.0, 0.0)))) - 0.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), min((1.0), (1.0)))) / 1.0) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-6.1)), bool(false)))), max(clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), min((1.0), (1.0)))) / 1.0) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-6.1)), bool(false)))), clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), min((1.0), (1.0)))) / 1.0) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-6.1)), bool(false)))))))), _GLF_struct_3(mat3(1.0), mat2x3(1.0), 1.0, mat2x4(1.0), mat3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, sin(0.0), cos(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), 0.0 + (_GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(-5.5))))), 0.0, sin(0.0), cos(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.8))), 1.0, 0.0, 1.0))))))), bvec2(true), mat4x2(1.0))));
 _GLF_struct_25 _GLF_struct_replacement_25 = _GLF_struct_25(workgroup_size * _GLF_struct_replacement_5.workgroup_id, vec4(1.0), _GLF_struct_24(1u, ivec3(1)));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (1 ^ (0 ^ 1)), (_injected_loop_counter != (1 ^ _GLF_IDENTITY((0 ^ 1), (false ? _GLF_FUZZED(_injected_loop_counter) : (0 ^ 1))))) || false)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false))))))))));
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)) > injectionSwitch.y))))
      return;
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, false || (false)) || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + tan(vec2(0.0, 0.0))).y)))))))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true)))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             return;
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)), (bool(bvec4((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true))) && true)))))
          return;
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           continue;
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(_GLF_IDENTITY(int(4), (int(4)) / 1), int(4))))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               return;
              }
            }
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 uint virtual_gid = _GLF_struct_replacement_25.workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) ^ 0u)) | _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) << (0u ^ 0u)))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED((~ 162211u)) : 1u))), 0u ^ (~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED((~ 162211u)) : 1u))))))), 1u), (false ? _GLF_FUZZED(subgroup_size) : min(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED((~ _GLF_IDENTITY(162211u, (162211u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))) : 1u))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED((~ 162211u)) : 1u))), max(~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED((~ 162211u)) : 1u))), ~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED((~ 162211u)) : 1u)))))), min((_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED((~ 162211u)) : 1u))), max(~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED((~ 162211u)) : 1u))), ~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED((~ 162211u)) : 1u)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED((~ 162211u)) : 1u))), max(~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED((~ 162211u)) : 1u))), ~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED((~ 162211u)) : 1u))))))))))), 1u)))))), _GLF_IDENTITY(1u, (1u) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(0u, (0u) | 0u))), max((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(0u, (0u) | 0u))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), uint(5u)), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(0u, (0u) | 0u)))))), (_GLF_IDENTITY(0u, (0u) | (0u)) & _GLF_IDENTITY(187660u, (187660u) | (187660u))))), clamp(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(81476u))), min(1u, 1u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, min(1u, 1u)))), 1u, (0u & 187660u)), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(81476u))), min(1u, 1u)), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, ~ (~ (1u))))))), _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) << 0u) & 187660u))) - uvec3(0u, 0u, 0u))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) | (min(1u, 1u)))))), 1u, (0u & 187660u))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (uint(1u)) - 0u))), min(1u, 1u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, min(1u, 1u)))), 1u, (0u & 187660u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, min(1u, 1u)))), 1u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)) & 187660u)), min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, min(1u, 1u)))), 1u, (0u & 187660u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, min(1u, 1u)))), 1u, (0u & 187660u)), ~ (~ _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, min(1u, 1u)))), 1u, (0u & 187660u))), ~ (~ ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, min(1u, 1u)))), 1u, (0u & 187660u)))))))))))) | 0u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 do
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    break;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
       if(_GLF_DEAD(false))
        continue;
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.1)), bool(false)))))));
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(_GLF_struct_8(_GLF_struct_6(uvec3(1u)), uvec4(1u), bvec2(true), _GLF_struct_7(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), (float(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0))) / 1.0), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(float(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0)), 0.0 + (float(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0)))), (float(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0))) / 1.0), 0.0, 0.0, log(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(0.0), 1.0, 1.0))))) - 0.0)), _GLF_IDENTITY(_GLF_struct_replacement_25.workgroup_base, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_25.workgroup_base, (true ? _GLF_struct_replacement_25.workgroup_base : _GLF_FUZZED(subgroup_id))))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(_GLF_struct_replacement_25.workgroup_base)))), 1u, uvec4(1u), mat3x4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0))))), 1u, _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), _GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0))), _GLF_IDENTITY(vec4(1.0), clamp(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((vec4(1.0)), clamp(_GLF_IDENTITY((vec4(1.0)), ((vec4(1.0))) * mat4(1.0)), (vec4(1.0)), (vec4(1.0)))) * mat4(1.0)), vec4(1.0), vec4(1.0))))), max(_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), _GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0))), _GLF_IDENTITY(vec4(1.0), clamp(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((vec4(1.0)), clamp(_GLF_IDENTITY((vec4(1.0)), ((vec4(1.0))) * mat4(1.0)), (vec4(1.0)), (vec4(1.0)))) * mat4(1.0)), vec4(1.0), vec4(1.0))))), _GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), _GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0))), _GLF_IDENTITY(vec4(1.0), clamp(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((vec4(1.0)), clamp(_GLF_IDENTITY((vec4(1.0)), ((vec4(1.0))) * mat4(1.0)), (vec4(1.0)), (vec4(1.0)))) * mat4(1.0)), vec4(1.0), vec4(1.0))))))))), _GLF_struct_11(mat2(1.0), uvec4(1u), _GLF_struct_9(_GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(349.361) : 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(length(vec2(0.0, 0.0))), 0.0))))), mat2x4(1.0), mat2x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (false ? _GLF_FUZZED((-813.958)) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (false ? _GLF_FUZZED((-813.958)) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, false || ((true) || false)))), (! (_GLF_IDENTITY(true, (true) || false))) || false))) ? mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (false ? _GLF_FUZZED((-813.958)) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, 0.0)), mix(float(float(vec2(1.0, 0.0))), float(_GLF_FUZZED(3.2)), bool(false))))), 1.0, 0.0, _GLF_IDENTITY(cos(0.0), mix(float(cos(_GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3661.5346)), bool(false))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), float(_GLF_FUZZED(2.7)), bool(false))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(-10.15)), ((true ? 0.0 : _GLF_FUZZED(-10.15))) / exp(0.0))), 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3(-50.44, -23.35, 5532.3487, 6.5, -79.42, 19.53, _GLF_IDENTITY(9.0, min(9.0, 9.0)), -91.25, -5570.9810))))), float(mat4(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (_GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(1.0, 1.0)))) * 1.0)), (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(-3373.9500))), 0.0), mix(vec2((vec2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(-3373.9500))), 0.0))[0], _GLF_FUZZED(378.186)), vec2(_GLF_FUZZED(2.2), (vec2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(-3373.9500))), 0.0))[1]), bvec2(false, true)))))))) / 1.0), (false ? _GLF_FUZZED((_GLF_IDENTITY(-813.958, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(faceforward((+ -5862.6438), -291.721, -3.6)) : -813.958)))) : _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.3)), float(1.0), bool(true))), 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0), (true ? mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY((false ? _GLF_FUZZED((-813.958)) : _GLF_IDENTITY(1.0, max(1.0, 1.0))), (true ? (false ? _GLF_FUZZED((-813.958)) : _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) : _GLF_FUZZED(363.211)))), 1.0), 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3(-50.44, -23.35, 5532.3487, 6.5, -79.42, 19.53, 9.0, -91.25, -5570.9810)))), (_GLF_IDENTITY(mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(1.0, 1.0)), (false ? _GLF_FUZZED((-813.958)) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0), 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY((true ? mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) ? _GLF_IDENTITY(_GLF_FUZZED((-813.958)), min(_GLF_FUZZED((-813.958)), _GLF_FUZZED(_GLF_IDENTITY((-813.958), ((-813.958)) / 1.0)))) : _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), 0.0 + (max(1.0, 1.0)))))), 1.0), 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3(-50.44, -23.35, 5532.3487, 6.5, -79.42, 19.53, 9.0, -91.25, -5570.9810))), ((true ? mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) ? _GLF_IDENTITY(_GLF_FUZZED((-813.958)), min(_GLF_FUZZED((-813.958)), _GLF_FUZZED((-813.958)))) : _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0))))))), 1.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3(-50.44, -23.35, 5532.3487, 6.5, -79.42, 19.53, 9.0, -91.25, -5570.9810)))) * mat3(1.0)))) * mat3(1.0))), _GLF_IDENTITY(float(mat3x2(float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (_GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(1.0, 1.0)))) * 1.0)), (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(-3373.9500))), 0.0), mix(vec2((vec2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(-3373.9500))), 0.0))[0], _GLF_FUZZED(378.186)), vec2(_GLF_FUZZED(2.2), (vec2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(-3373.9500))), 0.0))[1]), bvec2(false, true)))))))) / 1.0), (false ? _GLF_FUZZED((_GLF_IDENTITY(-813.958, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(faceforward((+ -5862.6438), -291.721, -3.6)) : -813.958)))) : _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.3)), float(1.0), bool(true))), 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0), (true ? mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY((false ? _GLF_FUZZED((-813.958)) : _GLF_IDENTITY(1.0, max(1.0, 1.0))), (true ? (false ? _GLF_FUZZED((-813.958)) : _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) : _GLF_FUZZED(363.211)))), 1.0), 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3(-50.44, -23.35, 5532.3487, 6.5, -79.42, 19.53, 9.0, -91.25, -5570.9810)))), (_GLF_IDENTITY(mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(1.0, 1.0)), (false ? _GLF_FUZZED((-813.958)) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0), 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY((true ? mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) ? _GLF_IDENTITY(_GLF_FUZZED((-813.958)), min(_GLF_FUZZED((-813.958)), _GLF_FUZZED(_GLF_IDENTITY((-813.958), ((-813.958)) / 1.0)))) : _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), 0.0 + (max(1.0, 1.0)))))), 1.0), 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3(-50.44, -23.35, 5532.3487, 6.5, -79.42, 19.53, 9.0, -91.25, -5570.9810))), ((true ? mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) ? _GLF_IDENTITY(_GLF_FUZZED((-813.958)), min(_GLF_FUZZED((-813.958)), _GLF_FUZZED((-813.958)))) : _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0))))))), 1.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3(-50.44, -23.35, 5532.3487, 6.5, -79.42, 19.53, 9.0, -91.25, -5570.9810)))) * mat3(1.0)))) * mat3(1.0))), 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0 + (float(mat3x2(float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (_GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(1.0, 1.0)))) * 1.0)), (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(-3373.9500))), 0.0), mix(vec2((vec2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(-3373.9500))), 0.0))[0], _GLF_FUZZED(378.186)), vec2(_GLF_FUZZED(2.2), (vec2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(-3373.9500))), 0.0))[1]), bvec2(false, true)))))))) / 1.0), (false ? _GLF_FUZZED((_GLF_IDENTITY(-813.958, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(faceforward((+ -5862.6438), -291.721, -3.6)) : -813.958)))) : _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.3)), float(1.0), bool(true))), 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0), (true ? mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY((false ? _GLF_FUZZED((-813.958)) : _GLF_IDENTITY(1.0, max(1.0, 1.0))), (true ? (false ? _GLF_FUZZED((-813.958)) : _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) : _GLF_FUZZED(363.211)))), 1.0), 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3(-50.44, -23.35, 5532.3487, 6.5, -79.42, 19.53, 9.0, -91.25, -5570.9810)))), (_GLF_IDENTITY(mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(1.0, 1.0)), (false ? _GLF_FUZZED((-813.958)) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0), 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY((true ? mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) ? _GLF_IDENTITY(_GLF_FUZZED((-813.958)), min(_GLF_FUZZED((-813.958)), _GLF_FUZZED(_GLF_IDENTITY((-813.958), ((-813.958)) / 1.0)))) : _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), 0.0 + (max(1.0, 1.0)))))), 1.0), 1.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3(-50.44, -23.35, 5532.3487, 6.5, -79.42, 19.53, 9.0, -91.25, -5570.9810))), ((true ? mat3(max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) ? _GLF_IDENTITY(_GLF_FUZZED((-813.958)), min(_GLF_FUZZED((-813.958)), _GLF_FUZZED((-813.958)))) : _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0))))))), 1.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3(-50.44, -23.35, 5532.3487, 6.5, -79.42, 19.53, 9.0, -91.25, -5570.9810)))) * mat3(1.0)))) * mat3(1.0))), 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), vec4(mat3(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), mix(vec4(_GLF_FUZZED(0.8), _GLF_FUZZED(4734.6289), _GLF_FUZZED(-2.4), (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[3]), vec4((normalize(vec4(1.0, 1.0, 1.0, 1.0)))[0], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[1], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[2], _GLF_FUZZED(-905.970)), bvec4(true, true, true, false))), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), float(_GLF_FUZZED(-89.03)), bool(false)))), 0.0, 0.0))))), 1.0, 1.0, 1.0, 1.0, abs(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), (false ? _GLF_FUZZED(2283.5075) : _GLF_IDENTITY(0.0, 0.0 + (0.0)))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (false ? _GLF_FUZZED(8.3) : 0.0))) - _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))) - 0.0))), 1.0, 0.0, 1.0)))))), mat2x4(1.0)), _GLF_struct_10(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), vec4(1.0), bvec4(true)), mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_struct_17(_GLF_struct_12(mat2x4(1.0), mat3x4(1.0), uvec4(1u), _GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY((mat3(1.0)) * mat3(1.0), ((mat3(1.0)) * mat3(1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), ivec3(1)), _GLF_struct_13(ivec4(1), ivec3(1), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), clamp(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(1, (1) - 0)) >> 0))) : _GLF_FUZZED(86725)))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_struct_14(mat2x3(_GLF_IDENTITY(1.0, (1.0) - 0.0))), _GLF_struct_15(mat2x4(1.0), uvec4(_GLF_IDENTITY(1u, (1u) / 1u)), vec2(1.0), bvec2(true), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) | (1))), max(ivec2(_GLF_IDENTITY(1, (1) | (1))), ivec2(_GLF_IDENTITY(1, (1) | (1)))))), _GLF_struct_16(bvec3(_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(vec2(1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0))), true, _GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))))), _GLF_struct_22(_GLF_IDENTITY(1u, 0u + (1u)), 1u, _GLF_struct_18(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) - 0)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) - 0)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), max(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1)))), 1))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) - 0)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1))))), max(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) - 0)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1))), (min(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) - 0)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1)))) >> 0))), ~ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) - 0)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1))))))))))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) - 0)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), max(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1)))), 1))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) - 0)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1))))), max(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) - 0)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1))), (min(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) - 0)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1)))) >> 0))), ~ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) - 0)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1)))))))))))), (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) - 0)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), max(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, max(1, 1)))), 1))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) - 0)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1))))), max(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) - 0)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1))), (min(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) - 0)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1)))) >> 0))), ~ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) - 0)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1))))))))))))) >> 0))))), bvec2(true), mat3x2(1.0), mat3(1.0)), _GLF_struct_19(uvec3(_GLF_IDENTITY(1u, 0u | (1u))), mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat4x2(1.0)), _GLF_struct_20(mat4(1.0), _GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) + 0.0)) > injectionSwitch.y))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))))))))), mat2(1.0), ivec4(1), bvec3(_GLF_IDENTITY(true, false || (true))), mat4x3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), _GLF_IDENTITY(ivec2(1), (ivec2(1)) << ivec2(0, 0)), _GLF_struct_21(mat2x4(1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0))), _GLF_IDENTITY(mat3(1.0) * (vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0)))), max(mat3(1.0) * (vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0, 1.0, 0.0)), mix(float(float(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0, 1.0, 0.0))), float(_GLF_FUZZED(6.8)), bool(false)))), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) * (vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0)))), min(mat3(1.0) * (vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0)))), mat3(1.0) * _GLF_IDENTITY((vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0)))), mix(vec3(_GLF_FUZZED(973.607), ((vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0)))))[1], ((vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0)))))[2]), vec3(((vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0)))))[0], _GLF_FUZZED(-47.26), _GLF_FUZZED(4268.0626)), bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), mat4x3(1.0), mat2x3(1.0))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) - 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(110696u) : (subgroup_local_id + 1) - 0u))) < subgroup_size))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false), true, true, true)))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
       atomicStore(buf[_GLF_struct_replacement_23._f0._f3.next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) ^ _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(-98123) : int(_GLF_ZERO(0.0, injectionSwitch.x))))), 0 + (~ (~ (64))))), 4);
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), (true ? _GLF_IDENTITY((0.0), mix(float((0.0)), float(_GLF_FUZZED(20.43)), bool(false))) : _GLF_FUZZED(4.1))) / 1.0), 0.0)), injectionSwitch.x))); _injected_loop_counter --)
    {
     subgroupAll(false);
    }
  }
 else
  {
   atomicStore(buf[_GLF_struct_replacement_23._f0._f3.next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   for(_GLF_struct_31 _GLF_struct_replacement_31 = _GLF_struct_31(mat2x3(1.0), mat3x4(1.0), _GLF_struct_30(_GLF_struct_26(mat4x3(1.0), bvec4(true), _GLF_IDENTITY(1.0, (1.0) - 0.0)), _GLF_struct_27(ivec3(1), mat4x2(1.0), mat3x4(1.0), ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) - 0)), vec2(1.0), mat3x4(1.0), vec2(1.0)), _GLF_struct_28(mat2x3(1.0), 0, true), _GLF_struct_29(1, uvec2(1u), bvec4(true))), 1.0, uvec4(_GLF_IDENTITY(1u, (1u) | (1u)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_struct_replacement_31._f2._f2._injected_loop_counter < (0 ^ 1), false || (_GLF_IDENTITY(_GLF_struct_replacement_31._f2._f2._injected_loop_counter < (0 ^ 1), ! (! (_GLF_struct_replacement_31._f2._f2._injected_loop_counter < (0 ^ _GLF_IDENTITY(1, 0 | (1))))))))); _GLF_struct_replacement_31._f2._f2._injected_loop_counter ++)
    {
     subgroupAll(_GLF_IDENTITY(true, false || (true)));
    }
  }
}
