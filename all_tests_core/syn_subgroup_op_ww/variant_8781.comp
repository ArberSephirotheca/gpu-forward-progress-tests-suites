#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)), (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), (bool(bvec4(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), bool(bvec2((true), false)))) && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (_GLF_IDENTITY(true, (true) || false)))))) || false))) && true), false, false, true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))))))))
          {
          }
         else
          {
           return;
          }
        }
      }
    }
  }
 else
  {
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_size))))).x, (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(uvec3(gl_NumWorkGroups.x, 1u, 1u)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(_GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(3u))))), uint(3u))), _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(3u), (uint(3u)) | (_GLF_IDENTITY(uint(3u), 0u | (uint(3u))))), 1u, 0u), (uvec3(_GLF_IDENTITY(uint(3u), (uint(3u)) | (_GLF_IDENTITY(uint(3u), 0u | (uint(3u))))), 1u, 0u)) >> uvec3(0u, 0u, 0u)))))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 1u, 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 1u, 1u), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 1u, 1u), ~ (~ (uvec3(gl_NumWorkGroups.x, 1u, 1u))))) << uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 1u, 1u), (uvec3(gl_NumWorkGroups.x, 1u, 1u)) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 1u, 1u), ~ (~ (uvec3(gl_NumWorkGroups.x, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) | (1u))))))) << uvec3(0u, 0u, 0u))))), uvec3(gl_NumWorkGroups.x, 1u, 1u)))))))) << 0u);
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u)));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base, _GLF_IDENTITY(workgroup_base, ((_GLF_IDENTITY(1u, (1u) - 0u) << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u)))) + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))) + subgroup_id * subgroup_size) >> 0u) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec3(subgroup_id, 1u, 1u), uvec3(uvec4(_GLF_IDENTITY(uvec3(subgroup_id, 1u, 1u), ~ (~ (uvec3(subgroup_id, 1u, 1u)))), 0u))))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) / _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(91694u))), max((subgroup_local_id) / 1u, _GLF_IDENTITY((subgroup_local_id) / 1u, 0u | ((subgroup_local_id) / 1u))))) + 1) % subgroup_size);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY(1, (1) | (1)), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < _GLF_IDENTITY(1, (1) | (1)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_injected_loop_counter < _GLF_IDENTITY(1, (1) | (1)), true), bvec2(bvec2(bvec2(_injected_loop_counter < _GLF_IDENTITY(1, (1) | (1)), true)))), true, true)))))); _GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_injected_loop_counter ++)))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             do
              {
               do
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((_GLF_IDENTITY(29.59, mix(float(29.59), float(_GLF_FUZZED(-944.763)), bool(false)))))), float(injectionSwitch.y), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true))), mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(47.79)), bool(false))))), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED((29.59)), max(_GLF_FUZZED((29.59)), _GLF_FUZZED((29.59))))), float(injectionSwitch.y), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((_GLF_IDENTITY(29.59, 0.0 + (_GLF_IDENTITY(29.59, mix(float(_GLF_FUZZED(698.834)), float(29.59), bool(true)))))))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (true)))))))), mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(47.79)), bool(false))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true))), mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(47.79)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((29.59))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.3, 1554.0059)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.3, 1554.0059)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))))).y, mix(float(_GLF_FUZZED((+ -9.9))), float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.3, 1554.0059)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y), bool(true))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true)), 1.0 * (mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(47.79)), bool(false)), (false ? _GLF_FUZZED(-1125.9072) : mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(47.79)), bool(false))))))))), 1.0, length(vec2(0.0, 0.0)))))), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), injectionSwitch.y)), mix(float(_GLF_FUZZED((_GLF_IDENTITY(29.59, mix(float(29.59), float(_GLF_FUZZED(-944.763)), _GLF_IDENTITY(bool(false), true && (bool(false)))))))), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true))), mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(47.79)), bool(false))))), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED((29.59))), min(float(_GLF_FUZZED((29.59))), _GLF_IDENTITY(float(_GLF_FUZZED((29.59))), float(vec4(float(_GLF_FUZZED((29.59))), 0.0, 0.0, 0.0))))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))))), mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(47.79)), bool(false))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY((29.59), min((29.59), (29.59))))), float(injectionSwitch.y), bool(true))), mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(47.79)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((29.59))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.3, 1554.0059)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.3, 1554.0059)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, mix(float(_GLF_FUZZED((+ -9.9))), float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.3, 1554.0059)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y), bool(true))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.3, 1554.0059)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.3, 1554.0059)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, mix(float(_GLF_FUZZED((+ -9.9))), float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.3, 1554.0059)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y), bool(true))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(-42.03)))), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true)), 1.0 * (mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true))), mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((29.59))), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(47.79)), bool(false))))))), 1.0, length(vec2(0.0, 0.0)))))))))))
                          {
                           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true)))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false)))) || false))
                            {
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               return;
                              }
                            }
                          }
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
        }
      }
    }
   else
    {
    }
  }
 do
  {
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, 6, _GLF_IDENTITY(6, int(_GLF_IDENTITY(ivec3(6, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(91955, 1119, -90515)[0], (ivec3(91955, 1119, -90515)[0]) >> 0)) : 1)), 0), (ivec3(6, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(91955, 1119, -90515)[0], (ivec3(91955, 1119, -90515)[0]) >> 0)) : 1)), 0)) - ivec3(0, 0, 0)))))), int(_GLF_IDENTITY(ivec3(6, 1, (0 | 0)), _GLF_IDENTITY(min(ivec3(6, 1, (0 | 0)), ivec3(6, 1, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(68697) : 0)) | 0))), ivec3(_GLF_IDENTITY(ivec3(min(ivec3(6, 1, (0 | 0)), ivec3(6, 1, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(68697) : 0)) | 0)))), (true ? ivec3(min(ivec3(6, 1, (0 | 0)), ivec3(6, 1, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(68697) : 0)) | 0)))) : _GLF_FUZZED(ivec3(-49862, -48734, 36253)))))))))), int(6)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, 6, _GLF_IDENTITY(6, int(_GLF_IDENTITY(ivec3(6, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(91955, 1119, -90515)[0], (ivec3(91955, 1119, -90515)[0]) >> 0)) : 1)), 0), (ivec3(6, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(91955, 1119, -90515)[0], (ivec3(91955, 1119, -90515)[0]) >> 0)) : 1)), 0)) - ivec3(0, 0, 0)))))), int(_GLF_IDENTITY(ivec3(6, 1, (0 | 0)), _GLF_IDENTITY(min(ivec3(6, 1, (0 | 0)), ivec3(6, 1, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(68697) : 0)) | 0))), ivec3(_GLF_IDENTITY(ivec3(min(ivec3(6, 1, (0 | 0)), ivec3(6, 1, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(68697) : 0)) | 0)))), (true ? ivec3(min(ivec3(6, 1, (0 | 0)), ivec3(6, 1, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(68697) : 0)) | 0)))) : _GLF_FUZZED(ivec3(-49862, -48734, 36253)))))))))), int(6)), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, 6, _GLF_IDENTITY(6, int(_GLF_IDENTITY(ivec3(6, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(91955, 1119, -90515)[0], (ivec3(91955, 1119, -90515)[0]) >> 0)) : 1)), 0), (ivec3(6, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(91955, 1119, -90515)[0], (ivec3(91955, 1119, -90515)[0]) >> 0)) : 1)), 0)) - ivec3(0, 0, 0)))))), int(_GLF_IDENTITY(ivec3(6, 1, (0 | 0)), _GLF_IDENTITY(min(ivec3(6, 1, (0 | 0)), ivec3(6, 1, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(68697) : 0)) | 0))), ivec3(_GLF_IDENTITY(ivec3(min(ivec3(6, 1, (0 | 0)), ivec3(6, 1, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(68697) : 0)) | 0)))), (true ? ivec3(min(ivec3(6, 1, (0 | 0)), ivec3(6, 1, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(68697) : 0)) | 0)))) : _GLF_FUZZED(ivec3(-49862, -48734, 36253)))))))))), int(6))))), int(int(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, 6, _GLF_IDENTITY(6, int(ivec3(6, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(91955, 1119, -90515)[0], _GLF_IDENTITY((ivec3(91955, 1119, -90515)[0]), ((ivec3(91955, 1119, -90515)[0])) / 1) >> 0)) : 1)), 0))))), int(_GLF_IDENTITY(ivec3(6, 1, (0 | 0)), min(ivec3(6, 1, (0 | 0)), ivec3(6, 1, (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(68697) : 0)), (true ? _GLF_IDENTITY(0, (false ? _GLF_FUZZED(68697) : 0)) : _GLF_FUZZED(_injected_loop_counter))) | 0))))))), int(6))), int(int(((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, 6, _GLF_IDENTITY(6, int(ivec3(6, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(91955, 1119, -90515)[0], (ivec3(91955, 1119, -90515)[0]) >> 0)) : 1)), 0))))), int(_GLF_IDENTITY(ivec3(6, 1, (0 | 0)), min(ivec3(6, 1, (0 | 0)), _GLF_IDENTITY(ivec3(6, 1, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(68697) : 0)) | 0)), max(ivec3(6, 1, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(68697) : 0)) | 0)), ivec3(6, _GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(68697) : 0)) | 0))))))))), int(6))))))))), (_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) | _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(int(0), (int(0)) | (int(0)))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(int(0), (int(0)) | (int(0))))), (~ (int(_GLF_IDENTITY(int(0), (int(0)) | (int(0)))))) ^ 0)))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, 6, _GLF_IDENTITY(6, int(_GLF_IDENTITY(ivec3(6, 1, 0), ivec3(1, 1, 1) * (ivec3(6, 1, 0))))))), int(_GLF_IDENTITY(ivec3(6, 1, (0 | 0)), min(ivec3(6, 1, _GLF_IDENTITY((_GLF_IDENTITY(0 | 0, min(0 | 0, _GLF_IDENTITY(0 | 0, (0 | 0) | 0)))), ((_GLF_IDENTITY(0 | 0, min(0 | 0, _GLF_IDENTITY(0 | 0, (0 | 0) | 0))))) / 1)), ivec3(6, 1, (_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0 | 0, (0 | 0) | 0)))))))))), int(6)), ~ (~ ((_GLF_IDENTITY(1, ~ (~ (1))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) | _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(int(0), (int(0)) | (int(0)))), ~ (_GLF_IDENTITY(~ (int(_GLF_IDENTITY(int(0), (int(0)) | (int(0))))), (~ (int(_GLF_IDENTITY(int(0), (int(0)) | (int(0)))))) ^ 0)))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, 6, _GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, max(6, 6)), 6)), int(_GLF_IDENTITY(ivec3(6, 1, 0), ivec3(1, 1, 1) * (ivec3(6, 1, 0))))))), int(_GLF_IDENTITY(ivec3(6, 1, (0 | 0)), min(ivec3(6, 1, _GLF_IDENTITY((_GLF_IDENTITY(0 | 0, min(0 | 0, _GLF_IDENTITY(0 | 0, (0 | 0) | 0)))), ((_GLF_IDENTITY(0 | 0, min(0 | 0, _GLF_IDENTITY(0 | 0, (0 | 0) | 0))))) / 1)), ivec3(6, 1, (_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0 | 0, (0 | 0) | 0)))))))))), int(6))))), 0 | ((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) | 0)))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(6, clamp(6, 6, _GLF_IDENTITY(6, int(_GLF_IDENTITY(ivec3(6, _GLF_IDENTITY(1, min(1, 1)), 0), ivec3(1, 1, 1) * (ivec3(6, 1, 0))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(6, 1, _GLF_IDENTITY((0 | 0), ((0 | 0)) << 0)), min(ivec3(6, 1, (0 | 0)), ivec3(6, 1, (0 | 0))))), clamp(int(_GLF_IDENTITY(ivec3(6, 1, _GLF_IDENTITY((0 | 0), ((0 | 0)) << 0)), min(ivec3(6, 1, (0 | 0)), ivec3(6, 1, (0 | 0))))), int(_GLF_IDENTITY(ivec3(6, 1, _GLF_IDENTITY((0 | 0), ((0 | 0)) << 0)), min(ivec3(6, 1, (0 | 0)), ivec3(6, 1, (0 | 0))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(6, 1, _GLF_IDENTITY((0 | 0), ((0 | 0)) << 0)), min(ivec3(6, 1, (0 | 0)), ivec3(6, 1, (0 | 0))))), (int(_GLF_IDENTITY(ivec3(6, 1, _GLF_IDENTITY((0 | 0), ((0 | 0)) << 0)), min(ivec3(6, 1, (0 | 0)), ivec3(6, 1, (0 | 0)))))) | (int(_GLF_IDENTITY(ivec3(6, 1, _GLF_IDENTITY((0 | 0), ((0 | 0)) << 0)), min(ivec3(6, 1, (0 | 0)), ivec3(6, 1, (0 | 0))))))))))), int(6)))))) || false)); _injected_loop_counter ++)
    {
     do
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x)) ^ (4)), int(ivec4(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), 1, 1, (0 << _GLF_IDENTITY(int(7), int(7))))))) - 0)) >> (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 1 * (_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) / 1)))))) * 1)) | (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(ivec2(int(5), 1), ivec2(0, 0) | (ivec2(int(5), 1)))))))), 0 >> _GLF_IDENTITY(int(5), int(5)), 0 >> _GLF_IDENTITY(int(5), int(5)))))), 4, _GLF_IDENTITY(4, 0 | (4)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x)) ^ (4)), int(ivec4(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), 1, 1, (0 << _GLF_IDENTITY(int(7), int(7))))))) - 0)) >> (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 1 * (_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) / 1)))))) * 1)) | (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(ivec2(int(5), 1), ivec2(0, 0) | (ivec2(int(5), 1)))))))), 0 >> _GLF_IDENTITY(int(5), int(5)), 0 >> _GLF_IDENTITY(int(5), int(5)))))), 4, _GLF_IDENTITY(4, 0 | (4)))), clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x)) ^ (4)), int(ivec4(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), 1, 1, (0 << _GLF_IDENTITY(int(7), int(7))))))) - 0)) >> (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 1 * (_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) / 1)))))) * 1)) | (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(ivec2(int(5), 1), ivec2(0, 0) | (ivec2(int(5), 1)))))))), 0 >> _GLF_IDENTITY(int(5), int(5)), 0 >> _GLF_IDENTITY(int(5), int(5)))))), 4, _GLF_IDENTITY(4, 0 | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x)) ^ (4)), int(ivec4(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), 1, 1, (0 << _GLF_IDENTITY(int(7), int(7))))))) - 0)) >> (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 1 * (_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) / 1)))))) * 1)) | (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(ivec2(int(5), 1), ivec2(0, 0) | (ivec2(int(5), 1)))))))), 0 >> _GLF_IDENTITY(int(5), int(5)), 0 >> _GLF_IDENTITY(int(5), int(5)))))), 4, _GLF_IDENTITY(4, 0 | (4)))), 0 ^ (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x)) ^ (4)), int(ivec4(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), 1, 1, (0 << _GLF_IDENTITY(int(7), int(7))))))) - 0)) >> (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 1 * (_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) / 1)))))) * 1)) | (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(ivec2(int(5), 1), ivec2(0, 0) | (ivec2(int(5), 1)))))))), 0 >> _GLF_IDENTITY(int(5), int(5)), 0 >> _GLF_IDENTITY(int(5), int(5)))))), 4, _GLF_IDENTITY(4, 0 | (4)))))), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x)) ^ (4)), int(ivec4(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), 1, 1, (0 << _GLF_IDENTITY(int(7), int(7))))))) - 0)) >> (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 1 * (_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) / 1)))))) * 1)) | (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(ivec2(int(5), 1), ivec2(0, 0) | (ivec2(int(5), 1)))))))), 0 >> _GLF_IDENTITY(int(5), int(5)), 0 >> _GLF_IDENTITY(int(5), int(5)))))), 4, _GLF_IDENTITY(4, 0 | (4)))))))))) * ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) << 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x)) ^ (4)), int(ivec4(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), 1, 1, (0 << _GLF_IDENTITY(int(7), int(7))))))) - 0)) >> (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 1 * (_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) / 1)))))) * 1)) | (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(ivec2(int(5), 1), ivec2(0, 0) | (ivec2(int(5), 1)))))))), 0 >> _GLF_IDENTITY(int(5), int(5)), 0 >> _GLF_IDENTITY(int(5), int(5)))))), 4, _GLF_IDENTITY(4, 0 | (4)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x)) ^ (4)), int(ivec4(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), 1, 1, (0 << _GLF_IDENTITY(int(7), int(7))))))) - 0)) >> (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 1 * (_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) / 1)))))) * 1)) | (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(ivec2(int(5), 1), ivec2(0, 0) | (ivec2(int(5), 1)))))))), 0 >> _GLF_IDENTITY(int(5), int(5)), 0 >> _GLF_IDENTITY(int(5), int(5)))))), 4, _GLF_IDENTITY(4, 0 | (4)))), clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x)) ^ (4)), int(ivec4(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), 1, 1, (0 << _GLF_IDENTITY(int(7), int(7))))))) - 0)) >> (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 1 * (_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) / 1)))))) * 1)) | (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(ivec2(int(5), 1), ivec2(0, 0) | (ivec2(int(5), 1)))))))), 0 >> _GLF_IDENTITY(int(5), int(5)), 0 >> _GLF_IDENTITY(int(5), int(5)))))), 4, _GLF_IDENTITY(4, 0 | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x)) ^ (4)), int(ivec4(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), 1, 1, (0 << _GLF_IDENTITY(int(7), int(7))))))) - 0)) >> (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 1 * (_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) / 1)))))) * 1)) | (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(ivec2(int(5), 1), ivec2(0, 0) | (ivec2(int(5), 1)))))))), 0 >> _GLF_IDENTITY(int(5), int(5)), 0 >> _GLF_IDENTITY(int(5), int(5)))))), 4, _GLF_IDENTITY(4, 0 | (4)))), 0 ^ (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x)) ^ (4)), int(ivec4(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), 1, 1, (0 << _GLF_IDENTITY(int(7), int(7))))))) - 0)) >> (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 1 * (_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) / 1)))))) * 1)) | (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(ivec2(int(5), 1), ivec2(0, 0) | (ivec2(int(5), 1)))))))), 0 >> _GLF_IDENTITY(int(5), int(5)), 0 >> _GLF_IDENTITY(int(5), int(5)))))), 4, _GLF_IDENTITY(4, 0 | (4)))))), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x)) ^ (4)), int(ivec4(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), 1, 1, (0 << _GLF_IDENTITY(int(7), int(7))))))) - 0)) >> (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 1 * (_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) / 1)))))) * 1)) | (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(ivec2(int(5), 1), ivec2(0, 0) | (ivec2(int(5), 1)))))))), 0 >> _GLF_IDENTITY(int(5), int(5)), 0 >> _GLF_IDENTITY(int(5), int(5)))))), 4, _GLF_IDENTITY(4, 0 | (4)))))))))) * ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) << 0)))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x)) ^ (4)), int(ivec4(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), 1, 1, (0 << _GLF_IDENTITY(int(7), int(7))))))) - 0)) >> (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 1 * (_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) / 1)))))) * 1)) | (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(ivec2(int(5), 1), ivec2(0, 0) | (ivec2(int(5), 1)))))))), 0 >> _GLF_IDENTITY(int(5), int(5)), 0 >> _GLF_IDENTITY(int(5), int(5)))))), 4, _GLF_IDENTITY(4, 0 | (4)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x)) ^ (4)), int(ivec4(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), 1, 1, (0 << _GLF_IDENTITY(int(7), int(7))))))) - 0)) >> (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 1 * (_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) / 1)))))) * 1)) | (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(ivec2(int(5), 1), ivec2(0, 0) | (ivec2(int(5), 1)))))))), 0 >> _GLF_IDENTITY(int(5), int(5)), 0 >> _GLF_IDENTITY(int(5), int(5)))))), 4, _GLF_IDENTITY(4, 0 | (4)))), clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x)) ^ (4)), int(ivec4(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), 1, 1, (0 << _GLF_IDENTITY(int(7), int(7))))))) - 0)) >> (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 1 * (_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) / 1)))))) * 1)) | (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(ivec2(int(5), 1), ivec2(0, 0) | (ivec2(int(5), 1)))))))), 0 >> _GLF_IDENTITY(int(5), int(5)), 0 >> _GLF_IDENTITY(int(5), int(5)))))), 4, _GLF_IDENTITY(4, 0 | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x)) ^ (4)), int(ivec4(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), 1, 1, (0 << _GLF_IDENTITY(int(7), int(7))))))) - 0)) >> (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 1 * (_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) / 1)))))) * 1)) | (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(ivec2(int(5), 1), ivec2(0, 0) | (ivec2(int(5), 1)))))))), 0 >> _GLF_IDENTITY(int(5), int(5)), 0 >> _GLF_IDENTITY(int(5), int(5)))))), 4, _GLF_IDENTITY(4, 0 | (4)))), 0 ^ (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x)) ^ (4)), int(ivec4(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), 1, 1, (0 << _GLF_IDENTITY(int(7), int(7))))))) - 0)) >> (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 1 * (_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) / 1)))))) * 1)) | (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(ivec2(int(5), 1), ivec2(0, 0) | (ivec2(int(5), 1)))))))), 0 >> _GLF_IDENTITY(int(5), int(5)), 0 >> _GLF_IDENTITY(int(5), int(5)))))), 4, _GLF_IDENTITY(4, 0 | (4)))))), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x)) ^ (4)), int(ivec4(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)), 1, 1, (0 << _GLF_IDENTITY(int(7), int(7))))))) - 0)) >> (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), clamp(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(5), int(5)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 1 * (_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) / 1)))))) * 1)) | (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(ivec2(int(5), 1), ivec2(0, 0) | (ivec2(int(5), 1)))))))), 0 >> _GLF_IDENTITY(int(5), int(5)), 0 >> _GLF_IDENTITY(int(5), int(5)))))), 4, _GLF_IDENTITY(4, 0 | (4)))))))))) * ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) << 0))))) | 0)) - 0), 64, 4);
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))))); _injected_loop_counter ++)
              {
               do
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       do
                        {
                         if(subgroup_local_id + 1 < subgroup_size)
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, false), false)))))))), true)), true && (bool(bvec4(true, false, false, true)))))) || false))))
                            {
                             if(_GLF_DEAD(false))
                              continue;
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(2), uint(uvec4(uint(2), 0u, 0u, 1u))))), max(~ (~ (_GLF_IDENTITY(uint(2), uint(uvec4(uint(2), 0u, 0u, 1u))))), ~ (~ (_GLF_IDENTITY(uint(2), uint(uvec4(uint(2), 0u, 0u, 1u)))))))), 4, 64, 4);
                                }
                              }
                            }
                           else
                            {
                             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
                              continue;
                            }
                           do
                            {
                             do
                              {
                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                {
                                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED((16539 << _injected_loop_counter)) : _injected_loop_counter --)))
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                                          {
                                          }
                                         else
                                          {
                                           do
                                            {
                                             subgroupAll(_GLF_IDENTITY(false, (false) && true));
                                            }
                                           while(_GLF_WRAPPED_LOOP(false));
                                          }
                                        }
                                       else
                                        {
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-899.203), _GLF_FUZZED(10.73)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))))
                            continue;
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            continue;
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, (1.0) * cos(0.0)), 1.0), (true ? max(1.0, 1.0) : _GLF_FUZZED(701.857)))), injectionSwitch.y))); _injected_loop_counter ++)
                            {
                             atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
                            }
                           for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                            {
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) * 1), 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1))))))); _injected_loop_counter ++)
                              {
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                  {
                                   do
                                    {
                                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      {
                                      }
                                     else
                                      {
                                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec4(_injected_loop_counter != 0, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec4(_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec3(_injected_loop_counter != 0, true, false))), true, false, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), bool(bool((! (true)))))))))))), false, true)))))), (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(_injected_loop_counter != 0, bool(bvec4(_injected_loop_counter != 0, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))); _injected_loop_counter --)
                                        {
                                         do
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                            {
                                            }
                                           else
                                            {
                                             for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 | (1)))), (false ? _GLF_FUZZED((mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(47.16, min(_GLF_IDENTITY(47.16, mix(float(_GLF_FUZZED(8512.2019)), float(_GLF_IDENTITY(47.16, float(mat3x4(47.16, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), bool(true))), 47.16)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(47.16, min(_GLF_IDENTITY(47.16, mix(float(_GLF_IDENTITY(_GLF_FUZZED(8512.2019), float(mat3(_GLF_IDENTITY(_GLF_FUZZED(8512.2019), (_GLF_FUZZED(8512.2019)) + 0.0), 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9720.0021)), float(1.0), bool(true))), abs(1.0), determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(1.0), 1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(1.0), 1.0)))), 0.0)))), float(_GLF_IDENTITY(47.16, float(mat3x4(47.16, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), bool(_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), 47.16)), float(vec2(_GLF_IDENTITY(47.16, min(_GLF_IDENTITY(47.16, mix(float(_GLF_FUZZED(8512.2019)), float(_GLF_IDENTITY(47.16, float(mat3x4(47.16, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), bool(true))), 47.16)), 1.0)))), float(_GLF_FUZZED(-492.945)), bool(false))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(47.16, min(_GLF_IDENTITY(47.16, mix(float(_GLF_FUZZED(8512.2019)), float(_GLF_IDENTITY(_GLF_IDENTITY(47.16, float(mat3x4(47.16, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7285.9516) : _GLF_IDENTITY(47.16, float(mat3x4(47.16, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))), bool(true))), 47.16)), clamp(_GLF_IDENTITY(47.16, min(_GLF_IDENTITY(47.16, mix(float(_GLF_FUZZED(8512.2019)), float(_GLF_IDENTITY(_GLF_IDENTITY(47.16, float(mat3x4(47.16, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7285.9516) : _GLF_IDENTITY(47.16, float(mat3x4(47.16, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))), bool(true))), 47.16)), _GLF_IDENTITY(47.16, min(_GLF_IDENTITY(47.16, mix(float(_GLF_FUZZED(8512.2019)), float(_GLF_IDENTITY(_GLF_IDENTITY(47.16, float(mat3x4(47.16, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7285.9516) : _GLF_IDENTITY(47.16, float(mat3x4(47.16, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))), bool(true))), 47.16)), _GLF_IDENTITY(47.16, min(_GLF_IDENTITY(47.16, mix(float(_GLF_FUZZED(8512.2019)), float(_GLF_IDENTITY(_GLF_IDENTITY(47.16, float(mat3x4(47.16, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7285.9516) : _GLF_IDENTITY(47.16, float(mat3x4(47.16, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))), bool(true))), 47.16)))), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(47.16, min(_GLF_IDENTITY(47.16, mix(float(_GLF_FUZZED(8512.2019)), float(_GLF_IDENTITY(_GLF_IDENTITY(47.16, 0.0 + (47.16)), float(mat3x4(47.16, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), bool(true))), 47.16)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(47.16, min(_GLF_IDENTITY(_GLF_IDENTITY(47.16, mix(float(_GLF_FUZZED(8512.2019)), float(_GLF_IDENTITY(_GLF_IDENTITY(47.16, 0.0 + (47.16)), float(mat3x4(47.16, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), bool(true))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(47.16, mix(float(_GLF_FUZZED(8512.2019)), float(_GLF_IDENTITY(_GLF_IDENTITY(47.16, 0.0 + (47.16)), float(mat3x4(47.16, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), bool(true))), float(mat3x4(_GLF_IDENTITY(47.16, mix(float(_GLF_FUZZED(8512.2019)), float(_GLF_IDENTITY(_GLF_IDENTITY(47.16, 0.0 + (47.16)), float(mat3x4(47.16, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), bool(true))), 1.0, 0.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))), 47.16)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(3.5) : float(mat3(_GLF_IDENTITY(47.16, min(_GLF_IDENTITY(47.16, mix(float(_GLF_FUZZED(8512.2019)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(47.16, 0.0 + (47.16)), float(mat3x4(47.16, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(47.16, 0.0 + (47.16)), float(mat3x4(47.16, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))), bool(true))), 47.16)), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))))) + log(1.0)))), _GLF_IDENTITY(float(_GLF_FUZZED(5.1)), log(1.0) + (float(_GLF_FUZZED(5.1)))), bool(false))), -917.093, -0.3, -833.131, 1.5, -6.7, -4231.0964, -2.9, -865.384) , _injected_loop_counter)) : 1)), max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, 1))), int(int(~ (_GLF_IDENTITY(1, min(1, 1)))))))))); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), injectionSwitch.x))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), injectionSwitch.x), (_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), injectionSwitch.x)) * abs(1.0))), (int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), injectionSwitch.x))) | (_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 0.0 + (0.0)), 0.0)), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (mat4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(sqrt(0.0), max(_GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))), sqrt(0.0))), 1.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), injectionSwitch.x)))))))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), injectionSwitch.x))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5523.2856) : 0.0)) + (0.0)), 0.0)), injectionSwitch.x), (_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), injectionSwitch.x)) * abs(1.0))), (int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), injectionSwitch.x))) | (_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 0.0 + (0.0)), 0.0)), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 1.0, 0.0, cos(0.0), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (mat4(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(sqrt(0.0), max(_GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))), sqrt(0.0))), 1.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), injectionSwitch.x)), ~ (_GLF_IDENTITY(~ (int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), injectionSwitch.x))), min(~ (int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), injectionSwitch.x))), ~ (int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), injectionSwitch.x))))))))))))) || false); _injected_loop_counter --)
                                              {
                                               if(_GLF_WRAPPED_IF_TRUE(true))
                                                {
                                                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
                                                  {
                                                  }
                                                 else
                                                  {
                                                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))))))
                                                    {
                                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                                      {
                                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                                        {
                                                        }
                                                       else
                                                        {
                                                         subgroupAll(true);
                                                        }
                                                      }
                                                     else
                                                      {
                                                      }
                                                    }
                                                   else
                                                    {
                                                    }
                                                  }
                                                }
                                               else
                                                {
                                                }
                                              }
                                            }
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                        }
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                }
                              }
                            }
                           do
                            {
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                    {
                                     return;
                                    }
                                  }
                                 else
                                  {
                                  }
                                }
                               else
                                {
                                }
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(bool(bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), false, false), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true)))), false, false), false)))))))));
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     else
                      {
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
         else
          {
          }
        }
       else
        {
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
}
