#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(radians(vec2(-55.15, 45.18))) : injectionSwitch)), injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), bool(bool(! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec3(false || (false), false, false)), bool(bvec2(bool(bvec3(false || (false), false, false)), true)))))) && true)))), (_GLF_DEAD(false)) && true), false, false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bool(! (! (bool(_GLF_DEAD(false))))), (bool(! (! (bool(_GLF_DEAD(false)))))) || false))))) && true)), true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, _GLF_IDENTITY(true, ! (! (true)))))))))))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))) && true), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), (! (! (_GLF_IDENTITY(false, (false) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))) || false))))) || false)))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))) || false))))) || false)))))), bool(bvec2((! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))) || false))))) || false)))))), false))))) && true)), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false)))))), (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec2((false) || false, true)), (bool(bvec2((false) || false, true))) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), (false) || false))))) || false))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec2((false) || false, true)), (bool(bvec2((false) || false, true))) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), (false) || false))))) || false))))))))) && true)), bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), (! (! (_GLF_IDENTITY(false, (false) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), (false) || false))))) || false)))))) && true)), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), true, false)))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(3.9)), ((true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(3.9))) + sqrt(0.0)))) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), 1.0)), mix(float(float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y)) + 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(-5.6)), bool(false)))) > injectionSwitch.y))))))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(3.9)))) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), mix(float(float(mat3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(-5.6)), bool(false)))) > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(3.9)))) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), mix(float(float(mat3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(-5.6)), bool(false)))) > injectionSwitch.y)) || false)))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(3.9)))) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), mix(float(float(mat3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(-5.6)), bool(false)))) > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(3.9)))) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), mix(float(float(mat3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(-5.6)), bool(false)))) > injectionSwitch.y)) || false)))), false, true)))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(3.9)))) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - tan(tan(0.0))), 0.0, 1.0, 1.0)), mix(float(float(mat3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(-5.6)), bool(false)))) > injectionSwitch.y))))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(dot(vec3(-42.92, 1254.2229, -66.35), vec3(65.33, -893.740, -2.8))))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)).x)) : _GLF_IDENTITY(_GLF_FUZZED(3.9), float(mat2(_GLF_FUZZED(3.9), 1.0, 0.0, 0.0)))))), clamp((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)).x)) : _GLF_IDENTITY(_GLF_FUZZED(3.9), float(mat2(_GLF_FUZZED(3.9), 1.0, 0.0, 0.0)))))), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)).x)) : _GLF_IDENTITY(_GLF_FUZZED(3.9), float(mat2(_GLF_FUZZED(3.9), 1.0, 0.0, 0.0)))))), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)).x)) : _GLF_IDENTITY(_GLF_FUZZED(3.9), float(mat2(_GLF_FUZZED(3.9), 1.0, 0.0, 0.0)))))))) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), mix(float(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), clamp(false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), mix(float(_GLF_FUZZED(4529.8303)), float(false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), bool(true))))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) / _GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(-5.6)), bool(false)))) > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(3.9)))) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y), 0.0 + ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(3.9)))) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.0)), float(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), bool(true))), 0.0, 1.0, 0.0, 1.0, 1.0)), mix(float(float(mat3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(-5.6)), _GLF_IDENTITY(bool(false), true && (bool(false)))))) > injectionSwitch.y))))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(3.9)))) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y), 0.0 + ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(3.9)))) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.0)), float(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), bool(true))), 0.0, 1.0, 0.0, 1.0, 1.0)), mix(float(float(mat3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(-5.6)), _GLF_IDENTITY(bool(false), true && (bool(false)))))) > injectionSwitch.y))))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(3.9)))) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y), 0.0 + ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(3.9)))) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.0)), float(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), bool(true))), 0.0, 1.0, 0.0, 1.0, 1.0)), mix(float(float(mat3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(-5.6)), _GLF_IDENTITY(bool(false), true && (bool(false)))))) > injectionSwitch.y))))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false), false, true, false)), false || (bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(3.9)))) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y), 0.0 + ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(3.9)))) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.0)), float(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), bool(true))), 0.0, 1.0, 0.0, 1.0, 1.0)), mix(float(float(mat3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(-5.6)), _GLF_IDENTITY(bool(false), true && (bool(false)))))) > injectionSwitch.y))))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(3.9)))) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y), 0.0 + ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(3.9)))) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.0)), float(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), bool(true))), 0.0, 1.0, 0.0, 1.0, 1.0)), mix(float(float(mat3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(-5.6)), _GLF_IDENTITY(bool(false), true && (bool(false)))))) > injectionSwitch.y))))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false), false, true, false)))))), true), false)))))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))) || false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / abs(vec2(1.0, 1.0))).x) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || _GLF_IDENTITY(false, bool(bvec3(false, true, false)))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((68.64 / -1.0)) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (false))) && true, bool(bvec2((_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (false))) && true, true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec3(false || (false), false, false)))) || (bool(bvec4(false, false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))) || false))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false)))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 + (1))])).x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 + (1))])).x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0))), log(1.0), cos(0.0), 1.0, 0.0)), mix(float(float(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 + (1))])).x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0))), log(1.0), cos(0.0), 1.0, 0.0))), float(_GLF_FUZZED(-3.5)), bool(false)))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) && true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7348.1190)), bool(false)))))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) / ((_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 1u, 0u))), 1u)) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, 5u))), uint(_GLF_IDENTITY(5u, max(5u, 5u)))))), (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), ~ (~ (_GLF_IDENTITY((workgroup_size) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), ((workgroup_size) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) | (_GLF_IDENTITY((workgroup_size) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), uint(uint((workgroup_size) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))))))))) / 1u)))) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, 0u | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id))), _GLF_IDENTITY(((subgroup_id)) | ((subgroup_id)), min(((subgroup_id)) | ((subgroup_id)), ((subgroup_id)) | ((subgroup_id)))))) * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), (! (_GLF_DEAD(false))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.9)))), clamp((_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.9)))), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.9)))), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.9)))))) * exp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec4(2428.0593, -4575.3120, 96.09, 2309.5448), vec4(2580.4439, -63.45, -464.407, 245.378))) : 1.0)), 0.0, 0.0), (true ? mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(distance(vec4(2428.0593, -4575.3120, 96.09, 2309.5448), vec4(2580.4439, -63.45, -464.407, 245.378))) : 1.0)), 0.0, 0.0) : _GLF_FUZZED((9.1 + mat4(71.96, 9330.9123, -1.6, -6.8, -2762.8521, 240.471, 5475.1094, 9502.2552, 4.6, -2.1, -5631.1823, -1.0, -428.154, 635.718, -77.07, 5.5))))))), 0.0))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.9)))), clamp((_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.9)))), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.9)))), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(-1.9, float(_GLF_IDENTITY(mat3(-1.9, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(0.0)), (true ? mat3(-1.9, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(0.0)) : _GLF_FUZZED(mat3(6.9, 87.89, 7234.0244, 649.645, -451.280, -2.5, -29.10, -5472.5423, 889.277)))))))))))) * exp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(-1.9)))), _GLF_IDENTITY(clamp((_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.9)))), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.9)))), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.9))))), min(clamp((_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.9)))), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.9)))), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.9))))), clamp((_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.9)))), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.9)))), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.9)))))))) * exp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(abs(1.0), (abs(1.0)) / 1.0), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.9)))), clamp((_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.9)))), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.9)))), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.9)))))) * exp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), cos(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 1.0, 0.0, 0.0))), 0.0)))))))) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id + 1, (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u))))) + (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))))), clamp((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))) + 1, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), _GLF_IDENTITY(uint(7u), 0u + (_GLF_IDENTITY(uint(7u), (uint(7u)) >> 0u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u)))), (_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), (uint(7u)) << 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u))), (false ? _GLF_FUZZED(uint(-28.13)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u))), min(_GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u))), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u)))))))))))))) + (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(max(subgroup_local_id + 1, subgroup_local_id + 1), uint(uvec2(max(subgroup_local_id + 1, subgroup_local_id + 1), _GLF_IDENTITY(1u, (1u) >> 0u))))))))), (~ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, max(7u, _GLF_IDENTITY(7u, (true ? 7u : _GLF_FUZZED(virtual_gid)))))), clamp(uint(_GLF_IDENTITY(7u, max(7u, _GLF_IDENTITY(7u, (true ? 7u : _GLF_FUZZED(virtual_gid)))))), uint(_GLF_IDENTITY(7u, max(7u, _GLF_IDENTITY(7u, (true ? 7u : _GLF_FUZZED(virtual_gid)))))), uint(_GLF_IDENTITY(7u, max(7u, _GLF_IDENTITY(7u, (true ? 7u : _GLF_FUZZED(virtual_gid)))))))), uint(7u))))) + (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(uvec2((0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u))))) + (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), 1u)))))), (~ (_GLF_IDENTITY(subgroup_local_id + 1, (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u))))) + (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))))))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u)))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u)))), min(0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u)))), 0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(_GLF_IDENTITY(uint(7u), ~ (~ (uint(7u)))), uint(7u), uint(7u))))))) - _GLF_IDENTITY(0u, (1u ^ 1u) ^ (0u)))) + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))) ^ 0u), _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), min(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))))), clamp((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)))) + 1, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, uint(uvec2(_GLF_IDENTITY(7u, 0u ^ (7u)), 0u)))), clamp(uint(7u), _GLF_IDENTITY(uint(7u), 0u ^ (_GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u))))), uint(7u)))), (_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u))))) | (_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u)))))))))) + (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))))), (~ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u))))) + (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1))))), uint(uvec2((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (false ? _GLF_FUZZED(subgroup_size) : 7u))), clamp(uint(7u), uint(7u), uint(7u)))), 0u + (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (false ? _GLF_FUZZED(subgroup_size) : 7u))), clamp(uint(7u), uint(7u), uint(7u))))))) + (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), 1u)))))), (~ (_GLF_IDENTITY(subgroup_local_id + 1, (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u))))) + (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) ^ 0), 1)), max(subgroup_local_id + 1, subgroup_local_id + 1)))))))))) + 0u)) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) - uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, 0.0 + ((0.0) / 1.0)))))) * 1.0))), injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-5.0) : _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7.9) : 1.0)), 1.0, 1.0))))).x))))))), uint(uint(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) - uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), mix(float((0.0)), float(_GLF_FUZZED(_GLF_IDENTITY(2.1, (2.1) - _GLF_ZERO(0.0, injectionSwitch.x)))), bool(false))) / 1.0)))) * 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) / vec2(1.0, 1.0)).x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x))), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x), (_GLF_IDENTITY(false ? _GLF_FUZZED(-5.0) : _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(mat2x4(false ? _GLF_FUZZED(-5.0) : _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))))))))));
 atomicStore(buf[virtual_gid], uint(1), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64), min(_GLF_IDENTITY((64), ((64)) | ((64))), _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY((false ? _GLF_FUZZED(82368) : 64), int(ivec3((false ? _GLF_FUZZED(82368) : 64), 0, 1))))) | 0)), _GLF_IDENTITY(((64)), int(ivec4(((64)), 1, 0, 1))) | ((64))))) << 0, clamp(_GLF_IDENTITY((64), min(_GLF_IDENTITY((64), ((64)) | ((64))), _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(82368) : 64))) | 0)), ((64)) | ((64))))) << 0, _GLF_IDENTITY((_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (~ (64)) ^ 0)))), min(_GLF_IDENTITY((64), ((64)) | ((_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, int(ivec4(64, 0, 1, 0))), 64, 64))))))), _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(82368) : 64))) | 0)), ((64)) | ((64))))) << 0, _GLF_IDENTITY(_GLF_IDENTITY((64), min(_GLF_IDENTITY((64), ((64)) | ((64))), _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(82368) : 64))) | 0)), ((64)) | ((64))))) << 0, (_GLF_IDENTITY(_GLF_IDENTITY((64), min(_GLF_IDENTITY((64), ((64)) | ((64))), _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(82368) : 64))) | 0)), ((64)) | ((64))))) << 0, (_GLF_IDENTITY((64), min(_GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))), ((64)) | ((64))), _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, (false ? _GLF_FUZZED(82368) : 64))) | 0, ((_GLF_IDENTITY(64, (false ? _GLF_FUZZED(82368) : 64))) | 0) >> 0))), ((64)) | ((64))))) << 0) | (_GLF_IDENTITY((64), min(_GLF_IDENTITY((64), ((64)) | ((64))), _GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(82368) : 64))) | 0)), ((64)) | (_GLF_IDENTITY(_GLF_IDENTITY((64), min(_GLF_IDENTITY((64), ((64)) >> 0), (64))), (_GLF_IDENTITY((64), min(_GLF_IDENTITY((64), ((64)) >> 0), (64)))) | (_GLF_IDENTITY(_GLF_IDENTITY((64), min(_GLF_IDENTITY((64), ((64)) >> 0), (64))), (_GLF_IDENTITY((64), min(_GLF_IDENTITY((64), ((64)) >> 0), (64)))) | (_GLF_IDENTITY((64), min(_GLF_IDENTITY((64), ((64)) >> 0), (64))))))))))) << _GLF_IDENTITY(0, ~ (~ (0)))))) | 0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), (false ? _GLF_FUZZED(abs(-77188)) : 4)), (4) << 0), (4) | (4)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) % 2) == _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), ~ (~ (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) / 1)), (_GLF_IDENTITY((0), ((0)) | 0)) * (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((4), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((4))), ~ (~ (~ (4))))), (_GLF_IDENTITY(true, (true) || false) ? (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((4), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((4))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((4))), clamp(_GLF_IDENTITY((4), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((4))), _GLF_IDENTITY((4), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((4))), _GLF_IDENTITY((4), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((4))))), _GLF_IDENTITY((4), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((4))), _GLF_IDENTITY((4), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((4))))), ~ (~ (~ (4))))) : _GLF_FUZZED(bitfieldInsert(-57724, 47597, -6676, -89148)))))))), (true ? (1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((4), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((4))), ~ (~ (~ (4))))), (_GLF_IDENTITY(true, (true) || false) ? (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((4), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((4))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((4))), clamp(_GLF_IDENTITY((4), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((4))), _GLF_IDENTITY((4), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((4))), _GLF_IDENTITY((4), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((4))))), _GLF_IDENTITY((4), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((4))), _GLF_IDENTITY((4), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((4))))), ~ (~ (~ (4))))) : _GLF_FUZZED(bitfieldInsert(-57724, 47597, -6676, -89148)))))))) : _GLF_FUZZED(74843))) >> _GLF_IDENTITY(int(4), int(4))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1714.2022))), 0.0)))))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) * 1)), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))), injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true))))))))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), float(_GLF_FUZZED(37.12)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, true, true))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))) && (false))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), cos(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), cos(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-399.735)), bool(false)))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) && true))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, log(1.0), 0.0, 0.0))), sqrt(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, (1.0) / 1.0))), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6.6), mix(float(_GLF_FUZZED(-6.6)), float(_GLF_FUZZED(10.41)), bool(false)))), float(injectionSwitch.x), bool(_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false)))))), (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-80.24)), bool(false))))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7067.8913)), bool(false)))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-606.749), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.0)), bvec2(true, false))).y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))], _GLF_IDENTITY(uint(2), max(uint(2), _GLF_IDENTITY(uint(2), (uint(_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), (max(2, 2)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))) * 1u))), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, _GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2(_GLF_FUZZED(-517.412), _GLF_IDENTITY((vec2(injectionSwitch)), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) - mat2(0.0, 0.0, 0.0, 0.0)) * (_GLF_IDENTITY((vec2(injectionSwitch)), min(_GLF_IDENTITY((vec2(injectionSwitch)), vec2(vec3((vec2(injectionSwitch)), 0.0))), _GLF_IDENTITY((vec2(injectionSwitch)), ((vec2(injectionSwitch))) - vec2(0.0, 0.0))))))[1]), vec2((vec2(injectionSwitch))[0], _GLF_FUZZED(-79.66)), bvec2(true, false)))), min(vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2(_GLF_FUZZED(-517.412), (vec2(injectionSwitch))[1]), vec2((vec2(injectionSwitch))[0], _GLF_FUZZED(-79.66)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))))), vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2(_GLF_FUZZED(-517.412), (vec2(injectionSwitch))[1]), vec2((vec2(injectionSwitch))[0], _GLF_FUZZED(-79.66)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))))))).y)))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
}
