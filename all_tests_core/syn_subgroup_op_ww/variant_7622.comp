#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true), false, true)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true), false, true))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y))))))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))) < injectionSwitch.y)), false))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))) || false)) || false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))))), (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0)), transpose(transpose(mat3(injectionSwitch, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), min(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0))))), (true ? _GLF_IDENTITY(mat3(injectionSwitch, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, cos(0.0)), transpose(transpose(mat3(injectionSwitch, round(length(_GLF_IDENTITY(normalize(vec3(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(645.460))), 1.0)), min(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, 1.0)))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, cos(0.0))))) : _GLF_FUZZED(mat3(-75.38, -95.78, 23.96, -424.924, 4.3, -3.5, 257.207, 5.2, 12.53)))))).y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && true))), ! (_GLF_IDENTITY(! ((! (true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat3(1.0) * (vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))))))))), (! ((! (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ! _GLF_IDENTITY((! (true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) && true)) && true))), ! (_GLF_IDENTITY(! ((! (true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-19.85)), float(injectionSwitch.y), bool(true))), (injectionSwitch.y) * 1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat3(1.0) * (vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) + 0.0)))), 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))))))))))))), (! ((! (true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))) && true))))))))), true)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))), ! _GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), (_GLF_IDENTITY((! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), false || ((! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))) || false)))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), 0.0, 1.0)), max(float(vec3(injectionSwitch.y, 0.0, 1.0)), float(vec3(injectionSwitch.y, 0.0, 1.0)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, true, false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), true && (! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, true, true))))))))), true, _GLF_IDENTITY(true, bool(bool(true))), true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), true && ((! (false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))) || _GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(821.946)), vec2(_GLF_FUZZED(9382.1800), _GLF_IDENTITY((injectionSwitch)[1], float(float((injectionSwitch)[1])))), bvec2(false, true))), injectionSwitch)).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(821.946)), vec2(_GLF_FUZZED(9382.1800), _GLF_IDENTITY((injectionSwitch)[1], float(float((injectionSwitch)[1])))), bvec2(false, true))), injectionSwitch)).y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), min((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)))), max(injectionSwitch, injectionSwitch)).y))), bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) && true)))), true, true, true)))))), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, (false) || false), true))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y))), (bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))) && true)))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), true, true, true)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) || false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(false, ! (! (false))) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)))).y))), true, true, true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), injectionSwitch)), max(injectionSwitch, injectionSwitch)).y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch), (injectionSwitch))) * mat2(1.0)))), injectionSwitch)), max(injectionSwitch, injectionSwitch)).y))), false, true, true))), bool(bvec4(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y)))) && true)) && true), true, true, true))))) || false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) / 1.0))), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 0.0))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-1.5)))) - 0.0))), ! (! (injectionSwitch.x > injectionSwitch.y))))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, sqrt(1.0))), (vec2(mat2(injectionSwitch, 0.0, sqrt(1.0)))) / vec2(1.0, 1.0))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(885.149))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(false || ((_GLF_DEAD(false))), ! (! (false || _GLF_IDENTITY(((_GLF_DEAD(false))), true && (((_GLF_DEAD(false)))))))))), true && (_GLF_DEAD(false)))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)).x, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096), _GLF_IDENTITY((bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096)), ((bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096))) - 0u) / 1u)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ~ (~ ((0u)))))) : _GLF_FUZZED(subgroup_local_id))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ~ (~ ((0u)))))) : _GLF_FUZZED(subgroup_local_id)))), (~ (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ~ (~ ((0u)))))) : _GLF_FUZZED(subgroup_local_id))))) ^ 0u))))).x, ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u ^ 0u) ^ (0u)) : _GLF_FUZZED(147587u))), 0u)).x, _GLF_IDENTITY(0u + (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x, (false ? _GLF_FUZZED(bitfieldInsert(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), subgroup_size, 13679, -57096)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x) | (false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 13679, -57096)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x))), (0u + (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x, (false ? _GLF_FUZZED(bitfieldInsert(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), subgroup_size, 13679, -57096)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x) | (false ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_size, 13679, _GLF_IDENTITY(-57096, 0 | (-57096)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_size, 13679, _GLF_IDENTITY(-57096, 0 | (-57096)))), 0u | (_GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_size, 13679, _GLF_IDENTITY(-57096, 0 | (-57096)))))) : _GLF_FUZZED(35616u))) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)), 0u)))).x)))) / 1u)))))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096), (bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096)) / 1u)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | 0u)))) : _GLF_FUZZED(subgroup_local_id))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | 0u)))) : _GLF_FUZZED(subgroup_local_id))))).x) << 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | 0u)))) : _GLF_FUZZED(subgroup_local_id))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | 0u)))) : _GLF_FUZZED(subgroup_local_id))))).x) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | 0u)))) : _GLF_FUZZED(subgroup_local_id))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | 0u)))) : _GLF_FUZZED(subgroup_local_id))))).x) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | 0u)))) : _GLF_FUZZED(subgroup_local_id))))).x, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | 0u)))) : _GLF_FUZZED(subgroup_local_id))))).x) << 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_size, _GLF_IDENTITY(13679, (13679) - 0), -57096)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u ^ 0u) ^ (0u)) : _GLF_FUZZED(147587u))), _GLF_IDENTITY(0u, 0u ^ (0u)))).x, 0u + (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x, (false ? _GLF_FUZZED(bitfieldInsert(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), subgroup_id)), subgroup_size, 13679, -57096)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x) | (false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x))))), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u ^ 0u) ^ (0u)) : _GLF_FUZZED(147587u))), 0u)).x, _GLF_IDENTITY(0u + (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x, (false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x) | (false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x))), (_GLF_IDENTITY(0u + (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x, (false ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096), clamp(bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096), bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096), bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096)))) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x) | (false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x))), (0u + (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x, (false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x) | (false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x)))) | (0u + (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) << ((uvec3(0u, 0u, 0u) & uvec3(103249u, 108235u, 80538u)) << _GLF_IDENTITY(uvec3(1u), uvec3(1u)))).x, (false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x) | (false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u ^ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u ^ 0u) ^ (0u)) : _GLF_FUZZED(147587u))), 0u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u ^ 0u) ^ (0u)) : _GLF_FUZZED(147587u))), 0u)))).x, 0u + (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_size, 13679, _GLF_IDENTITY(-57096, (-57096) / 1))) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x) | (false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096), 0u | (bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096)))) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x) | (false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), 0u ^ ((false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x) | (false ? _GLF_FUZZED(bitfieldInsert(subgroup_id, subgroup_size, 13679, -57096)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x)))) << 0u))))))))))))) - 0u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(_GLF_IDENTITY(usubBorrow(atomicExchange(num_workgroup, subgroup_size), num_workgroup, subgroup_id), (usubBorrow(_GLF_IDENTITY(atomicExchange(num_workgroup, subgroup_size), _GLF_IDENTITY(0u, min(0u, 0u)) | (_GLF_IDENTITY(atomicExchange(num_workgroup, subgroup_size), _GLF_IDENTITY((atomicExchange(num_workgroup, subgroup_size)), ((atomicExchange(num_workgroup, subgroup_size))) + 0u) | 0u))), num_workgroup, subgroup_id)) + (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))))))) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : gl_WorkGroupSize.x))) << _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))), ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(true ? 8u : _GLF_FUZZED(subgroup_id), (_GLF_IDENTITY(true ? 8u : _GLF_FUZZED(subgroup_id), 0u + (_GLF_IDENTITY(true ? 8u : _GLF_FUZZED(subgroup_id), clamp(true ? _GLF_IDENTITY(8u, 0u | (8u)) : _GLF_FUZZED(subgroup_id), true ? 8u : _GLF_FUZZED(subgroup_id), _GLF_IDENTITY(true ? 8u : _GLF_FUZZED(subgroup_id), ~ (~ (true ? 8u : _GLF_FUZZED(subgroup_id))))))))) - 0u)))), _GLF_IDENTITY(uint(8u), (uint(8u)) * 1u)))) | (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, clamp(_GLF_IDENTITY(8u, ~ (~ (8u))), _GLF_IDENTITY(8u, (8u) + 0u), 8u))), uint(8u))), ((_GLF_IDENTITY(0u, (0u) | (0u)) >> _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, (8u) * (1u & 1u)))))) * 1u)))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), ~ (~ (_GLF_FUZZED(subgroup_id))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         return;
        }
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (false) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), _GLF_IDENTITY(true, bool(bool(true))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, log(1.0), 1.0, abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), 0.0, 0.0), mat4x2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0) + (mat4x2(injectionSwitch, 1.0, log(1.0), 1.0, abs(1.0), 0.0, 0.0))))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) && true), false), _GLF_IDENTITY(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), true, false), true)), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))), true)), (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))), true))) && true))), true)), true)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, float(vec3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 0.0, 1.0)))), true))), true, false), true)), true)), true))))))))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, true && (true)), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), true)), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), true)), true))), false))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, length(vec2(0.0, 0.0)), 1.0)), 0.0 + (float(mat4x3(injectionSwitch.x, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, length(vec2(0.0, 0.0)), 1.0))))) > injectionSwitch.y))))
          barrier();
        }
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-123.584)), bool(false))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))) || false)))
        return;
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_DEAD(false)) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_DEAD(false)) && true)))))))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true)), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))) && true)), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))))))))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))))))))), true))))))))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 1.0, 1.0))), max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0), (true ? mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat2x3(-3.3, -9.2, 224.762, -5.6, 6.1, 837.736)))))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), true && (bool(bvec3(_GLF_DEAD(false), true, true)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), true && (bool(bvec3(_GLF_DEAD(false), true, true))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat2x4(injectionSwitch[0], 1.0, tan(0.0), 1.0, sqrt(1.0), 0.0, 1.0, log(1.0)))), injectionSwitch[1]), (vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat2x4(injectionSwitch[0], 1.0, tan(0.0), 1.0, sqrt(1.0), 0.0, 1.0, log(1.0)))), injectionSwitch[1])) * vec2(1.0, 1.0))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), false))))), false, false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-4444.2727, -1327.7518)))).y, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-4444.2727, -1327.7518)))).y, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-4444.2727, -1327.7518)))).y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    return;
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))))), clamp(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id)))))))), _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))))), _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))))), clamp(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id)))))))), _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))))), _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))))))))) | 0u) | _GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), min(_GLF_IDENTITY(0u | (0u), (0u | (0u)) << 0u), 0u | (0u))))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))) && true)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)))), ((_GLF_IDENTITY(false, (false) || false))) || false) && true)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y)), false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (! ((false))))) || false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))), (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))), (! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))) || false)))))))), true)), (bool(bvec2(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))), ! (! (! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))))))), true))) && true))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, true, false)), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, true, false)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(false, true, false)), true)), true)))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, true, false)), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, true, false)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(false, true, false)), true)), true)))))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, true, false)), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, true, false)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(false, true, false)), true)), true))))))))))))))))), false || ((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, false), bvec3(bvec3(bvec3(false, true, false)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), false)), false)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), false)), false)))))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec3(bvec3(bvec3(bvec3(false, true, false))))))))), true)))))))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))), bool(bvec4(bool(bvec2(false, false)), true, true, false)))), true, false), bvec3(bvec3(bvec3(false, true, false))))))), false || ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bvec3(bvec3(bvec3(false, true, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true))), false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true))), false))))))))))))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, max(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, uint(uvec4(subgroup_base, 1u, 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : 1u))))))), _GLF_IDENTITY(uint(uvec4(subgroup_base, 0u, 0u, 1u)), _GLF_IDENTITY(0u + (uint(uvec4(subgroup_base, 0u, 0u, 1u))), (false ? _GLF_FUZZED(subgroup_base) : 0u + (uint(uvec4(subgroup_base, 0u, 0u, 1u))))))))) + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) * 1u) + 1) >> (_GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), 0u | (_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))))))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) >> 0u), (true ? _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (uint(3u))))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) >> 0u) : _GLF_FUZZED(subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) * 1u) + 1) >> (_GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), 0u | (_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))))))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) >> 0u), (true ? _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (uint(3u))))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) >> 0u) : _GLF_FUZZED(subgroup_size)))), (true ? (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) * 1u) + 1) >> (_GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), 0u | (_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))))))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) >> 0u), (true ? _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (uint(3u))))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) >> 0u) : _GLF_FUZZED(subgroup_size)))) : _GLF_FUZZED(workgroup_id)))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) * 1u) + 1) >> (_GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), 0u | (_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))))))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) >> 0u), (true ? _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (uint(3u))))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) >> 0u) : _GLF_FUZZED(subgroup_size)))), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) * 1u) + 1) >> (_GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), 0u | (_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))))))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) >> 0u), (true ? _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (uint(3u))))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) >> 0u) : _GLF_FUZZED(subgroup_size))))) ^ 0u))))) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) * 1u) + 1) >> (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), 0u | (_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))))))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) >> 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), 0u | (_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))))))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) >> 0u), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) | (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), 0u | (_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))))))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) >> 0u)))), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), 0u | (_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))))))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) >> 0u), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) | (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), 0u | (_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))))))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) >> 0u)))) : _GLF_FUZZED(num_workgroup))))), (true ? _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 0u | (3u))), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (uint(3u))))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) >> 0u) : _GLF_FUZZED(subgroup_size)))))) % subgroup_size) | ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, ~ (~ (1))))))), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) * 1u) + 1) >> (_GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), 0u | (_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))))))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) >> 0u), (true ? _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_id) : uint(3u))), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (uint(3u))))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) >> 0u) : _GLF_FUZZED(subgroup_size)))))) % subgroup_size)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) | (0u)))) ^ (uint(3u))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) - (1u ^ (1u | 1u))) + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base))), (subgroup_local_id + 1) >> (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))))))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, _GLF_IDENTITY(1, 0 + (1))), (max(1, _GLF_IDENTITY(1, 0 + (1)))) | 0)), (subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 1))), 1)), 1))) >> (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 0u ^ (0u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 0u ^ (0u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 0u ^ (0u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))))) | (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 0u ^ (0u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))))))) | (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 0u ^ (0u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, 0u, 0u)), (uint(uvec3(subgroup_local_id, 0u, 0u))) / ((0u ^ 0u) | uint(_GLF_ONE(1.0, injectionSwitch.y))))))) + 1, (subgroup_local_id + 1) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))), uint(3u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u | (uint(3u))), clamp(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, ~ (~ (3u)))) + (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), uint(3u))), uint(3u)))) * 1u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))))))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> _GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, 0u)) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (0u ^ 0u) | (_GLF_IDENTITY(uint(3u), 0u | (uint(3u))))), 0u ^ (uint(3u))))), 0u ^ ((0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, clamp(_GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, (3u) | (3u)), 3u)), 3u, _GLF_IDENTITY(3u, min(3u, 3u))))) + 0u)), 0u ^ (uint(3u)))))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) - 0u)))), (subgroup_local_id + 1) >> (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))), (_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))) | (_GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) >> (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 0u | (3u))), 0u ^ _GLF_IDENTITY((uint(3u)), ~ (~ ((uint(3u)))))))))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) >> (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-69536)))), (true ? 0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-69536)))) : _GLF_FUZZED(49591))))), (subgroup_local_id + 1) >> (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))))))) | ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))))))))))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) >> (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 0u | (3u))), 0u ^ _GLF_IDENTITY((uint(3u)), ~ (~ ((uint(3u)))))))))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) >> (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-69536)))), (true ? 0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-69536)))) : _GLF_FUZZED(49591))))), (subgroup_local_id + 1) >> (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))))))) | ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))))))))))), 0u, 0u, 1u))))) % subgroup_size) * 1u));
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(sqrt(vec2(1.0, 1.0)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(828.265))))), float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true)))), min(max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true)))), (true ? max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true)))) : _GLF_FUZZED(83.09)))))) : _GLF_FUZZED(-7549.2455))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true)))), min(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-8.6, clamp(-8.6, -8.6, -8.6)), max(_GLF_IDENTITY(-8.6, clamp(-8.6, -8.6, -8.6)), _GLF_IDENTITY(_GLF_IDENTITY(-8.6, clamp(-8.6, -8.6, -8.6)), (_GLF_IDENTITY(-8.6, clamp(-8.6, -8.6, -8.6))) / 1.0))))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), true && (bool(true)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true)))), (max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true))))) - 0.0), (true ? max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true)))) : _GLF_FUZZED(83.09))), (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true)))), (max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true))))) - 0.0), (true ? max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true)))) : _GLF_FUZZED(83.09)))) / 1.0)))) : _GLF_FUZZED(-7549.2455)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true)))), min(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-8.6, clamp(-8.6, -8.6, -8.6)), max(_GLF_IDENTITY(-8.6, clamp(-8.6, -8.6, -8.6)), _GLF_IDENTITY(_GLF_IDENTITY(-8.6, clamp(-8.6, -8.6, -8.6)), (_GLF_IDENTITY(-8.6, clamp(-8.6, -8.6, -8.6))) / 1.0))))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), true && (bool(true)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true)))), (max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true))))) - 0.0), (true ? max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true)))) : _GLF_FUZZED(83.09))), (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true)))), (max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true))))) - 0.0), (true ? max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true)))) : _GLF_FUZZED(83.09)))) / 1.0)))) : _GLF_FUZZED(-7549.2455))))), (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true)))), min(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-8.6, clamp(-8.6, -8.6, -8.6)), max(_GLF_IDENTITY(-8.6, clamp(-8.6, -8.6, -8.6)), _GLF_IDENTITY(_GLF_IDENTITY(-8.6, clamp(-8.6, -8.6, -8.6)), (_GLF_IDENTITY(-8.6, clamp(-8.6, -8.6, -8.6))) / 1.0))))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), true && (bool(true)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true)))), (max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true))))) - 0.0), (true ? max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true)))) : _GLF_FUZZED(83.09))), (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true)))), (max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true))))) - 0.0), (true ? max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.6)), float(injectionSwitch.y), bool(true)))) : _GLF_FUZZED(83.09)))) / 1.0)))) : _GLF_FUZZED(-7549.2455)))))) && true))) && true))) || _GLF_IDENTITY((false), bool(bvec3((false), _GLF_IDENTITY(false, (false) || false), false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), true, false))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, (true) || false))), bool(bvec3(bool(bvec2(false, true)), true, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true, true))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), true, false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), true, false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), true, false)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), true, false)))))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), true, false))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), true, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true, true)))) || false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(exp(vec2(0.0, 0.0)), (exp(vec2(0.0, 0.0))) * vec2(1.0, 1.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x)) > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x)) > injectionSwitch.y)))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x)) > injectionSwitch.y)))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x)) > injectionSwitch.y)))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), false)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((false), true, true)), ! (_GLF_IDENTITY(! (bool(bvec3((false), true, true))), ! (_GLF_IDENTITY(! (! (bool(bvec3((false), true, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (bool(bvec3((false), true, true))), (! (_GLF_IDENTITY(bool(bvec3((false), true, true)), false || (bool(bvec3((false), true, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (! (! (bool(bvec3((false), true, true))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true))))), (bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true)))))) || false))), ! (! (bool(bvec3((false), true, true))))))))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((false), true, true)), ! (! _GLF_IDENTITY((bool(bvec3((false), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(((bool(bvec3((false), true, true)))), bool(bool(((bool(bvec3((false), true, true)))))))))), ! (! (_GLF_IDENTITY(bool(bvec3((false), true, true)), ! (! (bool(bvec3((false), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))))))))))))) || false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((false), true, true)), ! (! (bool(bvec3((false), true, true))))), ! (! (_GLF_IDENTITY(bool(bvec3((false), true, true)), ! (! (bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), true)))))))))))))) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((false), true, _GLF_IDENTITY(true, false || (true)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true)))), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true)))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true)))), false)))), true))))))))), ! (! (_GLF_IDENTITY(bool(bvec3((false), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec3(_GLF_IDENTITY(! ((false)), (! ((false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true, true))))))))) || false)) && true), true, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(false), false, false, false))), (_GLF_IDENTITY((bool(bvec4(_GLF_DEAD(false), false, false, false))), ! (! ((bool(bvec4(_GLF_DEAD(false), false, false, false))))))) || false) && true)), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(false), false, false, false))), (_GLF_IDENTITY((bool(bvec4(_GLF_DEAD(false), false, false, false))), ! (! ((bool(bvec4(_GLF_DEAD(false), false, false, false))))))) || false) && true)), true)))))))), (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(false), false, false, false))), (_GLF_IDENTITY((bool(bvec4(_GLF_DEAD(false), false, false, false))), ! (! ((bool(bvec4(_GLF_DEAD(false), false, false, false))))))) || false) && true)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), _GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_DEAD(false), false, false, false)))), ! (_GLF_IDENTITY(! (bool(bool(bool(bvec4(_GLF_DEAD(false), false, false, false))))), ! (! (! (bool(bool(bool(bvec4(_GLF_DEAD(false), false, false, false)))))))))))), (_GLF_IDENTITY((bool(bvec4(_GLF_DEAD(false), false, false, false))), ! (! ((bool(bvec4(_GLF_DEAD(false), false, false, false))))))) || false) && true)), _GLF_IDENTITY(true, false || (true))))))))))) && true)), false, _GLF_IDENTITY(false, ! (! (false))), true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3851.6720)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), false, true)))))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), bool(bvec4(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))) && true)))), false, true, true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), bool(bvec4(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))) && true)))), false, true, true))))), false || (! ((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), bool(bvec4(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))) && true)))), false, true, true))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), false, false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))))), 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))))), 1.0))))).y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), bool(bvec3(bool(_GLF_IDENTITY(false, false || (false))), false, true))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) * mat2(1.0))) / vec2(1.0, 1.0)).y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) * exp(0.0))), true))))))) && true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) && true, ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) && true) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) && true, ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) && true) || false))), (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) && true, ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) && true) || false)))) || false))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)))
            return;
           if(_GLF_DEAD(false))
            return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), bool(bvec2(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), true)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), bool(bvec2(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), bool(bvec2(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), true)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))), true)), bool(bvec2(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), true))))))) && _GLF_IDENTITY(true, false || (true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), bool(bvec2(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), true)), true)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), bool(bvec2(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), true)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(smoothstep(10.66, 753.642, -4.8)) : injectionSwitch.y))), false || ((injectionSwitch.x > injectionSwitch.y))))) && true))))))))), true)), bool(bvec2(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), true))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), bool(bvec2(_GLF_IDENTITY(false || (true), ! (! (false || (true)))), false))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), bool(bvec2(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), true)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), bool(bvec2(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))), true)), bool(bvec2(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), true))))))) && _GLF_IDENTITY(true, false || (true))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), bool(bvec2(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), true)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(262.382))))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), bool(bvec2(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((+ -1.1)), _GLF_FUZZED(1.3)), bvec2(false, false))).y)))), true)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))), true)), bool(bvec2(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), true))))))) && _GLF_IDENTITY(true, false || (true)))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-90.80)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), bool(bvec2(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), true)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))))), true), true), bvec3(bvec4(bvec3(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))))), true), true), false)))))), bool(bvec2(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), true)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))))), true)), bool(bvec2(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), true))))))) && _GLF_IDENTITY(true, false || (true))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))), true, true, false)))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), bool(bvec2(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, length(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch.x, length(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), max(float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, length(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch.x, length(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, length(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat2(1.0) * (mat4x2(injectionSwitch.x, length(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))) > injectionSwitch.y)))), true)), true)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), bool(bvec2(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), true)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))) || ((injectionSwitch.x > injectionSwitch.y))))))))), true)), bool(bvec2(bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), true))))))) && _GLF_IDENTITY(true, false || (true))))))))) || false)))) && true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(float(188443u))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), float(mat3x4(_GLF_IDENTITY(mix(float(_GLF_FUZZED(float(188443u))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (mix(float(_GLF_FUZZED(float(188443u))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) * 1.0), sqrt(0.0), 1.0, abs(1.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, sqrt(exp(0.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0))), (false ? _GLF_FUZZED(-0.0) : _GLF_IDENTITY(mix(float(_GLF_FUZZED(float(188443u))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), float(mat3x4(_GLF_IDENTITY(mix(float(_GLF_FUZZED(float(188443u))), float(injectionSwitch.y), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)), (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)), bool(bool(bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)))))) && true))))), (mix(float(_GLF_FUZZED(float(188443u))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) * 1.0), sqrt(0.0), 1.0, abs(1.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, sqrt(exp(0.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0))))))))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false))))), (bool(bvec4(_GLF_DEAD(false), false, false, false))) || false)))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, ((_GLF_DEAD(false)) || false) && true)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))))), bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), false), bvec2(bvec3(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), false), false)))))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))), true))))))))
    barrier();
  }
 if((subgroup_local_id % _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (~ (_GLF_IDENTITY(2, int(ivec4(_GLF_IDENTITY(2, min(2, 2)), (0 & -9860), 1, (1 | 1)))))) ^ 0)))) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))))), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), ! (! (! ((_GLF_IDENTITY(false, ! (! (false))))))))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), false, false, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), false, false, false))), false, false))))))))), ((_GLF_IDENTITY(false, ! (! (false))))) || false), (! (_GLF_IDENTITY(false, ! (! (false))))) && true), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! ((bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), false, false, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), false, false, false))), false, false))))))))), ((_GLF_IDENTITY(false, ! (! (false))))) || false), (! (_GLF_IDENTITY(false, ! (! (false))))) && true), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! ((bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), false, false, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), false, false, false))), false, false))))))))), ((_GLF_IDENTITY(false, ! (! (false))))) || false), (! (_GLF_IDENTITY(false, ! (! (false))))) && true), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))))))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) && true))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), ! (! (! ((_GLF_IDENTITY(false, ! (! (false))))))))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), false, false, false))), false, false))))))))), ((_GLF_IDENTITY(false, ! (! (false))))) || false), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, false || (false))))))) && true), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -35.75))), float(injectionSwitch.y), bool(true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), false, false, false))), false, false))))))))), ((_GLF_IDENTITY(false, ! (! (false))))) || false), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, false || (false))))))) && true), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -35.75))), float(injectionSwitch.y), bool(true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, bool(bool(false))), false))))), ! (_GLF_IDENTITY(! ((bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), false, false, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), false, false, false))), false, false))))))))), ((_GLF_IDENTITY(false, ! (! (false))))) || false), (! (_GLF_IDENTITY(false, ! (! (false))))) && true), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! ((bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), false, false, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), false, false, false))), false, false))))))))), ((_GLF_IDENTITY(false, ! (! (false))))) || false), (! (_GLF_IDENTITY(false, ! (! (false))))) && true), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, ((injectionSwitch.y) - 0.0) / 1.0)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(_GLF_IDENTITY(2, ~ (~ (2))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, ~ (~ (2)))), 0 ^ (int(_GLF_IDENTITY(2, ~ (~ (2))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(int(int(_GLF_IDENTITY(2, ~ (~ (2))))), (int(int(_GLF_IDENTITY(2, ~ (~ (2)))))) << 0), int(int(_GLF_IDENTITY(2, ~ (~ (2)))))), (true ? min(_GLF_IDENTITY(int(int(_GLF_IDENTITY(2, ~ (~ (2))))), (int(int(_GLF_IDENTITY(2, ~ (~ (2)))))) << 0), int(int(_GLF_IDENTITY(2, ~ (~ (2)))))) : _GLF_FUZZED(80042))))) - 0))), (uint(_GLF_IDENTITY(2, _GLF_IDENTITY(int(int(_GLF_IDENTITY(2, ~ (~ (2))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, ~ (~ (2)))), 0 ^ (int(_GLF_IDENTITY(2, ~ (~ (2))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(int(int(_GLF_IDENTITY(2, ~ (~ (2))))), (int(int(_GLF_IDENTITY(2, ~ (~ (2)))))) << 0), int(int(_GLF_IDENTITY(2, ~ (~ (2)))))), (true ? min(_GLF_IDENTITY(int(int(_GLF_IDENTITY(2, ~ (~ (2))))), (int(int(_GLF_IDENTITY(2, ~ (~ (2)))))) << 0), int(int(_GLF_IDENTITY(2, ~ (~ (2)))))) : _GLF_FUZZED(80042))))) - 0)))) / 1u), 4, 64, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, 4)), 4)));
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && (false)))));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, ~ (~ (4))), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
}
