#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_12 {
 vec3 _f0;
 uint workgroup_base;
 bool _f1;
 mat3x4 _f2;
 uint _f3;
 mat2x4 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_13 {
 _GLF_struct_12 _f0;
} ;

struct _GLF_struct_14 {
 _GLF_struct_13 _f0;
 bvec3 _f1;
 mat4x3 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_9 {
 float _f0;
} ;

struct _GLF_struct_8 {
 mat3x2 _f0;
 bvec2 _f1;
 uvec4 _f2;
 mat2x3 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_7 {
 mat2x4 _f0;
} ;

struct _GLF_struct_10 {
 _GLF_struct_7 _f0;
 _GLF_struct_8 _f1;
 uvec2 _f2;
 _GLF_struct_9 _f3;
 mat2x4 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_5 {
 mat3 _f0;
 mat4x3 _f1;
 int _f2;
 bool _f3;
 uint _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
 vec2 _f1;
 mat4 _f2;
 uint _f3;
 int _f4;
 float _f5;
} ;

struct _GLF_struct_3 {
 uint subgroup_local_id;
 ivec3 _f0;
} ;

struct _GLF_struct_2 {
 bool _f0;
 vec3 _f1;
} ;

struct _GLF_struct_4 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_11 {
 _GLF_struct_4 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_10 _f2;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
 uint workgroup_size;
 uint _f1;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 uint subgroup_size;
 uint _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (false) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (false) || false)), false)), ! (! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), true)))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))), false, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, ! (! (false)))), false, false)))))) || false), (false) || _GLF_IDENTITY(false, (false) && true))), false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true && ((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, true))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-307.205), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1803.2817)), bvec2(true, false))), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
  return;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(bvec3(true), gl_SubgroupSize, 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_4(_GLF_struct_2(true, vec3(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(715.763))) : _GLF_FUZZED(-5.4))))), _GLF_struct_3(gl_SubgroupInvocationID, ivec3(1)), mat2x4(1.0)), _GLF_struct_6(_GLF_struct_5(mat3(1.0), mat4x3(1.0), 1, _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))))) + sqrt(0.0)) < injectionSwitch.y)) && (true)), 1u), vec2(1.0), mat4(1.0), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u)), 1, 1.0), _GLF_struct_10(_GLF_struct_7(mat2x4(1.0)), _GLF_struct_8(mat3x2(1.0), bvec2(true), uvec4(_GLF_IDENTITY(1u, ~ (~ (1u)))), mat2x3(1.0), ivec3(1)), uvec2(1u), _GLF_struct_9(1.0), mat2x4(1.0), mat4x3(1.0)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(mat2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), 1.0, 1.0))))), vec2(mat4(_GLF_IDENTITY(vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(mat2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), 1.0, 1.0))))), clamp(vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(mat2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), 1.0, 1.0))))), vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(mat2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), 1.0, 1.0))))), _GLF_IDENTITY(vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(mat2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), 1.0, 1.0))))), vec2(mat3x4(vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(mat2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), 1.0, 1.0))))), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, tan(0.0), 0.0, 1.0, sin(0.0))))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! (false)))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! (false)))))), bool(bvec4(! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! (false)))))), false, false, false))), true, false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))), true, true), false)))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), (_GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), false || (bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))) || false)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), ! (! (false))), true, true), false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) && true)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (! (true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) || false)))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0))))), mix(float(_GLF_FUZZED(7.6)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0))))), clamp(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0))))), float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0))))), float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0)))))))), bool(_GLF_IDENTITY(true, true && (true))))), max(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0))))), mix(float(_GLF_FUZZED(7.6)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0))))), clamp(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0))))), float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0))))), float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0)))))))), bool(_GLF_IDENTITY(true, true && (true))))), min(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0))))), mix(float(_GLF_FUZZED(7.6)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0))))), clamp(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0))))), float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0))))), float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0)))))))), bool(_GLF_IDENTITY(true, true && (true))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0))))), mix(float(_GLF_FUZZED(7.6)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0))))), clamp(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0))))), float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0))))), float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0)))))))), bool(_GLF_IDENTITY(true, true && (true)))))) / 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0))))), mix(float(_GLF_FUZZED(7.6)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0))))), clamp(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0))))), float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0))))), float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0)))))))), bool(_GLF_IDENTITY(true, true && (true))))))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0))))), mix(float(_GLF_FUZZED(7.6)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0))))), clamp(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0))))), float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0))))), float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0)))))))), bool(_GLF_IDENTITY(true, true && (true))))), (false ? _GLF_FUZZED(4.6) : _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0))))), mix(float(_GLF_FUZZED(7.6)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0))))), clamp(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0))))), float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0))))), float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0), mat4x2(mat4(mat4x2(injectionSwitch.y, 1.0, abs(sqrt(1.0)), 1.0, 1.0, 1.0, 1.0, 0.0)))))))), bool(_GLF_IDENTITY(true, true && (true))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), false, false), true))))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED((false ? -6.8 : 3.0)))) > injectionSwitch.y)) && true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0), (false ? _GLF_FUZZED(mat3(-6.7, 1617.8223, 38.16, 9.9, -37.83, 5.4, 24.68, -136.404, -1.7)) : mat3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1.0, 1.0))))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))) && true))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = _GLF_struct_replacement_11._f0._f1.subgroup_local_id, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = _GLF_struct_replacement_11._f0._f1.subgroup_local_id) - (0u | 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), (false || (_GLF_DEAD(false))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(false, ! (! (false))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))), true)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(mat2x4(1.0), _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) * uvec3(1u, 1u, 1u)))).x, 1u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, _GLF_IDENTITY(! (! ((false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(! (! ((false) || false)), _GLF_IDENTITY(bool(bvec4(! (! ((false) || false)), false, true, false)), false || (bool(bvec4(! (! ((false) || false)), false, true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! ((false) || false)), ! (! (_GLF_IDENTITY(! (! ((false) || false)), bool(bvec4(! (! ((false) || false)), true, false, false)))))), ! (! (_GLF_IDENTITY(! (! ((false) || false)), ! (! (_GLF_IDENTITY(! (! ((false) || false)), bool(bvec4(! (! ((false) || false)), true, false, false)))))))))) || false)) || _GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.y = _GLF_struct_replacement_1.workgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_13(_GLF_struct_12(vec3(1.0), _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.y, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.y) | (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.y)) * workgroup_id, true, mat3x4(1.0), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))), mat2x4(1.0), vec4(1.0))), bvec3(true), mat4x3(1.0), uvec4(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : 1u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, max(1u, 1u))), (~ (_GLF_IDENTITY(1u, max(1u, 1u)))) >> 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), (_GLF_IDENTITY(1u, max(1u, 1u))) + 0u)), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(min((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(1u, 1u)))), max(min((_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) ^ 0u))), 1u))), (_GLF_IDENTITY(1u, max(1u, 1u)))), min((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, min(1u, 1u)))), 1u))))))))), ~ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), (_GLF_IDENTITY(1u, max(1u, 1u))) + 0u)), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(min((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(1u, 1u)))), max(min((_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) ^ 0u))), 1u))), (_GLF_IDENTITY(1u, max(1u, 1u)))), min((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, min(1u, 1u)))), 1u))))))))), _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), clamp((_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), ((_GLF_IDENTITY(1u, max(1u, 1u)))) - 0u), (_GLF_IDENTITY(1u, max(1u, 1u)))))) | ((_GLF_IDENTITY(1u, max(1u, 1u))))) + 0u)), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(min((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(1u, 1u)))), max(min((_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) ^ 0u))), 1u))), (_GLF_IDENTITY(1u, max(1u, 1u)))), min((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, min(1u, 1u)))), 1u)))))))), max((0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(min((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(1u, 1u)))), max(min((_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) ^ 0u))), 1u))), (_GLF_IDENTITY(1u, max(1u, 1u)))), min((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, min(1u, 1u)))), 1u)))))))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(min((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(1u, 1u)))), max(min((_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) ^ 0u))), 1u))), (_GLF_IDENTITY(1u, max(1u, 1u)))), min((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, min(1u, 1u)))), 1u)))))))))))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), clamp((_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), ((_GLF_IDENTITY(1u, max(1u, 1u)))) - 0u), (_GLF_IDENTITY(1u, max(1u, 1u)))))) | ((_GLF_IDENTITY(1u, max(1u, 1u))))) + 0u)), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(min((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(1u, 1u)))), max(min((_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) ^ 0u))), 1u))), (_GLF_IDENTITY(1u, max(1u, 1u)))), min((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, min(1u, 1u)))), 1u)))))))), max((0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(min((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(1u, 1u)))), max(min((_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) ^ 0u))), 1u))), (_GLF_IDENTITY(1u, max(1u, 1u)))), min((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, min(1u, 1u)))), 1u)))))))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(min((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(1u, 1u)))), max(min((_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) ^ 0u))), 1u))), (_GLF_IDENTITY(1u, max(1u, 1u)))), min((_GLF_IDENTITY(1u, max(1u, 1u))), (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, min(1u, 1u)))), 1u))))))))))))) ^ 0u) >> 0u)))), (~ (_GLF_IDENTITY(1u, max(1u, 1u)))) >> 0u))) >> 0u)))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), (min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), injectionSwitch.x)) / 1.0)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false, false))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size + _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, max(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-112.710) : injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base, min(_GLF_struct_replacement_14._f0._f0.workgroup_base, _GLF_struct_replacement_14._f0._f0.workgroup_base)) + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, min(subgroup_id * _GLF_struct_replacement_0.subgroup_size, subgroup_id * _GLF_struct_replacement_0.subgroup_size)), 0u | (_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base, (0u ^ 0u) ^ (_GLF_struct_replacement_14._f0._f0.workgroup_base)) + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * _GLF_struct_replacement_0.subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_14._f0._f0.workgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y)), min((_GLF_struct_replacement_14._f0._f0.workgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((_GLF_struct_replacement_14._f0._f0.workgroup_base) / uint(_GLF_ONE(1.0, injectionSwitch.y)), ((_GLF_struct_replacement_14._f0._f0.workgroup_base) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y))))) - 0u)))) + _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * _GLF_struct_replacement_0.subgroup_size, 0u | (_GLF_struct_replacement_14._f0._f0.workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, (1u & 1u), 1u))) * _GLF_struct_replacement_0.subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, min(_GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size)), 0u | (_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, max(_GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size)), (_GLF_struct_replacement_0.subgroup_size) ^ 0u))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, min(_GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size)), 0u | (_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, max(_GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size)), (_GLF_struct_replacement_0.subgroup_size) ^ 0u))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u, 1u), (uvec4(_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, min(_GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size)), 0u | (_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, max(_GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size)), (_GLF_struct_replacement_0.subgroup_size) ^ 0u))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u, 1u)) - uvec4(0u, 0u, 0u, 0u))))) | (_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size, 0u | (_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size)))), _GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, uint(uvec4(_GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(virtual_gid))))), 0u, (91457u & 0u)))), uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, ~ (~ (_GLF_struct_replacement_0.subgroup_size))), 1u))), 0u | (_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base, (_GLF_struct_replacement_14._f0._f0.workgroup_base) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))) + subgroup_id * _GLF_struct_replacement_0.subgroup_size)), _GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size, 0u | (_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base, (_GLF_struct_replacement_14._f0._f0.workgroup_base) | (_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_14._f0._f0.workgroup_base))))) / 1u) + subgroup_id * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(0u, max(0u, 0u)) | (_GLF_struct_replacement_14._f0._f0.workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (true ? _GLF_struct_replacement_0.subgroup_size : _GLF_FUZZED(virtual_gid))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size, 0u | (_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size, (false ? _GLF_FUZZED(26276u) : _GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size)), (_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(26276u, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(subgroup_id) : 26276u))) : _GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size))) << 0u), 0u | (_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size))) | (_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size, (true ? _GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size : _GLF_FUZZED(virtual_gid))), (_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size) ^ 0u))))), _GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, ~ (~ (_GLF_struct_replacement_0.subgroup_size))), 1u))), 0u | (_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size)), _GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) ^ 0u), subgroup_id)), 0u ^ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) ^ 0u), subgroup_id)))) * _GLF_struct_replacement_0.subgroup_size, 0u | (_GLF_struct_replacement_14._f0._f0.workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, (subgroup_id * _GLF_struct_replacement_0.subgroup_size) / 1u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base, min(_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base, ~ (~ (_GLF_struct_replacement_14._f0._f0.workgroup_base))), _GLF_struct_replacement_14._f0._f0.workgroup_base)) + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, ~ (~ (_GLF_struct_replacement_0.subgroup_size))), (subgroup_id * _GLF_struct_replacement_0.subgroup_size) / 1u), 0u | (_GLF_struct_replacement_14._f0._f0.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * _GLF_struct_replacement_0.subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * _GLF_struct_replacement_0.subgroup_size, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))))) ^ _GLF_IDENTITY(0u, max(0u, 0u)))) << 0u) * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))))))) ^ 0u)) << 0u) * _GLF_struct_replacement_0.subgroup_size, max(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))))) ^ 0u)) << 0u) * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))))) ^ 0u)) << 0u) * _GLF_struct_replacement_0.subgroup_size)), 1u, 1u, 0u)), _GLF_IDENTITY(uint(uvec2(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))), (subgroup_id) | 0u))))) ^ 0u)) << 0u) * _GLF_struct_replacement_0.subgroup_size, max(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))))) ^ 0u)) << 0u) * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))))) ^ 0u)) << 0u) * _GLF_struct_replacement_0.subgroup_size)), 1u, 1u, 0u)), 0u)), (uint(uvec2(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | 0u, ~ (~ (_GLF_IDENTITY((subgroup_id) | 0u, ((subgroup_id) | 0u) << 0u))))))))) ^ 0u)) << 0u) * _GLF_struct_replacement_0.subgroup_size, max(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))))) ^ 0u)) << 0u) * _GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))))) ^ 0u)) << 0u) * _GLF_struct_replacement_0.subgroup_size)), 1u, 1u, 0u)), 0u))) << 0u))), 0u, 1u))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size) | (_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size)), 0u | (_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base, ~ (~ (_GLF_struct_replacement_14._f0._f0.workgroup_base))) + subgroup_id * _GLF_struct_replacement_0.subgroup_size)), (_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size, 0u | (_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_0.subgroup_size) | (_GLF_struct_replacement_0.subgroup_size), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) ^ ((_GLF_struct_replacement_0.subgroup_size) | (_GLF_struct_replacement_0.subgroup_size)))), _GLF_struct_replacement_0.subgroup_size))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) | (_GLF_struct_replacement_0.subgroup_size)), _GLF_struct_replacement_0.subgroup_size)), 0u | (_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_struct_replacement_14._f0._f0.workgroup_base : _GLF_FUZZED(mix(packUnorm4x8(vec4(356.364, 22.95, 1371.2781, 490.220)), virtual_gid, true)))) + subgroup_id * _GLF_struct_replacement_0.subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size, (true ? _GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size) / 1u) : _GLF_FUZZED(81865u))), 0u | (_GLF_struct_replacement_14._f0._f0.workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> ((0u | 0u) & 198870u)) * _GLF_struct_replacement_0.subgroup_size)), _GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_struct_replacement_0.subgroup_size, 0u | (_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size)), _GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size, 0u | (_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size)))))), _GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, max(_GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size)), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_struct_replacement_0.subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((~ (_GLF_struct_replacement_0.subgroup_size)))), (true ? ~ _GLF_IDENTITY((~ (_GLF_struct_replacement_0.subgroup_size)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.5) : 0.0)), injectionSwitch.x)) + ((~ (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (0u | _GLF_IDENTITY(0u, uint(uint(0u)))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) | 0u))))))) : _GLF_FUZZED(subgroup_id)))), 1u))), 0u | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size), (_GLF_IDENTITY((_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size), 0u | (_GLF_IDENTITY((_GLF_struct_replacement_14._f0._f0.workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, (subgroup_id * _GLF_struct_replacement_0.subgroup_size) * 1u)), ((_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size)) - 0u)))) ^ 0u), 0u ^ ((_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base, max(_GLF_struct_replacement_14._f0._f0.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_14._f0._f0.workgroup_base, (_GLF_struct_replacement_14._f0._f0.workgroup_base) * 1u))) + subgroup_id * _GLF_struct_replacement_0.subgroup_size, 0u | (_GLF_struct_replacement_14._f0._f0.workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size)))))) + ((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1) % _GLF_struct_replacement_0.subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(4.4) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false) || false)), ! _GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, (false) || false)))))), ! (! ((! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, (false) || false))))))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))), (false) && true))), bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true))))
    return;
   return;
  }
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u)], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(7.7) : float(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-54.93) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(7.7) : float(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), injectionSwitch.y), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(7.7) : float(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), injectionSwitch.y), max(max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(7.7) : float(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), injectionSwitch.y), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(7.7) : float(mat3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), injectionSwitch.y)))) - 0.0)), false, true, false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-3208.1753))), injectionSwitch[1])), mat2(1.0) * (injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x + 1 < _GLF_struct_replacement_0.subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.2)), vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))))) && true))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), (! (false)) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), (! (false)) && true))))), ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false))))))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y))))))))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), true, false, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))))))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], abs(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch[1]), mix(vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (true ? _GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-7178.9759))) : _GLF_FUZZED(-4524.6176))), float(mat4(injectionSwitch[0], _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch[1]))[0], _GLF_FUZZED(-78.79)), vec2(_GLF_FUZZED(2.6), (vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], abs(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch[1]))[1]), bvec2(false, true)))).y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], abs(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch[1])).y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4(injectionSwitch[0], abs(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch[1])).y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9239.0681), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-830.813)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED(-270.526)), bvec2(true, false))).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false))))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))], uint(2), _GLF_IDENTITY(4, clamp(4, 4, 4)), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))), ! (! ((! (_GLF_IDENTITY(false, (false) && true)))))))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), (true ? _GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(mat4x3(-90.04, 466.598, 3086.3671, 5.5, -760.735, -28.42, 355.132, -7.1, -70.34, -2781.2552, -5.9, -5954.8120))))))))))), true, false))), ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))) && (false)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), bool(bvec4(! (! (_GLF_IDENTITY(false, true && (false)))), false, true, true)))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec4(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), ! (! ((! (_GLF_IDENTITY(false, true && (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), ! (! ((! (_GLF_IDENTITY(false, true && (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false, true, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true))), bool(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true))), true)))), bool(bvec4(! (! (_GLF_IDENTITY(false, true && (false)))), false, true, true))))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true)), bool(bvec4(! (! (_GLF_IDENTITY(false, true && (false)))), false, true, true)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true)))), bool(bvec4(! (! (_GLF_IDENTITY(false, true && (false)))), false, true, true))))) && true))), true && (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), bool(bvec4(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true && (false), (true && (false)) && true)))))), false, true, true)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true)))), bool(bvec4(! (! (_GLF_IDENTITY(false, true && (false)))), false, true, true))))) && true))), true && (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), (bool(bvec2(! (false), true))) || false)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), bool(bvec4(! (! (_GLF_IDENTITY(false, true && (false)))), false, true, true)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true)))), bool(bvec4(! (! (_GLF_IDENTITY(false, true && (false)))), false, true, true))))) && true))))))))))), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (true))) && (false))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))) && (false))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))) && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))) && (false))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))) && (false))), true))))))) && true)))), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))))))))) && true)) && true, false || ((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true))))))))) && true)) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(0.5), _GLF_FUZZED(float(71939))), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], mix(float(_GLF_FUZZED(4947.0473)), float((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0]), bool(true))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), bvec2(true, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true)))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true))))))))))) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-71.39)))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
