#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), max(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, float(mat4x2(1.0, determinant(mat4(1.0, 0.0, 0.0, log(1.0), 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0)))) * (injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))))), injectionSwitch)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-34.21))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - tan(0.0))), _GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(2814.2939, -0.6), min(vec2(2814.2939, -0.6), _GLF_IDENTITY(vec2(2814.2939, -0.6), vec2(1.0, 1.0) * (vec2(2814.2939, -0.6)))))) : injectionSwitch)), injectionSwitch))[0])) - 0.0, (((_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0))) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), 1.0))), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(45.08))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, (1.0) - log(1.0)) : _GLF_FUZZED(-746.148), min(true ? _GLF_IDENTITY(1.0, (1.0) - log(1.0)) : _GLF_FUZZED(-746.148), true ? _GLF_IDENTITY(1.0, (1.0) - log(1.0)) : _GLF_FUZZED(-746.148)))))), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0))))) / 1.0), injectionSwitch[1])).y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], _GLF_IDENTITY((injectionSwitch[0]), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))), mix(float(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0))))), float(_GLF_FUZZED(6.0)), bool(false)))))) / 1.0), injectionSwitch[1])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], _GLF_IDENTITY((injectionSwitch[0]), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))), mix(float(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0))))), float(_GLF_FUZZED(6.0)), bool(false)))))) / 1.0), injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], _GLF_IDENTITY((injectionSwitch[0]), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))), mix(float(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0))))), float(_GLF_FUZZED(6.0)), bool(false)))))) / 1.0), injectionSwitch[1])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], _GLF_IDENTITY((injectionSwitch[0]), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))), mix(float(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0))))), float(_GLF_FUZZED(6.0)), bool(false)))))) / 1.0), injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], _GLF_IDENTITY((injectionSwitch[0]), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))), mix(float(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0))))), float(_GLF_FUZZED(6.0)), bool(false)))))) / 1.0), injectionSwitch[1]))) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], _GLF_IDENTITY((injectionSwitch[0]), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))), mix(float(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0))))), float(_GLF_FUZZED(6.0)), bool(false)))))) / 1.0), injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], _GLF_IDENTITY((injectionSwitch[0]), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))), mix(float(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0))))), float(_GLF_FUZZED(6.0)), bool(false)))))) / 1.0), injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], _GLF_IDENTITY((injectionSwitch[0]), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))), mix(float(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0))))), float(_GLF_FUZZED(6.0)), bool(false)))))) / 1.0), injectionSwitch[1])))).y)), _GLF_IDENTITY(bool(bvec4(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0), mat2(1.0) * (mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0))))), vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], _GLF_IDENTITY((injectionSwitch[0]), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch[0])), (_GLF_IDENTITY(((injectionSwitch[0])), min(((injectionSwitch[0])), ((injectionSwitch[0]))))) - _GLF_ZERO(0.0, injectionSwitch.x)) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch[0])), min(((injectionSwitch[0])), _GLF_IDENTITY(((injectionSwitch[0])), clamp(((injectionSwitch[0])), ((injectionSwitch[0])), ((injectionSwitch[0])))))) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))), mix(float(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0))))), float(_GLF_FUZZED(6.0)), bool(false)))))) / 1.0), injectionSwitch[1])).y)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch[0]), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))), mix(float(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0))))), float(_GLF_FUZZED(6.0)), bool(false)))))) / 1.0, clamp(_GLF_IDENTITY((injectionSwitch[0]), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))), mix(float(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0))))), float(_GLF_FUZZED(6.0)), bool(false)))))) / 1.0, _GLF_IDENTITY((injectionSwitch[0]), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))), mix(float(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0))))), float(_GLF_FUZZED(6.0)), bool(false)))))) / 1.0, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch[0]), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))), mix(float(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0))))), float(_GLF_FUZZED(6.0)), bool(false)))))) / 1.0, 1.0 * (_GLF_IDENTITY((injectionSwitch[0]), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))), mix(float(_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (_GLF_IDENTITY(((injectionSwitch[0])) - 0.0, (((injectionSwitch[0])) - 0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(log(1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0))))), float(_GLF_FUZZED(6.0)), bool(false)))))) / 1.0))))), injectionSwitch[1])).y)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && _GLF_IDENTITY(true, (true) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1])))))), 1.0), (vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0)) * mat3(1.0))), (vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))), bool(true))))))), 1.0), (vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0)) * mat3(1.0)))) * mat2(1.0))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1])))))), 1.0), (vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0)) * mat3(1.0))), (vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))), bool(true))))))), 1.0), (vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0)) * mat3(1.0)))) * mat2(1.0))).x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(-5064.5712) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), (clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), mix(float(_GLF_FUZZED(-0.8)), float(max(injectionSwitch.y, injectionSwitch.y)), bool(true)))), injectionSwitch.y, injectionSwitch.y)) * 1.0)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), mix(float(_GLF_FUZZED(vec2(-5859.0490, 119.922).g)), float(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), float(mat3x4(clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(abs(vec3(0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bool(bool(true))), false || (bool(bool(bool(true)))))))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))) + 0.0)), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x)), vec2(0.0, 1.0)), mix(float(dot(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x)), vec2(0.0, 1.0))), float(_GLF_FUZZED(-7.8)), bool(false))), dot(vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y), _GLF_ZERO(0.0, injectionSwitch.x)), vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-979.800) : 1.0))))))))), 1.0, 0.0, 0.0, 0.0), (mat4(_GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), mix(float(_GLF_FUZZED(vec2(-5859.0490, 119.922).g)), float(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), float(mat3x4(clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, length(abs(vec3(0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bool(bool(true))), false || (bool(bool(bool(true)))))))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))) + 0.0)), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x)), vec2(0.0, 1.0)), mix(float(dot(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x)), vec2(0.0, 1.0))), float(_GLF_FUZZED(-7.8)), bool(false))), dot(vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y), _GLF_ZERO(0.0, injectionSwitch.x)), vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-979.800) : 1.0))))))))), 1.0, 0.0, 0.0, 0.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(refract(injectionSwitch, vec2(98.57, -9841.6997), 91.60)))).y))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, true))), (injectionSwitch.x > injectionSwitch.y)), true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(6.0) : _GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])))))))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)).x)))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), true, true)), true)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(6.0) : _GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])))))))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)).x)))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), true, true)), true)))))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(6.0) : _GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])))))))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)).x)))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), true, true)), true)))))))))) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))) || false)), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, false))) && (false)))))), true, false, true)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY((uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u), min((uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u), _GLF_IDENTITY((uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)))))) + _GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)) + (gl_WorkGroupSize)) << (uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(0u, 0u)), 0u)))), 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u)))))) >> uvec3(0u, 0u, 0u), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (true ? ~ (0u) : _GLF_FUZZED(subgroup_size))))), 0u, 0u)) / uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) >> 0u), 1u)) + (gl_WorkGroupSize))) >> uvec3(0u, 0u, 0u))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4(injectionSwitch.y, 1.0, 1.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), float(_GLF_FUZZED(vec2(-32.02, 2.0).x)), bool(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - log(vec2(1.0, 1.0))).y)))))))), ! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8835.5520) : _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(83.89), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(546.314)), bvec2(true, false))).y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec3(bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))), false || (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec3(bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true, true), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))), bool(bool(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))))))))))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), false)))))) || false), (injectionSwitch.x > injectionSwitch.y))))))), true, true), false)), false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(6.0, -552.416, -5.9, -2.0)))))).x > injectionSwitch.y))))))), bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), false || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))), bool(bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), false || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))))))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(cosh(_GLF_IDENTITY(-9.3, min(-9.3, -9.3)))) : injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))), bool(bvec4(bool(bool(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false, false))))), true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, true), false)), false))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, log(_GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(vec2(-33.61, -9706.4228)))), vec2(1.0, 1.0)))) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))), bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.8)), bool(false)))))))))))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))), bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7559.2524)), bool(false)))))))))))), true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, true), false)), _GLF_IDENTITY(false, ! (! (false))))))))), ! (! ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, log(_GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(vec2(-33.61, -9706.4228)))), vec2(1.0, 1.0)))) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))), bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.8)), bool(false)))))))))))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))), bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7559.2524)), bool(false)))))))))))), true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, true), false)), _GLF_IDENTITY(false, ! (! (false))))))))))))))) || false))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(83.89), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(546.314)), bvec2(true, false))).y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), ! (! (bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), false || (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))), (injectionSwitch.x > injectionSwitch.y))))))))))))))))), true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true), false)), false))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) ? _GLF_FUZZED(_GLF_IDENTITY(cosh(-9.3), min(cosh(-9.3), _GLF_IDENTITY(cosh(-9.3), min(cosh(-9.3), cosh(-9.3)))))) : injectionSwitch.y))))))), true && (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) ? _GLF_FUZZED(_GLF_IDENTITY(cosh(-9.3), min(cosh(-9.3), _GLF_IDENTITY(cosh(-9.3), min(cosh(-9.3), cosh(-9.3)))))) : injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec4(bool(bool(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true, false, false))))), true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (! ((injectionSwitch.x > injectionSwitch.y))), true))))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))), true, true), false)), false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), false, false, true)))))), bool(bool(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))))))))))), true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), true, true), false)), false))))))))), bool(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) ? _GLF_FUZZED(_GLF_IDENTITY(cosh(-9.3), min(cosh(-9.3), _GLF_IDENTITY(cosh(-9.3), min(cosh(-9.3), cosh(-9.3)))))) : injectionSwitch.y))))))), true && (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) ? _GLF_FUZZED(_GLF_IDENTITY(cosh(-9.3), min(cosh(-9.3), _GLF_IDENTITY(cosh(-9.3), min(cosh(-9.3), cosh(-9.3)))))) : injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec4(bool(bool(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true, false, false))))), true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (! ((injectionSwitch.x > injectionSwitch.y))), true))))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))), true, true), false)), false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), false, false, true)))))), bool(bool(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))))))))))), true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), true, true), false)), false)))))))))))) || false)))) || false) && true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)))) || false, bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false, true))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) || false, bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, true)))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) * workgroup_id) | (workgroup_size * workgroup_id)), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) * workgroup_id) | (workgroup_size * workgroup_id)), ~ (~ (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) * workgroup_id) | (workgroup_size * workgroup_id)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) - _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))) * workgroup_id) | (workgroup_size * workgroup_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) - _GLF_IDENTITY(0u, max(0u, 0u))) * workgroup_id) | (workgroup_size * workgroup_id)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) * workgroup_id) | (workgroup_size * workgroup_id)), uint(uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) * workgroup_id) | (workgroup_size * workgroup_id)), 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) * workgroup_id) | (workgroup_size * workgroup_id)), uint(uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) * workgroup_id) | (workgroup_size * workgroup_id)), 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) * workgroup_id) | (workgroup_size * workgroup_id)), uint(uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) * workgroup_id) | (workgroup_size * workgroup_id)), 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) * workgroup_id) | (workgroup_size * workgroup_id)), uint(uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) * workgroup_id) | (workgroup_size * workgroup_id)), 0u))))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) * workgroup_id) | (workgroup_size * workgroup_id)), uint(uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) * workgroup_id) | (workgroup_size * workgroup_id)), 0u))))), _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) - 0u) * workgroup_id) | (workgroup_size * workgroup_id))))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) * workgroup_id) | (workgroup_size * workgroup_id)), (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) - _GLF_IDENTITY(0u, ((_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))) | 0u) | (0u))) * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec2(workgroup_id, 1u)), (uint(uvec2(workgroup_id, 1u))) | (uint(uvec2(workgroup_id, 1u)))))))) | (workgroup_size * workgroup_id))) << 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_size, 1u)), (uint(uvec2(workgroup_size, 1u))) >> 0u)), (workgroup_size) - 0u) * workgroup_id) | (workgroup_size * workgroup_id)))))));
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))), true))))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))))))), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec2(false, true))))), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), true), false)))))), _GLF_IDENTITY(false, ! (! (false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), false))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), false))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), false))), true)))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))), _GLF_IDENTITY(false, ! (! (false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))), bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bvec3(true, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), false || (bool(bvec3(true, false, false))))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), false))), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(true, (true) || false)), true)), (bool(bvec2((_GLF_IDENTITY(true, (true) || false)), true))) || false))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))), _GLF_IDENTITY(false, ! (! (false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y)))))))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, bool(bvec2(false, false))), false))), false)), ! _GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false)))), bool(bool(_GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false)))), _GLF_IDENTITY(bool(bvec2((! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false)))), false)), true && (bool(bvec2((! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false)))), false))))))))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))), false)))), false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))), uint(4u)))) + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), clamp(uint(4u), _GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))), uint(4u))), uint(4u)))) + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), clamp(uint(4u), _GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))), uint(4u))), uint(4u)))) + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), clamp(uint(4u), _GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))), uint(4u))), uint(4u)))) + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) - 0u)))) >> 0u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) + 0u), uint(4u)))) + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))) + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0u), ((subgroup_local_id % 2)) - 0u) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   subgroupAll(true);
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(uint(next_virtual_gid)))], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))))))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(_GLF_IDENTITY(false, ! (! (false))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-5346.4711, -446.474)), max(_GLF_FUZZED(vec2(-5346.4711, -446.474)), _GLF_FUZZED(vec2(-5346.4711, -446.474)))) : max(injectionSwitch, injectionSwitch)))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
