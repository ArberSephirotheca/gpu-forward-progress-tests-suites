#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) / 1u))))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))) && true)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, exp(0.0), 1.0, 0.0, sqrt(0.0), 0.0, abs(1.0))), mix(vec2((vec2(mat3(injectionSwitch, 0.0, exp(0.0), 1.0, 0.0, sqrt(0.0), 0.0, abs(1.0))))[0], _GLF_FUZZED(-1181.3026)), vec2(_GLF_FUZZED(419.718), (vec2(mat3(injectionSwitch, 0.0, exp(0.0), 1.0, 0.0, sqrt(0.0), 0.0, abs(1.0))))[1]), bvec2(false, true)))).x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               return;
              }
            }
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
              {
              }
             else
              {
               return;
              }
            }
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             break;
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-5.3) : float(injectionSwitch.y)))), min(float(_GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-5.3) : float(injectionSwitch.y)))), float(_GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-5.3) : float(injectionSwitch.y))))))), bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))))))))
              return;
            }
           else
            {
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 else
  {
  }
 do
  {
   do
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), int(ivec4(0, 0, (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) << _GLF_IDENTITY(int(5), int(5))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(0 | (int(7)), int(ivec4(0 | (int(_GLF_IDENTITY(7, (7) - (0 | (0 >> _GLF_IDENTITY(int(6), int(6))))))), 1, 0, 0))))) >> 0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY((false ? _GLF_FUZZED(-84822) : 7), ~ (_GLF_IDENTITY(~ ((false ? _GLF_IDENTITY(_GLF_FUZZED(-84822), clamp(_GLF_IDENTITY(_GLF_FUZZED(-84822), (_GLF_FUZZED(-84822)) / 1), _GLF_FUZZED(-84822), _GLF_FUZZED(-84822))) : 7)), (~ ((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-84822) : 7))) | (~ ((false ? _GLF_FUZZED(-84822) : 7)))))))), int(7)))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(0 | (int(7)), int(ivec4(0 | (int(_GLF_IDENTITY(7, (7) - (0 | (0 >> _GLF_IDENTITY(int(6), int(6))))))), 1, 0, 0))))) >> 0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY((false ? _GLF_FUZZED(-84822) : 7), ~ (_GLF_IDENTITY(~ ((false ? _GLF_IDENTITY(_GLF_FUZZED(-84822), clamp(_GLF_IDENTITY(_GLF_FUZZED(-84822), (_GLF_FUZZED(-84822)) / 1), _GLF_FUZZED(-84822), _GLF_FUZZED(-84822))) : 7)), (~ ((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-84822) : 7))) | (~ ((false ? _GLF_FUZZED(-84822) : 7)))))))), int(7))))), ! (! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(0 | (int(7)), int(ivec4(0 | (int(_GLF_IDENTITY(7, (7) - (0 | (0 >> _GLF_IDENTITY(int(6), int(6))))))), 1, 0, 0))))) >> 0)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(0 | (int(7)), int(ivec4(0 | (int(_GLF_IDENTITY(7, (7) - (0 | (0 >> _GLF_IDENTITY(int(6), int(6))))))), 1, 0, 0))))) >> 0)), 0 ^ (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(0 | (int(7)), int(ivec4(0 | (int(_GLF_IDENTITY(7, (7) - (0 | (0 >> _GLF_IDENTITY(int(6), int(6))))))), 1, 0, 0))))) >> 0))))) - 0)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY((false ? _GLF_FUZZED(-84822) : 7), ~ (_GLF_IDENTITY(~ ((false ? _GLF_IDENTITY(_GLF_FUZZED(-84822), clamp(_GLF_IDENTITY(_GLF_FUZZED(-84822), (_GLF_FUZZED(-84822)) / 1), _GLF_FUZZED(-84822), _GLF_FUZZED(-84822))) : 7)), (~ (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-84822) : 7), ((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(-84822) : 7)) - (1 ^ 1)))) | (~ ((false ? _GLF_FUZZED(-84822) : 7)))))))), int(7)))))))))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1) > 0); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(false ? _GLF_FUZZED((_injected_loop_counter % _injected_loop_counter)) : _GLF_IDENTITY(int(7), (int(7)) / 1), (_GLF_IDENTITY(false ? _GLF_FUZZED((_injected_loop_counter % _injected_loop_counter)) : _GLF_IDENTITY(int(7), (int(7)) / 1), (false ? _GLF_FUZZED(_injected_loop_counter) : false ? _GLF_FUZZED((_injected_loop_counter % _injected_loop_counter)) : _GLF_IDENTITY(int(7), (int(7)) / 1)))) - 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, 0.0 + (1.0)), injectionSwitch.y))); _injected_loop_counter ++)
              {
               return;
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(614.366))) > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
             if(_GLF_DEAD(false))
              break;
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           continue;
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_size = gl_WorkGroupSize.x;
 for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(62.50)))))))
      break;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, ~ (~ (1)))); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     do
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))) - uvec3(0u, 0u, 0u)).x) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), ~ (~ (uint(uvec3(0u, 1u, 1u))))))) | (gl_WorkGroupID)).x)), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))) - uvec3(0u, 0u, 0u)).x) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), ~ (~ (uint(uvec3(0u, 1u, 1u))))))) | (gl_WorkGroupID)).x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))) - uvec3(0u, 0u, 0u)).x) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), ~ (~ (uint(uvec3(0u, 1u, 1u))))))) | (gl_WorkGroupID)).x)), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))) - uvec3(0u, 0u, 0u)).x) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), ~ (~ (uint(uvec3(0u, 1u, 1u))))))) | (gl_WorkGroupID)).x)), _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))) - uvec3(0u, 0u, 0u)).x) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), ~ (~ (uint(uvec3(0u, 1u, 1u))))))) | (gl_WorkGroupID)).x)), _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))) - uvec3(0u, 0u, 0u)).x) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), ~ (~ (uint(uvec3(0u, 1u, 1u))))))) | (gl_WorkGroupID)).x)))), _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))) - uvec3(0u, 0u, 0u)).x) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), ~ (~ (uint(uvec3(0u, 1u, 1u))))))) | (gl_WorkGroupID)).x)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupID : _GLF_FUZZED(uvec3(subgroup_local_id, uvec2(183046u, 43565u))))).x) | _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) * 1u)) : _GLF_FUZZED(subgroup_local_id), uint(_GLF_IDENTITY(uint(true ? _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x)) : _GLF_FUZZED(subgroup_local_id)), (uint(true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x)), (gl_WorkGroupID.x) | (gl_WorkGroupID.x)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (true ? _GLF_FUZZED(subgroup_local_id) : _GLF_FUZZED(subgroup_local_id))))) | 0u)))));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) | (_injected_loop_counter)) < 1); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(55.47) : injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | 0u), max(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | 0u), uint(uvec2(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | 0u), 1u))))) | (subgroup_id)) * subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | 0u) | (subgroup_id)) * subgroup_size, 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | 0u) | (subgroup_id)) * subgroup_size))), max((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | 0u) | (subgroup_id)) * subgroup_size, 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id))), ((subgroup_id)) | _GLF_IDENTITY(0u, (0u) << 0u)) | (subgroup_id)) * subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | 0u) | (subgroup_id)) * subgroup_size, 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | 0u) | (subgroup_id)) * subgroup_size))), (false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | 0u) | (subgroup_id)) * subgroup_size, 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | 0u) | (subgroup_id)) * subgroup_size)))))))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(19.47) : 1.0)), 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(19.47) : 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(19.47) : 1.0)), 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(19.47) : 1.0))))) + 0.0), 1.0)), 1.0)), injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) + 0u) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) + 0u) / 1u), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) + 0u) / 1u)) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) + 0u) / 1u)))) << 0u) * subgroup_size) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ~ (~ ((workgroup_base + subgroup_id * subgroup_size)))) << 0u))), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | 0u))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), min((workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) ^ (0u << _GLF_IDENTITY(uint(6u), uint(6u))))), ~ (~ ((workgroup_base + subgroup_id * subgroup_size)))))) * 1u)) | (workgroup_base + subgroup_id * subgroup_size)))))))) + subgroup_local_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false))))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false))))))))))))), false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false))))))))), true))), false))))))))), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec3(false, false, false))), ! (! ((bool(bvec3(false, false, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec3(false, false, false))), ! (! ((bool(bvec3(false, false, false))))))), ((! _GLF_IDENTITY((bool(bvec3(false, false, false))), ! (! ((bool(bvec3(false, false, false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(int(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)))) != (_GLF_IDENTITY(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), max(0 | int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(7.8))))), injectionSwitch[1])), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, _GLF_IDENTITY(0.3, (0.3) + 0.0), -252.011))) : mat2(1.0))) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY((- mat2(_GLF_IDENTITY(-1.1, float(mat3(_GLF_IDENTITY(-1.1, max(-1.1, -1.1)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), -775.236, 0.3, -252.011)), transpose(transpose((- mat2(_GLF_IDENTITY(-1.1, float(mat3(_GLF_IDENTITY(-1.1, max(-1.1, -1.1)), sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), -775.236, 0.3, -252.011)))))) : _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0), mat2(1.0) * (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))), (true ? _GLF_FUZZED((- _GLF_IDENTITY(mat2(-1.1, -775.236, 0.3, -252.011), _GLF_IDENTITY(mat2(mat3x2(_GLF_IDENTITY(mat2(-1.1, -775.236, 0.3, -252.011), _GLF_IDENTITY(mat2(mat3x4(_GLF_IDENTITY(mat2(-1.1, -775.236, 0.3, -252.011), mat2(mat2x4(mat2(-1.1, -775.236, 0.3, -252.011)))))), (true ? mat2(mat3x4(_GLF_IDENTITY(mat2(-1.1, -775.236, 0.3, -252.011), mat2(mat2x4(mat2(-1.1, -775.236, 0.3, -252.011)))))) : _GLF_FUZZED(mat2(-5892.3234, 5.3, -8.3, -12.53))))))), (true ? mat2(mat3x2(_GLF_IDENTITY(mat2(-1.1, -775.236, 0.3, -252.011), _GLF_IDENTITY(mat2(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(-1.1, -775.236, 0.3, -252.011), mat2(mat3(mat2(-1.1, -775.236, 0.3, -252.011)))), _GLF_IDENTITY(mat2(mat2x4(mat2(-1.1, -775.236, 0.3, -252.011))), (mat2(mat2x4(mat2(-1.1, -775.236, 0.3, -252.011)))) + mat2(0.0, 0.0, 0.0, 0.0))))), (true ? mat2(mat3x4(_GLF_IDENTITY(mat2(-1.1, -775.236, 0.3, -252.011), mat2(mat2x4(mat2(-1.1, -775.236, 0.3, -252.011)))))) : _GLF_FUZZED(mat2(-5892.3234, 5.3, -8.3, -12.53))))))) : _GLF_FUZZED(mat2(_GLF_IDENTITY(228.173, max(_GLF_IDENTITY(228.173, max(228.173, _GLF_IDENTITY(228.173, min(228.173, 228.173)))), _GLF_IDENTITY(228.173, (228.173) / 1.0))), 3287.1585, -58.98, -6879.8154))))))) : _GLF_FUZZED(mat2(1358.0066, -5.5, -707.523, -6.3)))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))))) * mat3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8.2)))))), transpose(transpose(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, _GLF_IDENTITY(0.3, (true ? _GLF_IDENTITY(0.3, (0.3) / 1.0) : _GLF_FUZZED(-248.632))), -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))), mat2(_GLF_IDENTITY(mat2(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), transpose(transpose(mat2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))))))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((_GLF_IDENTITY(- mat2(-1.1, -775.236, 0.3, -252.011), transpose(_GLF_IDENTITY(transpose(- mat2(-1.1, -775.236, 0.3, -252.011)), mat2(mat4x3(transpose(- _GLF_IDENTITY(mat2(-1.1, -775.236, 0.3, -252.011), (mat2(-1.1, -775.236, 0.3, -252.011)) * mat2(1.0)))))))))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))))) * _GLF_IDENTITY(mat3(1.0), mat3(mat4x3(mat3(1.0))))))))))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((_GLF_IDENTITY(- mat2(-1.1, -775.236, 0.3, -252.011), transpose(transpose(- mat2(-1.1, -775.236, 0.3, -252.011)))))) : mat2(1.0))) * (injectionSwitch))))) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0)), mat2(1.0) * (mat2(1.0) * (mat2(1.0))))))) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), _GLF_IDENTITY(mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))), (true ? mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))) : _GLF_FUZZED(mat2(1.8, -7805.7099, -46.80, -5009.5202)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((_GLF_IDENTITY(- mat2(-1.1, -775.236, 0.3, -252.011), (true ? _GLF_IDENTITY(- mat2(-1.1, -775.236, 0.3, -252.011), (- mat2(-1.1, -775.236, 0.3, -252.011)) / mat2(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(mat2(3304.9057, -56.38, -64.23, -2.9)))))) : mat2(1.0))))))) * mat3(1.0))), transpose(transpose(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(_GLF_IDENTITY(1.0, (1.0) * 1.0))), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(_GLF_IDENTITY(-1.1, (_GLF_IDENTITY(-1.1, mix(float(-1.1), float(_GLF_FUZZED(-5.4)), bool(false)))) * sqrt(1.0)), -775.236, 0.3, -252.011))) : mat2(1.0))))))) * mat3(1.0)))))))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))) * (injectionSwitch))))) / vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0))), 1.0)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, sqrt(1.0), 1.0, length(0.0), 1.0), (mat3x2(1.0, 1.0, sqrt(1.0), 1.0, length(0.0), 1.0)) * mat3(1.0))))))))) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))))) * mat3(1.0))), transpose(transpose(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))))) * mat3(1.0)))))))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))) * (injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))) : _GLF_FUZZED(mat2(-464.788, -8.2, -5.5, -53.91))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))))) * mat3(1.0))), transpose(transpose(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(_GLF_IDENTITY(-1.1, mix(float(_GLF_IDENTITY(-1.1, (_GLF_IDENTITY(-1.1, mix(float(-1.1), float(_GLF_FUZZED(-939.200)), bool(false)))) * 1.0)), float(_GLF_FUZZED(9.5)), bool(false))), -775.236, 0.3, -252.011))) : mat2(1.0))))))) * _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0))))))))))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))) * (injectionSwitch)))) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch))), clamp(max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0)), mat2(1.0) * (mat2(1.0) * (mat2(1.0))))))) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), _GLF_IDENTITY(mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))), (true ? mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))) : _GLF_FUZZED(mat2(1.8, -7805.7099, -46.80, -5009.5202)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((_GLF_IDENTITY(- mat2(-1.1, -775.236, 0.3, -252.011), (true ? _GLF_IDENTITY(- mat2(-1.1, -775.236, 0.3, -252.011), (- mat2(-1.1, -775.236, 0.3, -252.011)) / mat2(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(mat2(3304.9057, -56.38, -64.23, -2.9)))))) : mat2(1.0))))))) * mat3(1.0))), transpose(transpose(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(_GLF_IDENTITY(1.0, (1.0) * 1.0))), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(_GLF_IDENTITY(-1.1, (_GLF_IDENTITY(-1.1, mix(float(-1.1), float(_GLF_FUZZED(-5.4)), bool(false)))) * sqrt(1.0)), -775.236, 0.3, -252.011))) : mat2(1.0))))))) * mat3(1.0)))))))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))) * (injectionSwitch))))) / vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0))), 1.0)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, sqrt(1.0), 1.0, length(0.0), 1.0), (mat3x2(1.0, 1.0, sqrt(1.0), 1.0, length(0.0), 1.0)) * mat3(1.0))))))))) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))))) * mat3(1.0))), transpose(transpose(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))))) * mat3(1.0)))))))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))) * (injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))) : _GLF_FUZZED(mat2(-464.788, -8.2, -5.5, -53.91))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))))) * mat3(1.0))), transpose(transpose(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(_GLF_IDENTITY(-1.1, mix(float(_GLF_IDENTITY(-1.1, (_GLF_IDENTITY(-1.1, mix(float(-1.1), float(_GLF_FUZZED(-939.200)), bool(false)))) * 1.0)), float(_GLF_FUZZED(9.5)), bool(false))), -775.236, 0.3, -252.011))) : mat2(1.0))))))) * _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0))))))))))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))) * (injectionSwitch)))) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch))), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0)), mat2(1.0) * (mat2(1.0) * (mat2(1.0))))))) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), _GLF_IDENTITY(mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))), (true ? mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))) : _GLF_FUZZED(mat2(1.8, -7805.7099, -46.80, -5009.5202)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((_GLF_IDENTITY(- mat2(-1.1, -775.236, 0.3, -252.011), (true ? _GLF_IDENTITY(- mat2(-1.1, -775.236, 0.3, -252.011), (- mat2(-1.1, -775.236, 0.3, -252.011)) / mat2(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(mat2(3304.9057, -56.38, -64.23, -2.9)))))) : mat2(1.0))))))) * mat3(1.0))), transpose(transpose(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(_GLF_IDENTITY(1.0, (1.0) * 1.0))), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(_GLF_IDENTITY(-1.1, (_GLF_IDENTITY(-1.1, mix(float(-1.1), float(_GLF_FUZZED(-5.4)), bool(false)))) * sqrt(1.0)), -775.236, 0.3, -252.011))) : mat2(1.0))))))) * mat3(1.0)))))))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))) * (injectionSwitch))))) / vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0))), 1.0)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, sqrt(1.0), 1.0, length(0.0), 1.0), (mat3x2(1.0, 1.0, sqrt(1.0), 1.0, length(0.0), 1.0)) * mat3(1.0))))))))) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))))) * mat3(1.0))), transpose(transpose(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))))) * mat3(1.0)))))))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))) * (injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))) : _GLF_FUZZED(mat2(-464.788, -8.2, -5.5, -53.91))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))))) * mat3(1.0))), transpose(transpose(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(_GLF_IDENTITY(-1.1, mix(float(_GLF_IDENTITY(-1.1, (_GLF_IDENTITY(-1.1, mix(float(-1.1), float(_GLF_FUZZED(-939.200)), bool(false)))) * 1.0)), float(_GLF_FUZZED(9.5)), bool(false))), -775.236, 0.3, -252.011))) : mat2(1.0))))))) * _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0))))))))))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))) * (injectionSwitch)))) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0)), mat2(1.0) * (mat2(1.0) * (mat2(1.0))))))) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), _GLF_IDENTITY(mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))), (true ? mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))) : _GLF_FUZZED(mat2(1.8, -7805.7099, -46.80, -5009.5202)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((_GLF_IDENTITY(- mat2(-1.1, -775.236, 0.3, -252.011), (true ? _GLF_IDENTITY(- mat2(-1.1, -775.236, 0.3, -252.011), (- mat2(-1.1, -775.236, 0.3, -252.011)) / mat2(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(mat2(3304.9057, -56.38, -64.23, -2.9)))))) : mat2(1.0))))))) * mat3(1.0))), transpose(transpose(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(_GLF_IDENTITY(1.0, (1.0) * 1.0))), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(_GLF_IDENTITY(-1.1, (_GLF_IDENTITY(-1.1, mix(float(-1.1), float(_GLF_FUZZED(-5.4)), bool(false)))) * sqrt(1.0)), -775.236, 0.3, -252.011))) : mat2(1.0))))))) * mat3(1.0)))))))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))) * (injectionSwitch))))) / vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0))), 1.0)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, sqrt(1.0), 1.0, length(0.0), 1.0), (mat3x2(1.0, 1.0, sqrt(1.0), 1.0, length(0.0), 1.0)) * mat3(1.0))))))))) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))))) * mat3(1.0))), transpose(transpose(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))))) * mat3(1.0)))))))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))) * (injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))) : _GLF_FUZZED(mat2(-464.788, -8.2, -5.5, -53.91))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))))) * mat3(1.0))), transpose(transpose(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(_GLF_IDENTITY(-1.1, mix(float(_GLF_IDENTITY(-1.1, (_GLF_IDENTITY(-1.1, mix(float(-1.1), float(_GLF_FUZZED(-939.200)), bool(false)))) * 1.0)), float(_GLF_FUZZED(9.5)), bool(false))), -775.236, 0.3, -252.011))) : mat2(1.0))))))) * _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0))))))))))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))) * (injectionSwitch)))) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch))))), max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0)), mat2(1.0) * (mat2(1.0) * (mat2(1.0))))))) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), _GLF_IDENTITY(mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))), (true ? mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))) : _GLF_FUZZED(mat2(1.8, -7805.7099, -46.80, -5009.5202)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((_GLF_IDENTITY(- mat2(-1.1, -775.236, 0.3, -252.011), (true ? _GLF_IDENTITY(- mat2(-1.1, -775.236, 0.3, -252.011), (- mat2(-1.1, -775.236, 0.3, -252.011)) / mat2(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(mat2(3304.9057, -56.38, -64.23, -2.9)))))) : mat2(1.0))))))) * mat3(1.0))), transpose(transpose(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(_GLF_IDENTITY(1.0, (1.0) * 1.0))), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(_GLF_IDENTITY(-1.1, (_GLF_IDENTITY(-1.1, mix(float(-1.1), float(_GLF_FUZZED(-5.4)), bool(false)))) * sqrt(1.0)), -775.236, 0.3, -252.011))) : mat2(1.0))))))) * mat3(1.0)))))))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))) * (injectionSwitch))))) / vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0))), 1.0)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, sqrt(1.0), 1.0, length(0.0), 1.0), (mat3x2(1.0, 1.0, sqrt(1.0), 1.0, length(0.0), 1.0)) * mat3(1.0))))))))) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))))) * mat3(1.0))), transpose(transpose(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))))) * mat3(1.0)))))))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))) * (injectionSwitch))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))) : _GLF_FUZZED(mat2(-464.788, -8.2, -5.5, -53.91))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))))) * mat3(1.0))), transpose(transpose(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(_GLF_IDENTITY(-1.1, mix(float(_GLF_IDENTITY(-1.1, (_GLF_IDENTITY(-1.1, mix(float(-1.1), float(_GLF_FUZZED(-939.200)), bool(false)))) * 1.0)), float(_GLF_FUZZED(9.5)), bool(false))), -775.236, 0.3, -252.011))) : mat2(1.0))))))) * _GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0))))))))))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))) * (injectionSwitch)))) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)))))).y, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))) * (injectionSwitch), clamp(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), (false ? _GLF_FUZZED(mat2(9.3, -7.1, -5.3, 6.0)) : (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))))))) * (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))), transpose(transpose(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec4(1.0, tan(0.0), 0.0, exp(0.0)))), 1.0))), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))) * (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))) * (injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))), (_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat2x3(mat2(1.0)), mat3(1.0) * (mat2x3(mat2(1.0)))))) * (mat2(1.0)))) / mat2(1.0, 1.0, 1.0, 1.0))) + _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (mat2(0.0, 0.0, 0.0, 0.0)) / mat2(1.0, 1.0, 1.0, 1.0))))) * (injectionSwitch), _GLF_IDENTITY(min(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED((- mat2(-1.1, -775.236, _GLF_IDENTITY(0.3, mix(float(0.3), float(_GLF_FUZZED((vec4(37.66, -2928.3904, 6.2, -527.017) + vec4(-1.5, -15.47, -606.727, 8.7)).s)), bool(false))), _GLF_IDENTITY(-252.011, clamp(-252.011, -252.011, -252.011))))), (_GLF_FUZZED((- mat2(-1.1, -775.236, _GLF_IDENTITY(0.3, mix(float(0.3), float(_GLF_FUZZED((vec4(37.66, -2928.3904, 6.2, -527.017) + vec4(-1.5, -15.47, -606.727, 8.7)).s)), bool(false))), _GLF_IDENTITY(-252.011, clamp(-252.011, -252.011, -252.011)))))) + mat2(0.0, 0.0, 0.0, 0.0)) : mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))))) * mat3(1.0))), transpose(transpose(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))))) * mat3(1.0)))))), mat2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))))) * mat3(1.0))), transpose(transpose(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))))) * mat3(1.0))))))), (true ? mat2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))))) * mat3(1.0))), transpose(transpose(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))))) * mat3(1.0))))))) : _GLF_FUZZED(mat2(84.80, -221.903, 23.47, -734.899)))))))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))) * (injectionSwitch)), (min(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(_GLF_IDENTITY(-1.1, (-1.1) + 0.0), -775.236, _GLF_IDENTITY(0.3, mix(float(0.3), float(_GLF_FUZZED((vec4(37.66, -2928.3904, 6.2, -527.017) + vec4(-1.5, -15.47, _GLF_IDENTITY(-606.727, mix(float(_GLF_FUZZED(-6.1)), float(-606.727), bool(true))), 8.7)).s)), bool(false))), _GLF_IDENTITY(-252.011, clamp(-252.011, -252.011, -252.011))))) : mat2(1.0)), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.4)), float(1.0), bool(true))))), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED((_GLF_IDENTITY(- mat2(-1.1, -775.236, 0.3, -252.011), (_GLF_IDENTITY(- mat2(-1.1, -775.236, 0.3, -252.011), (- mat2(-1.1, -775.236, 0.3, -252.011)) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) - mat2(0.0, 0.0, 0.0, 0.0)))) : mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3263.7991)), bool(false)))) / 1.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0)))))), transpose(transpose((false ? _GLF_FUZZED((_GLF_IDENTITY(- mat2(-1.1, -775.236, 0.3, -252.011), (_GLF_IDENTITY(- mat2(-1.1, -775.236, 0.3, -252.011), (- mat2(-1.1, -775.236, 0.3, -252.011)) / mat2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) - mat2(0.0, 0.0, 0.0, 0.0)))) : mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3263.7991)), bool(false)))) / 1.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0))))))))), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))))))) * mat3(1.0))), transpose(transpose(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)), mat2(mat2x3((false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0)))))), (mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED((- mat2(-1.1, _GLF_IDENTITY(-775.236, (false ? _GLF_FUZZED(8.5) : -775.236)), 0.3, -252.011))) : mat2(1.0), _GLF_IDENTITY(mat2(mat3x2(false ? _GLF_FUZZED((- mat2(-1.1, _GLF_IDENTITY(-775.236, (false ? _GLF_FUZZED(8.5) : -775.236)), 0.3, -252.011))) : mat2(1.0))), transpose(transpose(mat2(mat3x2(false ? _GLF_FUZZED((- mat2(-1.1, _GLF_IDENTITY(-775.236, (false ? _GLF_FUZZED(8.5) : -775.236)), 0.3, -252.011))) : mat2(1.0)))))))), mat2(mat2x3((false ? _GLF_FUZZED((- _GLF_IDENTITY(mat2(-1.1, -775.236, 0.3, -252.011), mat2(_GLF_IDENTITY(mat3x4(mat2(-1.1, -775.236, 0.3, -252.011)), (false ? _GLF_FUZZED(mat3x4(-5519.8923, -1229.2260, -2.8, 42.65, -4.0, -8987.9188, 899.046, -7.5, 0.9, -1.3, -0.5, 6.7)) : mat3x4(mat2(-1.1, -775.236, 0.3, -252.011)))))))) : mat2(1.0))))))) * mat3(1.0)))))))) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((- mat2(-1.1, -775.236, 0.3, -252.011))) : mat2(1.0))) * (injectionSwitch))) * mat2(1.0))))) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(vec4(1917.9042, 6.8, _GLF_IDENTITY(8.1, (false ? _GLF_FUZZED(-2.7) : 8.1)), -8.9).p)), _GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
             if(_GLF_DEAD(false))
              break;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! ((injectionSwitch.x > injectionSwitch.y) && true)))) || false))) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! ((injectionSwitch.x > injectionSwitch.y) && true)))) || false))) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! ((injectionSwitch.x > injectionSwitch.y) && true)))) || false))) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! ((injectionSwitch.x > injectionSwitch.y) && true)))) || false))) || false))))))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, sin(0.0), 1.0, 1.0, 0.0))).y, (injectionSwitch.x > injectionSwitch.y) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, ~ (~ (0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) | 0u), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) + ((subgroup_local_id + 1) % subgroup_size)), clamp((workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) % subgroup_size)), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), 0u ^ ((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))))) / 1u) % subgroup_size) - 0u))), min((workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(9.5))))) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, 0u), clamp(uvec4(subgroup_id, 0u, 0u, 0u), _GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, 0u), (true ? uvec4(subgroup_id, 0u, 0u, 0u) : _GLF_FUZZED(uvec4(99313u, 170158u, 187461u, 139541u)))), uvec4(subgroup_id, 0u, 0u, 0u)))), (uint(_GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, 0u), clamp(uvec4(subgroup_id, 0u, 0u, 0u), _GLF_IDENTITY(uvec4(subgroup_id, 0u, 0u, 0u), (true ? uvec4(subgroup_id, 0u, 0u, 0u) : _GLF_FUZZED(uvec4(99313u, 170158u, 187461u, 139541u)))), uvec4(subgroup_id, 0u, 0u, 0u))))) / 1u)) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | (0u ^ 0u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | (0u ^ 0u)))), (true ? (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | (0u ^ 0u)), 0u + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | (0u ^ 0u)))))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | (0u ^ 0u)))), min((_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | (0u ^ 0u)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | (0u ^ _GLF_IDENTITY(0u, (0u) ^ 0u))))))))))))) | (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)));
 atomicStore(buf[virtual_gid], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(33736))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(33736))), 0 | (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(33736)))))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(33736))), 0 | (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(33736)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(33736))), 0 | (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(33736)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(33736))), 0 | (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(33736)))))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(33736))), 0 | (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(33736)))))))))))), 4);
 for(int _injected_loop_counter = (0 & ((51487 % -29050) | -50192)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) * 1) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), 0 ^ (int(_GLF_IDENTITY(4, (4) | (4))))))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         for(int _injected_loop_counter = _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), max(int(ivec2(1, 1)), int(ivec2(1, 1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   return;
                   if(_GLF_DEAD(false))
                    break;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
              }
            }
           else
            {
             return;
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))), ! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))), false || (false)), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(false, true))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, true))))))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          return;
         return;
        }
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY((-27402 | -56181), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(16490) : (-27402 | -56181))) & 0) | (_GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / int(_GLF_ONE(1.0, injectionSwitch.y))), 0 | (_injected_loop_counter)) != 0); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) + (subgroup_local_id)) + 1 < subgroup_size)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         if(_GLF_DEAD(false))
          break;
         break;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))) || false)) && true)))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), false || (bool(bool(_GLF_IDENTITY(false, (false) && true)))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), bvec2(true, false)))))), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-26.70, _GLF_IDENTITY(43.97, mix(float(_GLF_FUZZED(57.01)), float(43.97), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))) || false))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             return;
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           continue;
          }
         do
          {
           do
            {
             do
              {
               if(_GLF_DEAD(false))
                break;
               atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), (false ? _GLF_FUZZED(_GLF_IDENTITY(50465, (50465) - 0)) : _GLF_IDENTITY(_GLF_IDENTITY(4, 0 | _GLF_IDENTITY((4), 0 ^ (_GLF_IDENTITY((4), ~ (~ ((4))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | _GLF_IDENTITY(_GLF_IDENTITY((4), 0 ^ ((4))), max(_GLF_IDENTITY((4), 0 ^ ((4))), _GLF_IDENTITY(_GLF_IDENTITY((4), 0 ^ ((4))), min(_GLF_IDENTITY((4), 0 ^ ((4))), _GLF_IDENTITY((4), 0 ^ ((4)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | _GLF_IDENTITY((4), 0 ^ (_GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(66276)))))), (_GLF_IDENTITY(4, 0 | _GLF_IDENTITY((4), 0 ^ ((4))))) - 0)) >> 0), _GLF_IDENTITY(4, 0 | _GLF_IDENTITY((4), 0 ^ ((4)))), _GLF_IDENTITY(4, 0 | _GLF_IDENTITY((4), 0 ^ ((4)))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), 0 | (4)), (false ? _GLF_FUZZED(50465) : _GLF_IDENTITY(4, 0 | _GLF_IDENTITY((4), 0 ^ ((4)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), _GLF_IDENTITY((false ? _GLF_FUZZED(50465) : _GLF_IDENTITY(4, 0 | _GLF_IDENTITY((4), 0 ^ ((4))))), max((false ? _GLF_FUZZED(50465) : _GLF_IDENTITY(4, 0 | _GLF_IDENTITY((4), 0 ^ ((4))))), (false ? _GLF_FUZZED(50465) : _GLF_IDENTITY(4, 0 | _GLF_IDENTITY((4), 0 ^ ((4)))))))))))))));
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        continue;
       subgroupAll(false);
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), true)), bvec2(bvec4(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true)), false, true)))), false)))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(78.52)), float(injectionSwitch.x), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))), bool(bvec4(bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))), true, false, false)))) && true))))) < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true)))), ((_GLF_IDENTITY(true, bool(bool(true))))) || false) || false), bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false), false, false, false))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(78.52)), float(injectionSwitch.x), bool(true))))) < injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(78.52)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, true && (true)))))), (false ? _GLF_FUZZED(-6.4) : _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(78.52)), float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).x), bool(_GLF_IDENTITY(true, ! (! (true))))))), (true ? clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(78.52)), float(injectionSwitch.x), bool(true)))) : _GLF_FUZZED(-780.396)))))) < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(23.29, 2.8)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))).y)), false)))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), clamp(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)), 1.0 * (float(mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), clamp(dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(0.0, cos(0.0), 0.0)), dot(vec3(sqrt(0.0), 1.0, 0.0), vec3(0.0, cos(0.0), 0.0))))), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))))) < injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  return;
                 return;
                }
               else
                {
                }
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               return;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                continue;
               break;
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               break;
              }
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_DEAD(false))
            break;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(((0 | 1) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)), (false ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(-38781)), (_GLF_FUZZED(bitfieldReverse(_GLF_IDENTITY(-38781, (_GLF_IDENTITY(-38781, 1 * (-38781))) + _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, (0) * 1) : _GLF_FUZZED(ivec2(-16155, 28341).g))))))) + 0) : _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(0 | 1, int(ivec4(_GLF_IDENTITY(0 | _GLF_IDENTITY(1, (1) - 0), ~ (~ (_GLF_IDENTITY(0 | 1, 0 | (0 | 1))))), 1, (0 | 0), _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, (1) / 1), 1)), (int(ivec2(_GLF_IDENTITY(1, (1) / 1), 1))) * 1)))))) << _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(_GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((3), clamp((3), _GLF_IDENTITY((3), 0 + (_GLF_IDENTITY((3), ((3)) - 0))), _GLF_IDENTITY((3), max((3), (3))))))), _GLF_IDENTITY(int(3), clamp(int(3), int(3), int(3))))), (((_GLF_IDENTITY(0 | 1, int(ivec4(_GLF_IDENTITY(0 | _GLF_IDENTITY(1, (1) - 0), ~ (~ (_GLF_IDENTITY(0 | 1, _GLF_IDENTITY(0, (0) >> (0 >> _GLF_IDENTITY(int(0), int(0)))) | (0 | 1))))), 1, (0 | 0), 1)))) << _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (3))), int(3)))) ^ 0) >> _GLF_IDENTITY(int(3), int(3)), int(ivec2(((0 | 1) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(ivec4(-18511, -38678, 87963, 85749)[1]) : int(3))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) - 0), 1))))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)))))) && true))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false), false))))))))))))))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, false, false))), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(false))
            return;
           break;
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED((665.387 + 8.2))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((665.387 + 8.2))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((665.387 + 8.2))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).y) - 0.0), mix(float(_GLF_FUZZED((_GLF_IDENTITY(665.387 + 8.2, (_GLF_IDENTITY(_GLF_IDENTITY(665.387 + 8.2, (_GLF_IDENTITY(665.387 + 8.2, max(665.387 + 8.2, 665.387 + 8.2))) - 0.0), min(665.387 + 8.2, 665.387 + 8.2))) - tan(tan(0.0)))))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(mix(injectionSwitch, injectionSwitch, bvec2(false, false))))))).y))) || false)) || false)))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) || false))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), false, true, false)), bool(bvec2(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)), false)))))
              break;
             return;
            }
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             break;
            }
          }
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(bool(_GLF_IDENTITY(true, bool(bool(true)))))), ! (! (_GLF_IDENTITY(true, ! (! (true))))))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) : _GLF_FUZZED(-25.88)))) * (injectionSwitch))[0]), float(_GLF_FUZZED(-0.4)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))) / determinant(mat2(1.0, 0.0, 0.0, 1.0))))).y) * 1.0)), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], mix(float(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) : _GLF_FUZZED(-25.88)))) * (injectionSwitch))[0]), float(_GLF_FUZZED(-0.4)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))) / determinant(mat2(1.0, 0.0, 0.0, 1.0))))).y) * 1.0))) && true))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
                {
                 return;
                }
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
                return;
               continue;
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               continue;
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
        }
       else
        {
        }
       do
        {
         atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) | (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))))), min(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), _GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))))], uint(2), 4, _GLF_IDENTITY(64, (64) / 1), 4);
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
       if(_GLF_DEAD(false))
        return;
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             break;
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             break;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((0.6 - -2.9))), float(injectionSwitch.y), bool(true)))))))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           break;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                break;
              }
             else
              {
               if(_GLF_DEAD(false))
                break;
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))), bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))), true))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 0)); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                return;
              }
             else
              {
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            {
             if(_GLF_DEAD(false))
              continue;
             return;
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   continue;
                  }
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 break;
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-37.46)))))))
                return;
              }
             else
              {
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
              break;
            }
           return;
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(6.3, float(mat2x4(_GLF_IDENTITY(6.3, min(6.3, 6.3)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), _GLF_FUZZED(-8692.3523)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[0], _GLF_IDENTITY(clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]), clamp(clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]), _GLF_IDENTITY(clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]), max(clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]), clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0]))), clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])))))), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(length(0.0), min(length(0.0), length(0.0))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9152.3118) : 1.0)), 0.0, 1.0, sin(0.0), 0.0, 1.0, exp(0.0), 1.0, 1.0))).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.3), _GLF_FUZZED(-8692.3523)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) ^ 0)], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.3), _GLF_FUZZED(-8692.3523)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1]))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.3), _GLF_FUZZED(-8692.3523)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y)))))))))))))
            return;
          }
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x < injectionSwitch.y)), true, false)))))) || false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x < injectionSwitch.y)), true, false)))))) || false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x < injectionSwitch.y)), true, false)))))) || false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) * 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             return;
            }
          }
        }
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
              {
              }
             else
              {
               return;
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              continue;
            }
           continue;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & (-5899 % 78561))); _injected_loop_counter --)
            {
             return;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4.8))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).x, float(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, 1.0, 1.0))) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), false, true))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))), false)), true)))))), (bool(bvec3(false, false, true))) || false)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
            continue;
           continue;
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) || false)))))))
          continue;
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                break;
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
            {
            }
           else
            {
             return;
            }
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
            }
           if(_GLF_DEAD(false))
            return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       do
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 subgroupAll(true);
                }
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
