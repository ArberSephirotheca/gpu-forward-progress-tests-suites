#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true), false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false, false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false, false)))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false, false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false, false)))))))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false, false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false, false)))))))), false, true)), true, false)))))), false, false)), ! (! (bool(bvec3(bool(bvec2(false, false)), false, false))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)), false, false, false))))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)), false, false, false)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)), false, false, false)), bool(bvec4(bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)), false, false, false)), false, true, false))))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))).x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))).x > injectionSwitch.y))), false))))), true))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9353.9471), _GLF_FUZZED(93.39)), bvec2(false, false))))))).x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), true, false, false))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) - 0.0)), true))), true, false, false)))))), (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), mat3(1.0) * (vec3(injectionSwitch, 1.0))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))) || false)), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, float(mat4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))) && _GLF_IDENTITY((true), ((true)) && true))))), true, false, false))))))) || false))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6325.3650) : _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0)))) + 0.0)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))))), mix(vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(1.5)), vec2((_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))))))[0], (_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, 1.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), (max(0.0, 0.0)) * 1.0))), vec2(1.0, 0.0))), 0.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), _GLF_IDENTITY(float(vec4(float(0.0), 0.0, 0.0, 0.0)), mix(float(float(vec4(float(0.0), 0.0, 0.0, 0.0))), float(_GLF_FUZZED(-98.06)), bool(false)))))), (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), _GLF_IDENTITY(float(vec4(float(0.0), 0.0, 0.0, 0.0)), mix(float(float(vec4(float(0.0), 0.0, 0.0, 0.0))), float(_GLF_FUZZED(-98.06)), _GLF_IDENTITY(bool(false), (bool(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) + determinant(mat2(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0)))) + 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))) * exp(vec2(0.0, 0.0))).y, 1.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), mix(float(_GLF_FUZZED(3771.0413)), float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), bool(true))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0)))) + 0.0))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, 1.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, _GLF_ZERO(0.0, injectionSwitch.x) + (1.0)), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), clamp(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(153685u))), bool(false))), 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.1) : _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(94.03)), bool(false))))))), 1.0)), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), float(vec2(_GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(float(min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), float(_GLF_FUZZED(-15.48)), bool(false))), 0.0)))))))) + 0.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(tanh(vec2(-8.1, 7.9))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY((injectionSwitch) * exp(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + sin(0.0)))), ((injectionSwitch) * exp(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + sin(0.0))))) - vec2(0.0, 0.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), (injectionSwitch))) / cos(vec2(0.0, 0.0)))) * exp(vec2(0.0, 0.0))).y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, 1.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), vec2(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(29.66)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0)))) + 0.0))))), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * exp(vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(-3710.4694, -8.1)) : _GLF_IDENTITY((injectionSwitch) * exp(vec2(0.0, 0.0)), max((injectionSwitch) * exp(vec2(0.0, 0.0)), (injectionSwitch) * exp(vec2(0.0, 0.0))))))).y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2611.1014) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6741.4685)), float(1.0), bool(true))))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(33.81, -58.01)) : mat2(1.0) * (injectionSwitch)))), vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).y), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7.6) : 1.0)), 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3.7))), determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0)))) + 0.0)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))))).y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).y), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), (false ? _GLF_FUZZED(-7.6) : 1.0)), 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0)))), max((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).y), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), (false ? _GLF_FUZZED(-7.6) : 1.0)), 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).y), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), (false ? _GLF_FUZZED(-7.6) : 1.0)), 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0)))))) + 0.0)), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(_GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(0.0, 0.0))))).y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).y), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7.6) : 1.0)), 0.0), vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-660.766)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-963.171)), bool(false)))), bool(true))), 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-68.20)))), vec2(1.0, 0.0))), 0.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 1.0, cos(0.0), cos(0.0)), mat3x2(mat3x4(mat3x2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 1.0, cos(0.0), cos(0.0)))))), (float(_GLF_IDENTITY(mat3x2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 1.0, cos(0.0), cos(0.0)), mat3x2(mat3x4(mat3x2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 1.0, cos(0.0), cos(0.0))))))) / 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0)))) + 0.0)), false, true, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8.1))))), 1.0))) + 0.0), abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).y), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7.6) : 1.0)), 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0)))) + 0.0)), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(_GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-6540.6491), (vec2(0.0, 0.0))[1]), vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(-441.478)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec2(0.0, 0.0))))).y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), abs(0.0), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7832.9938))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).y), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true) ? _GLF_FUZZED(-7.6) : 1.0)), 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))) + 0.0)), false, true, true))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(exp(vec2(0.0, 0.0)), max(exp(vec2(0.0, 0.0)), _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(vec3(exp(vec2(0.0, 0.0)), abs(1.0))))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch))) - vec2(0.0, 0.0)), (injectionSwitch) * exp(vec2(0.0, 0.0))).y, 1.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 0.0, 0.0, 1.0)), 1.0, 1.0)), mix(float(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch))) - vec2(0.0, 0.0)), (injectionSwitch) * exp(vec2(0.0, 0.0))).y, 1.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 0.0, 0.0, 1.0)), 1.0, 1.0))), float(_GLF_FUZZED((- -36.39))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), abs(1.0) * (float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (injectionSwitch) * exp(vec2(0.0, 0.0))).y, 1.0, 1.0, abs(0.0), 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)) * _GLF_IDENTITY(mat2(1.0), mat2(mat2x3(mat2(1.0))))))).y), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 0.0, 0.0, 1.0)), 1.0, 1.0)))))) + 0.0))))), true), false)), false)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(8.7)), bool(false))))), injectionSwitch[1])))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-6.7)), float(injectionSwitch[0]), bool(true))), min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(8.7)), bool(false))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))))))) / vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-6.7)), float(injectionSwitch[0]), bool(true))), min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(8.7)), bool(false))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))))))) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-6.7)), float(injectionSwitch[0]), bool(true))), min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(8.7)), bool(false))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))))))) / vec2(1.0, 1.0)).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-6.7)), float(injectionSwitch[0]), bool(true))), min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(8.7)), bool(false))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))))))) / vec2(1.0, 1.0)).y), float(_GLF_FUZZED(245.378)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-6.7)), float(injectionSwitch[0]), bool(true))), min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(8.7)), bool(false))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))))))) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-6.7)), float(injectionSwitch[0]), bool(true))), min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(8.7)), bool(false))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))))))) / vec2(1.0, 1.0)).y) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(8.7)), bool(false))))), injectionSwitch[1])))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(8.7)), bool(false))))), injectionSwitch[1]), min(vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(8.7)), bool(false))))), injectionSwitch[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(8.7)), bool(false))))), injectionSwitch[1]), (vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(8.7)), bool(false))))), injectionSwitch[1])) * mat2(1.0))))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)).y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(vec2(6469.9314, -388.387)) : max(injectionSwitch, injectionSwitch))), max(injectionSwitch, injectionSwitch))), mix(vec2((_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(vec2(6469.9314, -388.387)) : max(injectionSwitch, injectionSwitch))), max(injectionSwitch, injectionSwitch))))[0], _GLF_FUZZED(498.067)), vec2(_GLF_FUZZED(((0.0) * 4322.0747)), (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(vec2(6469.9314, -388.387)) : max(injectionSwitch, injectionSwitch))), max(injectionSwitch, injectionSwitch))))[1]), bvec2(false, true)))) + vec2(0.0, 0.0))).y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))), abs(1.0), 1.0))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), sqrt(vec2(0.0, 0.0)) + (max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)))).y)))))) || false)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), true && (bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
            {
             return;
            }
          }
        }
       else
        {
         return;
         if(_GLF_DEAD(false))
          continue;
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(false)) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)), 0u ^ ((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u)))) >> 0u) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, sin(0.0), 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0)), vec2(vec4(vec2(mat3(injectionSwitch, sin(0.0), 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0)), 1.0, 0.0)))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        continue;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY((1 ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-62.13)))))) << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, ~ (~ (5))))), clamp(_GLF_IDENTITY((1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) - 0), int(ivec2((1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(int(5), int(5)), (0 | 0)))), (1 ^ _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * exp(0.0))))))) ^ 0)) << _GLF_IDENTITY(int(5), int(5)), (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, min(5, 5)))))); _GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0)) + (_injected_loop_counter ++)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-32.96)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))), bool(true))), 1.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0)), 1.0, round(length(normalize(1.0))), 1.0, 0.0, 1.0, 0.0)), (float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-32.96)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))), bool(true))), 1.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 1.0)), 1.0, round(length(normalize(1.0))), 1.0, 0.0, 1.0, 0.0))) - _GLF_ZERO(0.0, injectionSwitch.x)))))))
        continue;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true))))))
      continue;
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))), _injected_loop_counter)) > _GLF_IDENTITY((_GLF_IDENTITY(-22344, max(-22344, -22344)) & _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (0) - 0))), min(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (_GLF_IDENTITY(0, 1 * (0))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), min(_GLF_IDENTITY(0, 1 * (0)), _GLF_IDENTITY(0, 1 * (0))))), min(int(_GLF_IDENTITY(0, 1 * (0))), int(_GLF_IDENTITY(0, 1 * (0)))))))))), ~ (~ ((_GLF_IDENTITY(-22344, max(-22344, -22344)) & _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (_GLF_IDENTITY(0, 1 * (0))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, 1 * (0))), min(int(_GLF_IDENTITY(0, 1 * (0))), int(_GLF_IDENTITY(0, 1 * (0))))))))))))), (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))), _injected_loop_counter)) > _GLF_IDENTITY((_GLF_IDENTITY(-22344, max(-22344, -22344)) & _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (0) - 0))), min(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (_GLF_IDENTITY(0, 1 * (0))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), min(_GLF_IDENTITY(0, 1 * (0)), _GLF_IDENTITY(0, 1 * (0))))), min(int(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), min(_GLF_IDENTITY(0, 1 * (0)), _GLF_IDENTITY(0, 1 * (0))))), int(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), min(_GLF_IDENTITY(0, 1 * (0)), _GLF_IDENTITY(0, 1 * (0))))))), min(int(_GLF_IDENTITY(0, 1 * (0))), int(_GLF_IDENTITY(0, 1 * (0)))))))))), ~ (~ ((_GLF_IDENTITY(-22344, max(-22344, -22344)) & _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (0) ^ 0))), (_GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), (1 * (0)) - 0))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), max(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (_GLF_IDENTITY(0, 1 * (0))) << 0), _GLF_IDENTITY(0, 1 * (0)))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, 1 * (0))), min(int(_GLF_IDENTITY(0, 1 * (0))), int(_GLF_IDENTITY(0, 1 * (0)))))))))))))) && true)), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))), _injected_loop_counter)) > _GLF_IDENTITY((_GLF_IDENTITY(-22344, max(-22344, -22344)) & _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)), 0 | ((_GLF_IDENTITY(0, (0) - 0)))), 0 ^ ((_GLF_IDENTITY(0, (0) - 0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (_GLF_IDENTITY(0, 1 * (0))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), min(_GLF_IDENTITY(0, 1 * (0)), _GLF_IDENTITY(0, 1 * _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) | (0))), ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) | (0)))) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))))))), min(int(_GLF_IDENTITY(0, 1 * (0))), int(_GLF_IDENTITY(0, 1 * (0)))))))))), ~ (~ ((_GLF_IDENTITY(-22344, max(-22344, -22344)) & _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (_GLF_IDENTITY(0, 1 * (0))) * 1), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (_GLF_IDENTITY(0, 1 * (0))) * 1), 1))), _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, 1 * (0))), min(int(_GLF_IDENTITY(0, 1 * (0))), int(_GLF_IDENTITY(0, 1 * (0))))))))))))))) || false); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              continue;
             return;
            }
          }
        }
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      continue;
     atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, 0 | (4)), 64, 4);
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(subgroup_local_id + 1 < subgroup_size)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool(_GLF_IDENTITY((false) && true, bool(bvec3(_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, true, true))), false, false)))))))))
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, min(0, 0))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(0.2), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, int(int(0)))))) / 1)], _GLF_IDENTITY(mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-8.7)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-8.7)), bool(false)), mix(float(mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-8.7)), bool(false))), float(_GLF_FUZZED((671.219))), bool(false))), mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-8.7)), bool(false)), mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-8.7)), bool(false))))), _GLF_FUZZED(-4.9)), bvec2(true, false))).y))))
                {
                 if(_GLF_DEAD(false))
                  return;
                 break;
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
                return;
              }
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
             do
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            return;
           do
            {
             if(_GLF_DEAD(false))
              continue;
             atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, clamp(2, 2, 2))), _GLF_IDENTITY(_GLF_IDENTITY(4, ((0 << _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2))))) | (4)), (_GLF_IDENTITY(true, true && (true)) ? 4 : _GLF_IDENTITY(_GLF_FUZZED(45957), max(_GLF_FUZZED(_GLF_IDENTITY(45957, (_GLF_IDENTITY(_GLF_IDENTITY(45957, (45957) / 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(45957, (45957) / 1), 0 ^ (_GLF_IDENTITY(45957, (45957) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(45957, (45957) / 1), (_GLF_IDENTITY(45957, (45957) / 1)) | (_GLF_IDENTITY(45957, (45957) / 1))), _GLF_IDENTITY(45957, (45957) / 1)))) - 0)), _GLF_FUZZED(45957))))), 64, 4);
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y))))
                    continue;
                  }
                }
               if(_GLF_DEAD(false))
                break;
              }
            }
           if(_GLF_DEAD(false))
            return;
           subgroupAll(false);
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec4((_GLF_IDENTITY(false, bool(bool(false)))), true, false, true)))))))))
            continue;
           for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-76226) : _GLF_IDENTITY(0, min(0, 0)))) : _GLF_FUZZED(1387)))) | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(_GLF_IDENTITY(6, _GLF_IDENTITY((6) * 1, ((_GLF_IDENTITY(6, int(ivec3(6, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) * 1) * 1))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, max(6, 6))), 0 | (int(6)))))))); _injected_loop_counter ++)
            {
             atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(max(next_virtual_gid, next_virtual_gid), (max(next_virtual_gid, next_virtual_gid)) | 0u))], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2) / 1, (true ? (2) / 1 : _GLF_FUZZED(int(-8204.0229))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2) / 1, (true ? (2) / 1 : _GLF_FUZZED(int(-8204.0229))))), (true ? _GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), ((2)) >> (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7)))))) / 1, (true ? (2) / 1 : _GLF_FUZZED(int(-8204.0229))))) : _GLF_FUZZED(_injected_loop_counter)))))), _GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (2) / 1), 0), (ivec2(_GLF_IDENTITY(2, (2) / 1), 0)) | (ivec2(_GLF_IDENTITY(2, (2) / 1), 0)))))), uint(_GLF_IDENTITY(2, (2) / 1)), uint(_GLF_IDENTITY(2, (2) / _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, (0 ^ 1)), (true ? ivec4(1, 0, 0, (0 ^ 1)) : _GLF_FUZZED(ivec4(15574, -64842, -76403, -15945)))))) : _GLF_FUZZED(_injected_loop_counter)))))), (clamp(uint(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2) / 1, (_GLF_IDENTITY((2) / 1, max((2) / 1, _GLF_IDENTITY((2) / 1, min((_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, min(2, 2))))) / 1, (2) / 1))))) >> 0), (_GLF_IDENTITY((2) / 1, (_GLF_IDENTITY(_GLF_IDENTITY((2), ~ (~ (_GLF_IDENTITY((2), ((2)) | ((2)))))) / 1, max((2) / 1, _GLF_IDENTITY((2) / 1, min((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 | (2))) / 1)) / 1, (2) / 1))))) >> 0)) / (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))))), uint(_GLF_IDENTITY(2, (2) / 1)), uint(_GLF_IDENTITY(2, (2) / 1)))) | 0u)), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(4, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 ^ (4))))), max((_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(4, clamp(4, 4, 4)))))), 4)), 0 + (4)));
             if(_GLF_DEAD(false))
              continue;
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 return;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              continue;
             break;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_IDENTITY(false, ! (! (false)))), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_IDENTITY(false, ! (! (false)))), true)))))))), (injectionSwitch.x > injectionSwitch.y))))))
              continue;
            }
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-383.585) : injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-383.585) : injectionSwitch.y))))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-383.585) : injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-383.585) : injectionSwitch.y))))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-383.585) : injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))))) || (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(bool((injectionSwitch.x > injectionSwitch.y))), true)))) || false))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(bool((injectionSwitch.x > injectionSwitch.y))), true)))) || false))))))))), false, true, true)))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), (_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0))), min(_GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0)))))))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-894.978) : 0.0)), 0.0)), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-40.29)), float(0.0), bool(true)))) * cos(0.0)), float(mat4x3(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.1)), float(1.0), bool(true))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) + sqrt(0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(mat2(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mat3(1.0) * (vec3(1.0, 0.0, 1.0))), 1.0)), clamp(vec3(mat2(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mat3(1.0) * (vec3(1.0, 0.0, 1.0))), 1.0)), vec3(mat2(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mat3(1.0) * (vec3(1.0, 0.0, 1.0))), 1.0)), vec3(mat2(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mat3(1.0) * (vec3(1.0, 0.0, 1.0))), 1.0))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0))), 0.0 + (float(mat4x2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(roundEven(-5.0)) : 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 1.0, 1.0, 1.0)))) + sqrt(0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(588.444)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0))))))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), mat2(mat3(mat2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), clamp(dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0)), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], _GLF_FUZZED(-92.84)), vec2(_GLF_FUZZED(-5482.6820), (vec2(1.0, 0.0))[1]), bvec2(false, true)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), determinant(mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float((mat3(-4.6, 963.773, 1.2, 3.4, -5.1, 5.9, -7213.3663, -49.46, -226.232) == mat3(6.5, -8006.9485, 3.4, 6018.5302, 4.1, 67.56, -867.457, 8.0, -246.309))))), bool(false))), 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(896.655, clamp(_GLF_IDENTITY(896.655, clamp(896.655, 896.655, 896.655)), 896.655, _GLF_IDENTITY(896.655, min(896.655, 896.655))))) : 1.0)), 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)))))))) * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 1.0, 0.0))), 0.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 1.0, 0.0))), 0.0, 1.0)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                break;
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(vec4(mat2(1.0) * (injectionSwitch), length(0.0), 0.0)), mat2(1.0) * (vec2(vec4(mat2(1.0) * (injectionSwitch), length(0.0), 0.0)))))).x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))) * mat2(1.0)) : _GLF_FUZZED((roundEven(-5.7) - vec2(332.172, 3239.0846))))), length(0.0), 0.0)), cos(vec2(0.0, 0.0)) * (vec2(vec4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))) * mat2(1.0)) : _GLF_FUZZED((roundEven(-5.7) - vec2(332.172, 3239.0846))))), length(0.0), 0.0)))))).x > injectionSwitch.y))) && true, (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))) * mat2(1.0)) : _GLF_FUZZED((roundEven(-5.7) - vec2(332.172, 3239.0846))))), length(0.0), 0.0)), cos(vec2(0.0, 0.0)) * (vec2(vec4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))) * mat2(1.0)) : _GLF_FUZZED((roundEven(-5.7) - vec2(332.172, 3239.0846))))), length(0.0), 0.0)))))).x > injectionSwitch.y))) && true, ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((true ? _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))) * mat2(1.0)) : _GLF_FUZZED((roundEven(-5.7) - vec2(332.172, 3239.0846)))), mix(vec2(_GLF_FUZZED(-15.22), ((true ? _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))) * mat2(1.0)) : _GLF_FUZZED((roundEven(-5.7) - vec2(332.172, 3239.0846)))))[1]), vec2(((true ? _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))) * mat2(1.0)) : _GLF_FUZZED((roundEven(-5.7) - vec2(332.172, 3239.0846)))))[0], _GLF_FUZZED(0.9)), bvec2(true, false)))), length(0.0), 0.0)), cos(vec2(0.0, 0.0)) * (vec2(vec4(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0))) - mat2(0.0, 0.0, 0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))) * mat2(1.0)) : _GLF_FUZZED((roundEven(-5.7) - vec2(_GLF_IDENTITY(332.172, 1.0 * (_GLF_IDENTITY(332.172, min(332.172, 332.172)))), 3239.0846))))), length(0.0), 0.0)))))).x > injectionSwitch.y))) && true) && true)) || false))))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
                      return;
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      break;
                     return;
                     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                      return;
                    }
                  }
                }
              }
             else
              {
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.8)), bool(false))))) > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch)).x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.8)), bool(false)))), mix(float(_GLF_FUZZED(38.59)), float(min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(4.8), 0.0 + (_GLF_FUZZED(4.8)))), bool(false))))), bool(true)))) > injectionSwitch.y)), (_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch)).x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.8)), bool(false)))), mix(float(_GLF_FUZZED(38.59)), float(min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(4.8), 0.0 + (_GLF_FUZZED(4.8)))), bool(false))))), bool(true)))) > injectionSwitch.y)), true && (bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch)).x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.8)), bool(false)))), mix(float(_GLF_FUZZED(38.59)), float(min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(4.8), 0.0 + (_GLF_FUZZED(4.8)))), bool(false))))), bool(true)))) > injectionSwitch.y))))) && true))))))
              return;
             do
              {
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  return;
                 return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   break;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             else
              {
               subgroupAll(true);
              }
            }
           for(int _injected_loop_counter = _GLF_IDENTITY(((0 << _GLF_IDENTITY(int(8), int(8))) ^ int(_GLF_ONE(1.0, injectionSwitch.y))), 0 | (((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), (int(8)) / 1)) >> 0), int(8))) ^ int(_GLF_ONE(1.0, injectionSwitch.y))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) && true), false)), ! (! (bool(bvec2(_GLF_IDENTITY(true, (true) && true), false)))))) && true, ! (! ((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) && true), false)), ! (! (bool(bvec2(_GLF_IDENTITY(true, (true) && true), false)))))) && true))))))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(8.0)), bool(false))), 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec3(_GLF_FUZZED(-3264.6509), (vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))[1], (vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))[2]), vec3((vec3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))[0], _GLF_FUZZED(float(false)), _GLF_FUZZED(5.6)), bvec3(true, false, false))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY((dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) + 0.0, min(_GLF_IDENTITY((dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) + 0.0, clamp((dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) + 0.0, (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) + 0.0, _GLF_IDENTITY((dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) + 0.0, max((dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) + 0.0, (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) + 0.0)))), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) + 0.0)))), 0.0, 0.0))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))) + 0.0), 0.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED((5.8)), (vec2(1.0, 0.0))[1]), vec2((vec2(1.0, 0.0))[0], _GLF_FUZZED(41.53)), bvec2(true, false))), vec2(1.0, 0.0))), 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((5.8), float(_GLF_IDENTITY(vec4((5.8), sin(0.0), 1.0, 0.0), max(vec4((5.8), sin(0.0), 1.0, 0.0), vec4((5.8), sin(0.0), 1.0, 0.0)))))), (vec2(1.0, 0.0))[1]), vec2((vec2(1.0, 0.0))[0], _GLF_FUZZED(41.53)), bvec2(true, false))), vec2(1.0, 0.0))), 0.0, 0.0)))) * mat2(1.0)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), 0.0 + ((_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))) + 0.0), 0.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED((5.8)), (vec2(1.0, 0.0))[1]), vec2((vec2(1.0, 0.0))[0], _GLF_FUZZED(41.53)), bvec2(true, false))), vec2(1.0, 0.0))), 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((5.8), float(_GLF_IDENTITY(vec4((5.8), sin(0.0), 1.0, 0.0), max(vec4((5.8), sin(0.0), 1.0, 0.0), vec4((5.8), sin(0.0), 1.0, 0.0)))))), (vec2(1.0, 0.0))[1]), vec2((vec2(1.0, 0.0))[0], _GLF_FUZZED(41.53)), bvec2(true, false))), vec2(1.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((5.8), float(_GLF_IDENTITY(vec4((5.8), sin(0.0), 1.0, 0.0), max(vec4((5.8), sin(0.0), 1.0, 0.0), vec4((5.8), sin(0.0), 1.0, 0.0)))))), (vec2(1.0, 0.0))[1]), vec2((vec2(1.0, 0.0))[0], _GLF_FUZZED(41.53)), bvec2(true, false))), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((5.8), float(_GLF_IDENTITY(vec4((5.8), sin(0.0), 1.0, 0.0), max(vec4((5.8), sin(0.0), 1.0, 0.0), vec4((5.8), sin(0.0), 1.0, 0.0)))))), (vec2(1.0, 0.0))[1]), vec2((vec2(1.0, 0.0))[0], _GLF_FUZZED(41.53)), bvec2(true, false))), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((5.8), float(_GLF_IDENTITY(vec4((5.8), sin(0.0), 1.0, 0.0), max(vec4((5.8), sin(0.0), 1.0, 0.0), vec4((5.8), sin(0.0), 1.0, 0.0)))))), (vec2(1.0, 0.0))[1]), vec2((vec2(1.0, 0.0))[0], _GLF_FUZZED(41.53)), bvec2(true, false))), vec2(1.0, 0.0))))), 0.0, 0.0)))) * mat2(1.0)).x > injectionSwitch.y) || false))))))))
              return;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
      }
    }
   else
    {
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), false, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_LOOP(false), false, true), false))))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
}
