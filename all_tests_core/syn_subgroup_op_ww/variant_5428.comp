#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 bvec2 _f0;
 uvec3 _f1;
 bvec2 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_7 {
 vec4 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_9 {
 mat3 _f0;
 _GLF_struct_7 _f1;
 float _f2;
 _GLF_struct_8 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_5 {
 mat3x4 _f0;
 mat4x3 _f1;
 vec4 _f2;
 bvec3 _f3;
 uvec4 _f4;
 mat3x2 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_6 {
 uvec2 _f0;
 _GLF_struct_5 _f1;
} ;

struct _GLF_struct_3 {
 bool _f0;
 float _f1;
 uint _f2;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 mat3x2 _f1;
 mat2x4 _f2;
 ivec3 _f3;
 uvec4 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_4 {
 ivec4 _f0;
 _GLF_struct_2 _f1;
 mat4x2 _f2;
 _GLF_struct_3 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_0 {
 uint subgroup_size;
 bvec3 _f0;
 bvec4 _f1;
 int _f2;
 bool _f3;
 bvec2 _f4;
 uint _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_1 {
 vec3 _f0;
 bvec4 _f1;
 mat4 _f2;
 mat3x2 _f3;
 _GLF_struct_0 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_10 {
 mat2x3 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_9 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) >> 0)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        continue;
       continue;
      }
    }
  }
 else
  {
  }
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(mat2x3(1.0), _GLF_struct_1(vec3(1.0), bvec4(true), mat4(1.0), mat3x2(1.0), _GLF_struct_0(gl_SubgroupSize, bvec3(true), bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)), 1, true, bvec2(true), 1u, ivec3(1)), uvec2(1u)), _GLF_struct_4(ivec4(1), _GLF_struct_2(mat3x4(1.0), mat3x2(1.0), mat2x4(1.0), ivec3(1), uvec4(1u), vec3(1.0)), mat4x2(1.0), _GLF_struct_3(true, 1.0, 1u), mat4x3(1.0)), _GLF_struct_6(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), _GLF_IDENTITY(uvec2(1u), (true ? uvec2(1u) : _GLF_FUZZED(uvec2(67326u, 142569u)))))))), _GLF_struct_5(mat3x4(1.0), mat4x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), sqrt(vec4(1.0, 1.0, 1.0, 1.0)) * (vec4(1.0))), _GLF_IDENTITY(mat4(1.0) * (vec4(1.0)), vec4(0.0, 0.0, 0.0, 0.0) + (mat4(1.0) * (_GLF_IDENTITY(vec4(1.0), clamp(_GLF_IDENTITY(vec4(1.0), mat4(1.0) * _GLF_IDENTITY((vec4(1.0)), mix(vec4(_GLF_FUZZED(-7.0), ((vec4(1.0)))[1], ((vec4(1.0)))[2], _GLF_IDENTITY(((vec4(1.0)))[3], min(((vec4(1.0)))[3], ((vec4(1.0)))[3]))), vec4(((vec4(1.0)))[0], _GLF_FUZZED(-70.78), _GLF_FUZZED(-4.0), _GLF_FUZZED(7.0)), bvec4(true, false, false, false)))), _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) - vec4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(vec4(1.0), mat4(1.0) * (vec4(1.0))))))))), bvec3(true), uvec4(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 1u, 0u)))), mat3x2(1.0), vec3(1.0))), _GLF_struct_9(mat3(1.0), _GLF_struct_7(vec4(1.0), mat3x4(1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(1.0, 1.0, determinant(mat3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))) * 1.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))))), float(_GLF_FUZZED(46.81)), bool(false)))))))), abs(0.0), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(fract(-59.67)) : 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, exp(0.0)), (mat4x3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, exp(0.0))) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (float(_GLF_IDENTITY(mat4x3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, exp(0.0)), (mat4x3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, exp(0.0))) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - 0.0)))), 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), (true ? mat2x4(1.0, 1.0, determinant(mat3(0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, log(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), min(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), max(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(-9.7)), float(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), bool(true))), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), mix(float(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), float(_GLF_FUZZED(30.23)), bool(false))))))))) : _GLF_FUZZED(mat2x4(-9.3, 9.6, _GLF_IDENTITY(-58.84, (false ? _GLF_FUZZED(inversesqrt(log2(-2.6))) : -58.84)), -2768.7919, 2.0, 916.169, _GLF_IDENTITY(8.2, 1.0 * (8.2)), 5.9))))), _GLF_IDENTITY((_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, determinant(_GLF_IDENTITY(mat3(0.0, _GLF_IDENTITY(abs(0.0), _GLF_IDENTITY((abs(0.0)), ((abs(0.0))) / 1.0) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0), (mat3(0.0, _GLF_IDENTITY(abs(0.0), _GLF_IDENTITY((abs(0.0)), ((abs(0.0))) / 1.0) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, log(round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, (1.0) / exp(0.0))))), 1.0, 1.0)))))), (true ? mat2x4(1.0, 1.0, determinant(_GLF_IDENTITY(mat3(0.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3(_GLF_IDENTITY(-4952.8542, (true ? _GLF_IDENTITY(-4952.8542, (true ? -4952.8542 : _GLF_FUZZED(40.54))) : _GLF_FUZZED(-760.829))), -360.932, -2.9, 3.0, 84.43, 9.8, -5613.0047, 8062.2588, -8206.4166)) : mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.0))), abs(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0)))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(vec2(log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0), clamp(vec2(log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0), vec2(log(round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0))))), 0.0), vec2(_GLF_IDENTITY(log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), max(log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 0.0)))))) : _GLF_FUZZED(mat2x4(_GLF_IDENTITY(-9.3, max(-9.3, _GLF_IDENTITY(-9.3, float(vec3(-9.3, 1.0, 1.0))))), 9.6, -58.84, -2768.7919, 2.0, 916.169, 8.2, 5.9))))), float(mat3x2(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, determinant(mat3(0.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, log(round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, (1.0) / exp(0.0))))), 1.0, 1.0)))))), (true ? mat2x4(1.0, 1.0, determinant(_GLF_IDENTITY(mat3(0.0, abs(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3(-4952.8542, -360.932, -2.9, 3.0, 84.43, 9.8, -5613.0047, 8062.2588, -8206.4166)) : mat3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(5.0))), abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(vec2(log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0), clamp(vec2(log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0), vec2(_GLF_IDENTITY(log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), max(_GLF_IDENTITY(log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), (true ? log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) : _GLF_FUZZED(4.0))), log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), 0.0), vec2(log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0)))))) : _GLF_FUZZED(mat2x4(_GLF_IDENTITY(-9.3, max(-9.3, _GLF_IDENTITY(-9.3, float(vec3(-9.3, 1.0, 1.0))))), 9.6, -58.84, -2768.7919, 2.0, 916.169, 8.2, 5.9))))), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0)))) - abs(0.0), min((float(_GLF_IDENTITY(mat2x4(1.0, 1.0, determinant(mat3(0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), 1.0 * (float(float(0.0))))), 0.0)), 0.0, 1.0, 1.0, 1.0, log(round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))), (true ? mat2x4(1.0, 1.0, determinant(mat3(0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(675.007)), float(0.0), bool(_GLF_IDENTITY(true, (true) && true)))))), 0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-22.54) : 1.0)), 1.0, log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(mat2x4(-9.3, 9.6, -58.84, -2768.7919, 2.0, 916.169, 8.2, 5.9)))))) - _GLF_IDENTITY(abs(0.0), (abs(0.0)) - 0.0), (float(_GLF_IDENTITY(mat2x4(1.0, 1.0, determinant(mat3(0.0, abs(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(radians(-2434.2327)) : 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.6) : 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.6) : 0.0)), (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.6) : 0.0))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.6) : 0.0)), max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.6) : 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.6) : 0.0)))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.6) : 0.0)))), 0.0, 1.0, 0.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), (true ? mat2x4(1.0, 1.0, determinant(mat3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(mat2x4(-9.3, 9.6, -58.84, -2768.7919, 2.0, 916.169, 8.2, 5.9)))))) - abs(0.0))))), _GLF_struct_8(bvec2(true), uvec3(1u), bvec2(true), vec2(1.0)), bvec2(true)));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   switch(_GLF_SWITCH(0))
    {
     case 85:
     mat2x4(67.12, 77.75, _GLF_IDENTITY(727.667, (false ? _GLF_FUZZED(-289.765) : 727.667)), 7.5, -47.88, 6.2, 0.0, -8349.6550);
     case 73:
     for(uvec3 _GLF_SWITCH_1_0v; true; mat2x4(_GLF_IDENTITY(-38.45, clamp(_GLF_IDENTITY(-38.45, clamp(_GLF_IDENTITY(-38.45, _GLF_IDENTITY((-38.45), ((-38.45)) / determinant(mat2(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))) * 1.0), -38.45, -38.45)), _GLF_IDENTITY(-38.45, float(_GLF_IDENTITY(mat2(-38.45, 1.0, 0.0, 1.0), (mat2(-38.45, 1.0, 0.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))), -38.45)), 0.3, atan(155.406, -1340.6818), 16.04, _GLF_IDENTITY(6774.3059, clamp(_GLF_IDENTITY(6774.3059, (6774.3059) - 0.0), 6774.3059, 6774.3059)), -7.0, frexp(0.6, _injected_loop_counter), 710.724))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       mat4x3 _GLF_SWITCH_1_1v;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) - 0), 0)) | 0)); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(-15666))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)) && true); _injected_loop_counter --)
          {
           return;
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          continue;
         ;
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
            continue;
           clamp(injectionSwitch, 54.18, _GLF_IDENTITY(3.7, mix(float(_GLF_IDENTITY(3.7, _GLF_IDENTITY(mix(float(3.7), float(_GLF_FUZZED(9.5)), bool(false)), (mix(float(3.7), float(_GLF_FUZZED(9.5)), bool(false))) - 0.0))), float(_GLF_FUZZED((-7453.8760 + float(83370u)))), bool(false))));
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)))))
            break;
           continue;
          }
         if(_GLF_DEAD(false))
          return;
         mat3x4(_GLF_IDENTITY(-593.946, (_GLF_IDENTITY(-593.946, (-593.946) * 1.0)) / _GLF_ONE(1.0, injectionSwitch.y)), 3986.8991, -72.72, 3.4, -31.96, 4.6, -4.0, -911.408, -0.6, 6010.1550, _GLF_IDENTITY(-1249.7629, clamp(_GLF_IDENTITY(-1249.7629, (_GLF_IDENTITY(-1249.7629, float(vec2(-1249.7629, 1.0)))) + 0.0), _GLF_IDENTITY(-1249.7629, 1.0 * (_GLF_IDENTITY(-1249.7629, (_GLF_IDENTITY(-1249.7629, clamp(-1249.7629, -1249.7629, _GLF_IDENTITY(-1249.7629, (true ? _GLF_IDENTITY(-1249.7629, min(-1249.7629, -1249.7629)) : _GLF_FUZZED(2.6)))))) - 0.0))), -1249.7629)), 7.4);
         ;
         ivec4 _GLF_SWITCH_1_2v, _GLF_SWITCH_1_3v[44], _GLF_SWITCH_1_4v;
         vec4 _GLF_SWITCH_1_5v[62];
        }
       {
        if(_GLF_DEAD(false))
         break;
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
          if(_GLF_DEAD(false))
           continue;
          break;
         }
       }
       if(_GLF_DEAD(false))
        return;
       bvec3(true, false, false);
       if(_GLF_DEAD(false))
        break;
       108650u;
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
          continue;
         ((-7.7 + -47.22) - vec4(603.020, 7.6, -3.2, 0.8));
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          {
           if(_GLF_DEAD(false))
            continue;
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        continue;
       ;
       bvec2(true, true);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))) / 1.0)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_DEAD(false))
            continue;
          }
         continue;
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     case 0:
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false))))))))))))
      {
       if(_GLF_DEAD(false))
        continue;
       break;
      }
     if(_GLF_DEAD(false))
      return;
     case 99:
     switch(_GLF_SWITCH(0))
      {
       case 3:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
       vec3 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
       case 0:
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                continue;
               return;
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
              break;
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))))))
            break;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
       break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
       default:
       _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (~ (1)))))) - 0);
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
        break;
      }
     break;
     default:
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))
        continue;
       if(_GLF_DEAD(false))
        return;
       1;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
        }
      }
     else
      {
      }
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_10._f1._f4.subgroup_size, (0u | 0u) | (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_10._f1._f4.subgroup_size, min(subgroup_id * _GLF_struct_replacement_10._f1._f4.subgroup_size, subgroup_id * _GLF_struct_replacement_10._f1._f4.subgroup_size))));
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u)))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), workgroup_base + subgroup_base, workgroup_base + subgroup_base)), workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_id))))) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uint(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1))))))) % _GLF_IDENTITY(_GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_struct_replacement_10._f1._f4.subgroup_size) << 0u), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u))), ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1))) * 1)) << 0)) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_struct_replacement_10._f1._f4.subgroup_size) ^ 0u)))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, round(length(normalize(1.0))), exp(0.0), 0.0, sqrt(1.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 0.0))), injectionSwitch.y)))))) / 1u) * 1u)))) | (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), subgroup_local_id)) + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_struct_replacement_10._f1._f4.subgroup_size) | 0u)))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u | (1u)))), _GLF_IDENTITY(1u, uint(uvec4(1u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, 0u))))), _GLF_IDENTITY(uint(uvec4(1u, 1u, 0u, 0u)), 0u + (uint(uvec4(1u, 1u, 0u, 0u))))), ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), (subgroup_local_id + 1))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) / 1u))) + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))))))) / 1u), 0u ^ (((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))))))) / 1u))) * 1u))), ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) / 1u))) + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))))))) / 1u), 0u ^ (((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))))))) / 1u))) * 1u)))) - 0u), 1u * ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u))))) >> 0u)) / 1u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) / 1u))) + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))))))) / 1u), 0u ^ (((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))))))) / 1u))) * 1u))), ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) / 1u))) + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))))))) / 1u), 0u ^ (((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))))))) / 1u))) * 1u)))) - 0u), 1u * ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u))))) >> 0u)) / 1u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) / 1u))) + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))))))) / 1u), 0u ^ (((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))))))) / 1u))) * 1u))), ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) / 1u))) + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))))))) / 1u), 0u ^ (((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))))))) / 1u))) * 1u)))) - 0u), 1u * ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u))))) >> 0u)) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) / 1u))) + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))))))) / 1u), 0u ^ (((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))))))) / 1u))) * 1u))), ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) / 1u))) + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))))))) / 1u), 0u ^ (((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))))))) / 1u))) * 1u)))) - 0u), 1u * ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u))))) >> 0u)) / 1u))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) / 1u))) + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))))))) / 1u), 0u ^ (((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))))))) / 1u))) * 1u))), ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) / 1u))) + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))))))) / 1u), 0u ^ (((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))))))) / 1u))) * 1u)))) - 0u), 1u * ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u))))) >> 0u)) / 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) / 1u))) + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))))))) / 1u), 0u ^ (((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))))))) / 1u))) * 1u))), ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) / 1u))) + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))))))) / 1u), 0u ^ (((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))))))) / 1u))) * 1u)))) - 0u), 1u * ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u))))) >> 0u)) / 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) / 1u))) + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))))))) / 1u), 0u ^ (((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))))))) / 1u))) * 1u))), ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) / 1u))) + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))))))) / 1u), 0u ^ (((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), 0u + (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), max(((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size), ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))))))) / 1u))) * 1u)))) - 0u), 1u * ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))))) % _GLF_struct_replacement_10._f1._f4.subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, 0u ^ ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u, ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size, ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size) | ((subgroup_local_id + 1) % _GLF_struct_replacement_10._f1._f4.subgroup_size))) / 1u) * 1u))))) >> 0u)) / 1u))))))))))));
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 1u)))], uint(1), 4, 64, 4);
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec2(true, true))))), true)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec2(true, true))))), true)), (bool(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec2(true, true))))), true))) || false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) & (_GLF_IDENTITY(1 & 1, (1 & 1) | int(_GLF_ZERO(0.0, injectionSwitch.x))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
         if((subgroup_local_id % _GLF_IDENTITY(2, 0 | (2))) == 0)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))) + vec2(0.0, 0.0)).y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), false || (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), clamp(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(3234.4102)), float(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), bool(true))), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, 1.0))) > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), false))) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), clamp(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(3234.4102)), float(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), bool(true))), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, 1.0))) > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), false))) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            break;
           for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(0, (0) / int(_GLF_ONE(1.0, injectionSwitch.y)))) + 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = ((0 ^ (0 << _GLF_IDENTITY(int(5), int(5)))) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(false))
              barrier();
            }
           subgroupAll(true);
           atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))], uint(2), 4, 64, 4);
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))));
                }
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                break;
               do
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))));
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
                break;
               switch(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_SWITCH(0), min(_GLF_SWITCH(0), _GLF_SWITCH(0))), (_GLF_SWITCH(0)) / 1))
                {
                 case 0:
                 for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), (_GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1)))) | ((1) | (1)))) ^ 0)); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, _GLF_IDENTITY(((_GLF_DEAD(false)) || false) || false, ! (! (((_GLF_DEAD(false)) || false) || false))))))
                    barrier();
                  }
                 break;
                 case 68:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   break;
                  }
                 ivec2 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v[71], _GLF_SWITCH_0_2v[21];
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-106.336)), float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0)))), bool(true)))))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0)))))))
                    return;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_DEAD(false))
                    break;
                   continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 6:
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))) || false))
                    continue;
                  }
                 else
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      return;
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))))
                    {
                     if(_GLF_DEAD(false))
                      return;
                    }
                   else
                    {
                     (- mat3(-14.74, _GLF_IDENTITY(-1.3, max(-1.3, _GLF_IDENTITY(-1.3, (-1.3) - 0.0))), 7044.3384, -880.782, 2.8, 6948.2825, -0.8, 1.6, 4990.2282));
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 default:
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  break;
                 1;
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  continue;
                }
              }
            }
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               barrier();
               if(_GLF_DEAD(false))
                break;
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), (((injectionSwitch.x < injectionSwitch.y))) || false)))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              {
               if(_GLF_DEAD(false))
                break;
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false))))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   return;
                  }
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                  }
                 else
                  {
                   return;
                  }
                }
              }
            }
           else
            {
            }
           subgroupAll(false);
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, exp(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0), (false ? _GLF_FUZZED(mat4x2(851.370, 7580.7081, 871.445, 5.3, -31.22, -3223.2835, 52.91, 357.002)) : mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, exp(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0))))) > injectionSwitch.y))))
              return;
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))
                return;
              }
             if(_GLF_DEAD(false))
              continue;
             switch(_GLF_SWITCH(0))
              {
               case 59:
               do
                {
                 bvec4(true, true, false, true);
                }
               while(_GLF_WRAPPED_LOOP(false));
               case 19:
               uint _GLF_SWITCH_0_0v[97];
               case 0:
               case 60:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 break;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               case 98:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               break;
               default:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 1;
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    continue;
                  }
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           if(_GLF_DEAD(false))
            return;
           do
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) && (false)))) && true))
              {
               do
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  continue;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            break;
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), float(vec4(float(mat2x3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0))))) / abs(1.0)), injectionSwitch.x)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))))) || false)); _injected_loop_counter --)
            {
             atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uint(next_virtual_gid)), (uint(uint(next_virtual_gid))) - 0u)), max(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uint(next_virtual_gid)), (uint(uint(next_virtual_gid))) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uint(next_virtual_gid)), (uint(uint(next_virtual_gid))) - 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uint(next_virtual_gid)), (uint(uint(next_virtual_gid))) - 0u)), ~ (~ (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uint(next_virtual_gid)), (uint(uint(next_virtual_gid))) - 0u)))))) - 0u)))], uint(2), 4, 64, 4);
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            {
             do
              {
               if(_GLF_DEAD(false))
                continue;
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = (0 & -57223); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++)))
        {
         return;
        }
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 << _GLF_IDENTITY(int(0), int(0))), false || (_injected_loop_counter != (0 << _GLF_IDENTITY(int(0), int(0)))))); _injected_loop_counter --)
          {
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && (false))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(-4.2)), bool(false)))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(-4.2)), bool(false)))), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, 1.0)))), float(_GLF_FUZZED(-4.2)), bool(false)))), false))), true))))))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.9)), bool(false)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.9)), bool(false)))))))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec2(int(3), 1)))))); _injected_loop_counter --)
    {
     return;
    }
  }
}
