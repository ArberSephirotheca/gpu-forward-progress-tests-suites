#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), false, true, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5614.8648)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))), ! (! (! (bool(false))))))), ! (! (_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))), ! (! (! (bool(false))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, 1.0, 0.0)), mix(float(float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 1.0, 1.0, 0.0))), float(_GLF_FUZZED(1322.9204)), bool(false)))), injectionSwitch.y)))) || (true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((true)), bool(bvec4(! ((true)), true, true, true))), (_GLF_IDENTITY(! ((true)), bool(bvec4(! ((true)), true, true, true)))) && true))), ! (! _GLF_IDENTITY((! (true)), ! (! ((! _GLF_IDENTITY((true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || ((true))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, sin(abs(0.0)), 1.0)), max(float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, sin(abs(0.0)), 1.0)), float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, sin(abs(0.0)), 1.0)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((+ _GLF_IDENTITY(44.99, (_GLF_IDENTITY(44.99, (44.99) + 0.0)) - 0.0)))), vec2(_GLF_FUZZED(-1739.5049), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) / cos(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), max(float(vec2(injectionSwitch.y, 0.0)), _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), min(float(vec2(injectionSwitch.y, 0.0)), float(vec2(injectionSwitch.y, 0.0)))))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), clamp(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), max(float(vec2(injectionSwitch.y, 0.0)), _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), min(float(vec2(injectionSwitch.y, 0.0)), float(vec2(injectionSwitch.y, 0.0)))))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), max(float(vec2(injectionSwitch.y, 0.0)), _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), min(float(vec2(injectionSwitch.y, 0.0)), float(vec2(injectionSwitch.y, 0.0)))))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), max(float(vec2(injectionSwitch.y, 0.0)), _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), min(float(vec2(injectionSwitch.y, 0.0)), float(vec2(injectionSwitch.y, 0.0)))))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), max(float(vec2(injectionSwitch.y, 0.0)), _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), min(float(vec2(injectionSwitch.y, 0.0)), float(vec2(injectionSwitch.y, 0.0)))))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), clamp(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), max(float(vec2(injectionSwitch.y, 0.0)), _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), min(float(vec2(injectionSwitch.y, 0.0)), float(vec2(injectionSwitch.y, 0.0)))))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), max(float(vec2(injectionSwitch.y, 0.0)), _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), min(float(vec2(injectionSwitch.y, 0.0)), float(vec2(injectionSwitch.y, 0.0)))))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), max(float(vec2(injectionSwitch.y, 0.0)), _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), min(float(vec2(injectionSwitch.y, 0.0)), float(vec2(injectionSwitch.y, 0.0)))))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))))), (float(_GLF_IDENTITY(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), max(float(vec2(injectionSwitch.y, 0.0)), _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), min(float(vec2(injectionSwitch.y, 0.0)), float(vec2(injectionSwitch.y, 0.0)))))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), clamp(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), max(float(vec2(injectionSwitch.y, 0.0)), _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), min(float(vec2(injectionSwitch.y, 0.0)), float(vec2(injectionSwitch.y, 0.0)))))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), max(float(vec2(injectionSwitch.y, 0.0)), _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), min(float(vec2(injectionSwitch.y, 0.0)), float(vec2(injectionSwitch.y, 0.0)))))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), max(float(vec2(injectionSwitch.y, 0.0)), _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), min(float(vec2(injectionSwitch.y, 0.0)), float(vec2(injectionSwitch.y, 0.0)))))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))))))) - 0.0)), float(_GLF_FUZZED(-6.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), float(_GLF_FUZZED(141.683)), bool(false)))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), mix(float(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0)))), min(_GLF_IDENTITY(min(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0)))), (min(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0))))) * 1.0), min(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 0.0))))))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(526.026)), float(0.0), bool(true))))), 1.0, 1.0), min(vec3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(526.026)), float(0.0), bool(true))))), 1.0, 1.0), vec3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(526.026)), float(0.0), bool(true))))), 1.0, 1.0)))), clamp(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(526.026)), float(0.0), bool(true))))), 1.0, 1.0), min(vec3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(526.026)), float(0.0), bool(true))))), 1.0, 1.0), vec3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(526.026)), float(0.0), bool(true))))), 1.0, 1.0)))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(526.026)), float(0.0), bool(true))))), 1.0, 1.0), min(vec3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(526.026)), float(0.0), bool(true))))), 1.0, 1.0), vec3(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(vec2(0.0, log(1.0)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(526.026)), float(0.0), bool(true))))), 1.0, 1.0)))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(526.026)), float(0.0), bool(true))))), 1.0, 1.0), min(vec3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(526.026)), float(0.0), bool(true))))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0), vec3(0.0, 0.0, abs(0.0))), dot(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0), vec3(0.0, 0.0, abs(0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), (mat4x3(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0), vec3(0.0, 0.0, abs(0.0))), dot(vec3(1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0), vec3(0.0, 0.0, abs(0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)) * mat4(1.0)))), 1.0), vec3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(526.026)), float(0.0), bool(true))))), 1.0, 1.0))))))), 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))), float(_GLF_FUZZED(141.683)), bool(false)))))))), false || (bool(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)))), max(vec2(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)))), vec2(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))))), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-810.935)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0, 0.0, 1.0, 1.0)), mix(float(_GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (true ? min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))).y, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(8866.1804), _GLF_FUZZED(95.97)), bvec2(false, false)))) + vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)), injectionSwitch)).y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), max(float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))), float(_GLF_FUZZED(141.683)), bool(false))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)), bvec2(bvec3(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true))))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec2(bool(bool((injectionSwitch.x > injectionSwitch.y))), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / (((_GLF_IDENTITY(1u, (1u) | (1u)) ^ 0u) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (gl_WorkGroupSize.x) >> _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-3.5, -85.61)) : injectionSwitch)).x : _GLF_IDENTITY(_GLF_FUZZED(-69.08), (_GLF_IDENTITY(_GLF_FUZZED(-69.08), mix(float(_GLF_FUZZED(-974.584)), float(_GLF_FUZZED(-69.08)), bool(true)))) / exp(0.0)))) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-69.08), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(-69.08), mix(float(_GLF_FUZZED(-974.584)), float(_GLF_FUZZED(-69.08)), bool(true)))) / exp(0.0), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(-69.08), mix(float(_GLF_FUZZED(-974.584)), float(_GLF_FUZZED(-69.08)), bool(true)))) / exp(0.0), ((_GLF_IDENTITY(_GLF_FUZZED(-69.08), mix(float(_GLF_FUZZED(-974.584)), float(_GLF_FUZZED(-69.08)), bool(true)))) / exp(0.0)) / 1.0)) - tan(0.0))), float(mat4x3(true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-69.08), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(-69.08), mix(float(_GLF_FUZZED(-974.584)), float(_GLF_FUZZED(-69.08)), bool(true)))) / exp(0.0), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(-69.08), mix(float(_GLF_FUZZED(-974.584)), float(_GLF_FUZZED(-69.08)), bool(true)))) / exp(0.0), ((_GLF_IDENTITY(_GLF_FUZZED(-69.08), mix(float(_GLF_FUZZED(-974.584)), float(_GLF_FUZZED(-69.08)), bool(true)))) / exp(0.0)) / 1.0)), float(mat3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(-69.08), mix(float(_GLF_FUZZED(-974.584)), float(_GLF_FUZZED(-69.08)), bool(true)))) / exp(0.0), ((_GLF_IDENTITY(_GLF_FUZZED(-69.08), mix(float(_GLF_FUZZED(-974.584)), float(_GLF_FUZZED(-69.08)), bool(true)))) / exp(0.0)) / 1.0)), 0.0, sqrt(_GLF_ONE(1.0, injectionSwitch.y)), exp(0.0), 1.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0))) - tan(0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(271.172), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.2)), bvec2(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (injectionSwitch.x < injectionSwitch.y)), false))).y), true, _GLF_IDENTITY(true, ! (! (true))), true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_id)), (_GLF_IDENTITY((~ (workgroup_id)), 1u * ((~ (workgroup_id))))) / 1u), (_GLF_IDENTITY(~ (~ (workgroup_id)), uint(uint(~ (~ (workgroup_id)))))) ^ 0u)), (workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_id)), (_GLF_IDENTITY((~ (workgroup_id)), 1u * ((_GLF_IDENTITY(~ (workgroup_id), (_GLF_IDENTITY(~ (workgroup_id), max(~ (workgroup_id), _GLF_IDENTITY(~ (workgroup_id), (false ? _GLF_FUZZED(num_workgroup) : ~ (workgroup_id)))))) | (~ (workgroup_id))))))) / 1u), (_GLF_IDENTITY(~ (~ (workgroup_id)), uint(uint(~ (~ (workgroup_id)))))) ^ 0u))) - 0u);
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) && true)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (! (false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), true, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), _GLF_IDENTITY(true, (true) && true), true, false))) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id * subgroup_size), 0u | ((subgroup_id * subgroup_size))), min(~ _GLF_IDENTITY((subgroup_id * subgroup_size), 0u | ((subgroup_id * subgroup_size))), _GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_id * subgroup_size), 0u | ((subgroup_id * subgroup_size))), (~ _GLF_IDENTITY((subgroup_id * subgroup_size), 0u | ((subgroup_id * subgroup_size)))) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(~ (subgroup_id * subgroup_size), 1u, 0u)), max(uint(uvec3(~ (subgroup_id * subgroup_size), 1u, 0u)), uint(uvec3(~ (subgroup_id * subgroup_size), 1u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, min((0u) | 0u, (0u) | 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(0u, (0u) | 0u)) | (_GLF_IDENTITY(0u, (0u) | 0u))) : _GLF_FUZZED(workgroup_base))), 0u)))))), (uint(uvec3(~ (subgroup_id * subgroup_size), 1u, 0u))) << 0u), 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(~ (subgroup_id * subgroup_size), _GLF_IDENTITY(1u, min(1u, 1u)), 0u)), (uint(uvec3(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u))), uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u))), 0u, (0u ^ 1u))))), 1u, 0u))) << 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(uvec3(~ (subgroup_id * subgroup_size), 1u, 0u)), (uint(uvec3(~ (subgroup_id * subgroup_size), 1u, 0u))) << 0u), _GLF_IDENTITY(uint(uvec3(~ (subgroup_id * subgroup_size), 1u, 0u)), _GLF_IDENTITY((uint(uvec3(~ _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u), 1u, 0u))), (true ? (uint(uvec3(~ _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u), 1u, 0u))) : _GLF_FUZZED(workgroup_base))) << 0u), _GLF_IDENTITY(uint(uvec3(~ (subgroup_id * subgroup_size), 1u, 0u)), (uint(uvec3(~ (subgroup_id * subgroup_size), 1u, 0u))) << 0u)), (clamp(_GLF_IDENTITY(uint(uvec3(~ (subgroup_id * subgroup_size), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) | (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) + 0u))), 1u, _GLF_IDENTITY(0u, (0u) / 1u)))) << 0u), _GLF_IDENTITY(uint(uvec3(~ (subgroup_id * subgroup_size), 1u, 0u)), (uint(uvec3(~ _GLF_IDENTITY((subgroup_id * subgroup_size), max((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), max((subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))), 1u, 0u))) << 0u), _GLF_IDENTITY(uint(uvec3(~ (subgroup_id * subgroup_size), 1u, 0u)), _GLF_IDENTITY((uint(uvec3(~ (subgroup_id * subgroup_size), 1u, 0u))), uint(uvec4((uint(uvec3(~ (subgroup_id * subgroup_size), 1u, 0u))), 0u, 1u, 1u))) << 0u))) ^ 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(~ _GLF_IDENTITY((subgroup_id * subgroup_size), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | 0u))), _GLF_IDENTITY(1u, min(1u, 1u)), 0u)), (uint(uvec3(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u))), uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u))), 0u, (0u ^ 1u))))), 1u, 0u))) << 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(uvec3(~ (subgroup_id * subgroup_size), 1u, 0u)), (uint(uvec3(~ (subgroup_id * subgroup_size), 1u, 0u))) << 0u), _GLF_IDENTITY(uint(uvec3(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size), 1u, 0u)), _GLF_IDENTITY((uint(uvec3(~ _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u), 1u, 0u))), (true ? (uint(uvec3(~ _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) ^ 0u), 1u, 0u))) : _GLF_FUZZED(workgroup_base))) << 0u), _GLF_IDENTITY(uint(uvec3(~ (subgroup_id * subgroup_size), 1u, 0u)), (uint(uvec3(~ (subgroup_id * subgroup_size), 1u, 0u))) << 0u)), (clamp(_GLF_IDENTITY(uint(uvec3(~ (subgroup_id * subgroup_size), 1u, 0u)), _GLF_IDENTITY((uint(uvec3(~ (subgroup_id * subgroup_size), 1u, 0u))) << 0u, ((uint(uvec3(~ (subgroup_id * subgroup_size), 1u, 0u))) << 0u) / 1u)), _GLF_IDENTITY(uint(uvec3(~ (subgroup_id * subgroup_size), 1u, 0u)), (uint(uvec3(~ _GLF_IDENTITY((subgroup_id * subgroup_size), max((subgroup_id * subgroup_size), _GLF_IDENTITY((subgroup_id * subgroup_size), max((subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))), 1u, 0u))) << 0u), _GLF_IDENTITY(uint(uvec3(~ (subgroup_id * subgroup_size), 1u, 0u)), _GLF_IDENTITY((uint(uvec3(~ (subgroup_id * subgroup_size), 1u, 0u))), uint(uvec4((uint(uvec3(~ (subgroup_id * subgroup_size), 1u, 0u))), 0u, 1u, 1u))) << 0u))) ^ 0u)))) << 0u))))) + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, (1) | (1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))))), true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false || (bool(bool(false))), (false || (bool(bool(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))), false || ((_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (subgroup_size)), ! (! _GLF_IDENTITY((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), true && ((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (0 | 0) | (_GLF_IDENTITY(2, ~ (~ _GLF_IDENTITY((2), min((2), (2))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(44167) : _GLF_IDENTITY(_GLF_IDENTITY(2, (0 | 0) | (_GLF_IDENTITY(2, ~ (~ (2))))), (_GLF_IDENTITY(2, (0 | 0) | (_GLF_IDENTITY(2, ~ (~ (2)))))) | (_GLF_IDENTITY(2, (0 | 0) | (_GLF_IDENTITY(2, ~ (~ (2)))))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(44167) : _GLF_IDENTITY(_GLF_IDENTITY(2, (0 | 0) | (_GLF_IDENTITY(2, ~ (~ (2))))), (_GLF_IDENTITY(2, (0 | 0) | (_GLF_IDENTITY(2, ~ (~ (2)))))) | (_GLF_IDENTITY(2, (0 | 0) | (_GLF_IDENTITY(2, ~ (~ (2)))))))), ((false ? _GLF_FUZZED(44167) : _GLF_IDENTITY(_GLF_IDENTITY(2, (0 | 0) | (_GLF_IDENTITY(2, ~ (~ (2))))), (_GLF_IDENTITY(2, (0 | 0) | (_GLF_IDENTITY(2, ~ (~ (2)))))) | (_GLF_IDENTITY(2, (0 | 0) | (_GLF_IDENTITY(2, ~ (~ (2))))))))) - 0)) ^ 0)), (false ? _GLF_FUZZED(-46859) : _GLF_IDENTITY(_GLF_IDENTITY(2, (0 | 0) | (_GLF_IDENTITY(2, ~ (~ _GLF_IDENTITY((2), min((2), (2))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(44167) : _GLF_IDENTITY(_GLF_IDENTITY(2, (0 | 0) | (_GLF_IDENTITY(2, ~ (~ (2))))), (_GLF_IDENTITY(2, (0 | 0) | (_GLF_IDENTITY(2, ~ (~ (2)))))) | (_GLF_IDENTITY(2, (0 | 0) | (_GLF_IDENTITY(2, ~ (~ (2)))))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(44167) : _GLF_IDENTITY(_GLF_IDENTITY(2, (0 | 0) | (_GLF_IDENTITY(2, ~ (~ (2))))), (_GLF_IDENTITY(2, _GLF_IDENTITY((0 | 0) | (_GLF_IDENTITY(2, ~ (~ (2)))), ~ (~ (_GLF_IDENTITY((0 | 0) | (_GLF_IDENTITY(2, ~ (~ (2)))), ((0 | 0) | (_GLF_IDENTITY(2, ~ (~ (2))))) - 0)))))) | (_GLF_IDENTITY(2, (0 | 0) | (_GLF_IDENTITY(2, ~ (~ (2)))))))), ((false ? _GLF_FUZZED(44167) : _GLF_IDENTITY(_GLF_IDENTITY(2, (0 | 0) | (_GLF_IDENTITY(2, ~ (~ (2))))), (_GLF_IDENTITY(2, (0 | 0) | (_GLF_IDENTITY(2, ~ (~ (2)))))) | (_GLF_IDENTITY(2, (0 | 0) | (_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), (_GLF_IDENTITY(2, ~ (~ (2)))) / 1))))))) - 0)) ^ 0))))), (false ? _GLF_FUZZED((subgroup_local_id + subgroup_id)) : _GLF_IDENTITY(uint(2), (uint(_GLF_IDENTITY(2, 0 | (2)))) - (28329u & 0u)))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true)) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
    }
   subgroupAll(true);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.8, -830.454)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.8, -830.454)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(false, true, true, true))), ! (! (! (bool(bvec4(false, true, true, true)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
