#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), false || (false || (_GLF_IDENTITY(false, false || (false))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), false || ((! (false)))), ! (! (_GLF_IDENTITY((! (false)), false || ((! _GLF_IDENTITY((false), ! (! ((false)))))))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(tan(0.0)))))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
          return;
         return;
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, _GLF_IDENTITY(false, true && (false))))))).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, _GLF_IDENTITY(false, true && (false))))))).y) * exp(0.0))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_IDENTITY(_GLF_FUZZED(-12.01), 1.0 * (_GLF_FUZZED(-12.01)))), bvec2(false, false))))).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))))))).y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))))).y))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], float(_GLF_IDENTITY(mat3x4((injectionSwitch)[0], 1.0, 0.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 0.0, 1.0, 0.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0), (true ? _GLF_IDENTITY(mat3x4((injectionSwitch)[0], 1.0, 0.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 0.0, 1.0, 0.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0), (mat3x4((injectionSwitch)[0], 1.0, 0.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 0.0, 1.0, 0.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3x4(-4767.5304, 3.9, 35.99, -4.8, -7.2, -13.66, 7936.7394, -681.640, -7.5, _GLF_IDENTITY(-5.6, (-5.6) + 0.0), _GLF_IDENTITY(-87.27, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(-87.27, (_GLF_IDENTITY(-87.27, min(-87.27, -87.27))) - 0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4x3(_GLF_IDENTITY(-87.27, (_GLF_IDENTITY(-87.27, min(-87.27, -87.27))) - 0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))), -1815.9292)))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))))).y), ! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false)))) * mat2(1.0)))).y))), false || ((! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))))).y)))))))), false, true, true))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, 0 ^ (1))]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(_GLF_IDENTITY(-12.01, clamp(_GLF_IDENTITY(-12.01, (-12.01) * 1.0), _GLF_IDENTITY(-12.01, mix(float(_GLF_FUZZED(-46.97)), float(-12.01), bool(true))), _GLF_IDENTITY(-12.01, 1.0 * (-12.01)))))), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))))))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, 1, 1))]), vec2(_GLF_FUZZED(-4.0), _GLF_IDENTITY(_GLF_FUZZED(-12.01), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-12.01), clamp(_GLF_FUZZED(-12.01), _GLF_FUZZED(-12.01), _GLF_FUZZED(-12.01)))))), bvec2(false, false))))))).y)))) || false)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, _GLF_IDENTITY(false, true && (false))))))).y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(24651) : 1)), 1))]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))))).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))))).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-4.0), (_GLF_FUZZED(-4.0)) * 1.0), _GLF_FUZZED(-12.01)), bvec2(false, false))))).y))), true && _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(mat3x4((injectionSwitch)[0], 1.0, 0.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 0.0, 1.0, 0.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0), (true ? _GLF_IDENTITY(mat3x4((injectionSwitch)[0], 1.0, 0.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 0.0, 1.0, 0.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0), (mat3x4((injectionSwitch)[0], 1.0, 0.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 0.0, 1.0, 0.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3x4(-4767.5304, 3.9, 35.99, -4.8, -7.2, -13.66, 7936.7394, -681.640, -7.5, -5.6, -87.27, -1815.9292)))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))))), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(mat3x4((injectionSwitch)[0], 1.0, 0.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 0.0, 1.0, 0.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0), (true ? _GLF_IDENTITY(mat3x4((injectionSwitch)[0], 1.0, 0.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 0.0, 1.0, 0.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0), (mat3x4((injectionSwitch)[0], 1.0, 0.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 0.0, 1.0, 0.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3x4(-4767.5304, 3.9, 35.99, -4.8, -7.2, -13.66, 7936.7394, -681.640, -7.5, -5.6, -87.27, -1815.9292)))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(mat3x4((injectionSwitch)[0], 1.0, 0.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 0.0, 1.0, 0.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0), (true ? _GLF_IDENTITY(mat3x4((injectionSwitch)[0], 1.0, 0.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 0.0, 1.0, 0.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0), (mat3x4((injectionSwitch)[0], 1.0, 0.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 0.0, 1.0, 0.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3x4(-4767.5304, 3.9, 35.99, -4.8, -7.2, -13.66, 7936.7394, -681.640, -7.5, -5.6, -87.27, -1815.9292)))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))))))).y), ! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false)))), vec2(mat4x2(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false)))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))).y))), false || ((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-4.0, min(-4.0, _GLF_IDENTITY(-4.0, (-4.0) - 0.0)))), _GLF_FUZZED(-12.01)), bvec2(false, false))))).y))))))), false || ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(mat3x4((injectionSwitch)[0], 1.0, 0.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 0.0, 1.0, 0.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0), (true ? _GLF_IDENTITY(mat3x4((injectionSwitch)[0], 1.0, 0.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 0.0, 1.0, 0.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0), (mat3x4((injectionSwitch)[0], 1.0, 0.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 0.0, 1.0, 0.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3x4(-4767.5304, 3.9, 35.99, -4.8, -7.2, -13.66, 7936.7394, -681.640, -7.5, -5.6, -87.27, -1815.9292)))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))))), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(mat3x4((injectionSwitch)[0], 1.0, 0.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 0.0, 1.0, 0.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0), (true ? _GLF_IDENTITY(mat3x4((injectionSwitch)[0], 1.0, 0.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 0.0, 1.0, 0.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0), (mat3x4((injectionSwitch)[0], 1.0, 0.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 0.0, 1.0, 0.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3x4(-4767.5304, 3.9, 35.99, -4.8, -7.2, -13.66, 7936.7394, -681.640, -7.5, -5.6, -87.27, -1815.9292)))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(mat3x4((injectionSwitch)[0], 1.0, 0.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 0.0, 1.0, 0.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0), (true ? _GLF_IDENTITY(mat3x4((injectionSwitch)[0], 1.0, 0.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 0.0, 1.0, 0.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0), (mat3x4((injectionSwitch)[0], 1.0, 0.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 0.0, 1.0, 0.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3x4(-4767.5304, 3.9, 35.99, -4.8, -7.2, -13.66, 7936.7394, -681.640, -7.5, -5.6, -87.27, -1815.9292)))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))))))).y), ! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false)))), vec2(mat4x2(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false)))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))).y))), false || ((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-4.0, min(-4.0, _GLF_IDENTITY(-4.0, (-4.0) - 0.0)))), _GLF_FUZZED(-12.01)), bvec2(false, false))))).y)))))))))), false, true, true))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))))))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, 1, 1))]), vec2(_GLF_FUZZED(-4.0), _GLF_IDENTITY(_GLF_FUZZED(-12.01), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-12.01), clamp(_GLF_FUZZED(-12.01), _GLF_FUZZED(-12.01), _GLF_FUZZED(-12.01)))))), bvec2(false, false))))))).y)), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))))))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, 1, 1))]), vec2(_GLF_FUZZED(-4.0), _GLF_IDENTITY(_GLF_FUZZED(-12.01), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-12.01), clamp(_GLF_FUZZED(-12.01), _GLF_FUZZED(-12.01), _GLF_FUZZED(-12.01)))))), bvec2(false, false))))))).y)), true, false))))) || false)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, _GLF_IDENTITY(false, true && (false))))))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, _GLF_IDENTITY(false, true && (false))))))).y))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(vec4(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(920.150)), bool(false))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (0.0)), 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 0.0 + (1.0))))))))), dot(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-54.06)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))), min(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(920.150)), bool(false))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0)), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))), float(vec4(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(920.150)), bool(false))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))))))), (injectionSwitch)[1]), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(vec4(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(920.150)), bool(false))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (0.0)), 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 0.0 + (1.0))))))))), dot(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-54.06)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))), min(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(920.150)), bool(false))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0)), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))), float(vec4(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(920.150)), bool(false))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))))))), (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(vec2(-9.9, 78.09).x), _GLF_FUZZED(8.7)), vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(vec4(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(920.150)), bool(false))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (0.0)), 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 0.0 + (1.0))))))))), dot(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-54.06)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))), min(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(920.150)), bool(false))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0)), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))), float(vec4(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(920.150)), bool(false))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))))))), (injectionSwitch)[1]))[0], 1.0 * ((vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(vec4(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(920.150)), bool(false))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (0.0)), 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 0.0 + (1.0))))))))), dot(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-54.06)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))), min(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(920.150)), bool(false))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0)), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))), float(vec4(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(920.150)), bool(false))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))))))), (injectionSwitch)[1]))[0])), (vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(vec4(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(920.150)), bool(false))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (0.0)), 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, 0.0 + (1.0))))))))), dot(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-54.06)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))), min(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(920.150)), bool(false))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0)), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))), float(vec4(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(920.150)), bool(false))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))))))), (injectionSwitch)[1]))[1]), bvec2(true, true))))), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))))).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-76.93)), vec2(_GLF_FUZZED(float(true)), ((injectionSwitch))[1]), bvec2(false, true)))[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))))).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-4.0, clamp(_GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(953.940)), float(-4.0), bool(true))), -4.0, -4.0))), _GLF_IDENTITY(_GLF_FUZZED(-12.01), (_GLF_IDENTITY(_GLF_FUZZED(-12.01), (_GLF_FUZZED(-12.01)) * _GLF_ONE(1.0, injectionSwitch.y))) / 1.0)), bvec2(false, false))))).y))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, _GLF_IDENTITY((0), 0 | (_GLF_IDENTITY((0), (false ? _GLF_FUZZED((95998 & 86879)) : (0))))) - 0)], float(_GLF_IDENTITY(mat3x4((injectionSwitch)[0], 1.0, 0.0, exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 0.0, 1.0, 0.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0), (true ? _GLF_IDENTITY(mat3x4((injectionSwitch)[0], 1.0, 0.0, exp(_GLF_IDENTITY(0.0, float(float(0.0)))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, (1.0) - tan(0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(52.00)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), sqrt(1.0)))), log(1.0), 1.0, 0.0, 1.0, 0.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), 1.0), (mat3x4((injectionSwitch)[0], 1.0, 0.0, exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0, 0.0, 1.0, 0.0, length(sqrt(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0), (true ? vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0) : _GLF_FUZZED(vec4(8030.0099, -37.27, 0.2, 1.0)))))), 1.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3x4(-4767.5304, 3.9, 35.99, -4.8, -7.2, -13.66, 7936.7394, -681.640, _GLF_IDENTITY(-7.5, (_GLF_IDENTITY(-7.5, mix(float(-7.5), float(_GLF_FUZZED(-5.3)), _GLF_IDENTITY(bool(false), false || (bool(false)))))) + 0.0), -5.6, -87.27, -1815.9292)))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))))).y), ! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))))).y))), false || ((! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) + sin(vec2(0.0, 0.0)))), min(vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) + sin(vec2(0.0, 0.0)))), vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) + sin(vec2(0.0, 0.0)))))))), _GLF_IDENTITY(mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED((+ 7.3)), _GLF_FUZZED(101.001)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(vec2(((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))), injectionSwitch))))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED((+ 7.3)), _GLF_FUZZED(101.001)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)) : _GLF_FUZZED(injectionSwitch))))[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(_GLF_IDENTITY(-12.01, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(-12.01, 1.0, 0.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(-12.01, 1.0, 0.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat2(-12.01, 1.0, 0.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(-12.01, 1.0, 0.0, 1.0))))), float(_GLF_FUZZED(92.02)), bool(false)))))), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.4))) > injectionSwitch.y))))))))).y)), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED((+ 7.3)), _GLF_FUZZED(101.001)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(_GLF_IDENTITY(-12.01, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(-12.01, 1.0, 0.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(-12.01, 1.0, 0.0, 1.0)))), mix(float(float(_GLF_IDENTITY(mat2(-12.01, _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), 0.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(-12.01, 1.0, 0.0, 1.0))))), float(_GLF_IDENTITY(_GLF_FUZZED(92.02), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4.1) : _GLF_FUZZED(92.02)))), bool(false)))))), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))).y))) && true))))))), false, true, true))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-12.01, (-12.01) * 1.0), (false ? _GLF_FUZZED(-665.977) : -12.01)))), bvec2(false, false))))))).y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-4.0), min(_GLF_FUZZED(-4.0), _GLF_FUZZED(-4.0))), max(_GLF_FUZZED(-4.0), _GLF_FUZZED(-4.0))), _GLF_FUZZED(-12.01)), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), false, true))), false, true))), false))))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.0), _GLF_FUZZED(-12.01)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, 1, 1))]), vec2(_GLF_FUZZED(-4.0), _GLF_IDENTITY(_GLF_FUZZED(-12.01), _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-12.01), _GLF_IDENTITY(clamp(_GLF_FUZZED(-12.01), _GLF_FUZZED(-12.01), _GLF_FUZZED(-12.01)), 0.0 + (clamp(_GLF_FUZZED(-12.01), _GLF_FUZZED(-12.01), _GLF_FUZZED(-12.01)))))), (1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-12.01), _GLF_IDENTITY(clamp(_GLF_FUZZED(-12.01), _GLF_FUZZED(-12.01), _GLF_FUZZED(-12.01)), 0.0 + (clamp(_GLF_FUZZED(-12.01), _GLF_FUZZED(-12.01), _GLF_FUZZED(-12.01))))))) * abs(1.0)))), bvec2(false, false))))))).y)))) || false))) || false))))))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, 1 * (0))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        continue;
      }
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   do
    {
     do
      {
       return;
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, (false) && true)))))))));
     if(_GLF_DEAD(false))
      break;
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(-396.711, -647.477, 7725.2934, -4.9, -3.8, 323.861, -7381.1843, -8.3, -2319.1748, 84.29, 41.44, -8.4, 43.12, -488.754, -2.6, 9.9)) : mat4(injectionSwitch.y, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0)))), clamp(float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(-396.711, -647.477, 7725.2934, -4.9, -3.8, 323.861, -7381.1843, -8.3, -2319.1748, 84.29, 41.44, -8.4, 43.12, -488.754, -2.6, 9.9)) : mat4(injectionSwitch.y, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(-396.711, -647.477, 7725.2934, -4.9, -3.8, 323.861, -7381.1843, -8.3, -2319.1748, 84.29, 41.44, -8.4, 43.12, -488.754, -2.6, 9.9)) : mat4(injectionSwitch.y, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(-396.711, -647.477, 7725.2934, -4.9, -3.8, 323.861, -7381.1843, -8.3, -2319.1748, 84.29, 41.44, -8.4, 43.12, -488.754, -2.6, 9.9)) : mat4(injectionSwitch.y, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0)))), (float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(-396.711, -647.477, 7725.2934, -4.9, -3.8, 323.861, -7381.1843, -8.3, -2319.1748, 84.29, 41.44, -8.4, 43.12, -488.754, -2.6, 9.9)) : mat4(injectionSwitch.y, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0))))) * 1.0))))))))
      return;
    }
   else
    {
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true, false))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
        continue;
       if(_GLF_DEAD(false))
        continue;
       break;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) || (false))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       break;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        break;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) | 0), 0)) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, max(6, 6))), (int(_GLF_IDENTITY(6, _GLF_IDENTITY(max(6, 6), (max(6, 6)) * 1)))) ^ 0)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(gl_WorkGroupSize.x, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u))), max(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), (_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), (uvec4(gl_WorkGroupSize.x, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)) | (_GLF_IDENTITY(uvec4(gl_WorkGroupSize.x, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(gl_WorkGroupSize.x, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)))))) ^ uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(gl_WorkGroupSize.x, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)))))) >> 0u), (gl_WorkGroupSize.x) >> _GLF_IDENTITY(0u, (0u) / 1u));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)).x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 0u, 0u))), clamp(workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 0u, 0u))), _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 0u, 0u))), max(workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 0u, 0u))), workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 0u, 0u))))), workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 0u, 0u))))), (workgroup_size * workgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u)) - 0u) * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) << _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec2(max(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(uvec2(max(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (uvec2(max(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) >> uvec2(0u, 0u))) << uvec2(0u, 0u))), (uvec2(_GLF_IDENTITY(uvec2(max(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(uvec2(max(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (uvec2(max(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) >> uvec2(0u, 0u))) << uvec2(0u, 0u)))) ^ uvec2(0u, 0u)))))))), clamp((_GLF_IDENTITY(workgroup_size, (workgroup_size) << _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(0u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) << _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) << _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(1u, 1u) * (uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), max(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))) - 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) << _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec2(max(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(uvec2(max(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (uvec2(max(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) >> uvec2(0u, 0u))) << uvec2(0u, 0u))), (uvec2(_GLF_IDENTITY(uvec2(max(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(uvec2(max(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (uvec2(max(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) >> uvec2(0u, 0u))) << uvec2(0u, 0u)))) ^ uvec2(0u, 0u)))))))), clamp((_GLF_IDENTITY(workgroup_size, (workgroup_size) << _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(0u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) << _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) << _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(1u, 1u) * (uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), max(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))) - 0u), (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) << _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | 0u)), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec2(max(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x))), clamp(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / uvec2(1u, 1u)), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(uvec2(max(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(86.76)), bool(false))), injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (uvec2(max(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) >> uvec2(0u, 0u))) << uvec2(0u, 0u))), (uvec2(_GLF_IDENTITY(uvec2(max(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(uvec2(max(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (uvec2(max(uvec2(0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) >> uvec2(0u, 0u))) << uvec2(0u, 0u)))) ^ uvec2(0u, 0u)))))))), clamp((_GLF_IDENTITY(workgroup_size, (workgroup_size) << _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> uvec2(0u, 0u)))), _GLF_IDENTITY(max(uvec2(0u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (max(uvec2(0u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) << uvec2(0u, 0u))))))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) << _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), _GLF_IDENTITY(uvec2(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))), 1u)), (uvec2(0u, 0u) | uvec2(0u, 0u)) | (_GLF_IDENTITY(uvec2(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))), 1u)), (false ? _GLF_FUZZED(uvec2(94051u, 78657u)) : uvec2(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uvec2(0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))), 1u))))))))))))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) << _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(1u, 1u) * (uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), max(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> uvec2(0u, 0u)))))))))))) - 0u)) - 0u))) * workgroup_id) - 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * workgroup_id), 1u * ((workgroup_size * workgroup_id))), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 1u * (workgroup_size * workgroup_id)), 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, 1u * (workgroup_size * workgroup_id))))))), _GLF_IDENTITY((workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(floatBitsToUint(-7.1)))), clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : workgroup_id), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) : workgroup_id), ((false ? _GLF_FUZZED(subgroup_size) : workgroup_id)) << 0u), (false ? _GLF_FUZZED(subgroup_size) : workgroup_id), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))) ? _GLF_FUZZED(subgroup_size) : workgroup_id))), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : workgroup_id), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) : workgroup_id), ((false ? _GLF_FUZZED(subgroup_size) : workgroup_id)) << 0u), (false ? _GLF_FUZZED(subgroup_size) : workgroup_id), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))) ? _GLF_FUZZED(subgroup_size) : workgroup_id)))) ^ (1u ^ 1u))), workgroup_id))), (true ? (workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : workgroup_id)), workgroup_id))) : _GLF_FUZZED(subgroup_local_id))))));
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (14729 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(4)), int(ivec4(1 << _GLF_IDENTITY(int(4), int(4)), int(_GLF_ONE(1.0, injectionSwitch.y)), 0, 1)))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 1.0))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 1.0))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, 1.0), (mat2(injectionSwitch.x, 0.0, 0.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y) || false)))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(_GLF_IDENTITY(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))), transpose(transpose(mat2(mat2(_GLF_ONE(1.0, injectionSwitch.y))))))))).x, float(mat2(injectionSwitch.x, 0.0, 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, _GLF_IDENTITY(dot(vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), vec4(1.0, sqrt(1.0), 1.0, 1.0)), dot(vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), vec4(1.0, sqrt(1.0), 1.0, 1.0))), 1.0), (mat2(injectionSwitch, _GLF_IDENTITY(dot(vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), vec4(1.0, sqrt(1.0), 1.0, 1.0)), dot(vec4(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), vec4(1.0, sqrt(1.0), 1.0, 1.0))), 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))).y)), mix(float(_GLF_FUZZED(13.90)), float(float(float(injectionSwitch.y))), bool(true)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), float(mat2(injectionSwitch.x, 0.0, 0.0, 1.0))) > injectionSwitch.y) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))), 0u + _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u)))))))), subgroup_local_id)))))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), subgroup_local_id)))))), (true ? (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), subgroup_local_id)))))) : _GLF_FUZZED(uaddCarry(subgroup_base, subgroup_id, num_workgroup)))), (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), subgroup_local_id))), (true ? (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), subgroup_local_id))) : _GLF_FUZZED(subgroup_size))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(true ? workgroup_base + subgroup_base + subgroup_local_id : _GLF_FUZZED(subgroup_base), min(true ? workgroup_base + subgroup_base + subgroup_local_id : _GLF_FUZZED(subgroup_base), true ? _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))) | (workgroup_base)) + subgroup_base + subgroup_local_id : _GLF_FUZZED(subgroup_base)))), (_GLF_IDENTITY((true ? workgroup_base + subgroup_base + subgroup_local_id : _GLF_FUZZED(subgroup_base)), max((true ? _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base))) >> 0u) + _GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) << 0u, min((subgroup_base) << 0u, (subgroup_base) << 0u))))), _GLF_IDENTITY((true ? workgroup_base + subgroup_base + subgroup_local_id : _GLF_FUZZED(subgroup_base)), (_GLF_IDENTITY((true ? workgroup_base + subgroup_base + subgroup_local_id : _GLF_FUZZED(subgroup_base)), ((true ? workgroup_base + subgroup_base + subgroup_local_id : _GLF_FUZZED(subgroup_base))) * 1u)) >> 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? workgroup_base + subgroup_base + subgroup_local_id : _GLF_FUZZED(subgroup_base)), 0u | ((_GLF_IDENTITY(true ? workgroup_base + subgroup_base + subgroup_local_id : _GLF_FUZZED(subgroup_base), (true ? workgroup_base + subgroup_base + subgroup_local_id : _GLF_FUZZED(subgroup_base)) ^ 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY((true ? workgroup_base + subgroup_base + subgroup_local_id : _GLF_FUZZED(subgroup_base)), ~ (~ (_GLF_IDENTITY((true ? workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), subgroup_base)), 1u, 0u)), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), subgroup_base)), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), subgroup_base)), 1u, 0u))) / 1u)) >> 0u)) + subgroup_local_id : _GLF_FUZZED(subgroup_base)), ~ (~ ((true ? workgroup_base + subgroup_base + subgroup_local_id : _GLF_FUZZED(subgroup_base)))))))), 0u | ((true ? workgroup_base + subgroup_base + subgroup_local_id : _GLF_FUZZED(subgroup_base)))), _GLF_IDENTITY((true ? workgroup_base + subgroup_base + subgroup_local_id : _GLF_FUZZED(subgroup_base)), 0u | ((true ? workgroup_base + subgroup_base + subgroup_local_id : _GLF_FUZZED(subgroup_base)))))))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), ! (! (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(2.7)), float(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(66.33) : injectionSwitch.y))), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(-4.4)))), bool(true)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), _injected_loop_counter)) > _GLF_IDENTITY(0, (true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), clamp(_GLF_FUZZED(_injected_loop_counter), _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) + 0), _GLF_FUZZED(_injected_loop_counter))))), (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)) || false)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(false)))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))))))
        break;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      continue;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     break;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! ((! (true))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), false || (! (! (true))))))))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! ((! (true))))))), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true))))) && true))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true))))) && true)))))))))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, false, false)))) || false), ! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), true && (! (true))))))))))))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
              return;
             return;
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 continue;
                }
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 return;
                 if(_GLF_DEAD(false))
                  break;
                }
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))))), (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))) || false)))
                continue;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               return;
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                    return;
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  continue;
                }
               else
                {
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0)))))).y))))
              continue;
             return;
             if(_GLF_DEAD(false))
              return;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))))))))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && (false))))) && true)))))
    return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), _GLF_IDENTITY((subgroup_base) >> _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 0u)), (_GLF_IDENTITY((subgroup_base) >> _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 0u)), 1u * ((subgroup_base) >> _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 0u))))) | (_GLF_IDENTITY((subgroup_base) >> _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 0u)), ((subgroup_base) >> _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 0u))) / 1u)))) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) - 0u)) - 0u), 1u * (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-97316) : _GLF_IDENTITY(1, (1) >> (0 << _GLF_IDENTITY(int(5), int(5)))))), _GLF_IDENTITY(0u, ~ (~ (0u))) ^ (subgroup_local_id + 1)), (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0)))) - 0u)) - 0u)))) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ _GLF_IDENTITY((workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) >> uvec3(0u, 0u, 0u))))) - 0u) + 1) % subgroup_size)), ((workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (uvec3(subgroup_local_id, 0u, 0u)) >> uvec3(0u, 0u, 0u))))) - 0u) + 1) % subgroup_size))) | 0u), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u))), uint(0u)), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(0u, 0u ^ (0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) ^ 0u))), (_GLF_IDENTITY(uint(0u), uint(0u))) >> 0u))) ^ 0u), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(uint(uint(0u)), ~ (~ (uint(uint(0u))))))), uint(0u))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(uint(uint(0u)), ~ (~ (uint(uint(0u))))))), uint(0u))))) >> _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), min(0u ^ (0u), 0u ^ (0u)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) ^ 0u))), (_GLF_IDENTITY(uint(0u), uint(0u))) >> 0u))) ^ 0u)) / 1u))), _GLF_IDENTITY(uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (_GLF_IDENTITY(0u, min(0u, 0u)) ^ (workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 0u))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(mix(subgroup_size, 44042u, true), max(mix(subgroup_size, 44042u, true), mix(subgroup_size, 44042u, true)))) : _GLF_IDENTITY(0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base))) | (subgroup_base)) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), min(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | 0u)))), uint(uvec3(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), min(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | 0u)))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) * _GLF_IDENTITY((0u ^ (workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))))), ~ _GLF_IDENTITY((~ ((0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) | (0u | 0u))) % subgroup_size))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u, 0u))) << 0u)) + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) | 0u, 0u | (((subgroup_local_id + 1) % subgroup_size) | 0u)))), (~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(16717) : _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 ^ (1)))))))) % subgroup_size) | 0u))) - 0u), ~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size) | 0u))))))))))))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((~ ((0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) | (0u | 0u))) % subgroup_size))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u, 0u))) << 0u)) + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) | 0u, 0u | (((subgroup_local_id + 1) % subgroup_size) | 0u)))), (~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(16717) : _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 ^ (1)))))))) % subgroup_size) | 0u))) - 0u), ~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size) | 0u))))))))))))))), (false ? _GLF_FUZZED(subgroup_base) : (~ ((0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) | (0u | 0u))) % subgroup_size))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u, 0u))) << 0u)) + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) | 0u, 0u | (((subgroup_local_id + 1) % subgroup_size) | 0u)))), (~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(16717) : _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 ^ (1)))))))) % subgroup_size) | 0u))) - 0u), ~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size) | 0u))))))))))))))))), 1u, 0u)), ~ (~ (uint(uvec3(_GLF_IDENTITY((~ ((0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) | (0u | 0u))) % subgroup_size))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u, 0u))) << 0u)) + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) | 0u, 0u | (((subgroup_local_id + 1) % subgroup_size) | 0u)))), (~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(16717) : _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 ^ (1)))))))) % subgroup_size) | 0u))) - 0u), ~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size) | 0u))))))))))))))), (false ? _GLF_FUZZED(subgroup_base) : (~ ((0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) | (0u | 0u))) % subgroup_size))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u, 0u))) << 0u)) + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) | 0u, 0u | (((subgroup_local_id + 1) % subgroup_size) | 0u)))), (~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(16717) : _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 ^ (1)))))))) % subgroup_size) | 0u))) - 0u), ~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size) | 0u))))))))))))))))), 1u, 0u)))))))))))), ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u) + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), uint(uvec4((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), 1u, 1u, 1u))) - 0u), ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))) + 1, (subgroup_local_id + 1) - 0u)) - 0u)))), 1u * (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), ~ (~ (0u))) ^ (subgroup_local_id + 1)), (subgroup_local_id + 1) - 0u)) - 0u, 1u * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(~ (~ (0u)), uint(uvec3(~ (~ (0u)), (0u << _GLF_IDENTITY(uint(1u), uint(1u))), 1u)))) ^ (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) - 0u)) - 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), ~ (~ (0u))) ^ (subgroup_local_id + 1)), (subgroup_local_id + 1) - 0u)) - 0u) / _GLF_IDENTITY(1u, (1u) / 1u)))))))) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(0u, min(0u, 0u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u)), uint(0u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec4(_GLF_IDENTITY(uint(0u), uint(0u)), 0u, 1u, 1u)))) * (0u ^ (workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(uvec3(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(num_workgroup))), 1u, 0u))))))), (false ? _GLF_FUZZED(mix(subgroup_size, 44042u, true)) : _GLF_IDENTITY(0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), (false ? _GLF_FUZZED((~ workgroup_id)) : _GLF_IDENTITY((subgroup_base), ((subgroup_base)) << 0u))) | (subgroup_base)) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + _GLF_IDENTITY(1, 1 * (1))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size)))), _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), _GLF_IDENTITY(max((subgroup_local_id + 1), (subgroup_local_id + 1)), (true ? max((subgroup_local_id + 1), (subgroup_local_id + 1)) : _GLF_FUZZED(workgroup_id))))) ^ 0u) % subgroup_size)))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(0u)), min(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(0u), uint(0u))), ((_GLF_IDENTITY(uint(0u), uint(0u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(0u), uint(0u))), ((_GLF_IDENTITY(uint(0u), uint(0u)))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))) | 0u)))) * _GLF_IDENTITY(_GLF_IDENTITY((0u ^ (workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))) | ((subgroup_local_id + 1))) % subgroup_size, _GLF_IDENTITY(0u | ((subgroup_local_id + 1) % subgroup_size), uint(uvec3(0u | ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(1u, (1u) - 0u), 1u))))))), ~ (~ ((0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u + ((subgroup_local_id + 1) % subgroup_size))) ^ 0u), clamp((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (subgroup_size)), ((subgroup_local_id + 1) % subgroup_size) >> 0u), (subgroup_local_id + 1) % subgroup_size))) - (0u | 0u))), min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED(num_workgroup) : ((subgroup_local_id + 1) % subgroup_size)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((0u ^ (workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))))), ~ _GLF_IDENTITY((~ ((0u ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u)), min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED(num_workgroup) : ((subgroup_local_id + 1) % subgroup_size)))))), ((_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u)), min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED(num_workgroup) : ((subgroup_local_id + 1) % subgroup_size))))))) | 0u)))), ((~ ((0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (subgroup_size))), (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (subgroup_size)))) >> 0u)))), (false ? _GLF_FUZZED(num_workgroup) : ((subgroup_local_id + 1) % subgroup_size)))))))))) | 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)))) * 1u))))), min(0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)))) * 1u))))), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)))) * 1u)))))))), ~ (~ ((0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u)))))), max(uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u)))))), max(uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u)))))), uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u)))))))))), clamp(uint(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u)), uint(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u)), uint(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u)), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) * 1u), ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, 0u, 0u, 1u)))) % subgroup_size) | 0u)), uint(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u)), uint(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | 0u)))))) / 1u))), (false ? _GLF_FUZZED(num_workgroup) : ((subgroup_local_id + 1) % subgroup_size))))))))))) - 0u)) ^ 0u))))))) | ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) / 1))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) - 0u)) - _GLF_IDENTITY(0u, max(0u, 0u))), 1u * (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(uvec2(~ (0u), 0u)))))), 1u * (~ (_GLF_IDENTITY(0u, ~ (~ (0u)))))))) ^ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u))), (subgroup_local_id + 1) - 0u)) - 0u)))) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)) | 0u) + 1)) | 0u) % subgroup_size)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), min(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))))).x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u)) << 0u), (_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), (uint(0u)) / 1u)) << 0u)) - 0u))), uint(0u))) >> 0u)))), _GLF_IDENTITY(uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (0u ^ (workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), (subgroup_local_id + 1))))) % subgroup_size), ~ (~ ((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u), (subgroup_local_id + 1))))) % subgroup_size)))))), _GLF_IDENTITY(uint(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 0u)), (_GLF_IDENTITY(uint(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 0u)), (uint(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 0u))) ^ 0u)) + 0u)))))), (false ? _GLF_FUZZED(mix(subgroup_size, 44042u, true)) : _GLF_IDENTITY(0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) | (subgroup_base), _GLF_IDENTITY(((subgroup_base) | (subgroup_base)) * 1u, (((subgroup_base) | (subgroup_base)) * 1u) >> 0u))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), clamp(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u), uint(0u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u) - 0u) | (0u))), uint(0u)), min(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | 0u)))) * _GLF_IDENTITY((0u ^ (workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) + 0) | (1)), min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), (true ? subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)) : _GLF_FUZZED(num_workgroup)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), (true ? subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)) : _GLF_FUZZED(num_workgroup)))), min((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), (true ? subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)) : _GLF_FUZZED(num_workgroup)))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), (true ? subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)) : _GLF_FUZZED(num_workgroup))))))))) % subgroup_size, _GLF_IDENTITY(0u | ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) % subgroup_size), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u | ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) % subgroup_size), (0u | ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) % subgroup_size)) * 1u)), (~ (_GLF_IDENTITY(0u | ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) % subgroup_size), (0u | ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) % subgroup_size)) * 1u))) - 0u))))))), ~ (_GLF_IDENTITY(~ ((0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size)))))), min(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED(num_workgroup) : ((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED(num_workgroup) : ((subgroup_local_id + 1) % subgroup_size)))) | (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED(num_workgroup) : ((subgroup_local_id + 1) % subgroup_size)))))))))), clamp(~ ((0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED(num_workgroup) : ((subgroup_local_id + 1) % subgroup_size)))))))), ~ ((0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base) ^ 0u, uint(_GLF_IDENTITY(uvec4((workgroup_base + subgroup_base) ^ 0u, 1u, 0u, 1u), (uvec4((workgroup_base + subgroup_base) ^ 0u, 1u, 0u, 1u)) - uvec4(0u, 0u, 0u, 0u))))) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED(num_workgroup) : ((subgroup_local_id + 1) % subgroup_size)))))))), ~ ((0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) / 1u), min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED(num_workgroup) : ((subgroup_local_id + 1) % subgroup_size))), 1u * (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), (false ? _GLF_FUZZED(num_workgroup) : ((subgroup_local_id + 1) % subgroup_size))))))))))))))))))))) << 0u);
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_FALSE(false))))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             return;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              continue;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, sin(0.0), exp(0.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, sin(0.0), exp(0.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, 1.0, sin(0.0), exp(0.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))) - log(1.0)), 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0))), injectionSwitch.y)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, max(0, 0)) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
         atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false));
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * _GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY((mat2(-8.8, 4.6, 2023.2813, -31.87) + mat2(0.3, 1.1, -4776.6576, -0.6)), transpose(transpose((mat2(-8.8, 4.6, 2023.2813, -31.87) + mat2(0.3, 1.1, -4776.6576, -0.6))))))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * _GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY((mat2(-8.8, 4.6, 2023.2813, -31.87) + mat2(0.3, 1.1, -4776.6576, -0.6)), transpose(transpose((mat2(-8.8, 4.6, 2023.2813, -31.87) + mat2(0.3, 1.1, -4776.6576, -0.6)))))))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * _GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY((mat2(-8.8, 4.6, 2023.2813, -31.87) + mat2(0.3, 1.1, -4776.6576, -0.6)), transpose(transpose((mat2(-8.8, 4.6, 2023.2813, -31.87) + mat2(0.3, 1.1, -4776.6576, -0.6))))))))).y) * 1.0)), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * _GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY((mat2(-8.8, 4.6, 2023.2813, -31.87) + mat2(0.3, 1.1, -4776.6576, -0.6)), transpose(transpose((mat2(-8.8, 4.6, 2023.2813, -31.87) + mat2(0.3, 1.1, -4776.6576, -0.6))))))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * _GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY((mat2(-8.8, 4.6, 2023.2813, -31.87) + mat2(0.3, 1.1, -4776.6576, -0.6)), transpose(transpose((mat2(-8.8, 4.6, 2023.2813, -31.87) + mat2(0.3, 1.1, -4776.6576, -0.6)))))))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * _GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY((mat2(-8.8, 4.6, 2023.2813, -31.87) + mat2(0.3, 1.1, -4776.6576, -0.6)), transpose(transpose((mat2(-8.8, 4.6, 2023.2813, -31.87) + mat2(0.3, 1.1, -4776.6576, -0.6))))))))).y) * 1.0)), false), bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * _GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY((mat2(-8.8, 4.6, 2023.2813, -31.87) + mat2(0.3, 1.1, -4776.6576, -0.6)), transpose(transpose((mat2(-8.8, 4.6, 2023.2813, -31.87) + mat2(0.3, 1.1, -4776.6576, -0.6))))))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * _GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY((mat2(-8.8, 4.6, 2023.2813, -31.87) + mat2(0.3, 1.1, -4776.6576, -0.6)), transpose(transpose((mat2(-8.8, 4.6, 2023.2813, -31.87) + mat2(0.3, 1.1, -4776.6576, -0.6)))))))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * _GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY((mat2(-8.8, 4.6, 2023.2813, -31.87) + mat2(0.3, 1.1, -4776.6576, -0.6)), transpose(transpose((mat2(-8.8, 4.6, 2023.2813, -31.87) + mat2(0.3, 1.1, -4776.6576, -0.6))))))))).y) * 1.0)), false)))))) && true, ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY((mat2(-8.8, 4.6, 2023.2813, -31.87) + mat2(0.3, 1.1, -4776.6576, -0.6)), transpose(transpose(_GLF_IDENTITY((mat2(-8.8, 4.6, 2023.2813, -31.87) + mat2(_GLF_IDENTITY(0.3, (_GLF_IDENTITY(0.3, clamp(0.3, 0.3, 0.3))) - 0.0), 1.1, -4776.6576, -0.6)), (_GLF_IDENTITY((mat2(-8.8, 4.6, 2023.2813, -31.87) + mat2(0.3, 1.1, -4776.6576, -0.6)), ((mat2(-8.8, 4.6, _GLF_IDENTITY(2023.2813, (_GLF_IDENTITY(2023.2813, float(mat4x2(2023.2813, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))) / 1.0), -31.87) + mat2(0.3, 1.1, -4776.6576, -0.6))) - mat2(0.0, 0.0, 0.0, 0.0))) * mat2(1.0))))))))).y) && true) || false))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)))))
        break;
       if(_GLF_DEAD(false))
        break;
       return;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = (1 | _GLF_IDENTITY(1, 0 | (1))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 & -13801), ((0 & _GLF_IDENTITY(-13801, max(_GLF_IDENTITY(-13801, (-13801) >> 0), -13801)))) << 0)), (_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 & -13801), ((0 & _GLF_IDENTITY(-13801, max(_GLF_IDENTITY(-13801, (-13801) >> 0), -13801)))) << 0))) && true); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        return;
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) >> 0)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) >> 0)))), min(int(int(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) >> 0)))), int(int(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) >> 0)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) ^ 0)), int(3)), 1 * (_GLF_IDENTITY(int(3), int(3))))) | (_GLF_IDENTITY(int(3), int(3))))) | (_GLF_IDENTITY(int(3), int(3)))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(5), int(5))), int(_GLF_IDENTITY(int((0 >> _GLF_IDENTITY(int(5), int(5)))), clamp(int((0 >> _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(int((0 >> _GLF_IDENTITY(int(5), int(5)))), (int((0 >> _GLF_IDENTITY(int(5), int(5))))) * 1), int((0 >> _GLF_IDENTITY(int(5), int(5))))))))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
               if(_GLF_DEAD(false))
                continue;
              }
             else
              {
              }
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          return;
         continue;
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))))))), bool(bvec2(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(true)), _GLF_IDENTITY(bool(bvec2(! (bool(true)), true)), bool(bvec4(bool(bvec2(! (bool(true)), true)), false, true, false))))))))))
          {
           if(_GLF_DEAD(false))
            break;
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             return;
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
         do
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   if(_GLF_DEAD(false))
    break;
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
         if(_GLF_DEAD(false))
          continue;
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 else
  {
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), min(~ _GLF_IDENTITY((~ (1)), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (1)), clamp((~ (1)), (~ (1)), _GLF_IDENTITY((~ (1)), clamp((~ (1)), (~ (1)), (~ (1)))))), ~ (~ (_GLF_IDENTITY((~ (1)), clamp((~ (1)), (~ (1)), _GLF_IDENTITY((~ (1)), _GLF_IDENTITY(clamp((~ (1)), (~ _GLF_IDENTITY((1), ((1)) + 0)), (~ _GLF_IDENTITY((1), (0 << _GLF_IDENTITY(int(5), int(5))) + ((1))))), min(clamp((~ (1)), (~ (1)), (~ (1))), clamp((~ (1)), (~ (1)), (~ (1))))))))))), (~ (1)))), ~ (~ (1)))), ~ (~ (_GLF_IDENTITY(~ (~ (1)), min(~ (~ (1)), ~ (~ (1)))))))) / (0 | _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), ~ (1))))))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((1), max((1), (1)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (1)), min(~ _GLF_IDENTITY((~ (1)), min(_GLF_IDENTITY((~ (1)), clamp((~ (1)), (~ (1)), _GLF_IDENTITY((_GLF_IDENTITY(~ (1), (~ _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), ((1)) | 0)))) * 1)), clamp((~ (1)), (~ (1)), (~ (1)))))), _GLF_IDENTITY((~ (1)), ((~ (1))) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))))), ~ (~ _GLF_IDENTITY((1), min((1), (1)))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (1)), min(~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(int(~ (1))), (int(int(~ (1)))) | (int(int(~ (1))))))), ~ (~ (1))))), ((_GLF_IDENTITY(~ (~ (1)), min(~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(int(~ (1))), (int(int(~ (1)))) | (int(int(~ (1))))))), ~ (~ (1)))))) | 0)))) / (0 | 1))) | 0))) | (1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))), false, true, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))) || (_injected_loop_counter > 0))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, true))))))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       continue;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         do
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))
                return;
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, 0)), 0))); _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 return;
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec3(false || (false), false, true)))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-35.39), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), clamp(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), min(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), max(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0))))), _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0))), _GLF_FUZZED(9.4)), bvec2(true, false))).x > injectionSwitch.y))));
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        continue;
      }
     else
      {
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))
      return;
     if(_GLF_DEAD(false))
      continue;
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))))) || false))));
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! ((false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(! (! (! (injectionSwitch.x < injectionSwitch.y))), false || (! (! (! (injectionSwitch.x < injectionSwitch.y))))))))))), false || (! ((false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y))))))))))))))))
    continue;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        return;
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY((true ? 2 : _GLF_FUZZED(41452)), _GLF_IDENTITY(max((true ? _GLF_IDENTITY(2, (2) >> _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))) : _GLF_FUZZED(41452)), _GLF_IDENTITY((true ? 2 : _GLF_IDENTITY(_GLF_FUZZED(41452), clamp(_GLF_IDENTITY(_GLF_FUZZED(41452), (false ? _GLF_FUZZED(-37700) : _GLF_IDENTITY(_GLF_FUZZED(41452), min(_GLF_FUZZED(41452), _GLF_FUZZED(41452))))), _GLF_FUZZED(41452), _GLF_FUZZED(_GLF_IDENTITY(41452, min(41452, 41452)))))), ~ (~ _GLF_IDENTITY(((true ? 2 : _GLF_FUZZED(41452))), _GLF_IDENTITY(int(ivec2(((true ? 2 : _GLF_FUZZED(41452))), (1 ^ 0))), 0 | (int(ivec2(((true ? 2 : _GLF_FUZZED(_GLF_IDENTITY(41452, ~ (~ (41452)))))), (1 ^ 0))))))))), (max((true ? 2 : _GLF_FUZZED(41452)), _GLF_IDENTITY((true ? 2 : _GLF_IDENTITY(_GLF_FUZZED(41452), clamp(_GLF_FUZZED(_GLF_IDENTITY(41452, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(41452, min(41452, 41452)), 1, 0, 1), ~ (_GLF_IDENTITY(~ (ivec4(_GLF_IDENTITY(41452, min(41452, 41452)), 1, 0, 1)), (~ (ivec4(_GLF_IDENTITY(41452, min(41452, 41452)), 1, 0, 1))) - ivec4(0, 0, 0, 0))))))), _GLF_FUZZED(41452), _GLF_FUZZED(41452)))), ~ (~ ((true ? 2 : _GLF_FUZZED(41452))))))) + 0)))) * int(_GLF_ONE(1.0, injectionSwitch.y)))), 0u ^ ((subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY((true ? 2 : _GLF_FUZZED(41452)), _GLF_IDENTITY(max((true ? _GLF_IDENTITY(2, (2) >> _GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0))) : _GLF_FUZZED(41452)), _GLF_IDENTITY((true ? 2 : _GLF_IDENTITY(_GLF_FUZZED(41452), clamp(_GLF_IDENTITY(_GLF_FUZZED(41452), (false ? _GLF_FUZZED(-37700) : _GLF_IDENTITY(_GLF_FUZZED(41452), min(_GLF_FUZZED(41452), _GLF_FUZZED(41452))))), _GLF_FUZZED(41452), _GLF_FUZZED(_GLF_IDENTITY(41452, min(41452, 41452)))))), ~ (~ _GLF_IDENTITY(((true ? 2 : _GLF_FUZZED(41452))), _GLF_IDENTITY(int(ivec2(((true ? 2 : _GLF_FUZZED(41452))), (1 ^ 0))), 0 | (int(ivec2(((true ? 2 : _GLF_FUZZED(_GLF_IDENTITY(41452, ~ (~ (41452)))))), (1 ^ 0))))))))), (max((true ? 2 : _GLF_FUZZED(41452)), _GLF_IDENTITY((true ? 2 : _GLF_IDENTITY(_GLF_FUZZED(41452), clamp(_GLF_FUZZED(_GLF_IDENTITY(41452, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(41452, min(41452, 41452)), 1, 0, 1), ~ (_GLF_IDENTITY(~ (ivec4(_GLF_IDENTITY(41452, min(41452, 41452)), 1, 0, 1)), (~ (ivec4(_GLF_IDENTITY(41452, min(41452, 41452)), 1, 0, 1))) - ivec4(0, 0, 0, 0))))))), _GLF_FUZZED(41452), _GLF_FUZZED(41452)))), ~ (~ ((true ? 2 : _GLF_FUZZED(41452))))))) + 0)))) * int(_GLF_ONE(1.0, injectionSwitch.y)))))) == 0)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
        break;
       subgroupAll(true);
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        continue;
       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)], uint(2), _GLF_IDENTITY(4, max(4, 4)), 64, 4);
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         continue;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)), ! (! (false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((false) || false))))))))))) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (false || (false)), false), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (false)), false), false)))), _GLF_IDENTITY((bool(bvec2(! (false || (false)), false))) || false, ! (_GLF_IDENTITY(! ((bool(bvec2(! (false || (false)), false))) || false), (! ((bool(bvec2(! (false || (false)), false))) || false)) && true))))))))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), (bool(_GLF_IDENTITY(true, true && (true)))) || false))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), (bool(_GLF_IDENTITY(true, true && (true)))) || false)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! (_GLF_IDENTITY(true && (true), false || (true && (true)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), (bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))) || false))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), (bool(_GLF_IDENTITY(true, true && (true)))) || false), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), (bool(_GLF_IDENTITY(true, true && (true)))) || false))))))))))) || false)))))))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          return;
         break;
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 1 * _GLF_IDENTITY((int(5)), ~ (~ ((int(5)))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, 0 + (5))), int(5)))); _injected_loop_counter ++)
            {
             do
              {
               if(_GLF_DEAD(false))
                break;
               subgroupAll(false);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
                  return;
                 continue;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) >> 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) ^ 0), (_GLF_IDENTITY(int(0), (int(0)) ^ 0)) >> 0))))) >> _GLF_IDENTITY(int(0), int(0)), clamp((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) / 1), _GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(int(0), (int(0)) ^ 0))))) >> _GLF_IDENTITY(int(0), int(0)), (1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), min(int(0), int(0)))) / 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), max(int(0), int(0))), (int(0)) ^ 0))))) >> _GLF_IDENTITY(int(0), int(0)), (1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), 0 | (int(0))), (int(0)) ^ 0))))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) << 0))))))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
                    return;
                  }
                }
               continue;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
              return;
            }
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, 1 * (2)), (_GLF_IDENTITY(2, 1 * _GLF_IDENTITY((2), (1 ^ 1) | ((2))))) - 0), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(true ? 2 : _GLF_FUZZED(41094), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(true ? 2 : _GLF_FUZZED(41094), (true ? 2 : _GLF_FUZZED(41094)) >> 0), 1, 0)), (int(ivec3(_GLF_IDENTITY(true ? 2 : _GLF_FUZZED(41094), (true ? 2 : _GLF_FUZZED(41094)) >> 0), 1, 0))) - 0)))), (2) * _GLF_IDENTITY(1, min(1, 1)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(2, 0, 0)), 0 + (int(ivec3(2, 0, 0)))))) | _GLF_IDENTITY((2), (_GLF_IDENTITY((2), int(ivec4((2), 1, 0, 1)))) | ((2))))) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) + int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec3(2, 0, 0)), 0 + (int(_GLF_IDENTITY(ivec3(2, 0, 0), (_GLF_IDENTITY(true ? ivec3(2, 0, 0) : _GLF_FUZZED(ivec3(-89558, -61124, -2911)), ivec3(0, 0, 0) + (_GLF_IDENTITY(true ? ivec3(2, 0, 0) : _GLF_FUZZED(ivec3(-89558, -61124, -2911)), (true ? ivec3(2, 0, 0) : _GLF_FUZZED(ivec3(-89558, -61124, -2911))) | (true ? ivec3(2, 0, 0) : _GLF_FUZZED(ivec3(-89558, -61124, -2911))))))))))))) | _GLF_IDENTITY((2), (_GLF_IDENTITY((2), int(ivec4((2), 1, 0, 1)))) | ((2))))) * 1)) / 1))) + int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(4, ~ (~ (4))), 64, 4);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-228.415), (true ? _GLF_FUZZED(-228.415) : _GLF_FUZZED(-655.792))), _GLF_FUZZED(-109.217)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) || false))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, true, true))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), ! (! (_GLF_IDENTITY(false, false || (false)))))), (_GLF_DEAD(false)) && true))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (false))))), ! (! (_GLF_IDENTITY(false, false || (false)))))), (_GLF_DEAD(false)) && true))), true && ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), (_GLF_IDENTITY((false), true && ((false)))) && true))))), ! (! (_GLF_IDENTITY(false, false || (false)))))), (_GLF_DEAD(false)) && true)))))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
}
