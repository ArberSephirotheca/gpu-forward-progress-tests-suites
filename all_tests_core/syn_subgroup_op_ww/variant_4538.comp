#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (bool(bvec4(false, false, true, true))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, true, true)))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), clamp(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))) && true)))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), false)))))) || _GLF_IDENTITY(false, (false) || false)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), true)))), true, true)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), true)))), true, true)))))), _GLF_IDENTITY(true, (true) || false)))))))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), true)))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, float(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, cos(0.0), 0.0, 0.0))) > injectionSwitch.y))), false))), false), true))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), true)))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), true))))))))))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true)), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), true)))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))))))), false))), false), true)))))))), false, false))), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), true)))))))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), true)))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2613.0179), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-401.981)), bvec2(true, false))).x > injectionSwitch.y))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), true)))))))), false, false))), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), true)))))))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))), false), true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), true)))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false), true)))))))), false, false))), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true))), true)))), true, false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9553.5123), _GLF_FUZZED(-81.29)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, injectionSwitch.y, injectionSwitch.y)))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9553.5123), _GLF_FUZZED(-81.29)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, injectionSwitch.y, injectionSwitch.y)))))), true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))) || false)))))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), _GLF_IDENTITY(bool(bvec2(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), true)), false || (_GLF_IDENTITY(bool(bvec2(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), true)), false || (bool(bvec2(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), true)))))))))), false))), false), false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.7) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 0.0)), min(float(vec2(injectionSwitch.y, 0.0)), float(vec2(injectionSwitch.y, 0.0)))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bool(bool(bvec4(false, true, false, false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)) || false)) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (72497u & 0u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(53881u) : workgroup_base + subgroup_base)))))) >> 0u) + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | _GLF_IDENTITY(0, (0) / 1)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), min(_GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), (1))) + 0), _GLF_IDENTITY(1, (1) + 0)))) | _GLF_IDENTITY(0, (0) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | _GLF_IDENTITY(0, _GLF_IDENTITY((0), int(int(_GLF_IDENTITY((0), clamp((0), (0), (0)))))) / 1)), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | _GLF_IDENTITY(0, _GLF_IDENTITY((0), int(int(_GLF_IDENTITY((0), clamp((0), (0), (0)))))) / 1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | _GLF_IDENTITY(0, _GLF_IDENTITY((0), int(int(_GLF_IDENTITY((0), clamp((0), (0), (0)))))) / 1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | _GLF_IDENTITY(0, _GLF_IDENTITY((0), int(int(_GLF_IDENTITY((0), clamp((0), (0), (0)))))) / 1))))) << 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (1) + 0)) | _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(2930))), (0) / 1)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | _GLF_IDENTITY(0, _GLF_IDENTITY((0), 0 | ((0))) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | _GLF_IDENTITY(0, (0) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | _GLF_IDENTITY(0, (0) / 1)), max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | _GLF_IDENTITY(0, (0) / 1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) | _GLF_IDENTITY(0, (0) / 1))))) << 0)) << 0)))) << (0 ^ 0)), 0 ^ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp((1), (1), (1)))) / 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x))) + 0.0) > injectionSwitch.y))))
  return;
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)))).x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)) && true)), true))))) || false))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) - 0u) == 0)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (! (false)))), ! (! ((! (false))))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, log(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * exp(0.0)), round(length(normalize(exp(vec3(0.0, 0.0, 0.0))))), sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0))), sqrt(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8.5) : 0.0)), float(mat2x3(0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(exp(vec3(0.0, 0.0, 0.0))))), (true ? round(length(normalize(exp(vec3(0.0, 0.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(7917.3906, mix(float(_GLF_FUZZED(7184.9463)), float(_GLF_IDENTITY(7917.3906, max(7917.3906, 7917.3906))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), clamp(_GLF_IDENTITY(round(length(normalize(exp(vec3(0.0, 0.0, 0.0))))), (true ? round(length(normalize(exp(vec3(0.0, 0.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(7917.3906, mix(float(_GLF_FUZZED(7184.9463)), float(_GLF_IDENTITY(7917.3906, max(7917.3906, 7917.3906))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(round(length(normalize(exp(vec3(0.0, 0.0, 0.0))))), (true ? round(length(normalize(exp(vec3(0.0, 0.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(7917.3906, mix(float(_GLF_FUZZED(7184.9463)), float(_GLF_IDENTITY(7917.3906, max(7917.3906, 7917.3906))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(round(length(normalize(exp(vec3(0.0, 0.0, 0.0))))), (true ? round(length(normalize(exp(vec3(0.0, 0.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(7917.3906, mix(float(_GLF_FUZZED(7184.9463)), float(_GLF_IDENTITY(7917.3906, max(7917.3906, 7917.3906))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), sqrt(determinant(mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))) / 1.0), 1.0, 1.0)), 0.0, 0.0, 1.0))), sqrt(1.0)))), min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, round(length(normalize(exp(vec3(0.0, 0.0, 0.0))))), sqrt(_GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), clamp(determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0))))), sqrt(1.0)))), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, round(length(normalize(exp(vec3(0.0, 0.0, 0.0))))), sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0))), sqrt(1.0))))))) * 1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.3)), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, exp(0.0)))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false) || (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = (int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(0.0, 1.0 * (0.0))), sin(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(sqrt(1.0), _GLF_IDENTITY(clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0)), max(clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0)), _GLF_IDENTITY(clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0)), 0.0 + (clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0)))), clamp(clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0)), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0)), _GLF_IDENTITY(clamp(sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-77.01)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(114.685)), float(1.0), bool(true)))), bool(true)))), sqrt(1.0), sqrt(1.0)), max(clamp(sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-77.01)), float(1.0), bool(true)))), sqrt(1.0), sqrt(1.0)), clamp(sqrt(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED(-77.01)), float(1.0), bool(true)))), sqrt(1.0), sqrt(1.0)))))), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0)), clamp(_GLF_IDENTITY(sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6509.2470) : 1.0))), min(_GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) - 0.0), sqrt(1.0))), sqrt(1.0), sqrt(1.0))))))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0), 1.0, 0.0, 0.0), _GLF_IDENTITY(transpose(transpose(mat4(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), sin(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(1.0, (1.0) / 1.0)), clamp(sqrt(_GLF_IDENTITY(1.0, max(1.0, 1.0))), sqrt(1.0), sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-10.09)), bool(false)))))), 0.0, 1.0, 0.0, 0.0))), transpose(transpose(transpose(transpose(mat4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 0.0 + (_GLF_IDENTITY(float(mat4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), max(float(mat4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), float(mat4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))))))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), sin(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(1.0, (1.0) / 1.0)), clamp(sqrt(_GLF_IDENTITY(1.0, max(1.0, 1.0))), sqrt(1.0), sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-10.09)), bool(false)))))), 0.0, 1.0, 0.0, 0.0))))))), (_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), sin(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(257.963))))), float(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mix(vec3(_GLF_FUZZED(-512.389), (vec3(1.0, 1.0, 1.0))[1], _GLF_FUZZED(_GLF_IDENTITY(4.8, float(mat4x3(4.8, 1.0, 0.0, 1.0, 0.0, log(abs(1.0)), 0.0, 0.0, 0.0, tan(0.0), 1.0, 0.0))))), vec3((vec3(1.0, 1.0, 1.0))[0], _GLF_FUZZED(2.6), (vec3(1.0, 1.0, 1.0))[2]), bvec3(true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec3(bvec4(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true))))), 0.0, _GLF_IDENTITY(sqrt(1.0), clamp(sqrt(_GLF_IDENTITY(1.0, max(1.0, 1.0))), sqrt(1.0), sqrt(1.0))), 0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(transpose(transpose(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(896.167)), bool(false))), 0.0, 0.0, 1.0, sqrt(0.0), sin(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-120.076)), bool(false)))))), 1.0, round(length(normalize(vec2(1.0, 1.0)))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), min(_GLF_IDENTITY(sqrt(1.0), float(mat2(sqrt(1.0), 1.0, 1.0, 1.0))), sqrt(1.0))))), 0.0, 1.0, 0.0, 0.0))), (transpose(transpose(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), sin(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))))), (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3293.5714)), bool(false))), 0.0, 0.0, 1.0, sqrt(0.0), sin(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))))), 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0)))))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * exp(sin(0.0))), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(8.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) * exp(_GLF_IDENTITY(sin(0.0), (sin(0.0)) * _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(1.0, (1.0) * exp(sin(0.0))), _GLF_IDENTITY(1.0, (1.0) * exp(sin(0.0))))), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, abs(0.0) + (0.0)), clamp(_GLF_IDENTITY(0.0, abs(0.0) + (0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, abs(0.0) + (0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atanh(-3049.7303)) : _GLF_IDENTITY(0.0, abs(0.0) + (0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, abs(0.0) + (0.0)), min(_GLF_IDENTITY(0.0, abs(0.0) + (0.0)), _GLF_IDENTITY(0.0, abs(0.0) + (0.0)))))), 1.0 * (0.0))), sin(0.0), 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), vec2(1.0, 1.0))), vec2(1.0, 1.0)))))))), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(determinant(mat3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, length(vec2(0.0, 0.0)), exp(0.0), 1.0, 0.0, cos(0.0), 0.0)), float(mat2(float(mat2x4(0.0, 1.0, length(vec2(0.0, 0.0)), exp(0.0), 1.0, 0.0, cos(0.0), 0.0)), 1.0, 0.0, 1.0)))), 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, abs(0.0) + (0.0)), 1.0 * _GLF_IDENTITY((0.0), mix(float(_GLF_FUZZED(7.1)), float(_GLF_IDENTITY((0.0), sin(0.0) + ((0.0)))), bool(true))))), sin(0.0), 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(1.0 * (1.0), min(1.0 * (1.0), 1.0 * (1.0)))), bool(true)))), 1.0), vec2(1.0, 1.0))), mix(vec2((_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(1.0 * (1.0), min(1.0 * (1.0), 1.0 * (1.0)))), bool(true)))), 1.0), vec2(1.0, 1.0))))[0], (_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)) * (1.0), mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(1.0 * (1.0), min(1.0 * (1.0), 1.0 * (1.0)))), bool(true)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-507.881)), bool(false)))), vec2(1.0, 1.0))))[1]), vec2(_GLF_FUZZED(1581.9467), _GLF_FUZZED((-6.8 - -3.8))), bvec2(false, false))), vec2(1.0, 1.0)))))))), clamp(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, abs(0.0) + (0.0)), 1.0 * (0.0))), sin(0.0), 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), vec2(1.0, 1.0))), vec2(1.0, 1.0)))))))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, abs(0.0) + (0.0)), 1.0 * (0.0))), sin(0.0), 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), vec2(1.0, 1.0))), vec2(1.0, 1.0)))))))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))) + (0.0)), 1.0 * (0.0))), sin(0.0), 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), vec2(1.0, 1.0))))))))))), clamp(float(_GLF_IDENTITY(determinant(mat3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, length(vec2(0.0, 0.0)), exp(0.0), 1.0, 0.0, cos(0.0), 0.0)), float(mat2(float(mat2x4(0.0, 1.0, length(vec2(0.0, 0.0)), exp(0.0), 1.0, 0.0, cos(0.0), 0.0)), 1.0, 0.0, 1.0)))), 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, abs(0.0) + (0.0)), 1.0 * _GLF_IDENTITY((0.0), mix(float(_GLF_FUZZED(7.1)), float(_GLF_IDENTITY((0.0), sin(0.0) + ((0.0)))), bool(true))))), sin(0.0), 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(1.0 * (1.0), min(1.0 * (1.0), 1.0 * (1.0)))), bool(true)))), 1.0), vec2(1.0, 1.0))), mix(vec2((_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(1.0 * (1.0), min(1.0 * (1.0), 1.0 * (1.0)))), bool(true)))), 1.0), vec2(1.0, 1.0))))[0], (_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)) * (1.0), mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(1.0 * (1.0), min(1.0 * (1.0), 1.0 * (1.0)))), bool(true)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-507.881)), bool(false)))), vec2(1.0, 1.0))))[1]), vec2(_GLF_FUZZED(1581.9467), _GLF_FUZZED((-6.8 - -3.8))), bvec2(false, false))), vec2(1.0, 1.0)))))))), clamp(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, abs(0.0) + (0.0)), 1.0 * (0.0))), sin(0.0), 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), vec2(1.0, 1.0))), vec2(1.0, 1.0)))))))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, abs(0.0) + (0.0)), 1.0 * (0.0))), sin(0.0), 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), vec2(1.0, 1.0))), vec2(1.0, 1.0)))))))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))) + (0.0)), 1.0 * (0.0))), sin(0.0), 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), vec2(1.0, 1.0))))))))))), float(_GLF_IDENTITY(determinant(mat3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, length(vec2(0.0, 0.0)), exp(0.0), 1.0, 0.0, cos(0.0), 0.0)), float(mat2(float(mat2x4(0.0, 1.0, length(vec2(0.0, 0.0)), exp(0.0), 1.0, 0.0, cos(0.0), 0.0)), 1.0, 0.0, 1.0)))), 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, abs(0.0) + (0.0)), 1.0 * _GLF_IDENTITY((0.0), mix(float(_GLF_FUZZED(7.1)), float(_GLF_IDENTITY((0.0), sin(0.0) + ((0.0)))), bool(true))))), sin(0.0), 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(1.0 * (1.0), min(1.0 * (1.0), 1.0 * (1.0)))), bool(true)))), 1.0), vec2(1.0, 1.0))), mix(vec2((_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(1.0 * (1.0), min(1.0 * (1.0), 1.0 * (1.0)))), bool(true)))), 1.0), vec2(1.0, 1.0))))[0], (_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)) * (1.0), mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(1.0 * (1.0), min(1.0 * (1.0), 1.0 * (1.0)))), bool(true)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-507.881)), bool(false)))), vec2(1.0, 1.0))))[1]), vec2(_GLF_FUZZED(1581.9467), _GLF_FUZZED((-6.8 - -3.8))), bvec2(false, false))), vec2(1.0, 1.0)))))))), clamp(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, abs(0.0) + (0.0)), 1.0 * (0.0))), sin(0.0), 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), vec2(1.0, 1.0))), vec2(1.0, 1.0)))))))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, abs(0.0) + (0.0)), 1.0 * (0.0))), sin(0.0), 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), vec2(1.0, 1.0))), vec2(1.0, 1.0)))))))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))) + (0.0)), 1.0 * (0.0))), sin(0.0), 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), vec2(1.0, 1.0))))))))))), float(_GLF_IDENTITY(determinant(mat3(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, length(vec2(0.0, 0.0)), exp(0.0), 1.0, 0.0, cos(0.0), 0.0)), float(mat2(float(mat2x4(0.0, 1.0, length(vec2(0.0, 0.0)), exp(0.0), 1.0, 0.0, cos(0.0), 0.0)), 1.0, 0.0, 1.0)))), 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, abs(0.0) + (0.0)), 1.0 * _GLF_IDENTITY((0.0), mix(float(_GLF_FUZZED(7.1)), float(_GLF_IDENTITY((0.0), sin(0.0) + ((0.0)))), bool(true))))), sin(0.0), 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(1.0 * (1.0), min(1.0 * (1.0), 1.0 * (1.0)))), bool(true)))), 1.0), vec2(1.0, 1.0))), mix(vec2((_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(1.0 * (1.0), min(1.0 * (1.0), 1.0 * (1.0)))), bool(true)))), 1.0), vec2(1.0, 1.0))))[0], (_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)) * (1.0), mix(float(_GLF_FUZZED(0.9)), float(_GLF_IDENTITY(1.0 * (1.0), min(1.0 * (1.0), 1.0 * (1.0)))), bool(true)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-507.881)), bool(false)))), vec2(1.0, 1.0))))[1]), vec2(_GLF_FUZZED(1581.9467), _GLF_FUZZED((-6.8 - -3.8))), bvec2(false, false))), vec2(1.0, 1.0)))))))), clamp(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, abs(0.0) + (0.0)), 1.0 * (0.0))), sin(0.0), 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), vec2(1.0, 1.0))), vec2(1.0, 1.0)))))))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, abs(0.0) + (0.0)), 1.0 * (0.0))), sin(0.0), 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), vec2(1.0, 1.0))), vec2(1.0, 1.0)))))))), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))) + (0.0)), 1.0 * (0.0))), sin(0.0), 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0), vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), vec2(1.0, 1.0))))))))))))), _GLF_IDENTITY(float(_GLF_FUZZED(0.7)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_FUZZED(0.7)), max(float(_GLF_FUZZED(0.7)), float(_GLF_FUZZED(0.7))))), max(float(_GLF_IDENTITY(float(_GLF_FUZZED(0.7)), max(float(_GLF_FUZZED(0.7)), float(_GLF_FUZZED(0.7))))), float(_GLF_IDENTITY(float(_GLF_FUZZED(0.7)), max(float(_GLF_FUZZED(0.7)), float(_GLF_FUZZED(0.7))))))))), bool(false))), 1.0, 1.0, 0.0, _GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))), 0.0, 1.0, 0.0, 0.0)))), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), sin(0.0), 1.0, round(_GLF_IDENTITY(length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0)))))), mix(vec2((normalize(vec2(1.0, 1.0)))[0], _GLF_FUZZED((- -2.6))), vec2(_GLF_FUZZED(-1.0), (normalize(vec2(1.0, 1.0)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), max(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(vec4(-61.65, 1309.1356, 5.8, -50.40).s)), bool(false))), 0.0, determinant(mat3(1.0, 1.0, 1.0, tan(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0)), abs(1.0)))), 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)))))))), length(normalize(vec2(1.0, 1.0)))))))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.0) : sqrt(1.0))), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))), 0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(transpose(transpose(mat4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.3)), bool(false))), 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), sin(0.0), 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), clamp(normalize(vec2(1.0, 1.0)), normalize(_GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))), normalize(vec2(1.0, 1.0)))))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(-4545.0184)), bool(false))), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))), 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY((transpose(transpose(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), sin(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.3)), float(0.0), bool(true))), 0.0), (mat4x3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0)) * mat4(1.0)))), round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-376.902)), bool(false)))) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))), _GLF_IDENTITY(mat3(mat4(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), sin(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.3)), _GLF_IDENTITY(float(0.0), mix(float(_GLF_FUZZED(float(false))), float(float(0.0)), bool(true))), bool(true))), 0.0), (mat4x3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0)) * mat4(1.0)))), round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-376.902)), bool(false)))), (false ? _GLF_FUZZED(-95.68) : (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-376.902)), bool(false)))))) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))), (mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), sin(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.3)), float(0.0), bool(true))), 0.0), (mat4x3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0)) * mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-50.86)), bool(false))))))), round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-376.902)), bool(false)))) * determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))) * _GLF_IDENTITY(mat3(1.0), mat3(mat3x4(mat3(1.0))))))), _GLF_IDENTITY((true ? mat3(mat4(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), sin(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7.3)), float(0.0), bool(true)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, _GLF_IDENTITY(abs(1.0), float(mat3x2(abs(1.0), determinant(mat3(0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)))), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), mix(float(_GLF_FUZZED(-3.3)), float(0.0), bool(true))), 0.0), (mat4x3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0)) * mat4(1.0)))), _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-376.902)), bool(false)))) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), mix(vec2((vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-376.902)), bool(_GLF_IDENTITY(false, true && (false)))))) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))[0], _GLF_FUZZED(vec4(9518.3088, -90.22, 9933.7554, -3655.3507).r)), vec2(_GLF_FUZZED(9487.3737), (vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-376.902)), bool(false)))) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))[1]), bvec2(false, _GLF_IDENTITY(true, ! (! (true))))))))), max(round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-376.902)), bool(false)))) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))), round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-376.902)), bool(false)))) * determinant(mat4(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(faceforward(-400.984, -1.6, 266.725))))) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))))), (mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), sin(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), abs(1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-3.3)), float(0.0), bool(true)), mix(float(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-3.3)), max(float(_GLF_FUZZED(-3.3)), float(_GLF_FUZZED(-3.3)))), float(0.0), bool(true))), float(_GLF_FUZZED(839.273)), bool(false)))), 0.0), (mat4x3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0)) * mat4(1.0)))), round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-376.902)), _GLF_IDENTITY(bool(false), true && (bool(false)))))) * determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), (true ? mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4(-595.072, 67.95, -9.7, -7950.0405, -9316.5291, -156.043, 27.67, -467.259, -2.8, 9.0, -6.4, 5251.9710, -9.1, -641.255, 62.06, -169.798)))))))))))) * mat3(1.0)))) : _GLF_FUZZED(inverse(mat3(0.4, 6586.9398, 62.50, -616.204, -303.808, -20.51, -4.5, 197.875, 376.451)))), ((true ? mat3(mat4(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), sin(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7.3)), float(0.0), bool(true)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, _GLF_IDENTITY(abs(1.0), float(mat3x2(abs(1.0), determinant(mat3(0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)))), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), mix(float(_GLF_FUZZED(-3.3)), float(0.0), bool(true))), 0.0), (mat4x3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0)) * mat4(1.0)))), _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-376.902)), bool(false)))) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), mix(vec2((vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-376.902)), bool(_GLF_IDENTITY(false, true && (false)))))) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))[0], _GLF_FUZZED(vec4(9518.3088, -90.22, 9933.7554, -3655.3507).r)), vec2(_GLF_FUZZED(9487.3737), (vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-376.902)), bool(false)))) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))[1]), bvec2(false, _GLF_IDENTITY(true, ! (! (true))))))))), max(round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-376.902)), bool(false)))) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))), round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-376.902)), bool(false)))) * determinant(mat4(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(faceforward(-400.984, -1.6, 266.725))))) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))))), (mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), sin(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), abs(1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), log(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-3.3)), float(0.0), bool(true)), mix(float(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-3.3)), max(float(_GLF_FUZZED(-3.3)), float(_GLF_FUZZED(-3.3)))), float(0.0), bool(true))), float(_GLF_FUZZED(839.273)), bool(false)))), 0.0), (mat4x3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0)) * mat4(1.0)))), round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-376.902)), _GLF_IDENTITY(bool(false), true && (bool(false)))))) * determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), (true ? mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4(-595.072, 67.95, -9.7, -7950.0405, -9316.5291, -156.043, 27.67, -467.259, -2.8, 9.0, -6.4, 5251.9710, -9.1, -641.255, 62.06, -169.798)))))))))))) * mat3(1.0)))) : _GLF_FUZZED(inverse(mat3(0.4, 6586.9398, 62.50, -616.204, -303.808, -20.51, -4.5, 197.875, 376.451))))) * mat3(1.0))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0)))), ((transpose(transpose(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), sin(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) * abs(1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(mat4x3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.3)), float(0.0), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.9)), float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(61.38)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(_GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))))), bool(true)))), (mat4x3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0)) * mat4(1.0)))), round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-376.902)), bool(false)))) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))), _GLF_IDENTITY(mat3(mat4(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0, 0.0, 1.0, sqrt(0.0), sin(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.3)), float(0.0), bool(true))), 0.0), (mat4x3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0)) * mat4(1.0))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.3)), float(0.0), bool(true))), 0.0), (mat4x3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0)) * mat4(1.0))), (false ? _GLF_FUZZED(7379.5158) : float(_GLF_IDENTITY(mat4x3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.3)), float(0.0), bool(true))), 0.0), (mat4x3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0)) * mat4(1.0)))))), float(_GLF_FUZZED(2.5)), bool(false)))), round(length(normalize(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-376.902)), bool(false)))) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))), (mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), sin(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.3)), float(0.0), bool(true))), 0.0), (mat4x3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))) * mat4(1.0)))), round(length(normalize(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-376.902)), bool(false)))) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), float(mat2x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-376.902)), bool(false)))) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0)))))))))) * mat3(1.0)))), (true ? mat3(mat4(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), sin(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, abs(1.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.3)), float(0.0), bool(true))), 0.0), (mat4x3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0)) * mat4(1.0)))), round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-376.902)), bool(false)))) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))) + 0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.8) : _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, 0.0))))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, exp(tan(0.0)), 0.0, 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.8) : _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, 0.0))))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, exp(tan(0.0)), 0.0, 1.0, 0.0, 1.0))) - 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))), (mat3(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), sin(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, abs(1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(185151u))), float(1.0), bool(true))), max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(185151u))), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(185151u))), float(1.0), bool(true))))), log(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.3)), float(0.0), bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))))), 0.0), (mat4x3(1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 0.0, 0.0)) * mat4(1.0)))), round(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-376.902)), bool(false)))) * determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))))) * mat3(1.0)))) : _GLF_FUZZED(_GLF_IDENTITY(inverse(mat3(0.4, 6586.9398, 62.50, -616.204, -303.808, -20.51, -4.5, 197.875, 376.451)), mat3(mat4x3(_GLF_IDENTITY(inverse(mat3(0.4, 6586.9398, 62.50, _GLF_IDENTITY(-616.204, min(-616.204, -616.204)), -303.808, -20.51, -4.5, 197.875, 376.451)), transpose(_GLF_IDENTITY(transpose(inverse(mat3(0.4, 6586.9398, 62.50, -616.204, -303.808, -20.51, -4.5, 197.875, 376.451))), transpose(transpose(_GLF_IDENTITY(transpose(inverse(mat3(0.4, 6586.9398, 62.50, -616.204, -303.808, -20.51, -4.5, 197.875, 376.451))), transpose(_GLF_IDENTITY(transpose(transpose(inverse(mat3(0.4, 6586.9398, 62.50, -616.204, -303.808, -20.51, -4.5, 197.875, 376.451)))), transpose(transpose(transpose(transpose(inverse(mat3(0.4, 6586.9398, 62.50, -616.204, -303.808, -20.51, -4.5, 197.875, 376.451)))))))))))))))))))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0))))) * mat4(1.0)) / _GLF_IDENTITY(mat4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mix(vec3(_GLF_FUZZED(-7.1), _GLF_FUZZED((+ -468.683)), _GLF_FUZZED(-931.658)), vec3((vec3(1.0, 1.0, 1.0))[0], (vec3(1.0, 1.0, 1.0))[1], (vec3(1.0, 1.0, 1.0))[2]), bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), 1.0, 1.0, 1.0), (mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 1.0, 1.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) - _GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), min((0.0), (0.0))) - 0.0), 0.0, 0.0, 0.0, 0.0), (mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), min(_GLF_IDENTITY((0.0), clamp(_GLF_IDENTITY((0.0), ((0.0)) / 1.0), (0.0), (0.0))), (0.0))) - 0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))))) - 0.0))) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       break;
      }
     subgroupAll(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(true && (! (true)), bool(bvec4(_GLF_IDENTITY(true && (! (true)), false || (true && (! (true)))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), ! (! (bool(_GLF_IDENTITY(true, (true) && true))))))), (injectionSwitch.x < injectionSwitch.y)))))))));
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)))))
      continue;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
       break;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-785.713))))))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? injectionSwitch.y : _GLF_FUZZED(-0.3)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)), (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))) && true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))))))[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED((true ? 38.31 : 708.226)), _GLF_FUZZED(((5731.1374 / 7.7) + 8.7))), bvec2(false, false))).y))))
          return;
         break;
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          break;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           break;
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       break;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), ~ (_GLF_IDENTITY(~ (uint(2)), (~ (uint(2))) * (1u & 1u)))), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.5), _GLF_FUZZED(-4409.9001)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x) * 1.0) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))) || false))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
}
