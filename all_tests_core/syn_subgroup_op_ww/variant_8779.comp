#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 uvec3 GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uvec4 GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup;
 uvec4 GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec3 GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), true))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), true))))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), true))))))))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)), (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), vec2(mat2x3(max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)), 1.0, exp(0.0), 1.0, 1.0))))))).x > injectionSwitch.y)), false, true, true))) || false))))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0))), _injected_loop_counter)) < int(_GLF_ONE(1.0, injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter, int(ivec2(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)), 0))) < int(_GLF_ONE(1.0, injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)) < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), mix(float(_GLF_FUZZED(3.3)), float(clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), bool(true))))) / 1.0))), (! (_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)))) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), false, true, false)))))); _injected_loop_counter ++)
      {
       return;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(1.0)))) < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y))))))))))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false)))))
  return;
 uvec2 GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid;
 _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.xy = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid, uvec2(GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid[0], GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid[1]))) | (GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid)), (true ? GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.xy = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid, (GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid) / uvec2(1u, 1u)) : _GLF_FUZZED((uvec2(77829u, 179337u) ^ 73891u))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.xy = _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.xy, clamp(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.xy, _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.xy, min(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.xy, (GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.xy) / uvec2(1u, 1u)), GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.xy)), GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.xy));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.x = subgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))); _injected_loop_counter ++)
      {
       return;
      }
    }
   do
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), clamp(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0, determinant(mat3(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0))).x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), false || (! (_GLF_IDENTITY(! (false), (! (false)) && true)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ((! (false))) && true) && true)), false || ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ((! (false))) && true) && true)))), false || (! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), (bool(bool(true && (false)))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), (bool(bool(true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec2(bool(bvec4(false, true, true, false)), true)))))))) && true))), ! (! (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), true, false, false))))), false || ((! (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), true, false, false))))))))) && (false))), (bool(bool(true && (false)))) && true)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), (bool(bool(true && (false)))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), (bool(bool(true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))) && true))), ! (! (! (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (true)))), ! (! (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), true, false, false))))))) && (false))), (bool(bool(true && (false)))) && true)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-45.84)), bool(false))) < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(asinh(-3.1))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z = GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.x;
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(636.048), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-1557.5933)), bvec2(true, false))).x > injectionSwitch.y))));
  }
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.w = subgroup_local_id;
 GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x = GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.w;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) - 0u), 0u)), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u) - 0u), 0u)), _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(0u, (0u) - 0u), 0u))) << 0u, ((uint(uvec2(_GLF_IDENTITY(0u, (0u) - 0u), 0u))) << 0u) ^ 0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) - 0u), 0u), (uvec2(_GLF_IDENTITY(0u, (0u) - 0u), 0u)) ^ uvec2(0u, 0u))), uint(uvec2(_GLF_IDENTITY(0u, (0u) - 0u), 0u))))), 0u))))).x;
 GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w = num_workgroup;
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.xy.x = GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w, 0u | _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.xy.x = _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w, (_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup, clamp(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup, GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup, GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup)).w) | 0u), (GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.xy.x = GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w) - 0u)), _GLF_IDENTITY(1u * (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.xy.x = _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w, (GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w) | 0u), (GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.xy.x = GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w) - 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.xy.x = _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w, (GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w) | 0u), (GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.xy.x = GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w) - 0u)), ((_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.xy.x = _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w, (GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w) | 0u), (GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.xy.x = GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w) - 0u))) / 1u)) >> 0u)), (1u * (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.xy.x = _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w, (GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w) | 0u), (GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.xy.x = GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w) - 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.xy.x = _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w, (GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w) | 0u), (GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.xy.x = GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w) - 0u)), 0u | ((_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.xy.x = _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w, (GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w) | 0u), (GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.xy.x = GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w) - 0u))))) >> (0u & 144640u)), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.xy.x = _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w, _GLF_IDENTITY((GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w) | 0u, 1u * ((_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w, max(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w, min(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w, GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w)), GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w))) | _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u, (0u & 24394u)), min(uvec4(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u, (0u & 24394u)), uvec4(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u, (0u & 24394u))))), uint(uvec2(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u, (0u & 24394u)), min(uvec4(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u, (0u & 24394u)), uvec4(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u, (0u & 24394u))))), 0u))))))), (GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.xy.x = GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) ^ 0u))), ((_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.xy.x = _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w, (GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w) | 0u), (GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.xy.x = GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w) - 0u))) / 1u)) >> 0u))) >> _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), min((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))))), (GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.xy.x = GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.w) >> 0u);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(dot(vec3(-8.0, -39.18, 2.5), vec3(-9.3, 7.2, 1.9))))), injectionSwitch.x)) < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))))), _GLF_IDENTITY((! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)), true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)))))))) && true, ((! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)), true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(float(mat2((injectionSwitch.y), 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(8.4) : float(mat2((injectionSwitch.y), 0.0, 0.0, 1.0)))))), injectionSwitch.y)))))))) && true) || false)))) && (false)), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, false, false))) || (false))))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      break;
     return;
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), ! (! (bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) || false), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true))))), ((bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))) || false), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true))))), ((bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))) || false), true)))))))) && true))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec3(true, _GLF_IDENTITY(false, false || (false)), true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), bool(bvec4(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), bool(bvec4(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), bool(bvec4(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), true)), true)))))))))) && true)))) && true)) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), (bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true))))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), ! (! (bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))))) && true)))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), ! (! (bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))))) && true)))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), ! (! (bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))))) && true)), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false))), true))), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), false || (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))))))) && true)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && true)), true, true)))))))) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), (bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true))))) && true), (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), ! (! (bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))))) && true)))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), ! (! (bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))))) && true)))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), ! (! (bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))))) && true)), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, false))), true))), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), false || (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))))))) && true)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && true)), true, true)))))))) && true)), true, false, false))))))
    {
     GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.z = _GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)));
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     continue;
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), ! (! (! (_GLF_WRAPPED_LOOP(false)))))))))));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(335.009) : injectionSwitch.y)), 0.0, log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(335.009) : injectionSwitch.y)), 0.0, log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), 0.0 + (float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(335.009) : injectionSwitch.y)), 0.0, log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(335.009) : injectionSwitch.y)), 0.0, log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, tan(0.0), 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0)), max(float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(335.009) : injectionSwitch.y)), 0.0, log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(335.009) : injectionSwitch.y)), 0.0, log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), 0.0 + (float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(335.009) : injectionSwitch.y)), 0.0, log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(335.009) : injectionSwitch.y)), 0.0, log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, tan(0.0), 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0)), float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(335.009) : injectionSwitch.y)), 0.0, log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(335.009) : injectionSwitch.y)), 0.0, log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), 0.0 + (float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(335.009) : injectionSwitch.y)), 0.0, log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), mat3(1.0) * (mat4x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(335.009) : injectionSwitch.y)), 0.0, log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, tan(0.0), 0.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0))))))), false, true, true)))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))
      {
       for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (~ (int(4)))), int(4))) >> _GLF_IDENTITY(int(4), int(4))) ^ 1)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(23.33) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(23.33) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(23.33) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) - 0.0), length(vec3(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), determinant(mat3(1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), sin(log(1.0)))))))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))))
        return;
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    break;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.y = workgroup_id;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat2x3((injectionSwitch) * mat2(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0)))).y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.z * GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, 0u + (workgroup_base + _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id, uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.g)))) << 0u), 0u, 0u) ^ (_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id, ~ (~ (GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id)))), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id, ~ (~ (GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id)))), ((_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id, ~ (~ (GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id))))) >> uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, 0u, 0u, 0u)) | (GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id)))).z * _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, max(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, clamp(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid, (GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid) | (GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid))) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u)))).y, GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y)), GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, 0u + (_GLF_IDENTITY(workgroup_base, (workgroup_base) + _GLF_IDENTITY(0u, min(0u, 0u))) + GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, uint(uvec4(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, 0u, 1u, (0u | 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, (workgroup_base + _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z, (_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z, 1u * (GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z))) | (_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z, ~ (_GLF_IDENTITY(~ (GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z), 0u ^ (~ (GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z))))))) * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y) >> 0u), 0u + (_GLF_IDENTITY(workgroup_base + GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid, ~ (~ (GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid))).y, (false ? _GLF_FUZZED(workgroup_id) : workgroup_base + GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid, ~ (~ (GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid))).y))))) ^ (0u ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)), (0u) >> 0u), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))), _GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), 0u | (uint(4u)))), 0u ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u | (uint(4u))), min(_GLF_IDENTITY(uint(4u), 0u | (uint(4u))), _GLF_IDENTITY(uint(4u), 0u | (uint(4u)))))), (~ (_GLF_IDENTITY(uint(4u), 0u | (uint(4u))))) - 0u)))))))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id)).z * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, 0u + (workgroup_base + GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), 0u, (1u | 0u)))) + GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, uint(uvec2(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, 0u))), 0u + (workgroup_base + GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y))), max((_GLF_IDENTITY(workgroup_base + GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, _GLF_IDENTITY(0u, (0u) * 1u) + _GLF_IDENTITY((workgroup_base + GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y), ((workgroup_base + GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y)) - 0u))), (_GLF_IDENTITY(workgroup_base + GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, 0u + (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, max(GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec3(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), 0u, (1u | 0u)))) + GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, uint(uvec2(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, 0u))), 0u + (workgroup_base + GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y))), max((_GLF_IDENTITY(workgroup_base + GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, _GLF_IDENTITY(0u, (0u) * 1u) + _GLF_IDENTITY((workgroup_base + GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y), ((workgroup_base + GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y)) - 0u))), (_GLF_IDENTITY(workgroup_base + GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, 0u + (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, max(GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y)))))))) ^ 0u) ^ (0u ^ 0u)), _GLF_IDENTITY(0u, (0u) >> 0u), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) | 0u)))) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u))))))) + GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, ~ (~ _GLF_IDENTITY((GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y), ((GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y)) << (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))), 0u + (workgroup_base + GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y)) + GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x) << _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u), ~ (~ ((0u)))), uint(_GLF_IDENTITY(uvec4((0u), 0u, 1u, 1u), max(uvec4(_GLF_IDENTITY((0u), ((0u)) | ((0u))), 0u, 1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), 1u))))), _GLF_IDENTITY(uvec4((0u), 0u, 1u, 1u), clamp(uvec4((0u), 0u, 1u, 1u), uvec4((0u), 0u, 1u, 1u), _GLF_IDENTITY(uvec4((0u), 0u, 1u, 1u), ~ (~ (uvec4((0u), 0u, 1u, 1u)))))))))) << 0u));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z = virtual_gid;
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, max(1, 1)))))); _injected_loop_counter ++)
  {
   do
    {
     GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.xy.y = GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.z;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z, (GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z) | 0u) * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, (workgroup_base + GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.z * GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y) << 0u) + ((GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x + 1) % GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y);
 GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.z = next_virtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.5)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x, injectionSwitch.x)))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(674.810)), float(injectionSwitch.y), bool(true))), float(mat3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(674.810)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(0.0), 1.0, 0.0, log(1.0), abs(0.0), log(1.0))))))))
    {
     do
      {
       return;
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             continue;
            }
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false || (bool(bvec2(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))))))))
              break;
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               return;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) || false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))) || false))) || false)))
            break;
          }
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(! (! ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(! (! ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
            return;
          }
        }
      }
     while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), (! (_GLF_WRAPPED_LOOP(false))) || false))));
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> 0), 1, 1)) ^ (0 ^ 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1)) << _GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) + 0) : _GLF_FUZZED(26812)))), int(4)), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4))))) ^ 0), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, min(4, 4)), 4, _GLF_IDENTITY(4, 0 | (4))))))))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4)))) | ((1 << _GLF_IDENTITY(int(4), int(4)))), 0 ^ (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), 0 | (int(4)))) / 1), int(4)))) | ((1 << _GLF_IDENTITY(int(4), int(4)))))))) | ((1 << _GLF_IDENTITY(int(4), int(4))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), max(int(4), int(4))), int(4)))); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
          {
           return;
          }
         else
          {
          }
        }
      }
     atomicStore(buf[GLF_merged3_0_2_49_2_1_11_3_1_17GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_idsubgroup_local_id.xy.y], uint(1), 4, 64, 4);
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x + 1 < _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, (GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y) | 0u), min(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, (GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y) | 0u), _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y, (GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y) | 0u))), bool(_GLF_IDENTITY(bool(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x + 1 < GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x, max(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x, _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x, clamp(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x, _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x) << 0u), GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x)))) + 1 < GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y)), bool(bvec4(_GLF_IDENTITY(! (bool(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x + 1 < GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y)), ! (! (! (bool(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x + 1, max(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 | (1)))), max(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x + 1, _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x + 1, (GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x + 1) - 0u))), GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x + 1)) < GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), bool(bool((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x, max(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x, _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x, clamp(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x, _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x, (GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x) << 0u), GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x)))) + 1 < GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y)), bool(bvec4(_GLF_IDENTITY(! (bool(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x + 1 < GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y)), ! (! (! (bool(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x + 1, max(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 | (1)))), max(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x + 1, _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x + 1, (GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x + 1) - 0u))), GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size.x + 1)) < GLF_merged3_0_1_11_1_1_13_2_1_11subgroup_idsubgroup_sizevirtual_gid.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))))))
  {
   for(int _injected_loop_counter = (((1 & 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(_GLF_IDENTITY(-66624, min(_GLF_IDENTITY(-66624, (-66624) | (-66624)), -66624))) : int(3)))), (0 | (1 ^ 1)) | (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(-66624) : int(3))))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY((3), min((3), (3))) | 0)), int(ivec2(int(_GLF_IDENTITY(3, (3) | 0)), 0))), min(_GLF_IDENTITY(int(3), min(int(3), int(3))), int(3))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.z, (0u | 0u) + (_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.z, min(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.z, _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.z, (false ? _GLF_FUZZED(workgroup_id) : GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.z))))))], uint(2), _GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, int(int(4))) : _GLF_FUZZED(ivec3(75282, -51993, -81084)[1]))), 64, _GLF_IDENTITY(4, (4) / 1));
    }
   do
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
          {
          }
         else
          {
           subgroupAll(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))));
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          continue;
         if(_GLF_DEAD(false))
          return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(_GLF_IDENTITY(false, (false) || false))))));
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     atomicStore(buf[GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidnext_virtual_gidnum_workgroup.z], uint(2), 4, _GLF_IDENTITY(64, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((64))) | (64)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(64, (64) | (64)))), int(ivec3((~ _GLF_IDENTITY((_GLF_IDENTITY(64, (64) | (64))), ((_GLF_IDENTITY(64, (64) | (64)))) * 1)), 0, 1))))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(64, (64) | (64)))), ((~ (_GLF_IDENTITY(64, (64) | (64))))) | (0 >> _GLF_IDENTITY(int(2), int(2)))), int(ivec3((~ (_GLF_IDENTITY(64, (64) | (64)))), 0, 1)))))) | (~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 ^ (64))) - 0)) | (_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) - (0 >> _GLF_IDENTITY(int(7), int(7)))), 64, _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-28849))))))))), int(_GLF_IDENTITY(ivec3((~ (_GLF_IDENTITY(64, (64) | (64)))), 0, 1), ivec3(ivec4(ivec3((~ (_GLF_IDENTITY(64, (64) | (64)))), 0, 1), 0)))))))))), min(_GLF_IDENTITY((~ (_GLF_IDENTITY(64, (64) | _GLF_IDENTITY((64), (true ? (64) : _GLF_FUZZED(-33523)))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(64, (64) | (64))), ((_GLF_IDENTITY(64, (64) | (64)))) << 0)), int(ivec3((~ (_GLF_IDENTITY(64, (64) | (64)))), 0, 1))))), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(64, (64) | (64)))), int(ivec3((~ (_GLF_IDENTITY(64, (64) | (64)))), 0, 1))))), ~ (~ ((~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(64, (64) | (64)))), int(ivec3((~ (_GLF_IDENTITY(64, (64) | (64)))), 0, 1))))))))) | (~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(64, (64) | (64)))), int(ivec3((~ (_GLF_IDENTITY(64, (64) | (64)))), _GLF_IDENTITY(0, clamp(0, 0, 0)), 1)))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (64) | (64)))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(64, (64) | (64)))), int(ivec3((~ (_GLF_IDENTITY(64, (64) | (64)))), _GLF_IDENTITY(0, (0) ^ 0), 1))))), (~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) | (64)))), _GLF_IDENTITY(int(ivec3((~ (_GLF_IDENTITY(64, (64) | (64)))), 0, 1)), 0 ^ (int(ivec3((~ (_GLF_IDENTITY(64, (64) | (64)))), 0, 1)))))))) | (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64), max((64), (64))) | (64)))), min((~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64), max((64), (64))) | (64)))), (~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64), max((64), (64))) | (64)))))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64), max((64), (64))) | (64)))), min((~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64), max((64), (64))) | (64)))), (~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64), max((64), (64))) | (64)))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64), max((64), (64))) | (64)))), min((~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64), max((64), (64))) | (64)))), (~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64), max((64), (64))) | (64)))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64), max((64), (64))) | (64)))), min((~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64), max((64), (64))) | (64)))), (~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64), max((64), (64))) | (64)))))))), int(ivec3(_GLF_IDENTITY((~ (_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, _GLF_IDENTITY(64, min(64, 64)), 64), 0 + (clamp(64, _GLF_IDENTITY(64, _GLF_IDENTITY(min(64, 64), int(int(min(64, 64))))), 64)))))))), 0 ^ ((~ (_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, _GLF_IDENTITY(64, min(64, 64)), 64), 0 + (clamp(64, _GLF_IDENTITY(64, _GLF_IDENTITY(min(64, 64), int(int(min(64, 64))))), 64)))))))))), 0, 1))))))))))), 4);
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))
      return;
    }
   subgroupAll(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bool((false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0))))), log(1.0)), mat2x3(mat2x3(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0))))), log(1.0)))))), min(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0))))), log(1.0)), mat2x3(mat2x3(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0))))), log(1.0)))))), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, sqrt(0.0), sin(0.0), 0.0, abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0))))), log(1.0)), mat2x3(mat2x3(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0))))), log(1.0))))))))).y))))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = ((0 | 0) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             return;
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) > (-55006 & 0)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0)))))))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))));
              }
            }
           for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(_GLF_IDENTITY(int(_injected_loop_counter), (int(_injected_loop_counter)) * 1)), ~ (~ (int(_GLF_IDENTITY(int(_injected_loop_counter), (int(_injected_loop_counter)) * 1)))))), _injected_loop_counter, _injected_loop_counter)) < 1), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              return;
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 return;
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              return;
             do
              {
               if(_GLF_DEAD(false))
                break;
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           else
            {
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  return;
                 return;
                }
              }
             if(_GLF_DEAD(false))
              continue;
            }
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
        {
         return;
        }
      }
    }
   else
    {
    }
  }
 else
  {
  }
}
