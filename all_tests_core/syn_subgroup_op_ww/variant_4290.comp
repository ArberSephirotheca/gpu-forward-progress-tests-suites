#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 bvec4 _f0;
} ;

struct _GLF_struct_10 {
 mat2x4 _f0;
 _GLF_struct_9 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_7 {
 bvec4 _f0;
} ;

struct _GLF_struct_6 {
 int _f0;
 bool _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_5 {
 mat2 _f0;
 mat2x3 _f1;
 mat4 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
} ;

struct _GLF_struct_3 {
 uvec2 _f0;
 mat2 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
 bvec3 _f1;
 mat4x3 _f2;
 ivec4 _f3;
 uint _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 mat2x3 _f1;
 ivec4 _f2;
 vec4 _f3;
 uvec2 _f4;
 bvec3 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_0 {
 float _f0;
 float _f1;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 vec2 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
} ;

struct _GLF_struct_11 {
 bvec4 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_8 _f2;
 ivec3 _f3;
 uint virtual_gid;
 _GLF_struct_10 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> (uvec3(0u, 0u, 0u) & uvec3(104655u, 62404u, 67979u))).x, 1u, 1u), (uvec3(gl_NumWorkGroups.x, 1u, 1u)) >> uvec3(0u, 0u, 0u))), 0u ^ (uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 1u, 1u), (uvec3(gl_NumWorkGroups.x, 1u, 1u)) >> uvec3(0u, 0u, 0u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (0u | 0u) ^ (gl_NumWorkGroups.x)), max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) << 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))), uint(uvec2((_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))), 0u))) << 0u, (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) << 0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), min(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))) << 0u, ~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) << 0u))), max((_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) << 0u, (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) << 0u)))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(bvec4(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), _GLF_struct_4(_GLF_struct_0(1.0, 1.0), _GLF_struct_1(mat4x3(1.0), mat2x3(1.0), ivec4(1), vec4(1.0), uvec2(1u), bvec3(true), bvec3(true)), vec2(1.0), _GLF_struct_2(ivec4(1), bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), mat4x3(1.0), ivec4(1), 1u, ivec4(1)), _GLF_struct_3(uvec2(1u), mat2(1.0), uvec3(1u))), _GLF_struct_8(_GLF_struct_5(mat2(1.0), mat2x3(1.0), _GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY(transpose(transpose(mat4(1.0))), _GLF_IDENTITY((transpose(transpose(mat4(1.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(2.6)), bool(false))))), 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), ((transpose(transpose(mat4(1.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), mat2x3(1.0)), _GLF_struct_6(1, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bvec3((! (true)), true, true)), (bool(bvec3((! (true)), true, true))) || false))))))))))), mat3x2(1.0)), _GLF_struct_7(bvec4(true))), ivec3(1), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_struct_10(mat2x4(1.0), _GLF_struct_9(bvec4(true)), ivec4(1)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), injectionSwitch.y)))), true, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_struct_replacement_11.virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(workgroup_size))) + 1 < subgroup_size, true && _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), max(uvec4(subgroup_local_id + 1, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), uvec4(subgroup_local_id + 1, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) < subgroup_size), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)) && true)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true))), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(packHalf2x16(vec2(-16.77, 882.270))) : subgroup_local_id + 1)) < subgroup_size)) && true)))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true))), _GLF_IDENTITY(bool(bool(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true))))), true && (bool(bool(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)) && true))))))))), bool(bvec3(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && _GLF_IDENTITY(true, false || (true)), bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))))))))) || false))), true, false))), true, true)))))), false || ((_GLF_IDENTITY(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true))), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)))), bool(bvec3(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))))))), bool(bvec3(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))))))))) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true), false, true)))))), true, false))), true, true)))))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)) && true), (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)) && true)) && true)), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(74993) : 1)), (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), int(ivec3(int(6), 1, 1)))))))) < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)), ((_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true))) && true)), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)))) < subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0) < subgroup_size)) && true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)))), bool(bvec3(bool(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), true, false))), true, true)), _GLF_IDENTITY(true, true && (true)) && (bool(bvec3(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)))), bool(bvec3(bool(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), true, false))), true, true)))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(workgroup_size))) + 1 < subgroup_size, true && _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), max(uvec4(subgroup_local_id + 1, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), uvec4(subgroup_local_id + 1, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, 0u | (_GLF_IDENTITY(4u, (4u) - 0u))), _GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (4u) | 0u)) | 0u), 4u))), uint(4u)))))))) < subgroup_size), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(subgroup_local_id + 1 < subgroup_size, true, true, false)))), ((subgroup_local_id + 1 < subgroup_size)) && true)) && true)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true))), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)))), bool(bvec3(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY(false, (false) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))))))))) || false))), true, false))), true, true)), _GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)), (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true))) && true))), bool(bvec3(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))))))))) || false))), true, false))), true, true)))), ! (! (bool(bool(bool(bvec3(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)))), bool(bvec3(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, (false) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))))))))) || false))), true, false))), true, true)))))))))))), false || ((_GLF_IDENTITY(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true))), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))) < subgroup_size)) && true)))), bool(bvec3(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)))), bool(bvec3(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)))) || (_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))))), ! (! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))))))))))))))) || false))), true, false))), true, true)))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)) && true)), ! (! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)) && true))))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)), ((_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)) < subgroup_size)) && true))) && true)), bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)))) < subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0) < subgroup_size)) && true))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)))) < subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0) < subgroup_size)) && true))), false || ((! (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)))) < subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0) < subgroup_size)) && true))))))))), bool(bvec3(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)))), bool(bvec3(bool(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), true, false))), true, true)))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(workgroup_size))) + 1, (_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(workgroup_size))) + 1) / 1u) < subgroup_size, true && _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), max(uvec4(subgroup_local_id + 1, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), uvec4(subgroup_local_id + 1, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) < subgroup_size), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)) && true)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true))), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)))), bool(bvec3(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)))), bool(bvec3(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) || false))))))))) || false))), true, false))), true, true)))))), false || ((_GLF_IDENTITY(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true))), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1)) < subgroup_size)) && true)))), bool(bvec3(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)))), bool(bvec3(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))))))))) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false)))))))), _GLF_IDENTITY(false, (false) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))) < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))))))))) || false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size)) && true, _GLF_IDENTITY(bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))), (bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))) || false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.0) : injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), _GLF_IDENTITY(false, (false) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))))))))) || false))), true))))), true, false))), true, true)))))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)) && true)), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)), ((_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true))) && true)), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)))) < subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0) < subgroup_size)) && true)))), bool(bvec3(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)))), bool(bvec3(bool(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), true, false))), true, true)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(workgroup_size))) + 1 < subgroup_size, true && _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), max(uvec4(subgroup_local_id + 1, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), uvec4(subgroup_local_id + 1, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))) < subgroup_size), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)) || false), (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)) && true)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) + 0u) + 1 < subgroup_size)) && true))), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)))), bool(bvec3(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)))), bool(bvec3(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))))))))) || false))), true, false))), true, true)))))), false || _GLF_IDENTITY(((_GLF_IDENTITY(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true))), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)))), bool(bvec3(_GLF_IDENTITY(bool(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0) < subgroup_size), false || ((subgroup_local_id + 1 < subgroup_size))), ((subgroup_local_id + 1 < subgroup_size)) && true))), bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0) < subgroup_size), false || ((subgroup_local_id + 1 < subgroup_size))), ((subgroup_local_id + 1 < subgroup_size)) && true))), ((! (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0) < subgroup_size), false || ((subgroup_local_id + 1 < subgroup_size))), ((subgroup_local_id + 1 < subgroup_size)) && true)))) && true), true, false)))), bool(bvec3(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, _GLF_IDENTITY(bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))), bool(bvec3(bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))), true, false)))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))))), true && ((_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))))))))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(72.18, -8.5)) : injectionSwitch)).x > injectionSwitch.y)) || (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))))))))) || _GLF_IDENTITY(false, ! (! (false)))))), true, false))), true, true))))))), ! (! (((_GLF_IDENTITY(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true))), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)))), bool(bvec3(_GLF_IDENTITY(bool(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0) < subgroup_size), false || ((subgroup_local_id + 1 < subgroup_size))), ((subgroup_local_id + 1 < subgroup_size)) && true))), bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0) < subgroup_size), false || ((subgroup_local_id + 1 < subgroup_size))), ((subgroup_local_id + 1 < subgroup_size)) && true))), ((! (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0) < subgroup_size), false || ((subgroup_local_id + 1 < subgroup_size))), ((subgroup_local_id + 1 < subgroup_size)) && true)))) && true), true, false)))), bool(bvec3(bool(! (_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, _GLF_IDENTITY(bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))), bool(bvec3(bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))), true, false)))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))))), true && ((_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))))))))) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(72.18, -8.5)) : injectionSwitch)).x > injectionSwitch.y)) || (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))))))))) || _GLF_IDENTITY(false, ! (! (false)))))), true, false))), true, true))))))))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true)) && true)), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))) && true)), ((_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) && true))) && true)), bool(_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)))) < subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0) < subgroup_size)) && true)))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), ((subgroup_local_id + 1 < subgroup_size)) && true))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), ((subgroup_local_id + 1 < subgroup_size)) && true))), true && (! (! (_GLF_IDENTITY((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)), ((subgroup_local_id + 1 < subgroup_size)) && true))))))))), bool(bvec3(bool(! (! _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bool(bvec2((_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1 < subgroup_size)) && true, bool(bvec4(((subgroup_local_id + 1 < subgroup_size)) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false))), true, true))))))))))))) || false), true, false, true))))))
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) && true) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(3.2, 23.23), clamp(vec2(3.2, 23.23), vec2(3.2, 23.23), vec2(3.2, 23.23)))))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9982.5286))), 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true && (injectionSwitch.x > injectionSwitch.y))) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), true, false))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true))), false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-68.12)), bool(false))) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(38.01)), bool(false)))))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
}
