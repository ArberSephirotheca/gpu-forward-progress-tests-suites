#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[1], ~ (~ (gl_NumWorkGroups[1]))), _GLF_IDENTITY(gl_NumWorkGroups[2], (false ? _GLF_FUZZED(38858u) : gl_NumWorkGroups[2]))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[1], ~ (~ (gl_NumWorkGroups[1]))), _GLF_IDENTITY(gl_NumWorkGroups[2], (false ? _GLF_FUZZED(38858u) : gl_NumWorkGroups[2]))), (uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[1], ~ (~ (gl_NumWorkGroups[1]))), _GLF_IDENTITY(gl_NumWorkGroups[2], (false ? _GLF_FUZZED(38858u) : gl_NumWorkGroups[2])))) | (_GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[1], ~ (~ (gl_NumWorkGroups[1]))), _GLF_IDENTITY(gl_NumWorkGroups[2], (false ? _GLF_FUZZED(38858u) : gl_NumWorkGroups[2]))), uvec3(1u, 1u, 1u) * (uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[1], ~ (~ _GLF_IDENTITY((gl_NumWorkGroups[1]), uint(_GLF_IDENTITY(uvec3((gl_NumWorkGroups[1]), 0u, 1u), clamp(uvec3((gl_NumWorkGroups[1]), 0u, 1u), uvec3((gl_NumWorkGroups[1]), 0u, 1u), _GLF_IDENTITY(uvec3((gl_NumWorkGroups[1]), 0u, 1u), (uvec3((gl_NumWorkGroups[1]), 0u, 1u)) | (uvec3((gl_NumWorkGroups[1]), 0u, 1u))))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], (false ? _GLF_FUZZED(38858u) : gl_NumWorkGroups[2])), (_GLF_IDENTITY(gl_NumWorkGroups[2], (false ? _GLF_FUZZED(38858u) : gl_NumWorkGroups[2]))) / 1u))))))))).x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(injectionSwitch))).x)) | (gl_NumWorkGroups.x));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), clamp((subgroup_id), _GLF_IDENTITY((subgroup_id), uint(uvec3(_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))), (0u | 0u), 1u))), _GLF_IDENTITY((subgroup_id), ((subgroup_id)) - 0u))))), subgroup_id)), (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), subgroup_id))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(uvec3(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) | (_GLF_FUZZED(subgroup_local_id))), 1u, 0u))))), _GLF_IDENTITY(uint(uvec2(subgroup_id * subgroup_size, 0u)), min(_GLF_IDENTITY(uint(uvec2(subgroup_id * subgroup_size, 0u)), uint(uvec2(uint(uvec2(subgroup_id * subgroup_size, 0u)), 1u))), uint(uvec2(subgroup_id * subgroup_size, 0u))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (subgroup_id * subgroup_size) | 0u), 0u, 1u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(uint(uint(subgroup_id * subgroup_size)), _GLF_IDENTITY(0u + (uint(uint(subgroup_id * subgroup_size))), max(0u + (uint(uint(subgroup_id * subgroup_size))), 0u + (uint(uint(subgroup_id * subgroup_size)))))))) + 0u), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) | (0u)))))) : subgroup_id * subgroup_size, (0u << _GLF_IDENTITY(uint(7u), uint(7u))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) | (0u)))))) : subgroup_id * subgroup_size, uint(uvec3(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) | (0u)))))) : subgroup_id * subgroup_size, 0u, 1u)))))))))) | 0u) + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))))), _GLF_IDENTITY(subgroup_local_id, uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u)));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) | 0u, (_GLF_IDENTITY((subgroup_local_id), 0u | ((subgroup_local_id))) | 0u) + (1u ^ ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), ((subgroup_local_id) | 0u) | ((subgroup_local_id) | 0u))), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, 0), (_GLF_IDENTITY(ivec3(1, 0, 0), clamp(ivec3(1, 0, 0), ivec3(1, 0, 0), ivec3(1, 0, 0)))) - ivec3(0, 0, 0))), _GLF_IDENTITY(min(int(ivec3(1, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | 0))), int(ivec3(1, 0, 0))), int(int(min(int(ivec3(1, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | 0))), int(ivec3(1, 0, 0)))))))) < subgroup_size, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u))) < subgroup_size, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, bool(bvec2(true, false)))), true, false)), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, bool(bvec2(true, false)))), true, false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, bool(bvec2(true, false)))), true, false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, bool(bvec2(true, false)))), bvec2(bvec2(bvec2(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, bool(bvec2(true, false))))))), true, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))))))))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, bool(bvec2(true, false)))), _GLF_IDENTITY(true, (true) && true), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(true, bool(bvec2(true, false)))), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(bvec4(bvec2(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), false))))), bool(bvec2(true, false)))), true, false)))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) << 0u) < _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), _GLF_IDENTITY(false, (false) || false)))))), bool(bvec2(true, false)))), true, false))))))))))))), false, true))))))))
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), ((! (_GLF_WRAPPED_IF_FALSE(false)))) && true), ((! (_GLF_WRAPPED_IF_FALSE(false)))) || false)))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) || false))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), false || (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), false || ((_GLF_WRAPPED_IF_FALSE(false))))))))))), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(bool(bvec3((_GLF_WRAPPED_IF_FALSE(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3((_GLF_WRAPPED_IF_FALSE(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false))))), _GLF_IDENTITY(true && (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! ((_GLF_WRAPPED_IF_FALSE(false)))))))), bool(bvec3((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))) || (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(359.036)), bool(false))) > injectionSwitch.y)), false))) && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))))), ! (! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false)))))), (! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))))) && true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false))))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_IDENTITY(((_GLF_WRAPPED_IF_FALSE(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((_GLF_WRAPPED_IF_FALSE(false))))))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false)))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false))))))), true && (! (((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false))))))))))))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(347.629))))), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(359.036)), bool(false))) > injectionSwitch.y)), false))) && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))))), ! (! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false)))))), (! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))))) && true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false))))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_IDENTITY(((_GLF_WRAPPED_IF_FALSE(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((_GLF_WRAPPED_IF_FALSE(false))))))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false)))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false))))))), true && (! (((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false))))))))))))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(347.629))))), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), false || ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(359.036)), bool(false))) > injectionSwitch.y)), false))) && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))))), (_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(359.036)), bool(false))) > injectionSwitch.y)), false))) && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))))), ! (! (! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(359.036)), bool(false))) > injectionSwitch.y)), false))) && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))))))))) && true), ! (! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false)))))), (! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))))) && true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1785.5799)), bool(false))))) > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false))))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_IDENTITY(((_GLF_WRAPPED_IF_FALSE(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((_GLF_WRAPPED_IF_FALSE(false))))))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))) && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))))) && _GLF_IDENTITY(true, (true) && true)), false, true, false)))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)), true && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false))))))), true && (! (((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(5564.7802)), bool(false)))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), (_GLF_WRAPPED_IF_FALSE(false)) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), (_GLF_WRAPPED_IF_FALSE(false)) && true))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(5564.7802)), bool(false)))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), (_GLF_WRAPPED_IF_FALSE(false)) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), (_GLF_WRAPPED_IF_FALSE(false)) && true))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false)))))))))))))))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(347.629))))), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false)))), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)))))))))))) && true))))))), true && (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), false || (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), false || ((_GLF_WRAPPED_IF_FALSE(false))))))))))), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), false || ((_GLF_WRAPPED_IF_FALSE(false)))), _GLF_IDENTITY(bool(bvec3((_GLF_WRAPPED_IF_FALSE(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3((_GLF_WRAPPED_IF_FALSE(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false))))), _GLF_IDENTITY(true && (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! ((_GLF_WRAPPED_IF_FALSE(false)))))))), bool(bvec3((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), false))) && ((_GLF_WRAPPED_IF_FALSE(false)))), ! (! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))), false))) && ((_GLF_WRAPPED_IF_FALSE(false)))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))) || (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(359.036)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(329.210) : injectionSwitch.y)))), false))) && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))))), ! (! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false))) && ((_GLF_WRAPPED_IF_FALSE(false)))))), _GLF_IDENTITY((! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))))) && true, bool(bvec2((! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))))) && true, false))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true && (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false)) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, false))))), false)), ! (! (bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false))) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false))))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true, false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_IDENTITY(((_GLF_WRAPPED_IF_FALSE(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((_GLF_WRAPPED_IF_FALSE(false))))))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false)))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false))))))), true && (! (((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), bool(bvec3(! (_GLF_WRAPPED_IF_FALSE(false)), false, false))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_WRAPPED_IF_FALSE(false)))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), injectionSwitch.y)))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false)))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), true, true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), true, true))))))) || false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false))))))), true && (! (((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false)))))))))))) && true))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(347.629))))), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y))))))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-75.33) : injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(359.036)), bool(false))) > injectionSwitch.y)), false))) && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))))), ! (! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false)))))), (! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))))) && true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false))))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_IDENTITY(((_GLF_WRAPPED_IF_FALSE(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((_GLF_WRAPPED_IF_FALSE(false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) || false, bool(bvec3((_GLF_IDENTITY(true, (true) || false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)) && true, true && ((_GLF_WRAPPED_IF_FALSE(false)) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-653.139) : injectionSwitch.x))), bool(true))) > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-653.139) : injectionSwitch.x))), bool(true))) > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false)), (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-653.139) : injectionSwitch.x))), bool(true))) > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false))) || false))))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false)))), false, false, false))))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))).x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false))))))), true && (! (((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true, true)))) || false))) && true), false, true, false))))))))))))), true && ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) || false, bool(bvec3((_GLF_IDENTITY(true, (true) || false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)) && true, true && ((_GLF_WRAPPED_IF_FALSE(false)) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-653.139) : injectionSwitch.x))), bool(true))) > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-653.139) : injectionSwitch.x))), bool(true))) > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false)), (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-653.139) : injectionSwitch.x))), bool(true))) > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false))) || false))))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false)))), false, false, false))))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))).x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false))))))), true && (! (((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true, true)))) || false))) && true), false, true, false))))))))))))))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(347.629))))), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))), (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true, false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-640.117, -3.4, 7.5, 4373.6064).r), _GLF_FUZZED(vec4(-91.01, -8.0, 2.8, 3.8).s)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)))).x < injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), false || ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(_GLF_IDENTITY(bvec3((_GLF_WRAPPED_IF_FALSE(false)), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_WRAPPED_IF_FALSE(false)), false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3((_GLF_WRAPPED_IF_FALSE(false)), false, true), false))))))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(359.036)), bool(false))) > injectionSwitch.y)), false))) && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))))), (_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(359.036)), bool(false))) > injectionSwitch.y)), false))) && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))), (_GLF_WRAPPED_IF_FALSE(false)) || false)))))), ! (! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(359.036)), bool(false))) > injectionSwitch.y)), false))) && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))))), bool(bvec2(! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(359.036)), bool(false))) > injectionSwitch.y)), false))) && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))))), false))))))) && true), ! (! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (_GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bool(bool(bvec3(false, true, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && ((_GLF_WRAPPED_IF_FALSE(false)))))), (! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))))) && true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, ! (! ((true) || false)))))))) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1785.5799)), bool(false))))) > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false))))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_IDENTITY(((_GLF_WRAPPED_IF_FALSE(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((_GLF_WRAPPED_IF_FALSE(false))))))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))) && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), true, false, true))))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-478.159)), bool(false))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), true, false, true))))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-478.159)), bool(false))))))), (bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), true, false, true))))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-478.159)), bool(false)))))))) || false)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), true, true)))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bool((_GLF_WRAPPED_IF_FALSE(false)))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))))) && _GLF_IDENTITY(true, (true) && true)), false, true, false)))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bool((_GLF_WRAPPED_IF_FALSE(false)))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)), true && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false))))))), true && (! (((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(5564.7802)), bool(false)))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), (_GLF_WRAPPED_IF_FALSE(false)) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), (_GLF_WRAPPED_IF_FALSE(false)) && true))) && true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(fract(-0.9)))) > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false)), _GLF_IDENTITY(! (! (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(5564.7802)), bool(false)))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), (_GLF_WRAPPED_IF_FALSE(false)) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), (_GLF_WRAPPED_IF_FALSE(false)) && true))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false)))), bool(bvec2(! (! (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(5564.7802)), bool(false)))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), (_GLF_WRAPPED_IF_FALSE(false)) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), (_GLF_WRAPPED_IF_FALSE(false)) && true))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(347.629), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (true ? injectionSwitch.y : _GLF_FUZZED(347.629))))))), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bool(_GLF_IDENTITY((true) || false, ! (! ((true) || false)))))))) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false)))), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), _GLF_IDENTITY(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (_GLF_IDENTITY(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))) && ((_GLF_WRAPPED_IF_FALSE(false))))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(true, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)))))))))))) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-75.33) : injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(359.036)), bool(false))) > injectionSwitch.y)), false))) && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))))), ! (! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false)))))), (! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))))) && true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false))))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_IDENTITY(((_GLF_WRAPPED_IF_FALSE(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((_GLF_WRAPPED_IF_FALSE(false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) || false, bool(bvec3((_GLF_IDENTITY(true, (true) || false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)) && true, true && ((_GLF_WRAPPED_IF_FALSE(false)) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-653.139) : injectionSwitch.x))), bool(true))) > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-653.139) : injectionSwitch.x))), bool(true))) > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false)), (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-653.139) : injectionSwitch.x))), bool(true))) > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false))) || false))))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false)))), false, false, false))))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))).x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false))))))), true && (! (((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true, true)))) || false))) && true), false, true, false))))))))))))), true && ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) || false, bool(bvec3((_GLF_IDENTITY(true, (true) || false)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)) && true, true && ((_GLF_WRAPPED_IF_FALSE(false)) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-653.139) : injectionSwitch.x))), bool(true))) > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-653.139) : injectionSwitch.x))), bool(true))) > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false)), (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-653.139) : injectionSwitch.x))), bool(true))) > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false))) || false))))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false)))), false, false, false))))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))).x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false))))))), true && (! (((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true, true)))) || false))) && true), false, true, false))))))))))))))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(347.629))))), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))), (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true, false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-640.117, -3.4, 7.5, 4373.6064).r), _GLF_FUZZED(vec4(-91.01, -8.0, 2.8, 3.8).s)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)))).x < injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), false || ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(_GLF_IDENTITY(bvec3((_GLF_WRAPPED_IF_FALSE(false)), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_WRAPPED_IF_FALSE(false)), false, true), false)), bvec3(bvec3(bvec3(bvec4(bvec3((_GLF_WRAPPED_IF_FALSE(false)), false, true), false))))))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(359.036)), bool(false))) > injectionSwitch.y)), false))) && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))))), (_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(359.036)), bool(false))) > injectionSwitch.y)), false))) && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))), (_GLF_WRAPPED_IF_FALSE(false)) || false)))))), ! (! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(359.036)), bool(false))) > injectionSwitch.y)), false))) && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))))), bool(bvec2(! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(359.036)), bool(false))) > injectionSwitch.y)), false))) && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)))))), false))))))) && true), ! (! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (_GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bool(bool(bvec3(false, true, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && ((_GLF_WRAPPED_IF_FALSE(false)))))), (! ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))))) && true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true) || false, ! (! ((true) || false)))))))) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1785.5799)), bool(false))))) > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false))))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_IDENTITY(((_GLF_WRAPPED_IF_FALSE(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((_GLF_WRAPPED_IF_FALSE(false))))))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)))) && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), true, false, true))))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-478.159)), bool(false))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), true, false, true))))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-478.159)), bool(false))))))), (bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), true, false, true))))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-478.159)), bool(false)))))))) || false)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), true, true)))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bool((_GLF_WRAPPED_IF_FALSE(false)))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))))) && _GLF_IDENTITY(true, (true) && true)), false, true, false)))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bool((_GLF_WRAPPED_IF_FALSE(false)))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)), true && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false))))))), true && (! (((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(5564.7802)), bool(false)))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), (_GLF_WRAPPED_IF_FALSE(false)) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), (_GLF_WRAPPED_IF_FALSE(false)) && true))) && true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(fract(-0.9)))) > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false)), _GLF_IDENTITY(! (! (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(5564.7802)), bool(false)))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), (_GLF_WRAPPED_IF_FALSE(false)) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), (_GLF_WRAPPED_IF_FALSE(false)) && true))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false)))), bool(bvec2(! (! (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(5564.7802)), bool(false)))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), (_GLF_WRAPPED_IF_FALSE(false)) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))), (_GLF_WRAPPED_IF_FALSE(false)) && true))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))) || false))) && true), false, true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(347.629), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) * (true ? injectionSwitch.y : _GLF_FUZZED(347.629))))))), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bool(_GLF_IDENTITY((true) || false, ! (! ((true) || false)))))))) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false)))), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), _GLF_IDENTITY(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (_GLF_IDENTITY(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))) && ((_GLF_WRAPPED_IF_FALSE(false))))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || _GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(true, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)))))))))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && ((_GLF_WRAPPED_IF_FALSE(false)))), true && (! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && ((_GLF_WRAPPED_IF_FALSE(false)))))))), ! (! ((! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true && ((_GLF_WRAPPED_IF_FALSE(false))), true && (true && ((_GLF_WRAPPED_IF_FALSE(false)))))), true && (! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true && ((_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((_GLF_WRAPPED_IF_FALSE(false))), (true && ((_GLF_WRAPPED_IF_FALSE(false)))) || false)), true && (! (_GLF_IDENTITY(true && ((_GLF_WRAPPED_IF_FALSE(false))), (true && ((_GLF_WRAPPED_IF_FALSE(false)))) || false))))))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY(bool(bool((! (_GLF_WRAPPED_IF_FALSE(false))))), false || (_GLF_IDENTITY(bool(bool((! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (bool(bool((! (_GLF_WRAPPED_IF_FALSE(false))))))))))), bool(bvec2(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), true && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), ! (! (! (! (_GLF_WRAPPED_IF_FALSE(false)))))), bool(bvec3(! (! (_GLF_WRAPPED_IF_FALSE(false))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))))))), true)))) && true)))))), true && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(true && (_GLF_WRAPPED_IF_FALSE(false)), (true && (_GLF_WRAPPED_IF_FALSE(false))) && true))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(false || ((_GLF_WRAPPED_IF_FALSE(false))), true && (false || ((_GLF_WRAPPED_IF_FALSE(false)))))))), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), _GLF_IDENTITY(true && (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), bool(bvec3((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-3641.7996, 1.0 * (-3641.7996)))), float(float(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-3641.7996, 1.0 * (-3641.7996)))), mix(float(_GLF_FUZZED(41.70)), float(float(_GLF_FUZZED(_GLF_IDENTITY(-3641.7996, 1.0 * (-3641.7996))))), bool(true)))))), float(injectionSwitch.y), bool(true))))))), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false), false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(true && (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) || false), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))), (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_IDENTITY(true, true && (true)), false))))), false))), bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), mix(float(length(normalize(vec3(1.0, 1.0, 1.0)))), float(_GLF_FUZZED(-851.804)), bool(false)))))))))) && ((_GLF_WRAPPED_IF_FALSE(false)))) && _GLF_IDENTITY(true, bool(bvec3(true, true, false))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) || _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(32.54))))))))), bool(bvec3((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false)))) && true))), false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), injectionSwitch)).x < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), false || ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), bool(bvec3((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))), min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY(true, true && (true)), false), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), false))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true), bvec2(bvec3(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true), _GLF_IDENTITY(bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true), true))))))))), false))))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)))), false))), true)))))), true)))), true)))))))))))))), (_GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(((_GLF_WRAPPED_IF_FALSE(false))) || false, ! (! (_GLF_IDENTITY(((_GLF_WRAPPED_IF_FALSE(false))) || false, ! (! (((_GLF_WRAPPED_IF_FALSE(false))) || false)))))))))), bool(bvec3((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec2((_GLF_IDENTITY(false, false || (false))), false))))), bool(bvec4(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec2((_GLF_IDENTITY(false, false || (false))), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))) && _GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) && true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) && true)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_WRAPPED_IF_FALSE(false)))) || false))), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) && true))))) && true)), true), bvec2(bvec3(bvec2((_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) && true)), false || ((_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) && true))))), (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) && true)), false || ((_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) && true)))))) && true)))))), _GLF_IDENTITY(true, (true) || false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) && true))))), true), bvec2(bvec3(bvec2((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) && true))))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (! (! (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_FALSE(false))), true && (! ((_GLF_WRAPPED_IF_FALSE(false)))))))))), ((_GLF_WRAPPED_IF_FALSE(false))) && true))))), true), bvec2(bvec3(bvec2((_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))), ((_GLF_WRAPPED_IF_FALSE(false))) && true))))), true), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y))))))))) || false))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))) && true)))), ! (! ((_GLF_IDENTITY(true && (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) || false), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))), (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_IDENTITY(true, true && (true)), false))))), false))), bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), mix(float(length(normalize(vec3(1.0, 1.0, 1.0)))), float(_GLF_FUZZED(-851.804)), bool(false)))))))))) && ((_GLF_WRAPPED_IF_FALSE(false)))) && _GLF_IDENTITY(true, bool(bvec3(true, true, false))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) || _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(32.54))))))))), bool(bvec3((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false)))) && true))), false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), injectionSwitch)).x < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), false || ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), bool(bvec3((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))), min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY(true, true && (true)), false), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), false))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true), bvec2(bvec3(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true), _GLF_IDENTITY(bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true), true))))))))), false))))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)))), false))), true)))))), true)))), true)))))))))))))), (_GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(((_GLF_WRAPPED_IF_FALSE(false))) || false, ! (! (_GLF_IDENTITY(((_GLF_WRAPPED_IF_FALSE(false))) || false, ! (! (((_GLF_WRAPPED_IF_FALSE(false))) || false)))))))))), bool(bvec3((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec2((_GLF_IDENTITY(false, false || (false))), false))))), bool(bvec4(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec2((_GLF_IDENTITY(false, false || (false))), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))))) && _GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) && true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) && true)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_WRAPPED_IF_FALSE(false)))) || false))), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) && true))))) && true)), true), bvec2(bvec3(bvec2((_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) && true)), false || ((_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) && true))))), (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) && true)), false || ((_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) && true)))))) && true)))))), _GLF_IDENTITY(true, (true) || false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) && true))))), true), bvec2(bvec3(bvec2((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_WRAPPED_IF_FALSE(false), true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) && true))))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (! (! (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_FALSE(false))), true && (! ((_GLF_WRAPPED_IF_FALSE(false)))))))))), ((_GLF_WRAPPED_IF_FALSE(false))) && true))))), true), bvec2(bvec3(bvec2((_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))), ((_GLF_WRAPPED_IF_FALSE(false))) && true))))), true), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y))))))))) || false))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))) && true))))))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && ((_GLF_WRAPPED_IF_FALSE(false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && ((_GLF_WRAPPED_IF_FALSE(false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && ((_GLF_WRAPPED_IF_FALSE(false)))), bool(bool(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && ((_GLF_WRAPPED_IF_FALSE(false))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(9.3)), bool(false))), injectionSwitch[1])).x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && ((_GLF_WRAPPED_IF_FALSE(false)))), bool(bool(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && ((_GLF_WRAPPED_IF_FALSE(false))))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && ((_GLF_WRAPPED_IF_FALSE(false)))), bool(bool(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && ((_GLF_WRAPPED_IF_FALSE(false)))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && ((_GLF_WRAPPED_IF_FALSE(false)))), true && (! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && ((_GLF_WRAPPED_IF_FALSE(false))))))) && true), bool(bvec4(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) || false))), true, true, false))), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(bool(bvec2((_GLF_WRAPPED_IF_FALSE(false)), true)), false || (bool(bvec2((_GLF_WRAPPED_IF_FALSE(false)), true))))), true && ((_GLF_WRAPPED_IF_FALSE(false)))), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, false || (true)) && ((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false))))), true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && ((_GLF_WRAPPED_IF_FALSE(false)))), true, true, false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec4(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && ((_GLF_WRAPPED_IF_FALSE(false)))), true, true, false)))), bool(bool(_GLF_IDENTITY(bool(bool(bool(bvec4(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && ((_GLF_WRAPPED_IF_FALSE(false)))), true, true, false)))), (bool(bool(bool(bvec4(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && ((_GLF_WRAPPED_IF_FALSE(false)))), true, true, false))))) && true)))), (_GLF_IDENTITY(bool(bool(bool(bvec4(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && ((_GLF_WRAPPED_IF_FALSE(false)))), true, true, false)))), bool(bool(bool(bool(bool(bvec4(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && ((_GLF_WRAPPED_IF_FALSE(false)))), true, true, false)))))))) || false)))))), true, true)), true, true)))), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && ((_GLF_WRAPPED_IF_FALSE(false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && ((_GLF_WRAPPED_IF_FALSE(false)))), ! (! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && ((_GLF_WRAPPED_IF_FALSE(false)))))))) || false)), ! (! (true && (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))))), true && ((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), false, true))), ! (! (false))))))))))))), _GLF_IDENTITY(true, bool(bvec3(true, true, false))) && (true && (! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && ((_GLF_WRAPPED_IF_FALSE(false)))))))))))))) || false, ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))))), true && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))), false || (((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false)))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(false || ((_GLF_WRAPPED_IF_FALSE(false))), true && (false || ((_GLF_WRAPPED_IF_FALSE(false)))))))), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), _GLF_IDENTITY(true && (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_IF_FALSE(false)))), ! (! (bool(bool((_GLF_WRAPPED_IF_FALSE(false)))))))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), false, true)), bool(bvec3(bool(bvec3(! (false), false, true)), true, false)))))), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), bool(bvec3((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3641.7996)), float(injectionSwitch.y), bool(true)))), (false ? _GLF_FUZZED(2.4) : clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3641.7996)), float(injectionSwitch.y), bool(true))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3641.7996)), float(injectionSwitch.y), bool(true)))), (false ? _GLF_FUZZED(2.4) : clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3641.7996)), float(injectionSwitch.y), bool(true))))))), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3641.7996)), float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(true)))), (false ? _GLF_FUZZED(2.4) : clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3641.7996)), float(injectionSwitch.y), bool(true)))))))))) && true))), false)), (bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3641.7996)), float(injectionSwitch.y), bool(true)))), (false ? _GLF_FUZZED(2.4) : clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3641.7996)), float(injectionSwitch.y), bool(true))))))))), false))) && true)) && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))))))), (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, sin(0.0), 0.0, 1.0, 1.0, 0.0))), mix(float(_GLF_FUZZED(-3641.7996)), float(injectionSwitch.y), bool(true))))))), false))) && ((_GLF_WRAPPED_IF_FALSE(false)))) && true))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), true), false, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) || false))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), true), false, false))))))) || (_GLF_IDENTITY(true && (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec3((_GLF_WRAPPED_IF_FALSE(false)), false, false))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), false))) && ((_GLF_WRAPPED_IF_FALSE(false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (_GLF_IDENTITY(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && ((_GLF_WRAPPED_IF_FALSE(false)))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-7.3, 4.4)))).x))), false || (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)))))), ! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(float(mat3(float(injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(3.9)), float(float(mat3(float(injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), bool(true))))))) + _GLF_ZERO(0.0, injectionSwitch.x))), false || (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 1.0, abs(1.0), 1.0, determinant(mat2(1.0, 0.0, cos(0.0), 1.0)), 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-585.802) : float(mat2x4(injectionSwitch.x, 1.0, abs(1.0), 1.0, determinant(mat2(1.0, 0.0, cos(0.0), 1.0)), 1.0, 0.0, 1.0))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x))), false || (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)))))), ! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x))), false || (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_ZERO(0.0, injectionSwitch.x)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, false)))))), false))) && ((_GLF_WRAPPED_IF_FALSE(false))), (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)) && true) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-5.3, -99.11)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false)))) && true))), false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))), false || (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))))), bool(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false)))))) && true)) || false), false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(-992.023), _GLF_FUZZED((-0.8 * 8.4))), vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(true, true))).x < injectionSwitch.y), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).x < injectionSwitch.y), true, false))))), false || (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, cos(0.0), 0.0), transpose(transpose(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0, cos(0.0), 0.0)))))))).x)) < injectionSwitch.y), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false))))))))))))), _GLF_IDENTITY((true && (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) || false)), true && ((_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))) || false)))))), bool(bvec3((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) && true))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))), true && ((true && (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! (true)), ! (! ((! (true))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec3((_GLF_WRAPPED_IF_FALSE(false)), true, true))), ((_GLF_WRAPPED_IF_FALSE(false))) || false)))), bool(bvec3((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true), _GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, (true) && true), true)))) && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) && true))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))))) && true)))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false)))), _GLF_IDENTITY(false || (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bool(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bool((_GLF_WRAPPED_IF_FALSE(false))))))))), true && (false || _GLF_IDENTITY(((_GLF_WRAPPED_IF_FALSE(false))), bool(bvec2(_GLF_IDENTITY(((_GLF_WRAPPED_IF_FALSE(false))), true && (((_GLF_WRAPPED_IF_FALSE(false))))), false)))))))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), _GLF_IDENTITY(true && (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))), (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), bool(bvec3((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) / 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3641.7996)), float(injectionSwitch.y), bool(true))))))), false))) && ((_GLF_WRAPPED_IF_FALSE(false))), (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y) / 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3641.7996)), float(injectionSwitch.y), bool(true))))))), false))) && ((_GLF_WRAPPED_IF_FALSE(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3641.7996)), float(injectionSwitch.y), bool(true)))), clamp(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3641.7996)), float(injectionSwitch.y), bool(true)))), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3641.7996)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3641.7996)), float(injectionSwitch.y), bool(true)))), (true ? clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3641.7996)), float(injectionSwitch.y), bool(true)))) : _GLF_FUZZED(-2437.0251)))))))), false))) && ((_GLF_WRAPPED_IF_FALSE(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0))).y, (false ? _GLF_FUZZED(-399.285) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))) * (injectionSwitch)).y)), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-3641.7996), float(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-3641.7996), min(_GLF_FUZZED(-3641.7996), _GLF_FUZZED(-3641.7996))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(max(7649.3617, -535.379))))), float(_GLF_FUZZED(-301.186)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), float(injectionSwitch.y), bool(true))))))), false))) && ((_GLF_WRAPPED_IF_FALSE(false)))))) && true))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true && (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), bool(bvec3((_GLF_WRAPPED_IF_FALSE(false)), false, false))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), false))) && ((_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))))))), false))) && ((_GLF_WRAPPED_IF_FALSE(false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_IDENTITY(((_GLF_WRAPPED_IF_FALSE(false))), ! (! (((_GLF_WRAPPED_IF_FALSE(false)))))), false || (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))))))), false))) && ((_GLF_WRAPPED_IF_FALSE(false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_IDENTITY(((_GLF_WRAPPED_IF_FALSE(false))), ! (! (((_GLF_WRAPPED_IF_FALSE(false)))))), false || (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))))))), false))) && ((_GLF_WRAPPED_IF_FALSE(false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_IDENTITY(((_GLF_WRAPPED_IF_FALSE(false))), ! (! (((_GLF_WRAPPED_IF_FALSE(false)))))), false || (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))))))), false))) && ((_GLF_WRAPPED_IF_FALSE(false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_IDENTITY(((_GLF_WRAPPED_IF_FALSE(false))), ! (! (((_GLF_WRAPPED_IF_FALSE(false)))))), false || (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false)))))), bool(bvec3((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec4(true, false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-5.3, -99.11)))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-5.3, -99.11)))).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-5.3, -99.11)))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-5.3, -99.11)))).x)) : _GLF_FUZZED(394.280))) > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false)))) && true))), _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(_GLF_IDENTITY(vec3(mat2(1.0) * (injectionSwitch), 0.0), (true ? vec3(mat2(1.0) * (injectionSwitch), 0.0) : _GLF_FUZZED(vec3(1.1, 504.813, -6077.1336))))))), injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))))))), bool(bvec3((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(false))))), false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (0.0)), 1.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (0.0)), 1.0)))), 1.0, sqrt(0.0), 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2x3(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (0.0)), 1.0)))), 1.0, sqrt(0.0), 1.0, 0.0), (true ? mat2x3(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (0.0)), 1.0)))), 1.0, sqrt(0.0), 1.0, 0.0) : _GLF_FUZZED(mat2x3(-8414.6110, 75.15, -55.37, -3.8, 3.4, 78.30)))))))), min(vec2(_GLF_IDENTITY(mat2x3(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (0.0)), 1.0)))), 1.0, sqrt(0.0), 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2x3(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (0.0)), 1.0)))), 1.0, sqrt(0.0), 1.0, 0.0), (true ? mat2x3(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (0.0)), 1.0)))), 1.0, sqrt(0.0), 1.0, 0.0) : _GLF_FUZZED(mat2x3(-8414.6110, 75.15, -55.37, -3.8, 3.4, 78.30)))))))), vec2(_GLF_IDENTITY(mat2x3(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (0.0)), 1.0)))), 1.0, sqrt(0.0), 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2x3(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (0.0)), 1.0)))), 1.0, sqrt(0.0), 1.0, 0.0), (true ? mat2x3(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (0.0)), 1.0)))), 1.0, sqrt(0.0), 1.0, 0.0) : _GLF_FUZZED(mat2x3(-8414.6110, 75.15, -55.37, -3.8, 3.4, 78.30)))))))))))), min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y) || false)), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y) && true)), true, false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)), true)))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), false || (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)))))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && ((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))))))), bool(bvec3((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_IDENTITY(((_GLF_WRAPPED_IF_FALSE(false))), ! (_GLF_IDENTITY(! (((_GLF_WRAPPED_IF_FALSE(false)))), false || (! (((_GLF_WRAPPED_IF_FALSE(false)))))))))), false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (0.0)), 1.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch))) - vec2(0.0, 0.0)))), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (0.0)), 1.0)))), 1.0, sqrt(0.0), 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2x3(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, determinant(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((8.6 * -1676.2699))), float(1.0), bool(true))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (0.0)), 1.0)))), 1.0, sqrt(0.0), 1.0, 0.0), (true ? mat2x3(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (0.0), mix(float(_GLF_FUZZED(-100.574)), float(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (0.0)), bool(true)))), 1.0)))), 1.0, sqrt(0.0), 1.0, 0.0) : _GLF_FUZZED(mat2x3(-8414.6110, 75.15, -55.37, -3.8, 3.4, 78.30)))))))), min(vec2(_GLF_IDENTITY(mat2x3(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sin(vec2(5853.3085, 8.9))) : injectionSwitch)))), 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (0.0)), 1.0)))), 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 0.0, 1.0, 0.0))), 0.0), transpose(transpose(_GLF_IDENTITY(mat2x3(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (0.0)), 1.0)))), 1.0, sqrt(0.0), 1.0, 0.0), (true ? mat2x3(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, _GLF_IDENTITY(-8.6, float(vec3(-8.6, 0.0, 0.0))))) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (0.0)), 1.0)))), 1.0, sqrt(0.0), 1.0, 0.0) : _GLF_FUZZED(mat2x3(-8414.6110, 75.15, -55.37, -3.8, 3.4, 78.30)))))))), vec2(_GLF_IDENTITY(mat2x3(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, _GLF_IDENTITY(-8.6, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) * (-8.6)))) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (0.0)), 1.0)))), 1.0, sqrt(0.0), 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2x3(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 1.0), mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.7))), 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (0.0)), 1.0)))), 1.0, sqrt(0.0), 1.0, 0.0), (true ? mat2x3(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0), mat4(1.0) * (mat2x4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.0, -8.6)) : injectionSwitch)), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(-5495.0730))), 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (0.0)), 1.0)))), 1.0, sqrt(0.0), 1.0, 0.0) : _GLF_FUZZED(mat2x3(-8414.6110, 75.15, -55.37, -3.8, 3.4, 78.30)))))))))))), min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y) || false)), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y) && true)), true, false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)), true)))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), false || (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y) || false)), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y) && true)), true, false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)), true)))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), false || (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y) || false)), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y) && true)), true, false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)), true)))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (true ? min(injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(25.71, -756.937))))).x < injectionSwitch.y), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), false || (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mix(vec2((min(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-7398.7067)), vec2(_GLF_FUZZED(6.0), (min(injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))).x < injectionSwitch.y), true, false))))))))))))))))))))), _GLF_IDENTITY((true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) || false)))), true && (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) || false)))), ((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) || false))))) && true))), _GLF_IDENTITY(bool(bvec2((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) || false)))), true)), _GLF_IDENTITY(bool(bvec3(bool(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) || false))), false || (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) || false))))))))), true)), false, true)), false || (bool(bvec3(bool(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) || false))), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) || false)))))))))), true)), false, true)))))), bool(bvec3((! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || false)), false))) && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(((_GLF_WRAPPED_IF_FALSE(false))) && true, ! (! (((_GLF_WRAPPED_IF_FALSE(false))) && true)))))))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))), true && ((true && (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) || false))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false))) && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(((_GLF_WRAPPED_IF_FALSE(false))) || false, bool(bvec4(((_GLF_WRAPPED_IF_FALSE(false))) || false, false, false, true)))))), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) || false), ((_GLF_WRAPPED_IF_FALSE(false))) || false))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) || false), ((_GLF_WRAPPED_IF_FALSE(false))) || false))), true && (! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) || false), ((_GLF_WRAPPED_IF_FALSE(false))) || _GLF_IDENTITY(false, true && (false))))))))))))))))), bool(bvec3((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (((_GLF_WRAPPED_IF_FALSE(false)))), bool(bvec3(! (((_GLF_WRAPPED_IF_FALSE(false)))), false, true))))) && true)))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! ((_GLF_WRAPPED_IF_FALSE(false)))))) && true))))))) && true, false || ((_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! ((_GLF_WRAPPED_IF_FALSE(false)))))) && true))), (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! ((_GLF_WRAPPED_IF_FALSE(false)))))) && true))), ! (! ((! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! ((_GLF_WRAPPED_IF_FALSE(false)))))) && true))))))) && true))))) && true)))), false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(vec2(-27.44, 3.4)) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[1])), injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))))) && true))))))))), false || (! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && ((_GLF_WRAPPED_IF_FALSE(false)))), true && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && ((_GLF_WRAPPED_IF_FALSE(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(true && (! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), true && ((_GLF_WRAPPED_IF_FALSE(false))))), ! (! (true && (! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(true, ! (! (true))) && ((_GLF_WRAPPED_IF_FALSE(false)))))))), _GLF_IDENTITY(true && (true && (! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))) || false), false, false, true))))), true && ((_GLF_WRAPPED_IF_FALSE(false)))))), (_GLF_IDENTITY(true && (true && (! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))) || false), false, false, true))))), true && ((_GLF_WRAPPED_IF_FALSE(false)))))), (true && (true && (! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))) || false), false, false, true))))), true && ((_GLF_WRAPPED_IF_FALSE(false))))))) && true)) || false))))))))) || false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    {
    }
   else
    {
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)) | (uint(2)), min((uint(2)) | (uint(2)), (uint(2)) | _GLF_IDENTITY((uint(2)), ((uint(2))) ^ 0u)))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-22325))), max(_GLF_IDENTITY(64, (64) << 0), 64)), 4);
    }
   subgroupAll(true);
  }
}
