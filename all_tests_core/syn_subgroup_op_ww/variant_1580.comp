#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false))), (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))))) || _GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))))) || _GLF_IDENTITY(false, false || (false)), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))))))) || _GLF_IDENTITY(false, false || (false)), true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, (true ? _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))) : _GLF_FUZZED(uvec3(192668u, 147776u, 164982u)))))).x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(192668u, 147776u, 164982u)))))).x, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(true, true && (true)) ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(192668u, 147776u, 164982u)))))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (gl_WorkGroupSize)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(192668u, 147776u, 164982u)))))).x));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), 0.0, sin(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0)))) / 1.0), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.6)), float(1.0), bool(true))), 0.0, 0.0, 0.0), max(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.6)), float(1.0), bool(true))), 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.6)), float(1.0), bool(true))), 0.0, 0.0, 0.0), max(vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.6)), float(1.0), bool(true))), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.6)), float(1.0), bool(true))), 0.0, 0.0, 0.0)))))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))))).x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), (bool(_GLF_IDENTITY(false, false || (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && (bool(_GLF_IDENTITY(false, false || (false))))))), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && (bool(_GLF_IDENTITY(false, false || (false)))))))), (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && (bool(_GLF_IDENTITY(false, false || (false))))))))) || false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), (bool(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ((! (_GLF_IDENTITY((false), true && ((false)))))) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (true))) && (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), ! (! (false))) || (false)))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false)))))) || false)))), true && (bool(_GLF_IDENTITY(false, false || (false))))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), (bool(_GLF_IDENTITY(false, false || (false)))) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < injectionSwitch.y))), true && (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && (bool(_GLF_IDENTITY(false, false || (false))))), true && (bool(_GLF_IDENTITY(false, false || (false))))))), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && (bool(_GLF_IDENTITY(false, false || (false)))))))), (! ((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && (bool(_GLF_IDENTITY(false, false || (false))))))))))) || false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))))))), false || _GLF_IDENTITY((false), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false)))), bool(bvec3((_GLF_IDENTITY((false), true && ((false)))), true, false)))), ((! (_GLF_IDENTITY((false), true && ((false)))))) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (true))) && (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), ! (! (false))) || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), false || (! (_GLF_IDENTITY(false, false || (false)))))) || false)))), true && (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))))))))))))))))
      {
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (_injected_loop_counter))))) != 1); _injected_loop_counter ++)
          {
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || false))))
              {
               barrier();
              }
             else
              {
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (141408u & 0u)) + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), ((virtual_gid)) << 0u) ^ 0u)], uint(1), _GLF_IDENTITY(4, (4) | (4)), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) / 1))), 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, min(4, 4)));
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, exp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))) * (1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(535.524))))), 0.0)), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(-5.7))), 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6744.2874) : (injectionSwitch.x))) * 1.0))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9834.9744)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))), injectionSwitch)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))) : _GLF_FUZZED(injectionSwitch)))) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))).x, mix(float(_GLF_FUZZED(-7.4)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED(-1812.1250)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, true))))), false || (! (bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, true))))))))))))) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5124.3641)), float(injectionSwitch.x), bool(true))), 0.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y))), (float(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5124.3641)), float(injectionSwitch.x), bool(true))), 0.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y)))) * 1.0)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(535.524))))), 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.5)), bool(false))))), 0.0))), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9834.9744)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.1)), vec2(_GLF_FUZZED(374.612), (injectionSwitch)[1]), bvec2(false, true))).x), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), abs(0.0), 0.0)), 0.0), _GLF_IDENTITY(mat3(mat3(mat3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), abs(0.0), 0.0)), 0.0))), transpose(transpose(mat3(mat3(mat3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(fma(injectionSwitch, injectionSwitch, injectionSwitch)) : (injectionSwitch))))) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), abs(0.0), 0.0)), 0.0)))))))))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) * mat2(1.0)) - vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * mat2(1.0), ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0))))) - vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), abs(0.0), 0.0)), 0.0), _GLF_IDENTITY(mat3(mat3(mat3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0)), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))) * vec2(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), abs(0.0), 0.0)), 0.0))), transpose(transpose(mat3(mat3(mat3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (true ? ((injectionSwitch) * mat2(1.0)) : _GLF_FUZZED(injectionSwitch))) - vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0, 1.0, sqrt(1.0), abs(0.0), 0.0)), 0.0)))))))))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), abs(0.0), 0.0)), 0.0), _GLF_IDENTITY(mat3(mat3(mat3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat4(tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-86.03))), 0.0, 0.0, 0.0, 1.0, sqrt(1.0), abs(0.0), 0.0)), 0.0))), transpose(transpose(mat3(mat3(mat3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(69495u))), bool(false))), 1.0, determinant(mat4(_GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), abs(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-312.341) : 0.0))), 0.0)), 0.0)))))))))).x) / cos(0.0))), float(_GLF_FUZZED(5.1)), bool(false))), mix(float(_GLF_FUZZED(-7.4)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * vec2(1.0, 1.0))).x), _GLF_IDENTITY(bool(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(true)))))), float(_GLF_FUZZED(-1812.1250)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), false, true, true))))), false || (! (bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, true))))))))))))) > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), min(uint(2), uint(2))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false))))), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), false || (! (true && (false)))))))))), true && (false)), _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, true)))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false))))))))), true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.3) : injectionSwitch.x)) < injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(1.3) : injectionSwitch.x)) < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.3) : injectionSwitch.x)) < injectionSwitch.y))))))))), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (_GLF_IDENTITY(false, true && (false))) || false)))), (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (_GLF_IDENTITY(false, true && (false))) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (_GLF_IDENTITY(false, true && (false))) || false))))))) && true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false)), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true && (false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false)))))), bool(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && _GLF_IDENTITY((false), true && ((false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false)))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && _GLF_IDENTITY((false), true && ((false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || false, true && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))), ! (! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))) || false)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.3) : injectionSwitch.x)) < injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.3) : injectionSwitch.x)) < injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(1.3), mix(float(_GLF_FUZZED(5.4)), float(_GLF_FUZZED(1.3)), bool(true))) : injectionSwitch.x)), float(vec4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(1.3), mix(float(_GLF_FUZZED(5.4)), float(_GLF_FUZZED(1.3)), bool(true))) : injectionSwitch.x)), 1.0, 1.0, 1.0))) < injectionSwitch.y)))))))))) || false)) ? _GLF_FUZZED(_GLF_IDENTITY(int(false), 0 + (int(false)))) : _GLF_IDENTITY(4, (4) - (1 ^ 1))), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false))))))), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (false))) || false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))) ? _GLF_FUZZED(int(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), (false || (false)) && true)) && true))) && true))) : _GLF_IDENTITY(4, (4) - (_GLF_IDENTITY(1 ^ 1, clamp(_GLF_IDENTITY(1 ^ 1, (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) - 0)) - 0), 1 ^ 1, _GLF_IDENTITY(1 ^ 1, (1 ^ 1) >> 0)))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((~ ((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false))))))), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (false))) || false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))) ? _GLF_FUZZED(int(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), (false || (false)) && true)) && true))) && true))) : _GLF_IDENTITY(4, (4) - (_GLF_IDENTITY(1 ^ 1, clamp(_GLF_IDENTITY(1 ^ 1, (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) - 0)) - 0), 1 ^ 1, _GLF_IDENTITY(1 ^ 1, (1 ^ 1) >> 0)))))))), (_GLF_IDENTITY((~ ((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false))))))), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (false))) || false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))) ? _GLF_FUZZED(int(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), (false || (false)) && true)) && true))) && true))) : _GLF_IDENTITY(4, (4) - (_GLF_IDENTITY(1 ^ 1, clamp(_GLF_IDENTITY(1 ^ 1, (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) - 0)) - 0), 1 ^ 1, _GLF_IDENTITY(1 ^ 1, (1 ^ 1) >> 0)))))))), min((~ ((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false))))))), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (false))) || false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))) ? _GLF_FUZZED(int(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), (false || (false)) && true)) && true))) && true))) : _GLF_IDENTITY(4, (4) - (_GLF_IDENTITY(1 ^ 1, clamp(_GLF_IDENTITY(1 ^ 1, (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) - 0)) - 0), 1 ^ 1, _GLF_IDENTITY(1 ^ 1, (1 ^ 1) >> 0)))))))), (~ ((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false))))))), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (false))) || false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))) ? _GLF_FUZZED(int(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), (false || (false)) && true)) && true))) && true))) : _GLF_IDENTITY(4, (4) - (_GLF_IDENTITY(1 ^ 1, clamp(_GLF_IDENTITY(1 ^ 1, (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) - 0)) - 0), 1 ^ 1, _GLF_IDENTITY(1 ^ 1, (1 ^ 1) >> 0))))))))))) | (_GLF_IDENTITY((~ ((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false))))))), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (false))) || false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))) ? _GLF_FUZZED(int(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), (false || (false)) && true)) && true))) && true))) : _GLF_IDENTITY(4, (4) - (_GLF_IDENTITY(1 ^ 1, clamp(_GLF_IDENTITY(1 ^ 1, (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) - 0)) - 0), 1 ^ 1, _GLF_IDENTITY(1 ^ 1, (1 ^ 1) >> 0)))))))), (false ? _GLF_FUZZED(-61093) : (~ ((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false))))))), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (false))) || false))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))) ? _GLF_FUZZED(int(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), (false || (false)) && true)) && true))) && true))) : _GLF_IDENTITY(4, (4) - (_GLF_IDENTITY(1 ^ 1, clamp(_GLF_IDENTITY(1 ^ 1, (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) - 0)) - 0), 1 ^ 1, _GLF_IDENTITY(1 ^ 1, (1 ^ 1) >> 0)))))))))))))))), 64, 4);
   do
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true))))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) || (false), bool(bvec2(_GLF_IDENTITY(false, true && (false)) || (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || (bool(bool(true)))))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (_GLF_IDENTITY(true, (true) || false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY((true), ! (! ((true)))) || false), ! (! (_GLF_IDENTITY(true, (true) || false)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY((true), ! (! ((true)))) || false), ! (! (_GLF_IDENTITY(true, (true) || false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY((true), ! (! ((true)))) || false), ! (! (_GLF_IDENTITY(true, (true) || false)))))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY((true), ! (! ((true)))) || false), ! (! (_GLF_IDENTITY(true, (true) || false)))))))), false, true)))) || false))))))) && _GLF_IDENTITY(true, (true) || false)))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (_GLF_IDENTITY(false, ! (! (false)))))))) && true))) && true, _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))) && true, false)), false || (bool(bvec2((_GLF_IDENTITY(false, ! (! (false)))) && true, false)))))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(log(1.0)), 1.0, 0.0, 1.0, log(1.0), 1.0), (mat3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(log(1.0)), 1.0, 0.0, 1.0, log(1.0), 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0 * (float(_GLF_IDENTITY(mat3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(log(1.0)), 1.0, 0.0, 1.0, log(1.0), 1.0), (mat3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(log(1.0)), 1.0, 0.0, 1.0, log(1.0), 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))) > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))), true, false))), (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))))), bool(bvec4((! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))), true, false)))) && _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))) && true)) || false)))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - _GLF_IDENTITY(0, min(0, 0))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << (-4714 & 0)), (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), (_GLF_IDENTITY(1, (1) + 0)) | 0)) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) - _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 | (0)), 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0), (true ? (_GLF_IDENTITY(1, _GLF_IDENTITY((1) + 0, ((1) + 0) | int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(0, (0) - 0) : _GLF_FUZZED(_injected_loop_counter)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), 0))) - 0)), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) + 0, (_GLF_IDENTITY((1) + 0, min((1) + 0, (1) + 0))) | ((1) + 0)))) >> _GLF_IDENTITY(0, (0) - 0))) - 0)) << int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(0 + (0), (0 + (0)) ^ (0 ^ 0)))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) - 0))) - 0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0), ((_GLF_IDENTITY(1, _GLF_IDENTITY((1) + 0, ((1) + 0) << 0))) >> _GLF_IDENTITY(0, (0) - 0)) * 1))) - 0, ((_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec4((1), 0, 1, 1)), clamp(int(ivec4((1), 0, 1, 1)), int(ivec4((_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) >> 0)))), 0, 1, 1)), _GLF_IDENTITY(int(ivec4((1), 0, 1, 1)), int(ivec3(int(ivec4((1), 0, 1, 1)), 0, 1)))))) + 0), (_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec4((1), 0, 1, 1)), clamp(int(ivec4((1), 0, 1, 1)), int(ivec4((_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) >> 0)))), 0, 1, 1)), _GLF_IDENTITY(int(ivec4((1), 0, 1, 1)), int(ivec3(int(ivec4((1), 0, 1, 1)), 0, 1)))))) + 0)) << 0)) >> _GLF_IDENTITY(0, (0) - 0))) - _GLF_IDENTITY(0, (0) << 0)) << 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)), int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), clamp(_GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(1, (1) + 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), (_GLF_IDENTITY(1, (1) + 0)) >> 0)))) >> _GLF_IDENTITY(0, (0) - 0)))))) - _GLF_IDENTITY(0, max(0, 0)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (true ? (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))) : _GLF_FUZZED(-18428))) - 0 : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(83873)))) - _GLF_IDENTITY(0, 0 ^ (0))))) - 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0), 1 * ((_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) >> 0) - 0))))), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0), ((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) ^ 0) + 0)) >> _GLF_IDENTITY(0, (0) - 0)) / 1))))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - _GLF_IDENTITY(0, (0) | 0))))))))), (int(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-67269))), (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) + _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | (0))))) >> 0), (_GLF_IDENTITY((1) + _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | (0))))) >> 0), (true ? (1) + _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | (0))))) >> 0) : _GLF_FUZZED(_injected_loop_counter)))) + int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))))))))) << _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, 1), ivec2(ivec3(ivec2(0, 1), 0))))), _GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, (0) | (0)), 1))), 0)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY(max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))))), min(max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))))))))), (int(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, min(0, 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (0) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY(max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))), (true ? max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))) : _GLF_FUZZED(71004)))))))) << 0), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY(max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))))), min(max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))))))))), (int(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, min(0, 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (0) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY(max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))), (true ? max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))) : _GLF_FUZZED(71004)))))))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY(max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))))), min(max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))))))))), (int(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, min(0, 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (0) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY(max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))), (true ? max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))) : _GLF_FUZZED(71004)))))))) << 0), min(_GLF_IDENTITY(int(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY(max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))))), min(max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))))))))), (int(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, min(0, 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (0) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY(max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))), (true ? max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))) : _GLF_FUZZED(71004)))))))) << 0), _GLF_IDENTITY(int(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY(max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))))), min(max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))))))))), (int(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, min(0, 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (0) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY(max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))), (true ? max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))) : _GLF_FUZZED(71004)))))))) << 0))), _GLF_IDENTITY(int(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY(max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))))), min(max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))))))))), (int(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, min(0, 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (0) - 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), _GLF_IDENTITY(max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))), (true ? max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, (0) - 0)))) : _GLF_FUZZED(71004)))))))) << 0))))) >> 0)) - 0), (~ _GLF_IDENTITY(((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) >> _GLF_IDENTITY(0, _GLF_IDENTITY((0), (false ? _GLF_FUZZED(_injected_loop_counter) : (0))) - 0))) - 0), (((_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)), ((_GLF_IDENTITY(1, (1) + 0))) / 1)) | (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) + 0)), (false ? _GLF_FUZZED(-71922) : (_GLF_IDENTITY(1, (1) + 0)))))) >> _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), (false ? _GLF_FUZZED(_injected_loop_counter) : (0))) - 0, max(_GLF_IDENTITY((0), (false ? _GLF_FUZZED(_injected_loop_counter) : (0))) - 0, _GLF_IDENTITY((0), (false ? _GLF_FUZZED(_injected_loop_counter) : (0))) - 0))))) - 0)) ^ _GLF_IDENTITY(0, (0) * 1))) >> 0))))))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(1, 1, 1))) + (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), 0 | (int(1))))), int(1))))); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) - 0)))), (_GLF_IDENTITY(true ? int(_GLF_IDENTITY(0, ~ (~ (0)))) : _GLF_FUZZED(_injected_loop_counter), clamp(_GLF_IDENTITY(true ? int(0) : _GLF_FUZZED(_injected_loop_counter), min(true ? int(0) : _GLF_FUZZED(_injected_loop_counter), true ? int(0) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(true ? _GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(int(0), 0 ^ (int(0))), _GLF_IDENTITY(int(0), (int(0)) | (int(0))))) : _GLF_FUZZED(_injected_loop_counter), int(_GLF_IDENTITY(int(true ? int(0) : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), ~ (~ (~ (_injected_loop_counter)))))))), (int(true ? int(0) : _GLF_FUZZED(_injected_loop_counter))) + 0))), true ? int(0) : _GLF_FUZZED(_injected_loop_counter))))))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
                barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(510.518)), bool(false)))))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(510.518)), bool(false)))))))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                  }
                }
               else
                {
                }
               do
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1.6)))))))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt((vec3(-786.533, 901.411, -580.415) * mat2x3(6.6, -3.6, 8252.1600, -50.48, 6099.6091, -8.8)))) : injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sqrt((vec3(-786.533, 901.411, -580.415) * mat2x3(6.6, _GLF_IDENTITY(-3.6, (-3.6) * 1.0), 8252.1600, -50.48, 6099.6091, -8.8)))) : injectionSwitch)).x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))));
               for(int _injected_loop_counter = (1 | int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter))) / 1) != 1); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << 0)))))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | int(_GLF_ZERO(0.0, injectionSwitch.x))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                            {
                             barrier();
                            }
                          }
                        }
                       barrier();
                      }
                     do
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       else
                        {
                        }
                       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
                        barrier();
                      }
                     else
                      {
                      }
                    }
                   do
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                  barrier();
                 barrier();
                }
               else
                {
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
            }
           else
            {
            }
          }
        }
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> _GLF_IDENTITY(0, (0) - 0)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0), max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0), (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)) | (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0))))))) != _GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(mix(-65656, _injected_loop_counter, true)), (_GLF_FUZZED(mix(-65656, _injected_loop_counter, true))) << 0) : _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), 1, 1))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0), max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0), (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)) | (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0))))))) != _GLF_IDENTITY(1, (false ? _GLF_FUZZED(mix(-65656, _injected_loop_counter, true)) : _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))) ^ 0))), clamp(_GLF_IDENTITY(1, (1) | (1)), 1, 1))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> _GLF_IDENTITY(0, (0) + 0)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> _GLF_IDENTITY(0, 0 ^ (0))), max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)), (_injected_loop_counter) >> _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(floatBitsToInt(-8031.4127))))), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-73732)))))))) | (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0)) | 0)) >> 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-73732)))))))) | (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0)) | 0)) >> 0)), ((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-73732)))))))) | (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0)) | 0)) >> 0))) | ((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-73732)))))))) | (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0)) | 0)) >> 0)))), (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-73732)))))))) | (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0)) | 0)) >> 0)), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-73732)))))))) | (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0)) | 0)) >> 0)), 0 + ((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-73732)))))))) | (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0)) | 0)) >> 0))))))))))) != _GLF_IDENTITY(1, (false ? _GLF_FUZZED(mix(-65656, _injected_loop_counter, true)) : _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), 1, 1))))))))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
        }
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     else
      {
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))
      barrier();
     barrier();
    }
  }
}
