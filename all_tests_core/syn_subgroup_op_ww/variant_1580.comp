#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_ONE(1.0, injectionSwitch.y))), (transpose(mat2(_GLF_ONE(1.0, injectionSwitch.y)))) * mat2(1.0)))), (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_ONE(1.0, injectionSwitch.y))), (transpose(mat2(_GLF_ONE(1.0, injectionSwitch.y)))) * mat2(1.0))))) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_ONE(1.0, injectionSwitch.y))), (transpose(mat2(_GLF_ONE(1.0, injectionSwitch.y)))) * mat2(1.0)))) * _GLF_IDENTITY((injectionSwitch), vec2(mat2((injectionSwitch), 0.0, 0.0)))).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((transpose(mat2(_GLF_ONE(1.0, injectionSwitch.y)))) * mat2(1.0), transpose(transpose((transpose(mat2(_GLF_ONE(1.0, injectionSwitch.y)))) * mat2(1.0))))))) * _GLF_IDENTITY((injectionSwitch), vec2(mat2(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)))), 0.0, 0.0)))).x > injectionSwitch.y)))))))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)), true)))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))), false, true, true))));
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(64526u) : gl_NumWorkGroups.x));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(0u | (gl_WorkGroupID.x), (0u | (gl_WorkGroupID.x)) | (0u | (gl_WorkGroupID.x))))) - 0u), 0u))), (gl_WorkGroupID.x) ^ 0u);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
    {
    }
   else
    {
     for(int _injected_loop_counter = (0 & (64953 + 52688)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | (int(5))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))) << 0) > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base + subgroup_base), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) << 0u)) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), ~ (_GLF_IDENTITY(~ (subgroup_local_id + _GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, max(0, 0)))), 0u + (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0))))))))) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) << 0u)) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), ~ (_GLF_IDENTITY(~ (subgroup_local_id + _GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, max(0, 0)))), 0u + (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0))))))))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) << 0u)) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0), ~ (_GLF_IDENTITY(~ (subgroup_local_id + _GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, max(0, 0)))), 0u + (~ (subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0))))))))) % subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)))], uint(1), 4, _GLF_IDENTITY(64, (64) >> (1 ^ 1)), 4);
 if((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) | (0 | 0)))), (2) << 0), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), 1 * (_GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, (_GLF_IDENTITY((2) << 0, clamp((2) << 0, (2) << 0, (2) << 0))) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))))))) == 0)
  {
   subgroupAll(true);
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)], uint(_GLF_IDENTITY(2, min(2, 2))), 4, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) ^ 0), 64)), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))))
            {
             barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              barrier();
            }
           else
            {
            }
           do
            {
             if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, false)))))) && true)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(! (_GLF_DEAD(false)), true, true))))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))));
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-358.069)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, injectionSwitch.y))), bool(true))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) || _GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     else
      {
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true))))) && true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter)) < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y)) * (injectionSwitch))) * mat2(1.0)), injectionSwitch)).y))); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) / 1)); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
                          {
                           do
                            {
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                        }
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                          {
                           barrier();
                          }
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), true, false)))))))), true, true, true)), false || (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.1)), vec2(_GLF_FUZZED(398.730), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, (true) || false)))).y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true, true)))))))))
                        barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                    }
                  }
                }
              }
            }
           else
            {
            }
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 0.0))).y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 0.0))).y))), true, true, true))));
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))) && true)))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, clamp(1, 1, 1))))); _GLF_IDENTITY(_injected_loop_counter ++, 0 + (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / 1))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bool(_GLF_WRAPPED_IF_TRUE(true))))) || false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         subgroupAll(false);
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(asinh(_GLF_IDENTITY(-6356.4288, mix(float(_GLF_FUZZED(-4.6)), float(-6356.4288), bool(true))))))), 1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, (1.0) * 1.0))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(1.0, 1.0)), clamp(mat2(1.0) * (vec2(1.0, 1.0)), mat2(1.0) * (vec2(1.0, 1.0)), mat2(1.0) * (vec2(1.0, 1.0))))), _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(6830.3221), _GLF_FUZZED(4.2)), bvec2(false, false))), vec2(1.0, 1.0))) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), max(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * _GLF_IDENTITY((vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))), min(_GLF_IDENTITY((vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))), max((vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch) * mat2(1.0)), max(mat2(1.0) * ((injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch) * mat2(1.0)), clamp(mat2(1.0) * ((injectionSwitch) * mat2(1.0)), mat2(1.0) * ((injectionSwitch) * mat2(1.0)), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))))))))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.5)), float(1.0), bool(true)))) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(558.258)), vec2(_GLF_FUZZED(-9.1), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true))) : _GLF_FUZZED(refract(injectionSwitch, vec2(6.4, 0.6), 8651.8647))))))))))))))) * mat2(1.0)).y) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))))))))) * mat2(1.0)).y) || false), false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))), min(min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))), _GLF_IDENTITY(min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))), (min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))) * mat2(1.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-8676.3190, 266.374)))) * mat2(1.0)))))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))) + vec2(0.0, 0.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(fract(-719.755)))))))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))))))))) * mat2(1.0)).y) || false)))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), (mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * mat3(1.0)))), (injectionSwitch) * mat2(1.0)))))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * mat2(1.0))), (vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * mat2(1.0)))) + vec2(0.0, 0.0))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7.9, -18.12)))), (injectionSwitch) * mat2(1.0)))))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))))))))) * mat2(1.0)).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), (mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * mat3(1.0)))), (injectionSwitch) * mat2(1.0)))))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * mat2(1.0))), (vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * mat2(1.0)))) + vec2(0.0, 0.0))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7.9, -18.12)))), (injectionSwitch) * mat2(1.0)))))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))))))))) * mat2(1.0)).y : _GLF_FUZZED(4.8)))) || false))), ! (! (false || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-436.906), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(86.59)), bvec2(true, false))), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1799.1776)))) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0))))), clamp(min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0))))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))))))))))) * mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3519.7459) : 1.0)))).y) || false)))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(uintBitsToFloat(uvec2(43013u, 1928u))) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.5)), bvec2(true, false)))))) * mat2(1.0)))))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), clamp(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))))))))))) * mat2(1.0)).y) || false)), _GLF_IDENTITY(false, true && (false)) || ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * _GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), clamp(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))))))), clamp((_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), clamp(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))))))), _GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), clamp(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))))))), vec2(mat4x2((_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), clamp(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))))))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), clamp(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))))))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0)))), vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))))))))) * mat2(1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(mat3x4(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(-3.9, -17.86))))))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) / vec2(1.0, 1.0))))), vec2(1.0, 1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))))))))) * mat2(1.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, false, true))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true))))))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 << _GLF_IDENTITY(int(8), int(8))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         barrier();
        }
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(63.85), _GLF_FUZZED(895.271)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (0u & 141408u) ^ (uint(2))), 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, min(64, 64)))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> (0 | int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, log(sqrt(1.0)), tan(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, cos(0.0), 0.0))), injectionSwitch.x)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(65412), max(_GLF_FUZZED(_GLF_IDENTITY(65412, (_GLF_IDENTITY(65412, clamp(65412, 65412, 65412))) | (65412))), _GLF_FUZZED(65412))) : _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY((4), ~ (~ ((4)))), ((4)) - 0), 1, 0, 0))) ^ 0)) + 0))));
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch[1], _GLF_ONE(1.0, injectionSwitch.y), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), sin(0.0), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0)), abs(1.0)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch[1], _GLF_ONE(1.0, injectionSwitch.y), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), sin(0.0), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0)), abs(1.0))))), (false ? _GLF_FUZZED((+ -7.9)) : float(_GLF_IDENTITY(mat3(injectionSwitch[1], _GLF_ONE(1.0, injectionSwitch.y), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), sin(0.0), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0)), abs(1.0)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch[1], _GLF_ONE(1.0, injectionSwitch.y), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), sin(0.0), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0)), abs(1.0))))))))), float(_GLF_FUZZED(-5.4)), bool(false))))).y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), bool(bvec4(! (! (! (_GLF_DEAD(false)))), false, false, true))), bool(bvec4(! (! (! (_GLF_DEAD(false)))), true, true, false)))))))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), bool(bvec4(! (! (! (_GLF_DEAD(false)))), true, true, false)))))))))))))), true, false))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))), _injected_loop_counter)))), _GLF_IDENTITY((_injected_loop_counter) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) / 1), min((_injected_loop_counter) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) / 1), (_injected_loop_counter) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) / 1))))) << int(_GLF_ZERO(0.0, injectionSwitch.x))) > 0, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))), _injected_loop_counter)))), (_injected_loop_counter) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) / 1))) << int(_GLF_ZERO(0.0, injectionSwitch.x))) > 0, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))), _injected_loop_counter)))), (_injected_loop_counter) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))), _injected_loop_counter)))), (_injected_loop_counter) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) / 1))) ^ 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))), _injected_loop_counter)))), (_injected_loop_counter) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))), _injected_loop_counter)))), (_injected_loop_counter) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) / 1))) ^ 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))), _injected_loop_counter)))), (_injected_loop_counter) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))), _injected_loop_counter)))), (_injected_loop_counter) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) / 1))) ^ 0))) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))), _injected_loop_counter)))), (_injected_loop_counter) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))), _injected_loop_counter)))), (_injected_loop_counter) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) / 1))) ^ 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))), _injected_loop_counter)))), (_injected_loop_counter) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))), _injected_loop_counter)))), (_injected_loop_counter) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) / 1))) ^ 0)))) << int(_GLF_ZERO(0.0, injectionSwitch.x))) > 0) || false), false)))); _injected_loop_counter --)
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), _GLF_IDENTITY(clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0)))), (true ? _GLF_IDENTITY(clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0)))), clamp(clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0)))), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0)))), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0)))))) : _GLF_FUZZED(3.6)))), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).y), 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-550.729, -758.001, -8.5, -7230.1426, -0.6, -0.0, -7.6, 2066.0572, 3879.1695, -5641.3056, _GLF_IDENTITY(6.5, (6.5) * 1.0), 33.94)) : mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) * 1.0), 1.0, 1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(264.107)), float(sqrt(0.0)), bool(true))))))), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-550.729, -758.001, -8.5, -7230.1426, -0.6, -0.0, -7.6, 2066.0572, 3879.1695, -5641.3056, 6.5, 33.94)) : mat3x4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), 0.0 + (sqrt(0.0))), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))))) * mat2(1.0), vec2(0.0, 0.0) + ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), 1.0 * (_GLF_IDENTITY(sqrt(0.0), float(mat2x3(sqrt(0.0), sin(0.0), 0.0, 1.0, 1.0, 0.0))))), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-550.729, -758.001, -8.5, -7230.1426, -0.6, -0.0, -7.6, 2066.0572, 3879.1695, -5641.3056, 6.5, 33.94)) : mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-550.729, -758.001, -8.5, -7230.1426, -0.6, -0.0, -7.6, 2066.0572, 3879.1695, -5641.3056, 6.5, 33.94)) : mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))), log(1.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 1.0)))) * mat2(1.0)))).x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-550.729, -758.001, -8.5, -7230.1426, -0.6, -0.0, -7.6, 2066.0572, 3879.1695, -5641.3056, 6.5, 33.94)) : mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))).x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) / 1.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-550.729, -758.001, -8.5, -7230.1426, -0.6, -0.0, -7.6, _GLF_IDENTITY(2066.0572, (_GLF_IDENTITY(2066.0572, clamp(2066.0572, 2066.0572, 2066.0572))) - _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) + sqrt(0.0))))))), 3879.1695, -5641.3056, _GLF_IDENTITY(6.5, mix(float(_GLF_FUZZED(99.59)), float(6.5), bool(true))), 33.94)) : mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(min(-3083.2198, -619.411)) : 0.0)), 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), mat4x3(mat4x3(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))), mix(float(float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), mat4x3(mat4x3(mat4x3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)))))), float(_GLF_FUZZED((-1.4 - -239.220))), bool(false)))), 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * 1.0))), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))).x < injectionSwitch.y))))) && true, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-550.729, -758.001, -8.5, -7230.1426, -0.6, -0.0, -7.6, 2066.0572, 3879.1695, -5641.3056, 6.5, 33.94)) : mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))).x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sin(0.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-550.729, -758.001, -8.5, -7230.1426, -0.6, -0.0, -7.6, 2066.0572, 3879.1695, -5641.3056, 6.5, 33.94)) : mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))).x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-550.729, -758.001, -8.5, -7230.1426, -0.6, -0.0, -7.6, 2066.0572, 3879.1695, -5641.3056, 6.5, 33.94)) : mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))).x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sin(0.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-550.729, -758.001, -8.5, -7230.1426, -0.6, -0.0, -7.6, 2066.0572, 3879.1695, -5641.3056, 6.5, 33.94)) : mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))).x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-550.729, -758.001, -8.5, -7230.1426, -0.6, -0.0, -7.6, 2066.0572, 3879.1695, -5641.3056, 6.5, 33.94)) : mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))).x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sin(0.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-550.729, -758.001, -8.5, -7230.1426, -0.6, -0.0, -7.6, 2066.0572, 3879.1695, -5641.3056, 6.5, 33.94)) : mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))).x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), ((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-550.729, -758.001, -8.5, -7230.1426, -0.6, -0.0, -7.6, 2066.0572, 3879.1695, -5641.3056, 6.5, 33.94)) : mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))).x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sin(0.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-550.729, -758.001, -8.5, -7230.1426, -0.6, -0.0, -7.6, 2066.0572, 3879.1695, -5641.3056, 6.5, 33.94)) : mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))).x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))) && true)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sin(0.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-9290.4622) : _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 0.0), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))) ? _GLF_FUZZED(mat3x4(-550.729, -758.001, -8.5, -7230.1426, -0.6, -0.0, -7.6, _GLF_IDENTITY(2066.0572, max(_GLF_IDENTITY(2066.0572, float(_GLF_IDENTITY(mat3x2(2066.0572, 1.0, 1.0, 0.0, 0.0, 0.0), (true ? mat3x2(2066.0572, 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3x2(162.917, 273.988, -5.5, -6.5, -884.634, -76.71)))))), 2066.0572)), 3879.1695, -5641.3056, 6.5, 33.94)) : mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sin(0.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-9290.4622) : _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 0.0), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))) ? _GLF_FUZZED(mat3x4(-550.729, -758.001, -8.5, -7230.1426, -0.6, -0.0, -7.6, _GLF_IDENTITY(2066.0572, max(_GLF_IDENTITY(2066.0572, float(_GLF_IDENTITY(mat3x2(2066.0572, 1.0, 1.0, 0.0, 0.0, 0.0), (true ? mat3x2(2066.0572, 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3x2(162.917, 273.988, -5.5, -6.5, -884.634, -76.71)))))), 2066.0572)), 3879.1695, -5641.3056, 6.5, 33.94)) : mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))))).x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sin(0.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(28078u))), vec2(_GLF_FUZZED((9.6 / 1457.3204)), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y), 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-550.729, -758.001, -8.5, -7230.1426, -0.6, -0.0, -7.6, 2066.0572, _GLF_IDENTITY(3879.1695, mix(float(3879.1695), float(_GLF_FUZZED(6.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), -5641.3056, 6.5, 33.94)) : mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), 0.0, 0.0))))).x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-550.729, -758.001, -8.5, -7230.1426, -0.6, -0.0, -7.6, 2066.0572, 3879.1695, -5641.3056, 6.5, 33.94)) : mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))), max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-550.729, -758.001, -8.5, -7230.1426, -0.6, -0.0, -7.6, 2066.0572, 3879.1695, -5641.3056, 6.5, 33.94)) : mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-550.729, -758.001, -8.5, -7230.1426, -0.6, -0.0, -7.6, 2066.0572, 3879.1695, -5641.3056, 6.5, 33.94)) : mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-550.729, -758.001, -8.5, -7230.1426, -0.6, -0.0, -7.6, 2066.0572, 3879.1695, -5641.3056, 6.5, 33.94)) : mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))))) - abs(vec2(0.0, 0.0))))).x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sin(0.0), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, max(_GLF_IDENTITY((0.0) / 1.0, min((0.0) / 1.0, (0.0) / 1.0)), _GLF_IDENTITY((0.0) / 1.0, clamp((0.0) / 1.0, (0.0) / 1.0, (0.0) / 1.0))))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-550.729, -758.001, -8.5, -7230.1426, -0.6, -0.0, -7.6, 2066.0572, 3879.1695, -5641.3056, 6.5, 33.94)) : mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))).x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))), 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), min(float(mat2(injectionSwitch.y, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), float(mat2(injectionSwitch.y, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)))))), 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-550.729, -758.001, -8.5, -7230.1426, -0.6, -0.0, -7.6, 2066.0572, 3879.1695, -5641.3056, 6.5, 33.94)) : mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))).x < injectionSwitch.y)), true && (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(982.790, 4.4, 19.09).r)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)), 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sin(0.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-550.729, -758.001, -8.5, -7230.1426, -0.6, -0.0, -7.6, 2066.0572, 3879.1695, -5641.3056, 6.5, 33.94)) : mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))).x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(982.790, 4.4, 19.09).r)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)), 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sin(0.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-550.729, -758.001, -8.5, -7230.1426, -0.6, -0.0, -7.6, 2066.0572, 3879.1695, -5641.3056, 6.5, 33.94)) : mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))).x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(982.790, 4.4, 19.09).r)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)), 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sin(0.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-550.729, -758.001, -8.5, -7230.1426, -0.6, -0.0, -7.6, 2066.0572, 3879.1695, -5641.3056, 6.5, 33.94)) : mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))).x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (! ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(982.790, 4.4, 19.09).r)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)), 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sin(0.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-550.729, -758.001, -8.5, -7230.1426, -0.6, -0.0, -7.6, 2066.0572, 3879.1695, -5641.3056, 6.5, 33.94)) : mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))).x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) && true))))))))), ((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(63.99) : _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), clamp(float(vec4(0.0, 0.0, 0.0, 0.0)), float(vec4(0.0, 0.0, 0.0, 0.0)), float(vec4(0.0, 0.0, 0.0, 0.0))))))), 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))))), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(_GLF_IDENTITY(-550.729, clamp(-550.729, -550.729, -550.729)), -758.001, -8.5, -7230.1426, _GLF_IDENTITY(-0.6, (_GLF_IDENTITY(-0.6, (-0.6) / 1.0)) / 1.0), -0.0, -7.6, 2066.0572, 3879.1695, -5641.3056, 6.5, 33.94)) : mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))).x < injectionSwitch.y)), true && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))), 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 1.0)), 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), _GLF_IDENTITY(clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0)), (clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))) + 0.0)))), sin(0.0), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(77.38)), float(_GLF_IDENTITY(0.0, float(float(0.0)))), bool(true)))), float(_GLF_FUZZED(-756.650)), bool(false)))), (false ? _GLF_FUZZED(mat3x4(-550.729, -758.001, -8.5, -7230.1426, -0.6, -0.0, -7.6, 2066.0572, 3879.1695, -5641.3056, 6.5, 33.94)) : mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), sin(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))).x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))) && true)))))))) && true) && _GLF_IDENTITY(true, false || (true))))))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_injected_loop_counter != 1))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_injected_loop_counter != 1))))), (bool(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_injected_loop_counter != 1)))) || false)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_injected_loop_counter != 1))), _GLF_IDENTITY((bool(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_injected_loop_counter != 1)))), ! (! ((bool(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_injected_loop_counter != 1))))))) || false)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_injected_loop_counter != 1))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) != 1, false || _GLF_IDENTITY((_injected_loop_counter != 1), ((_injected_loop_counter != 1)) || false)))) || false))))))))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ 0))
                  {
                   do
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), int(int(int(0))))))) * ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 + (int(0))))))); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
                            {
                             barrier();
                            }
                          }
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               else
                {
                }
              }
            }
          }
         else
          {
          }
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 0.0, cos(0.0), abs(1.0), sin(0.0), 1.0, 0.0, 1.0), (true ? mat2x4(injectionSwitch.y, 0.0, cos(0.0), abs(1.0), sin(0.0), 1.0, 0.0, 1.0) : _GLF_FUZZED((-31.32 / mat2x4(5.3, 6801.3349, 539.720, -4.7, 87.36, 9.1, 94.51, 3.1)))))))))))
    {
     barrier();
    }
   else
    {
    }
  }
}
