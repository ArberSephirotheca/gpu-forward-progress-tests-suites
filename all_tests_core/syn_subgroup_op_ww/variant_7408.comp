#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 uvec2 _f0;
 mat2 _f1;
 bvec4 _f2;
 mat2 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_14 {
 ivec4 _f0;
 ivec4 _f1;
 bvec2 _f2;
 ivec4 _f3;
 mat4x3 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_16 {
 _GLF_struct_14 _f0;
 mat4x3 _f1;
 mat2x4 _f2;
 uint _f3;
 _GLF_struct_15 _f4;
 mat3x4 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_17 {
 uint subgroup_id;
 mat3x4 _f0;
 uint _f1;
 _GLF_struct_16 _f2;
} ;

struct _GLF_struct_11 {
 bvec4 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_12 {
 uvec3 _f0;
 _GLF_struct_11 _f1;
} ;

struct _GLF_struct_9 {
 float _f0;
 bvec2 _f1;
 uvec4 _f2;
 vec3 _f3;
 mat2 _f4;
 mat3x4 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_8 {
 bvec3 _f0;
 ivec3 _f1;
 mat3x4 _f2;
 bvec4 _f3;
 int _f4;
 mat2x4 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_7 {
 ivec2 _f0;
} ;

struct _GLF_struct_6 {
 bvec3 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_5 {
 bvec3 _f0;
 mat4 _f1;
 bool _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_10 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
 _GLF_struct_9 _f4;
} ;

struct _GLF_struct_3 {
 float _f0;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 float _f1;
 uint _f2;
 bool _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_1 {
 int _f0;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 vec2 _f1;
 mat2x4 _f2;
 float _f3;
 mat3x2 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 vec2 _f2;
 vec2 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_13 {
 vec2 _f0;
 mat2x3 _f1;
 _GLF_struct_2 _f2;
 uint workgroup_size;
 _GLF_struct_4 _f3;
 _GLF_struct_10 _f4;
 uvec4 _f5;
 _GLF_struct_12 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(gl_SubgroupID, mat3x4(1.0), 1u, _GLF_struct_16(_GLF_struct_14(ivec4(1), ivec4(1), bvec2(true), ivec4(1), mat4x3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))), _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(true), true)), true))))), mat4x3(1.0), mat2x4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - (188880u & 0u)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((1u), min((1u), (1u))), (true ? ~ _GLF_IDENTITY((1u), min(_GLF_IDENTITY((1u), 0u ^ ((1u))), (1u))) : _GLF_FUZZED(34178u))))), _GLF_struct_15(uvec2(_GLF_IDENTITY(1u, ~ (~ (1u)))), _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(mat2(295.182, _GLF_IDENTITY(-879.199, (_GLF_IDENTITY(-879.199, (false ? _GLF_FUZZED(5.1) : -879.199))) + 0.0), 8965.5889, -36.74)) : _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))))), bvec4(true), mat2(1.0), vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true), _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bvec2(true, true)))), false || (_GLF_IDENTITY((! (bool(bvec2(true, true)))), ! (! (_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, true)))))), bool(bvec4(_GLF_IDENTITY((! (bool(bvec2(true, true)))), (_GLF_IDENTITY((! (bool(bvec2(true, true)))), bool(bvec3((! (bool(bvec2(true, true)))), true, true)))) || false), true, false, false)))))))), bool(bvec4(! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(true, true)))), ! (! ((! (bool(bvec2(true, true))))))), false || (_GLF_IDENTITY((! (bool(bvec2(true, true)))), ! (! (_GLF_IDENTITY((! (bool(bvec2(true, true)))), bool(bvec4((! (bool(bvec2(true, true)))), true, false, false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), true)))) ? 1.0 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-8.8), min(_GLF_FUZZED(-8.8), _GLF_IDENTITY(_GLF_FUZZED(-8.8), max(_GLF_IDENTITY(_GLF_FUZZED(-8.8), float(vec4(_GLF_FUZZED(-8.8), 1.0, 1.0, 0.0))), _GLF_FUZZED(-8.8))))), clamp(_GLF_IDENTITY(_GLF_FUZZED(-8.8), (false ? _GLF_FUZZED(-8.9) : _GLF_FUZZED(-8.8))), _GLF_FUZZED(-8.8), _GLF_IDENTITY(_GLF_FUZZED(-8.8), float(mat2(_GLF_FUZZED(-8.8), 0.0, 1.0, 1.0)))))), mix(float(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true), _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bvec2(true, true)))), false || (_GLF_IDENTITY((! (bool(bvec2(true, true)))), ! (! (_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, true)))))), bool(bvec4(_GLF_IDENTITY((! (bool(bvec2(true, true)))), (_GLF_IDENTITY((! (bool(bvec2(true, true)))), bool(bvec3((! (bool(bvec2(true, true)))), true, true)))) || false), true, false, false)))))))), bool(bvec4(! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(true, true)))), ! (! ((! (bool(bvec2(true, true))))))), false || (_GLF_IDENTITY((! (bool(bvec2(true, true)))), ! (! (_GLF_IDENTITY((! (bool(bvec2(true, true)))), bool(bvec4((! (bool(bvec2(true, true)))), true, false, false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), true)))) ? 1.0 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-8.8), min(_GLF_FUZZED(-8.8), _GLF_IDENTITY(_GLF_FUZZED(-8.8), max(_GLF_IDENTITY(_GLF_FUZZED(-8.8), float(vec4(_GLF_FUZZED(-8.8), 1.0, 1.0, 0.0))), _GLF_FUZZED(-8.8))))), clamp(_GLF_IDENTITY(_GLF_FUZZED(-8.8), (false ? _GLF_FUZZED(-8.9) : _GLF_FUZZED(-8.8))), _GLF_FUZZED(-8.8), _GLF_IDENTITY(_GLF_FUZZED(-8.8), float(mat2(_GLF_FUZZED(-8.8), 0.0, 1.0, 1.0)))))), float(mat4x3((_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true), _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(true, true)), _GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bvec2(true, true)))), false || (_GLF_IDENTITY((! (bool(bvec2(true, true)))), ! (! (_GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, true)))))), bool(bvec4(_GLF_IDENTITY((! (bool(bvec2(true, true)))), (_GLF_IDENTITY((! (bool(bvec2(true, true)))), bool(bvec3((! (bool(bvec2(true, true)))), true, true)))) || false), true, false, false)))))))), bool(bvec4(! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(true, true)))), ! (! ((! (bool(bvec2(true, true))))))), false || (_GLF_IDENTITY((! (bool(bvec2(true, true)))), ! (! (_GLF_IDENTITY((! (bool(bvec2(true, true)))), bool(bvec4((! (bool(bvec2(true, true)))), true, false, false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), true)))) ? 1.0 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-8.8), min(_GLF_FUZZED(-8.8), _GLF_IDENTITY(_GLF_FUZZED(-8.8), max(_GLF_IDENTITY(_GLF_FUZZED(-8.8), float(vec4(_GLF_FUZZED(-8.8), 1.0, 1.0, 0.0))), _GLF_FUZZED(-8.8))))), clamp(_GLF_IDENTITY(_GLF_FUZZED(-8.8), (false ? _GLF_FUZZED(-8.9) : _GLF_FUZZED(-8.8))), _GLF_FUZZED(-8.8), _GLF_IDENTITY(_GLF_FUZZED(-8.8), float(mat2(_GLF_FUZZED(-8.8), 0.0, 1.0, 1.0)))))), 0.0, 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), sqrt(0.0), 0.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0)))), float(_GLF_FUZZED(-693.989)), bool(false)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-366.956)), float(1.0), bool(true)), (true ? mix(float(_GLF_FUZZED(-366.956)), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true)) : _GLF_FUZZED(-4276.5785))))), float(_GLF_FUZZED(-6.3)), bool(false))))), mat3x4(1.0), vec3(1.0)));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), true && (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), false, false, true)), ! (! (bool(bvec4(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), false, false, true))))))))), (bool(bool((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(vec2(1.0), mat2x3(1.0), _GLF_struct_2(_GLF_struct_0(mat3x4(1.0), _GLF_IDENTITY(vec2(1.0), max(_GLF_IDENTITY(vec2(1.0), (true ? vec2(1.0) : _GLF_FUZZED(vec2(_GLF_IDENTITY(776.337, clamp(776.337, 776.337, 776.337)), -4.2)))), vec2(1.0))), mat2x4(1.0), 1.0, mat3x2(1.0), mat3(1.0)), _GLF_struct_1(1), vec2(1.0), vec2(1.0), _GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(vec4(1.0, _GLF_IDENTITY(dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0), vec4(1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0))), dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0), vec4(1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0)))), 0.0, round(length(normalize(1.0))))))), (true ? mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat2(4.1, _GLF_IDENTITY(4349.1126, clamp(_GLF_IDENTITY(4349.1126, (4349.1126) + 0.0), 4349.1126, 4349.1126)), -9.1, -97.33)), transpose(transpose(_GLF_FUZZED(_GLF_IDENTITY(mat2(4.1, 4349.1126, -9.1, -97.33), mat2(_GLF_IDENTITY(mat4x3(mat2(4.1, 4349.1126, -9.1, -97.33)), _GLF_IDENTITY((mat4x3(mat2(4.1, 4349.1126, -9.1, -97.33))) * mat4(1.0), (true ? (mat4x3(mat2(4.1, 4349.1126, -9.1, -97.33))) * mat4(1.0) : _GLF_FUZZED(mat4x3(-5.0, -8273.2039, -3302.8238, -1.9, 260.628, -6.9, 887.160, -2.3, 283.179, 8.7, -757.950, -6.8))))))))))))) : _GLF_FUZZED(mat2(-22.67, -247.162, -697.566, -27.08))))), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))))) << uvec3(0u, 0u, 0u)).x, _GLF_struct_4(_GLF_struct_3(1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(955.933)), float(1.0), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), _GLF_IDENTITY((bool(true)) || false, true && ((bool(true)) || false))), bool(bool(_GLF_IDENTITY(bool(true), (bool(true)) || false)))))), 1u, true, uvec2(1u)), _GLF_struct_10(_GLF_struct_5(bvec3(true), mat4(1.0), true, mat4x3(_GLF_IDENTITY(1.0, (1.0) - 0.0))), _GLF_struct_6(bvec3(true), uvec2(1u)), _GLF_struct_7(ivec2(1)), _GLF_struct_8(bvec3(_GLF_IDENTITY(true, true && (true))), ivec3(1), mat3x4(1.0), bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true))))))), 1, mat2x4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.9)), float(1.0), bool(true))), 1.0)), 1.0))), bvec4(true)), _GLF_struct_9(1.0, bvec2(true), uvec4(1u), _GLF_IDENTITY(vec3(1.0), (_GLF_IDENTITY(true, true && (true)) ? vec3(1.0) : _GLF_FUZZED((-67.90 / vec3(-372.976, 8.6, -5948.5465))))), mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, log(1.0), 0.0, 1.0, cos(0.0))), (false ? _GLF_FUZZED(-8485.0743) : float(mat2x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, log(1.0), 0.0, 1.0, cos(0.0))))))), mat3x4(1.0), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, max(1u, 1u))), clamp(uvec3(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, max(1u, 1u))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), 0u | (_GLF_IDENTITY(1u, max(1u, 1u))))), clamp(uvec3(_GLF_IDENTITY(1u, max(1u, 1u))), uvec3(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, max(1u, 1u))), (uvec3(_GLF_IDENTITY(1u, max(1u, 1u)))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), uvec3(uvec3(uvec3(uvec3(_GLF_IDENTITY(1u, max(1u, 1u))))))))), uvec3(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) ^ 0u)))))))), uvec4(1u), _GLF_struct_12(uvec3(1u), _GLF_struct_11(bvec4(true), mat3(1.0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0)), dot(vec3(1.0, 0.0, sin(0.0)), vec3(1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0)))) > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec2(gl_WorkGroupID.x, 1u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_size, clamp(_GLF_struct_replacement_13.workgroup_size, _GLF_struct_replacement_13.workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_size, (_GLF_struct_replacement_13.workgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_struct_replacement_13.workgroup_size), (uint(_GLF_struct_replacement_13.workgroup_size)) / 1u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_size, uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_13.workgroup_size, 0u, 1u, 0u), (uvec4(_GLF_struct_replacement_13.workgroup_size, 0u, 1u, 0u)) | uvec4(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), 0u | (~ (0u)))) / 1u))), 0u))))) | (_GLF_struct_replacement_13.workgroup_size))), (uint(_GLF_struct_replacement_13.workgroup_size)) / 1u)) >> (0u & 135009u)))))) * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_struct_replacement_17.subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, min(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_base + subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(num_workgroup) : workgroup_base)) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (~ (1)))), (uint(1)) + 0u), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false)), true, false))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false)))), false))))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, ((0 | 0) >> _GLF_IDENTITY(int(3), int(3))) ^ (2))), min((subgroup_local_id % _GLF_IDENTITY(2, ((0 | 0) >> _GLF_IDENTITY(int(3), int(3))) ^ (2))), (subgroup_local_id % _GLF_IDENTITY(2, ((0 | 0) >> _GLF_IDENTITY(int(3), int(3))) ^ (2))))) == _GLF_IDENTITY(0, 0 ^ (0)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((+ -7.4))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (false ? _GLF_FUZZED(237.105) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))) / 1.0) < injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) * sqrt(vec2(1.0, 1.0))).y), false), true))))))), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.3), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))) ? (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)))[_GLF_IDENTITY(1, (1) << 0)] : _GLF_FUZZED(-4500.1481)))), vec2((injectionSwitch)[0], _GLF_FUZZED(7.5)), bvec2(true, false))).y)), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), bvec2(bvec3(bvec2(bvec3(bvec2(true, false), _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), true))), bvec2(bvec3(bvec2(bvec3(bvec2(true, false), _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), true))))), true && (bool(bvec2(true, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.3), _GLF_IDENTITY((injectionSwitch)[1], (true ? (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)))[_GLF_IDENTITY(1, (1) << 0)] : _GLF_FUZZED(-4500.1481)))), vec2((injectionSwitch)[0], _GLF_FUZZED(7.5)), bvec2(true, false))).y)), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), bvec2(bvec3(bvec2(bvec3(bvec2(true, false), _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), true))))), true && (bool(bvec2(true, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (bool(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-0.3), _GLF_IDENTITY((injectionSwitch)[1], (true ? (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)))[_GLF_IDENTITY(1, (1) << 0)] : _GLF_FUZZED(-4500.1481)))), vec2((injectionSwitch)[0], _GLF_FUZZED(7.5)), bvec2(true, false)), (false ? _GLF_FUZZED(injectionSwitch) : mix(vec2(_GLF_FUZZED(-0.3), _GLF_IDENTITY((injectionSwitch)[1], (true ? (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)))[_GLF_IDENTITY(1, (1) << 0)] : _GLF_FUZZED(-4500.1481)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) + 0), 0))], _GLF_FUZZED(7.5)), bvec2(true, false))))).y)), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), bvec2(bvec3(bvec2(bvec3(bvec2(true, false), _GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(false, ! (! (false)))))))), _GLF_IDENTITY(true, false || (true))))))), true && (bool(bvec2(true, false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y))))))))))) && true), false, false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(false, true && (false)))), ! (! ((bool(_GLF_IDENTITY(false, true && (false)))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), false || (bool(_GLF_IDENTITY(false, true && (false)))))))))) && true)), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y), false))))), false, true)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(false, false))), (! (bool(bvec2(false, false)))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(false, false))), (! (bool(bvec2(false, false)))) || false)), false || ((_GLF_IDENTITY(! (bool(bvec2(false, false))), (! (bool(bvec2(false, false)))) || false))))))))), (injectionSwitch.x > injectionSwitch.y))), false, true))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y) || false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), vec2(_GLF_IDENTITY(vec2(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-15.97, -198.107)) : _GLF_IDENTITY(vec2(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), min(vec2(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))))))))))).y), false))))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y), _GLF_IDENTITY(false, ! (! (false)))))))), false, true)), true, false))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), (! (bool(bvec2(false, false)))) || false))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, true && (false)))), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), (! (bool(bvec2(false, false)))) || false)))) && true)), (injectionSwitch.x > injectionSwitch.y))), false, true))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(869.865)), float(injectionSwitch.y), bool(true))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))) || false))), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), (! (bool(bvec2(false, false)))) || false)))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y))), false, true))), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), (! (bool(bvec2(false, false)))) || false))), (_GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), (! (bool(bvec2(false, false)))) || false)))) || false)), (injectionSwitch.x > injectionSwitch.y))), false, true))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(false, false))), (! (bool(bvec2(false, false)))) || false), (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec2(false, false))), ! (! (_GLF_IDENTITY((bool(bvec2(false, false))), ! (! ((bool(bvec2(false, false))))))))), _GLF_IDENTITY((! (bool(bvec2(false, false)))) || false, _GLF_IDENTITY(bool(bvec2((! (bool(bvec2(false, false)))) || false, true)), bool(bool(bool(bvec2((! (bool(bvec2(false, false)))) || false, true)))))))) && true)))), (injectionSwitch.x > injectionSwitch.y))), false, true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(false, false))), (! (bool(bvec2(false, false)))) || false), (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec2(false, false))), ! (! (_GLF_IDENTITY((bool(bvec2(false, false))), ! (! ((bool(bvec2(false, false))))))))), _GLF_IDENTITY((! (bool(bvec2(false, false)))) || false, _GLF_IDENTITY(bool(bvec2((! (bool(bvec2(false, false)))) || false, true)), bool(bool(bool(bvec2((! (bool(bvec2(false, false)))) || false, true)))))))) && true)))), (injectionSwitch.x > injectionSwitch.y))), false, true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(false, false))), (! (bool(bvec2(false, false)))) || false), (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec2(false, false))), ! (! (_GLF_IDENTITY((bool(bvec2(false, false))), ! (! ((bool(bvec2(false, false))))))))), _GLF_IDENTITY((! (bool(bvec2(false, false)))) || false, _GLF_IDENTITY(bool(bvec2((! (bool(bvec2(false, false)))) || false, true)), bool(bool(bool(bvec2((! (bool(bvec2(false, false)))) || false, true)))))))) && true)))), (injectionSwitch.x > injectionSwitch.y))), false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false), true))))))))))))) && _GLF_IDENTITY(true, true && (true)))) && _GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec4(! (! (true)), true, true, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(! (! (true)), true, true, _GLF_IDENTITY(false, true && (false))))), true && (bool(bool(bvec4(! (! (true)), true, true, false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec4(! (! (true)), true, true, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(! (! (true)), true, true, false))), true && (bool(bool(bvec4(! (! (true)), true, true, false)))))))))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec4(! (! (true)), true, true, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(! (! (true)), true, true, false))), true && (bool(bool(bvec4(! (! (true)), true, true, false))))))))))) && true), (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec4(! (! (true)), true, true, false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(! (! (true)), true, true, false)), (_GLF_IDENTITY(bool(bvec4(! (! (true)), true, true, false)), ! (! (bool(bvec4(! (! (true)), true, true, false)))))) && true)), true && (bool(bool(bvec4(! (! (true)), true, true, false)))))))))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec4(! (! (true)), true, true, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(! (! (true)), true, true, false))), true && (bool(bool(bvec4(! (! (true)), true, true, false))))))))))) && true)) || false)) || false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))), bvec2(bvec4(bvec2(false, true), false, false))))))), false, false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false)), _GLF_IDENTITY(true, ! (! (true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, true, false)), false, false), bvec3(bvec3(bvec3(bool(bvec3(false, true, false)), false, false))))), false || (bool(bvec3(bool(bvec3(false, true, false)), false, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, true, false)), false, false), bvec3(bvec3(bvec3(bool(bvec3(false, true, false)), false, false))))), false || (bool(bvec3(bool(bvec3(false, true, false)), false, false))))), bool(bool(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, true, false)), false, false), bvec3(bvec3(bvec3(bool(bvec3(false, true, false)), false, false))))), false || (bool(bvec3(bool(bvec3(false, true, false)), false, false)))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec3(bool(bvec3(false, true, false)), false, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(bool(bvec3(false, true, false)), false, false)), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || (bool(bvec3(bool(bvec3(false, true, false)), false, false)))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), ~ (~ (int(4))))))) * 1));
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.1)))) + (injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(14.07)), float(injectionSwitch.y), bool(true))))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(14.07)), float(injectionSwitch.y), bool(true)))))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, (4) | (4)));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
}
