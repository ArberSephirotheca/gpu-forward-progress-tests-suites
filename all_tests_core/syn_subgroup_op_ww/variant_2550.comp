#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_25 {
 mat2x4 _f0;
 bvec2 _f1;
 bool _f2;
} ;

struct _GLF_struct_23 {
 uint _f0;
 ivec2 _f1;
 vec2 _f2;
 mat4 _f3;
 float _f4;
} ;

struct _GLF_struct_24 {
 ivec2 _f0;
 _GLF_struct_23 _f1;
} ;

struct _GLF_struct_21 {
 uint _f0;
} ;

struct _GLF_struct_20 {
 mat3x4 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_19 {
 vec3 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_18 {
 mat4x3 _f0;
 ivec2 _f1;
 uvec4 _f2;
 mat2x4 _f3;
 mat4 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_22 {
 _GLF_struct_18 _f0;
 _GLF_struct_19 _f1;
 mat3 _f2;
 _GLF_struct_20 _f3;
 _GLF_struct_21 _f4;
} ;

struct _GLF_struct_16 {
 mat2x4 _f0;
 mat4x3 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_15 {
 ivec4 _f0;
 ivec2 _f1;
 ivec2 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_14 {
 float _f0;
} ;

struct _GLF_struct_17 {
 _GLF_struct_14 _f0;
 vec2 _f1;
 mat2 _f2;
 ivec3 _f3;
 _GLF_struct_15 _f4;
 _GLF_struct_16 _f5;
} ;

struct _GLF_struct_12 {
 bvec2 _f0;
 vec2 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_11 {
 bvec3 _f0;
 bvec3 _f1;
 vec4 _f2;
 mat3 _f3;
 bool _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_10 {
 ivec3 _f0;
 uint _f1;
} ;

struct _GLF_struct_13 {
 _GLF_struct_10 _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_12 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_26 {
 _GLF_struct_13 _f0;
 uint virtual_gid;
 uint _f1;
 _GLF_struct_17 _f2;
 _GLF_struct_22 _f3;
 _GLF_struct_24 _f4;
 _GLF_struct_25 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_7 {
 uvec3 _f0;
 mat3 _f1;
 mat3 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_6 {
 ivec2 _f0;
 int _f1;
 mat3 _f2;
 ivec3 _f3;
 vec3 _f4;
 mat4x3 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_5 {
 bvec2 _f0;
 float _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_4 {
 bvec3 _f0;
 vec4 _f1;
 uvec3 _f2;
 ivec3 _f3;
 mat2x4 _f4;
 vec3 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_8 {
 mat4x3 _f0;
 mat3x2 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_6 _f4;
 int _f5;
 _GLF_struct_7 _f6;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
 mat3 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 mat2x3 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_3 {
 bool _f0;
 uint num_workgroup;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
} ;

struct _GLF_struct_9 {
 uvec2 _f0;
 vec3 _f1;
 uvec2 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_8 _f4;
 float _f5;
} ;

struct _GLF_struct_0 {
 uint subgroup_size;
 mat4 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(63.83)), vec2(_GLF_FUZZED(-94.81), (injectionSwitch)[1]), bvec2(false, true))).x : _GLF_FUZZED(length(vec4(-821.312, -6.9, -7.9, 6.1))))) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(gl_SubgroupSize, mat4(1.0));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  return;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, (1u) | (1u))), (_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, (1u) | (1u))), 0u ^ (min(1u, _GLF_IDENTITY(1u, (1u) | (1u)))))) + 0u))), vec3(1.0), uvec2(1u), _GLF_struct_3(true, gl_NumWorkGroups.x, _GLF_struct_1(mat4x3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), mat2x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(60.44, max(60.44, 60.44))) : 1.0, 0.0 + (false ? _GLF_FUZZED(_GLF_IDENTITY(60.44, max(60.44, 60.44))) : 1.0))))), mat2x3(1.0)), _GLF_struct_2(ivec2(1), mat3(1.0), mat3x2(1.0))), _GLF_struct_8(mat4x3(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.8)), _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), clamp(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(_GLF_IDENTITY(true, false || (true)))))))), mat3x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec3(4.7, _GLF_IDENTITY(351.595, clamp(351.595, 351.595, 351.595)), -2.5), (vec3(4.7, 351.595, -2.5)) / _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (true ? vec3(1.0, 1.0, 1.0) : _GLF_FUZZED(fma(vec3(-7541.2443, -5.6, -20.29), round(vec3(7.6, 6539.3711, 7.1)), vec3(3.3, 93.76, 6.2)))))).b)), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(2.4, max(2.4, _GLF_IDENTITY(2.4, min(2.4, _GLF_IDENTITY(2.4, (2.4) - 0.0))))))), (false ? _GLF_FUZZED(262.574) : float(_GLF_FUZZED(_GLF_IDENTITY(2.4, max(2.4, _GLF_IDENTITY(2.4, min(2.4, _GLF_IDENTITY(2.4, (2.4) - 0.0))))))))), max(float(_GLF_FUZZED(2.4)), float(_GLF_FUZZED(2.4)))), max(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(2.4, max(2.4, _GLF_IDENTITY(2.4, min(2.4, _GLF_IDENTITY(2.4, (2.4) - 0.0))))))), (false ? _GLF_FUZZED(262.574) : float(_GLF_FUZZED(_GLF_IDENTITY(2.4, max(2.4, _GLF_IDENTITY(2.4, min(2.4, _GLF_IDENTITY(2.4, (2.4) - 0.0))))))))), max(float(_GLF_FUZZED(2.4)), float(_GLF_FUZZED(2.4)))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(2.4, max(2.4, _GLF_IDENTITY(2.4, min(2.4, _GLF_IDENTITY(2.4, (2.4) - 0.0))))))), (false ? _GLF_FUZZED(262.574) : float(_GLF_FUZZED(_GLF_IDENTITY(2.4, max(2.4, _GLF_IDENTITY(2.4, min(2.4, _GLF_IDENTITY(2.4, (2.4) - 0.0))))))))), max(float(_GLF_FUZZED(2.4)), float(_GLF_FUZZED(2.4)))))), float(1.0), bool(true)), min(mix(float(_GLF_FUZZED(2.4)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(2.4)), float(1.0), bool(true)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), false), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), false)))))))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), true && ((true)))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), false, false, false))))), false))), false))))))))))), (injectionSwitch.x < injectionSwitch.y)), false))))), true && (! (bool(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))), false)))))))))))), _GLF_struct_4(bvec3(true), vec4(1.0), uvec3(1u), ivec3(1), mat2x4(1.0), vec3(1.0), mat4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5323.6154) : 1.0)))), _GLF_struct_5(bvec2(true), 1.0, mat2x3(1.0)), _GLF_struct_6(ivec2(1), 1, mat3(1.0), ivec3(1), vec3(1.0), mat4x3(1.0), mat4x3(1.0)), 1, _GLF_struct_7(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(124168u) : 0u)) | (_GLF_IDENTITY(1u, 0u | (1u)))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(124168u) : 0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(124168u) : 0u, (false ? _GLF_FUZZED(124168u) : 0u) | (0u | 0u))) - (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)))))))) | (1u))) / 1u)), mat3(1.0), mat3(1.0), mat4(1.0))), 1.0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), false || (bool(bvec4(_GLF_DEAD(false), false, true, false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 _GLF_struct_26 _GLF_struct_replacement_26 = _GLF_struct_26(_GLF_struct_13(_GLF_struct_10(_GLF_IDENTITY(ivec3(1), max(ivec3(1), _GLF_IDENTITY(ivec3(1), _GLF_IDENTITY((ivec3(1)) ^ _GLF_IDENTITY(ivec3(0, 0, 0), ~ (~ (ivec3(0, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-30763) : 0)))))), ivec3(ivec3(_GLF_IDENTITY((ivec3(1)) ^ _GLF_IDENTITY(ivec3(0, 0, 0), ~ (~ (ivec3(0, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-30763) : 0)))))), ((ivec3(1)) ^ _GLF_IDENTITY(ivec3(0, 0, 0), ~ (~ (ivec3(0, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-30763) : 0))))))) * ivec3(1, 1, 1)))))))), 1u), _GLF_struct_11(bvec3(true), bvec3(_GLF_IDENTITY(true, ! (! (true)))), vec4(1.0), mat3(1.0), true, ivec3(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-12888))))), _GLF_struct_12(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(true, ! (! (true))), true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(true, ! (! (true))), true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(true, ! (! (true))), true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true, false)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), false))), true, true))), false), _GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true))))), (injectionSwitch.x < injectionSwitch.y)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec2(true), false), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! _GLF_IDENTITY((! (bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool((! (bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (bool(bool((! (bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false)))), (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))))), bvec2(bvec3(bvec2(true), true))), vec2(1.0), _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) << uvec2(0u, 0u))), ((_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) << uvec2(0u, 0u)))) << uvec2(0u, 0u)) << uvec2(0u, 0u))), mat2(1.0)), workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size + subgroup_local_id, 1u, _GLF_struct_17(_GLF_struct_14(1.0), vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), mat4(1.0) * (vec4(0.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), min(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))) * (1.0))))), mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(false))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(false))) / 1.0), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(false))) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(_GLF_IDENTITY(false, (false) && true)))) / 1.0, 0.0 + (_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(false))) / 1.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), _GLF_IDENTITY(float(mat4((1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, abs(0.0), 1.0, 0.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0), mix(vec3(((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[0], _GLF_FUZZED(3.8), _GLF_FUZZED(-4.2)), vec3(_GLF_FUZZED(16.36), ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[1], ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[2]), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), 0.0, sqrt(0.0), 1.0)), mix(float(_GLF_FUZZED(vec2(330.500, 7.9).x)), float(_GLF_IDENTITY(float(mat4((1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, abs(0.0), 1.0, 0.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0), mix(vec3(((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[0], _GLF_FUZZED(3.8), _GLF_FUZZED(-4.2)), vec3(_GLF_FUZZED(16.36), ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[1], ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[2]), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), 0.0, sqrt(0.0), 1.0)), float(vec3(float(mat4((1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, abs(0.0), 1.0, 0.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0), mix(vec3(((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[0], _GLF_FUZZED(3.8), _GLF_FUZZED(-4.2)), vec3(_GLF_FUZZED(16.36), ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[1], ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[2]), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), 0.0, sqrt(0.0), 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), bool(true)))), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(false))) / 1.0)))) + 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(false))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(false))) / 1.0), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(false))) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(_GLF_IDENTITY(false, (false) && true)))) / 1.0, 0.0 + (_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(false))) / 1.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), _GLF_IDENTITY(float(mat4((1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, abs(0.0), 1.0, 0.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0), mix(vec3(((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[0], _GLF_FUZZED(3.8), _GLF_FUZZED(-4.2)), vec3(_GLF_FUZZED(16.36), ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[1], ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[2]), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), 0.0, sqrt(0.0), 1.0)), mix(float(_GLF_FUZZED(vec2(330.500, 7.9).x)), float(_GLF_IDENTITY(float(mat4((1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, abs(0.0), 1.0, 0.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0), mix(vec3(((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[0], _GLF_FUZZED(3.8), _GLF_FUZZED(-4.2)), vec3(_GLF_FUZZED(16.36), ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[1], ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[2]), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), 0.0, sqrt(0.0), 1.0)), float(vec3(float(mat4((1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, abs(0.0), 1.0, 0.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0), mix(vec3(((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[0], _GLF_FUZZED(3.8), _GLF_FUZZED(-4.2)), vec3(_GLF_FUZZED(16.36), ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[1], ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[2]), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), 0.0, sqrt(0.0), 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), bool(true)))), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(false))) / 1.0)))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(false))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(false))) / 1.0), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(false))) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(_GLF_IDENTITY(false, (false) && true)))) / 1.0, 0.0 + (_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(false))) / 1.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), _GLF_IDENTITY(float(mat4((1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, abs(0.0), 1.0, 0.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0), mix(vec3(((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[0], _GLF_FUZZED(3.8), _GLF_FUZZED(-4.2)), vec3(_GLF_FUZZED(16.36), ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[1], ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[2]), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), 0.0, sqrt(0.0), 1.0)), mix(float(_GLF_FUZZED(vec2(330.500, 7.9).x)), float(_GLF_IDENTITY(float(mat4((1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, abs(0.0), 1.0, 0.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0), mix(vec3(((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[0], _GLF_FUZZED(3.8), _GLF_FUZZED(-4.2)), vec3(_GLF_FUZZED(16.36), ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[1], ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[2]), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), 0.0, sqrt(0.0), 1.0)), float(vec3(float(mat4((1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, abs(0.0), 1.0, 0.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0), mix(vec3(((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[0], _GLF_FUZZED(3.8), _GLF_FUZZED(-4.2)), vec3(_GLF_FUZZED(16.36), ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[1], ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[2]), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), 0.0, sqrt(0.0), 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), bool(true)))), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(false))) / 1.0)))) + 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(false))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(false))) / 1.0), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(false))) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(_GLF_IDENTITY(false, (false) && true)))) / 1.0, 0.0 + (_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(false))) / 1.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), _GLF_IDENTITY(float(mat4((1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, abs(0.0), 1.0, 0.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0), mix(vec3(((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[0], _GLF_FUZZED(3.8), _GLF_FUZZED(-4.2)), vec3(_GLF_FUZZED(16.36), ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[1], ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[2]), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), 0.0, sqrt(0.0), 1.0)), mix(float(_GLF_FUZZED(vec2(330.500, 7.9).x)), float(_GLF_IDENTITY(float(mat4((1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, abs(0.0), 1.0, 0.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0), mix(vec3(((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[0], _GLF_FUZZED(3.8), _GLF_FUZZED(-4.2)), vec3(_GLF_FUZZED(16.36), ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[1], ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[2]), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), 0.0, sqrt(0.0), 1.0)), float(vec3(float(mat4((1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, abs(0.0), 1.0, 0.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0), mix(vec3(((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[0], _GLF_FUZZED(3.8), _GLF_FUZZED(-4.2)), vec3(_GLF_FUZZED(16.36), ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[1], ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[2]), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), 0.0, sqrt(0.0), 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), bool(true)))), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(false))) / 1.0)))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(false))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(false))) / 1.0), clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(false))) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(_GLF_IDENTITY(false, (false) && true)))) / 1.0, 0.0 + (_GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(false))) / 1.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), _GLF_IDENTITY(float(mat4((1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, abs(0.0), 1.0, 0.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0), mix(vec3(((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[0], _GLF_FUZZED(3.8), _GLF_FUZZED(-4.2)), vec3(_GLF_FUZZED(16.36), ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[1], ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[2]), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), 0.0, sqrt(0.0), 1.0)), mix(float(_GLF_FUZZED(vec2(330.500, 7.9).x)), float(_GLF_IDENTITY(float(mat4((1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, abs(0.0), 1.0, 0.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0), mix(vec3(((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[0], _GLF_FUZZED(3.8), _GLF_FUZZED(-4.2)), vec3(_GLF_FUZZED(16.36), ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[1], ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[2]), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), 0.0, sqrt(0.0), 1.0)), float(vec3(float(mat4((1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, abs(0.0), 1.0, 0.0, exp(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0), mix(vec3(((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[0], _GLF_FUZZED(3.8), _GLF_FUZZED(-4.2)), vec3(_GLF_FUZZED(16.36), ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[1], ((normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0))[2]), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), 0.0, sqrt(0.0), 1.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), bool(true)))), mix(float((1.0)), float(_GLF_FUZZED(-9.4)), bool(false))) / 1.0)))) + 0.0)))))), ivec3(1), _GLF_struct_15(ivec4(1), ivec2(1), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (_GLF_IDENTITY(1, (1) << 0)) | (_GLF_IDENTITY(1, (1) << 0)))), mat3x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_struct_16(mat2x4(1.0), mat4x3(1.0), mat4x3(1.0))), _GLF_struct_22(_GLF_struct_18(mat4x3(1.0), ivec2(1), uvec4(1u), mat2x4(1.0), mat4(1.0), mat2(1.0)), _GLF_struct_19(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(vec3(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 0.0, 0.0)), 1.0), vec2(0.0, 1.0))), abs(1.0))))), (false ? _GLF_FUZZED(vec3(-7511.5248, _GLF_IDENTITY(7861.7375, clamp(7861.7375, 7861.7375, _GLF_IDENTITY(7861.7375, (7861.7375) * 1.0))), -8.3)) : vec3(_GLF_IDENTITY(1.0, float(vec3(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, clamp(_GLF_IDENTITY((0.0) - 0.0, ((0.0) - 0.0) + 0.0), (0.0) - 0.0, _GLF_IDENTITY((0.0) - 0.0, (true ? (0.0) - 0.0 : _GLF_FUZZED(-7.6)))))), 0.0, 0.0)), 1.0), vec2(0.0, 1.0))), abs(1.0))))))), mat2(1.0)), mat3(1.0), _GLF_struct_20(mat3x4(1.0), mat3x2(1.0)), _GLF_struct_21(1u)), _GLF_struct_24(ivec2(1), _GLF_struct_23(1u, _GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(clamp(ivec2(1), ivec2(1), ivec2(1)), (clamp(ivec2(1), ivec2(1), ivec2(1))) - ivec2(0, 0))), vec2(1.0), mat4(1.0), 1.0)), _GLF_struct_25(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(7.2, (7.2) - 0.0)) : _GLF_IDENTITY(1.0, (1.0) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), (false ? _GLF_FUZZED(-78.01) : _GLF_IDENTITY(1.0, (1.0) - 0.0))), _GLF_IDENTITY(1.0, (1.0) - 0.0)))), bvec2(true), true), mat2x4(1.0));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, log(1.0), log(1.0), 0.0, sqrt(0.0), sin(0.0)))) < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.5) : injectionSwitch.x)))) > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), exp(vec2(0.0, 0.0)) * (injectionSwitch)))).y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, (0.0) - log(1.0)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_0.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_0.subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, tan(0.0) + (injectionSwitch.x)) > injectionSwitch.y)) && true)), bool(bvec2((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), true)))), _GLF_IDENTITY((! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))))), log(1.0), 0.0, _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(distance(vec3(-916.220, _GLF_IDENTITY(-5684.3835, (_GLF_IDENTITY(-5684.3835, max(-5684.3835, -5684.3835))) - 0.0), 33.40), vec3(-5.0, _GLF_IDENTITY(-1.5, max(_GLF_IDENTITY(-1.5, max(-1.5, -1.5)), -1.5)), 359.971))) : _GLF_IDENTITY(cos(0.0), (cos(0.0)) - 0.0))))), 0.0, 1.0, cos(0.0), 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.0))) : _GLF_FUZZED(9304.0513))))) + (_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat3(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))).x, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, log(1.0), 0.0, cos(0.0))), 0.0, 1.0, cos(0.0), 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), min(float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, log(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, cos(0.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(length(vec4(8.3, 312.587, 7652.3098, -7.6)), (false ? _GLF_FUZZED(3.2) : length(vec4(8.3, 312.587, 7652.3098, -7.6))))) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 1.0, cos(0.0), 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, log(1.0), 0.0, cos(0.0))), 0.0, 1.0, cos(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-739.362)), float(1.0), bool(true))), 0.0, log(1.0), 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))))))) > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))))), log(1.0), 0.0, _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(distance(vec3(-916.220, _GLF_IDENTITY(-5684.3835, (_GLF_IDENTITY(-5684.3835, max(-5684.3835, -5684.3835))) - 0.0), 33.40), vec3(-5.0, _GLF_IDENTITY(-1.5, max(_GLF_IDENTITY(-1.5, max(-1.5, -1.5)), -1.5)), 359.971))) : _GLF_IDENTITY(cos(0.0), (cos(0.0)) - 0.0))))), 0.0, 1.0, cos(0.0), 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.0))) : _GLF_FUZZED(9304.0513))))) + (_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat3(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))).x, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, log(1.0), 0.0, cos(0.0))), 0.0, 1.0, cos(0.0), 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), min(float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, log(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, cos(0.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(length(vec4(8.3, 312.587, 7652.3098, -7.6)), (false ? _GLF_FUZZED(3.2) : length(vec4(8.3, 312.587, 7652.3098, -7.6))))) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 1.0, cos(0.0), 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, log(1.0), 0.0, cos(0.0))), 0.0, 1.0, cos(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-739.362)), float(1.0), bool(true))), 0.0, log(1.0), 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))))))) > injectionSwitch.y)))), bool(bvec2((! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))))), log(1.0), 0.0, _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(distance(vec3(-916.220, _GLF_IDENTITY(-5684.3835, (_GLF_IDENTITY(-5684.3835, max(-5684.3835, -5684.3835))) - 0.0), 33.40), vec3(-5.0, _GLF_IDENTITY(-1.5, max(_GLF_IDENTITY(-1.5, max(-1.5, -1.5)), -1.5)), 359.971))) : _GLF_IDENTITY(cos(0.0), (cos(0.0)) - 0.0))))), 0.0, 1.0, cos(0.0), 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.0))) : _GLF_FUZZED(9304.0513))))) + (_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat3(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))).x, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, log(1.0), 0.0, cos(0.0))), 0.0, 1.0, cos(0.0), 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), min(float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, log(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, cos(0.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(length(vec4(8.3, 312.587, 7652.3098, -7.6)), (false ? _GLF_FUZZED(3.2) : length(vec4(8.3, 312.587, 7652.3098, -7.6))))) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 1.0, cos(0.0), 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, log(1.0), 0.0, cos(0.0))), 0.0, 1.0, cos(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-739.362)), float(1.0), bool(true))), 0.0, log(1.0), 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))))))) > injectionSwitch.y)))), false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))))), log(1.0), 0.0, _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(distance(vec3(-916.220, _GLF_IDENTITY(-5684.3835, (_GLF_IDENTITY(-5684.3835, max(-5684.3835, -5684.3835))) - 0.0), 33.40), vec3(-5.0, _GLF_IDENTITY(-1.5, max(_GLF_IDENTITY(-1.5, max(-1.5, -1.5)), -1.5)), 359.971))) : _GLF_IDENTITY(cos(0.0), (cos(0.0)) - 0.0))))), 0.0, 1.0, cos(0.0), 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.0))) : _GLF_FUZZED(9304.0513))))) + (_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat3(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))).x, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, log(1.0), 0.0, cos(0.0))), 0.0, 1.0, cos(0.0), 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), min(float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, log(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, cos(0.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(length(vec4(8.3, 312.587, 7652.3098, -7.6)), (false ? _GLF_FUZZED(3.2) : length(vec4(8.3, 312.587, 7652.3098, -7.6))))) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 1.0, cos(0.0), 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, log(1.0), 0.0, cos(0.0))), 0.0, 1.0, cos(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-739.362)), float(1.0), bool(true))), 0.0, log(1.0), 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))))))) > injectionSwitch.y)))), bool(bvec2((! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))))), log(1.0), 0.0, _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(distance(vec3(-916.220, _GLF_IDENTITY(-5684.3835, (_GLF_IDENTITY(-5684.3835, max(-5684.3835, -5684.3835))) - 0.0), 33.40), vec3(-5.0, _GLF_IDENTITY(-1.5, max(_GLF_IDENTITY(-1.5, max(-1.5, -1.5)), -1.5)), 359.971))) : _GLF_IDENTITY(cos(0.0), (cos(0.0)) - 0.0))))), 0.0, 1.0, cos(0.0), 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.0))) : _GLF_FUZZED(9304.0513))))) + (_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat3(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))).x, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, log(1.0), 0.0, cos(0.0))), 0.0, 1.0, cos(0.0), 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), min(float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, log(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, cos(0.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(length(vec4(8.3, 312.587, 7652.3098, -7.6)), (false ? _GLF_FUZZED(3.2) : length(vec4(8.3, 312.587, 7652.3098, -7.6))))) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 1.0, cos(0.0), 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), float(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, log(1.0), 0.0, cos(0.0))), 0.0, 1.0, cos(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-739.362)), float(1.0), bool(true))), 0.0, log(1.0), 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))))))) > injectionSwitch.y)))), false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))) || false)))), bool(bvec3(bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat2x3(injectionSwitch[0], 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), injectionSwitch[1])).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), true, false))))), false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true)))), false)))))))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), false || (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true))))))))))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))))))), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))))))))), bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-71.54, min(-71.54, -71.54)))), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-71.54, min(-71.54, -71.54)))), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat3(_GLF_IDENTITY(mat4x3(mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-71.54, min(-71.54, -71.54)))), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)), (true ? mat4x3(mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-71.54, min(-71.54, -71.54)))), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4x3(7.3, -9680.9961, -385.053, -2.1, -6.2, 1.6, -67.99, -4042.2673, 958.024, -79.78, 9.5, -957.290))))))))), transpose(transpose(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-71.54)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-71.54)), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(atan(1351.9719))))), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 1.0)))))), (float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-71.54)), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-71.54), (_GLF_FUZZED(_GLF_IDENTITY(-71.54, (_GLF_IDENTITY(-71.54, (-71.54) * 1.0)) + 0.0))) + 0.0)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-71.54), cos(0.0) * (_GLF_FUZZED(-71.54)))), float(injectionSwitch.x), bool(true))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))) / 1.0)), (false ? _GLF_FUZZED(ldexp(9083.6967, -7913)) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), true, false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_26.virtual_gid, (_GLF_struct_replacement_26.virtual_gid) ^ (0u | 0u))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-74.44 - injectionSwitch)) : injectionSwitch)).x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), bool(bool(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), (bool(bool(false))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false))), ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))) && true)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) / 1u)), 0u ^ ((_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) / 1u)))))), _GLF_struct_replacement_0.subgroup_size), (_GLF_IDENTITY(false ? _GLF_FUZZED(next_virtual_gid) : min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) / _GLF_IDENTITY(1u, ~ (~ (1u))))))), uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) / _GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ((~ (1u))) | (_GLF_IDENTITY((~ (1u)), ((~ (1u))) | ((~ (1u))))))))))), 0u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u))), _GLF_struct_replacement_0.subgroup_size), max(_GLF_IDENTITY(false ? _GLF_FUZZED(next_virtual_gid) : min(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))), uint(_GLF_IDENTITY(uint((~ (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u))))))))), (uint((~ (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))))) | (uint((~ (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))))))))), _GLF_struct_replacement_0.subgroup_size), min(_GLF_IDENTITY(false ? _GLF_FUZZED(next_virtual_gid) : min(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) / _GLF_IDENTITY(1u, ~ (~ (1u))))))), _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) >> (142161u & 0u))))), 0u ^ (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(next_virtual_gid) : min(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) / _GLF_IDENTITY(1u, ~ (~ (1u)))), min(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_0.subgroup_size), (false ? _GLF_FUZZED(156712u) : (_GLF_struct_replacement_0.subgroup_size))) / _GLF_IDENTITY(1u, ~ (~ (1u)))), _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) / _GLF_IDENTITY(1u, ~ (~ (1u))))))))), _GLF_struct_replacement_0.subgroup_size))), _GLF_IDENTITY(false ? _GLF_FUZZED(next_virtual_gid) : min(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) / _GLF_IDENTITY(1u, ~ (~ (1u))))))), _GLF_struct_replacement_0.subgroup_size), 0u ^ (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(next_virtual_gid) : min(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) / _GLF_IDENTITY(1u, ~ (~ (1u))))))), _GLF_struct_replacement_0.subgroup_size))))), _GLF_IDENTITY(false ? _GLF_FUZZED(next_virtual_gid) : min(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), min(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))))), _GLF_struct_replacement_0.subgroup_size), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(false ? _GLF_FUZZED(next_virtual_gid) : min(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), min(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))))), _GLF_struct_replacement_0.subgroup_size), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | (false ? _GLF_FUZZED(next_virtual_gid) : min(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) / _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), min(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))))), _GLF_struct_replacement_0.subgroup_size)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true))), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(vec4(3.7, -4.0, _GLF_IDENTITY(1.1, mix(float(1.1), float(_GLF_FUZZED(-9.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 63.41)[0]))))) > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sinh(tan(injectionSwitch))))), injectionSwitch, injectionSwitch)))).x)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))), injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), mat2(_GLF_IDENTITY(mat4(mat2(injectionSwitch.y, 1.0, 0.0, 0.0)), mat4(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(-5.0)))) * (_GLF_IDENTITY(mat4(mat2(injectionSwitch.y, 1.0, 0.0, 0.0)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(mat2(injectionSwitch.y, 1.0, 0.0, 0.0))))))))))) / 1.0)), false || ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 0.0, 0.0), mat2(mat4(mat2(injectionSwitch.y, 1.0, 0.0, 0.0))))))) / 1.0))))))))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))))).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))))).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))) && true))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))) || false))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))) || false))), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))) || false))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) && true))))))))) || false))), ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))) || false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               barrier();
              }
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
            barrier();
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))), true && (! (_GLF_IDENTITY(false, false || (false)))))))))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))))) && true)))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(_GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch.xx)), ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch.xx))) / vec2(1.0, 1.0))).x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) / 1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) / 1.0)), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) / 1.0))) / 1.0) / 1.0)) * sqrt(1.0)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), bool(bvec2(bool(bvec3(true, true, false)), true)))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))) || false)))))) || false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec2(! (_GLF_IDENTITY(false, false || (false))), true)))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (_GLF_IDENTITY(false, false || (false))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec3(! (_GLF_IDENTITY(false, false || (false))), true, false))), true)))))), _GLF_IDENTITY(false, ! (! (false))), false, false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, true && (true)), false)), bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, true && (true)), false)), true)))))
            barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * exp(vec2(0.0, 0.0)), mix(vec2(((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * exp(vec2(0.0, 0.0)))[0], _GLF_FUZZED(-0.7)), vec2(_GLF_FUZZED((float(76854u))), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * exp(vec2(0.0, 0.0)))[1]), bvec2(false, true)))).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * exp(vec2(0.0, 0.0))).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * exp(vec2(0.0, 0.0))).y) + 0.0), float(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * exp(vec2(0.0, 0.0))).y, 0.0, 0.0, 0.0)))) - 0.0)))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(sqrt(vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(38.45)), vec2(_GLF_FUZZED(-298.051), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
}
